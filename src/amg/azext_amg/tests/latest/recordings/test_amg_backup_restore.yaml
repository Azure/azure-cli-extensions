interactions:
- request:
    body: '{"identity": {"type": "SystemAssigned"}, "location": "westcentralus", "properties":
      {"apiKey": "Disabled", "deterministicOutboundIP": "Disabled", "publicNetworkAccess":
      "Enabled", "zoneRedundancy": "Disabled"}, "sku": {"name": "Standard"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:46:35.559306Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:46:35.559306Z"},"identity":{"principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
      cache-control:
      - no-cache
      content-length:
      - '1222'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:46:36 GMT
      etag:
      - '"060090d9-0000-0600-0000-671622fc0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
      mise-correlation-id:
      - 8cfbb380-5711-4424-83eb-786fcfcd6916
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 3D9E09852D4141A191945AD0D0BCA76A Ref B: CO6AA3150217037 Ref C: 2024-10-21T09:46:34Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-10-21T09:46:36.4551407Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:46:36 GMT
      etag:
      - '"0500b150-0000-0600-0000-671622fc0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B2CBC2A8BF5A4B0FB30522F33BDB23D5 Ref B: CO6AA3150220023 Ref C: 2024-10-21T09:46:36Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-10-21T09:46:36.4551407Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:47:06 GMT
      etag:
      - '"0500b150-0000-0600-0000-671622fc0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 625D16D263904DD3A9B9A10202D7D251 Ref B: CO6AA3150218047 Ref C: 2024-10-21T09:47:07Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-10-21T09:46:36.4551407Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:47:37 GMT
      etag:
      - '"0500b150-0000-0600-0000-671622fc0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 94466D38375F4306BF4F421C4D1CD514 Ref B: CO6AA3150219029 Ref C: 2024-10-21T09:47:37Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-10-21T09:46:36.4551407Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:48:07 GMT
      etag:
      - '"0500b150-0000-0600-0000-671622fc0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 76E6B2CCD6E3468B96F9B4F0C5CE6B74 Ref B: CO6AA3150217051 Ref C: 2024-10-21T09:48:07Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Accepted","startTime":"2024-10-21T09:46:36.4551407Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:48:37 GMT
      etag:
      - '"0500b150-0000-0600-0000-671622fc0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: BA98D81EC5E1440694F65F43397705A6 Ref B: CO6AA3150219047 Ref C: 2024-10-21T09:48:38Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651007966843834&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=k1ZZQR4PCHxtmxJw3wye7Kg71rqaXqyryzMDEZH2G3M3U13jld9GbFQgfxFZEoIt2XkWBkqr9529P8xxxwU8kNqJRQ7FFc4myVCtwSaLk2XxpASetlkT95V4IdzNhDfkCoe2SDU3vLMGKlfon5iPVtQHtH9vR6MOvr4WF4pbUK7Mi4tSwGVROKZe1Ozi2lwURS9t-wwWYNGj_dIM0ktYpeniaG-r5K2UUpMpBDaGbdryUa7hv2SM5vRXgEdOPXMUvJkeqESzTTDVh7xFfQVoyDhxX1LsErsWEXdCDwnM4EhD49szAaElDHMVNyekN4759xN-zjKxHpGuBC1QasItLA&h=aY9DagQudoIiHHYVRDR9Maz8j6Xrse1eGLMzTtqBtvc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"57673b16-aba5-4fd7-af26-0dbf66c2b661*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Succeeded","startTime":"2024-10-21T09:46:36.4551407Z","endTime":"2024-10-21T09:49:00.8229218Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '590'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:07 GMT
      etag:
      - '"05000851-0000-0600-0000-6716238c0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 1923A0D3E492411E8727E20A356901D9 Ref B: CO6AA3150220047 Ref C: 2024-10-21T09:49:08Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:46:35.559306Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:46:35.559306Z"},"identity":{"principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1120'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:08 GMT
      etag:
      - '"1c000a2a-0000-0800-0000-6716238c0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 479E6679106543ED962224EF18DD8507 Ref B: CO6AA3150220017 Ref C: 2024-10-21T09:49:09Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - python/3.8.10 (Windows-10-10.0.26100-SP0) AZURECLI/2.65.0
    method: GET
    uri: https://graph.microsoft.com/v1.0/me
  response:
    body:
      string: '{"@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users/$entity","businessPhones":["+1
        (425) 7069079"],"displayName":"Alan Zhang","givenName":"Alan","jobTitle":"SOFTWARE
        ENGINEER","mail":"example@example.com","mobilePhone":null,"officeLocation":"18/2480FL","preferredLanguage":null,"surname":"Zhang","userPrincipalName":"example@example.com","id":"953fd163-96b2-4789-8a83-9cfe693dd8d5"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '398'
      content-type:
      - application/json; odata.metadata=minimal; odata.streaming=true; IEEE754Compatible=false;
        charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:08 GMT
      odata-version:
      - '4.0'
      request-id:
      - fc6be8e9-022f-43d6-a8df-82aa6630c465
      strict-transport-security:
      - max-age=31536000
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-ms-ags-diagnostic:
      - '{"ServerInfo":{"DataCenter":"West US 2","Slice":"E","Ring":"4","ScaleUnit":"003","RoleInstance":"CO1PEPF00004BF2"}}'
      x-ms-resource-unit:
      - '1'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-18T04:44:18.4380858Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:09 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 9383A64298A7430ABB67B68D478A7DBB Ref B: CO6AA3150218053 Ref C: 2024-10-21T09:49:10Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "953fd163-96b2-4789-8a83-9cfe693dd8d5", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"953fd163-96b2-4789-8a83-9cfe693dd8d5","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:49:10.7545518Z","updatedOn":"2024-10-21T09:49:11.2295588Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000001","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000001"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1001'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 090026AF0D154A4D90AFD857ECF515E3 Ref B: CO6AA3150219023 Ref C: 2024-10-21T09:49:10Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-06T17:20:40.5763144Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: E895060A539548E39F92C04AA49DA96C Ref B: CO6AA3150218027 Ref C: 2024-10-21T09:49:13Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "c4e842c7-8d1e-4c6e-a2bc-29210126c085", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:49:13.4234059Z","updatedOn":"2024-10-21T09:49:13.9274144Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:15 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 8330EC717FE94EAF9F32C488D7EAFFFE Ref B: CO6AA3150219037 Ref C: 2024-10-21T09:49:13Z'
    status:
      code: 201
      message: Created
- request:
    body: '{"identity": {"type": "SystemAssigned"}, "location": "westcentralus", "properties":
      {"apiKey": "Disabled", "deterministicOutboundIP": "Disabled", "publicNetworkAccess":
      "Enabled", "zoneRedundancy": "Disabled"}, "sku": {"name": "Standard"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:49:17.3971887Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:49:17.3971887Z"},"identity":{"principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Accepted","grafanaVersion":null,"endpoint":"https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":null,"grafanaMajorVersion":"10"}}'
    headers:
      api-supported-versions:
      - 2021-09-01-preview, 2022-05-01-preview, 2022-08-01, 2022-10-01-preview, 2023-09-01,
        2023-10-01-preview
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
      cache-control:
      - no-cache
      content-length:
      - '1224'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:17 GMT
      etag:
      - '"0600c0d9-0000-0600-0000-6716239e0000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
      mise-correlation-id:
      - 868e2eee-cf6f-424a-a1e4-7c9324cf8217
      pragma:
      - no-cache
      request-context:
      - appId=cid-v1:c5d15200-b714-40a5-9a7a-a4ecac3e5442
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: BA9B41775FBC4AA0984C7C8CDCAFAF29 Ref B: CO6AA3150219031 Ref C: 2024-10-21T09:49:16Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-10-21T09:49:18.2545116Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:18 GMT
      etag:
      - '"05001351-0000-0600-0000-6716239e0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: BA5754651A2A48C3915F355BCC25A730 Ref B: CO6AA3150220045 Ref C: 2024-10-21T09:49:18Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-10-21T09:49:18.2545116Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:49:48 GMT
      etag:
      - '"05001351-0000-0600-0000-6716239e0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 29966FBDF3584EEE8F608515C2A4E8AB Ref B: CO6AA3150219033 Ref C: 2024-10-21T09:49:49Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-10-21T09:49:18.2545116Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:50:18 GMT
      etag:
      - '"05001351-0000-0600-0000-6716239e0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: ACEB241255764629B4BCE59742240C6F Ref B: CO6AA3150218039 Ref C: 2024-10-21T09:50:19Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Accepted","startTime":"2024-10-21T09:49:18.2545116Z"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:50:49 GMT
      etag:
      - '"05001351-0000-0600-0000-6716239e0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: F68646659DB849B49138E58062197347 Ref B: CO6AA3150220011 Ref C: 2024-10-21T09:50:49Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651009584753266&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6e-8EZGsE2bZMVj6ECdAIBvLZIfWfcJYjHc4jKYpZbfaDt4LQl4S61yiYEdmlPT7UGzpcKWt_14pGMHr1N5pFdy8siSeDk_zctlfm6zr3uf-1ULqcaRcPSqrQh_qOSTfJg3_3f2Z5wfkyVCMr_zvGXS-OZu0s0_OVI-x7iomh1GDlDoxqLa6_tvuCD-zcSQq8o7dZC9e7B89wpUOi3CrOH16M3660j75Mr5uYjBlr9Qwy2ta2YzZbwZamUGMevThrfd2MeFONoRHAw2ZaLX2-YO1zXkvKB52agHzMdXohf9qiy8DZlzMVKYTES6S356vjMdINs4ReRWqmegmoyLcOw&h=a8DcbG1aaioaIh_-QMqO20_G_mmBazhI-rOvIEbh1Bo
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"c5e02ab7-1300-4da7-817f-587801378302*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Succeeded","startTime":"2024-10-21T09:49:18.2545116Z","endTime":"2024-10-21T09:51:11.4078071Z","error":{},"properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '590'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:19 GMT
      etag:
      - '"05004a51-0000-0600-0000-6716240f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E6CB7A379B144C429082967F4B9E3BF9 Ref B: CO6AA3150217021 Ref C: 2024-10-21T09:51:20Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:49:17.3971887Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:49:17.3971887Z"},"identity":{"principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:19 GMT
      etag:
      - '"1c00113f-0000-0800-0000-6716240f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 0F9A33B784A6472F83021B7E285DBCBA Ref B: CO6AA3150218021 Ref C: 2024-10-21T09:51:20Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - python/3.8.10 (Windows-10-10.0.26100-SP0) AZURECLI/2.65.0
    method: GET
    uri: https://graph.microsoft.com/v1.0/me
  response:
    body:
      string: '{"@odata.context":"https://graph.microsoft.com/v1.0/$metadata#users/$entity","businessPhones":["+1
        (425) 7069079"],"displayName":"Alan Zhang","givenName":"Alan","jobTitle":"SOFTWARE
        ENGINEER","mail":"example@example.com","mobilePhone":null,"officeLocation":"18/2480FL","preferredLanguage":null,"surname":"Zhang","userPrincipalName":"example@example.com","id":"953fd163-96b2-4789-8a83-9cfe693dd8d5"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '398'
      content-type:
      - application/json; odata.metadata=minimal; odata.streaming=true; IEEE754Compatible=false;
        charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:20 GMT
      odata-version:
      - '4.0'
      request-id:
      - f4b50f4d-e405-4b78-8c7e-2023b6af642a
      strict-transport-security:
      - max-age=31536000
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-ms-ags-diagnostic:
      - '{"ServerInfo":{"DataCenter":"West US 2","Slice":"E","Ring":"4","ScaleUnit":"001","RoleInstance":"MW2PEPF0000FF15"}}'
      x-ms-resource-unit:
      - '1'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Grafana%20Admin%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Grafana Admin","type":"BuiltInRole","description":"Manage
        server-wide settings and manage access to resources such as organizations,
        users, and licenses.","assignableScopes":["/"],"permissions":[{"actions":[],"notActions":[],"dataActions":["Microsoft.Dashboard/grafana/ActAsGrafanaAdmin/action"],"notDataActions":[]}],"createdOn":"2021-07-15T21:32:35.3802340Z","updatedOn":"2024-07-18T04:44:18.4380858Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","type":"Microsoft.Authorization/roleDefinitions","name":"22926164-76b3-42b3-bc55-97df8dab3e41"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '719'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:20 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: C6C3E69FF762406C8CBAF55A063DCD6B Ref B: CO6AA3150220027 Ref C: 2024-10-21T09:51:21Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
      "principalId": "953fd163-96b2-4789-8a83-9cfe693dd8d5", "principalType": "User"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '258'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41","principalId":"953fd163-96b2-4789-8a83-9cfe693dd8d5","principalType":"User","scope":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:51:21.7381960Z","updatedOn":"2024-10-21T09:51:22.1792085Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000003","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000003"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1001'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:22 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '799'
      x-msedge-ref:
      - 'Ref A: 28C1D7AC09514036A437FD819FB5803A Ref B: CO6AA3150217039 Ref C: 2024-10-21T09:51:21Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions?$filter=roleName%20eq%20%27Monitoring%20Reader%27&api-version=2022-05-01-preview
  response:
    body:
      string: '{"value":[{"properties":{"roleName":"Monitoring Reader","type":"BuiltInRole","description":"Can
        read all monitoring data.","assignableScopes":["/"],"permissions":[{"actions":["*/read","Microsoft.OperationalInsights/workspaces/search/action","Microsoft.Support/*"],"notActions":[],"dataActions":[],"notDataActions":[]}],"createdOn":"2016-09-21T19:19:52.4939376Z","updatedOn":"2022-09-06T17:20:40.5763144Z","createdBy":null,"updatedBy":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","type":"Microsoft.Authorization/roleDefinitions","name":"43d0d8ad-25c7-4714-9337-8ba259a9fe05"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '683'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:23 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: EE635832AECD413B9357DC81EF21719F Ref B: CO6AA3150217011 Ref C: 2024-10-21T09:51:23Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"roleDefinitionId": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "principalId": "045088f0-e62b-41f5-a1c9-7a12b44f570c", "principalType": "ServicePrincipal"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana create
      Connection:
      - keep-alive
      Content-Length:
      - '270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n -l
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:51:24.1362575Z","updatedOn":"2024-10-21T09:51:24.9677229Z","createdBy":null,"updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '823'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:51:24 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '11998'
      x-ms-ratelimit-remaining-subscription-writes:
      - '798'
      x-msedge-ref:
      - 'Ref A: 2D171EF135584C9BA8752F88970EC497 Ref B: CO6AA3150219019 Ref C: 2024-10-21T09:51:24Z'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana folder create
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --title
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:46:35.559306Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:46:35.559306Z"},"identity":{"principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1120'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:53:25 GMT
      etag:
      - '"1c000a2a-0000-0800-0000-6716238c0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 0C9582722B044C78BF091C8966BD6ED7 Ref B: CO6AA3150219051 Ref C: 2024-10-21T09:53:25Z'
    status:
      code: 200
      message: OK
- request:
    body: '{"title": "Test Folder"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '24'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":32,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-10-21T09:53:28.836402968Z","updatedBy":"example@example.com","updated":"2024-10-21T09:53:28.836402968Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-P1cyDk0B2b4Ph6JdW+fsfA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:28 GMT
      grafana-trace-id:
      - 0cd3495907f49d61f0c49ffbeffae7de
      mise-correlation-id:
      - 6b45aa01-63e4-485f-b87b-ff1ca31e7c0c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504407.519.30.975388|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"access": "proxy", "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "jsonData":
      {"azureAuthType": "msi", "subscriptionId": ""}, "name": "Test Azure Monitor
      Data Source", "type": "grafana-azure-monitor-datasource"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '212'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false},"id":5,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '543'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fxELHtpuLnlGtVkxkqkxog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:30 GMT
      grafana-trace-id:
      - 58b5bde3c2ad81357c91e5fd73445978
      mise-correlation-id:
      - b1903144-a1a6-4f51-a91e-cf3b715c0351
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504410.646.29.717438|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Qhy0jY9ziIeG9LRkzroq7g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:31 GMT
      grafana-trace-id:
      - 29b62f16d816cbad1edab2d4548a0de5
      mise-correlation-id:
      - 1c14f2b8-e799-4650-bd24-2ac2c95b8e86
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504411.985.27.218255|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure Monitor"},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva"},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BrrYhYSqCLsCU43/ZpQlkw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:31 GMT
      grafana-trace-id:
      - 6745280cd1c87d675098f8563ac48208
      mise-correlation-id:
      - 43c0b1de-6fba-46fe-9b9b-ea8004f5aeb6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504412.232.27.436320|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVa"},
      "folderUid": "ae1j483j9xuyod", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '127'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":33,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-omd+9TQe9kXUZ+WXzei/2g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:32 GMT
      grafana-trace-id:
      - eff2a5a93af2a0b4e226fbe6e2009fc7
      mise-correlation-id:
      - a1265453-8b8c-41d4-8125-6ff3ed10efa6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504412.431.30.865560|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVb"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '96'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-26qxxgdSvPV7owntD1xraQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:33 GMT
      grafana-trace-id:
      - f3607cb562e3c89d296cc2a16ee2c416
      mise-correlation-id:
      - 4133c07a-177e-4671-89fc-e54f16d40fab
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504414.072.28.272148|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rP+qVT6YGiVUbSXqQrxpaw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:33 GMT
      grafana-trace-id:
      - b12d4c6014504008318a397805cbbd14
      mise-correlation-id:
      - c4469f92-1d8c-43c9-8b18-0f039bca22e5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504414.715.29.670146|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure Monitor"},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva"},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-+pvpfunGmZ5xuTMFP1Z2cA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:33 GMT
      grafana-trace-id:
      - 236bb8ebf6825652213b4af7ecda7bf0
      mise-correlation-id:
      - 8f7489ad-ef7b-4fb4-84aa-08d3522a18ab
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504414.969.26.794371|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard2", "panels": [], "uid": "mg2OAlTVc"},
      "folderUid": "ae1j483j9xuyod", "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '128'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":35,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BSsLTaRUDuZs1ek/DOxAJA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:34 GMT
      grafana-trace-id:
      - a84c9635542e5e69b13f6e7a3138c5d7
      mise-correlation-id:
      - e2a488fa-2596-424a-a88a-b29e71e0f55e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504415.202.29.851768|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:53:34 GMT
      grafana-trace-id:
      - c2be8a3b25be59af3a3f0d60c1658fbf
      mise-correlation-id:
      - a20339d5-76bc-4cc3-9b6d-64e6f1bb7c08
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504415.896.30.552737|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-5HqGA33jpKBnvUZ4liR8+g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:35 GMT
      grafana-trace-id:
      - 4afc6b1c6b32359500263ba69e9e3595
      mise-correlation-id:
      - dcac7dd1-c409-4ca3-8ae5-de8c0b2181a7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504416.076.29.275907|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AiJ0+giwSkMPRfK/hp1D5w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:35 GMT
      grafana-trace-id:
      - 36d2ede789ad7dcd68f898c4a0d6addd
      mise-correlation-id:
      - 974fde6b-14e3-4815-a5a8-ad8c76bbfb10
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504416.297.27.513555|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"de1j3sc2xntvkf","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/de1j3sc2xntvkf/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":27,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":18,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":23,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":21,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":33,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":35,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":20,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rEInfjEwWz9lUjBveAi+og';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:35 GMT
      grafana-trace-id:
      - 017e69caf09bbc6963e8b817c528e5c5
      mise-correlation-id:
      - 1f60037b-3fbc-43c8-b5ee-89e2e949cf78
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504416.529.28.677904|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:33Z","updated":"2024-10-21T09:53:33Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVb","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pf5HQgypKan3TEVwBb/OzQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:35 GMT
      grafana-trace-id:
      - 422e281a8c65b3ef6365960c3a50a56a
      mise-correlation-id:
      - 1f63c243-2f34-418f-b1a6-6994c66cac9f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504416.739.27.605586|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:32Z","updated":"2024-10-21T09:53:32Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-kn5wkRCrlGG0kcYaZW6NgA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:36 GMT
      grafana-trace-id:
      - a274f7838e2759b54253022b1e9e50af
      mise-correlation-id:
      - 607c4c56-c76a-4ae7-8808-b8c6de918b6c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504416.97.27.264420|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:34Z","updated":"2024-10-21T09:53:34Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":35,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-E2y1Mv/Nkm8C8G0fXhmmdw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:36 GMT
      grafana-trace-id:
      - 917243cd1f9fe024c0d30d1f73888c28
      mise-correlation-id:
      - ecd81c4f-8281-4d95-bfde-68293d249695
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504417.175.30.132592|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OkxkIEevyNBmRFo450vFrw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:36 GMT
      grafana-trace-id:
      - d47263da39ea56256467371ffd362490
      mise-correlation-id:
      - 3e484655-4b16-4daf-8521-6e1a0104fe74
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504417.442.26.289305|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/fe1j3savseyv4a/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/fe1j3sc7xgirkb/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":32,"uid":"ae1j483j9xuyod","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tyeUHNCWHLaJCwYkAleXEA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:36 GMT
      grafana-trace-id:
      - 601776b256f3f1304843083197ba1799
      mise-correlation-id:
      - 03a3f43d-0d7f-4199-a58e-5aa467c805a5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504417.691.29.487229|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":32,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:28.840599Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:28.840599Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xQwh1ADY1tuzKkOB6rv5MQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:36 GMT
      grafana-trace-id:
      - b404e92b0f9ec5dfc1a757d2d2b8f0a9
      mise-correlation-id:
      - 7ca8476a-2277-4cad-8fe0-4cab59145c71
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504417.919.27.422448|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod/permissions
  response:
    body:
      string: '[{"folderId":32,"created":"2024-10-21T09:53:28Z","updated":"2024-10-21T09:53:28Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/394901e50524f648e12a1f87395daac7","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"ae1j483j9xuyod","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ae1j483j9xuyod/test-folder","inherited":false},{"folderId":32,"created":"2024-10-21T09:53:28Z","updated":"2024-10-21T09:53:28Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ae1j483j9xuyod","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ae1j483j9xuyod/test-folder","inherited":false},{"folderId":32,"created":"2024-10-21T09:53:28Z","updated":"2024-10-21T09:53:28Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ae1j483j9xuyod","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ae1j483j9xuyod/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ievoKD0QTbkGNCCn233tAQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:37 GMT
      grafana-trace-id:
      - b705ac083af7851cfe2739ab5d112963
      mise-correlation-id:
      - 995f6176-5123-45f8-8a8d-462dfdc237b1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504418.141.26.760775|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-DRy7ewM94vwYNHP3jlcylQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:38 GMT
      grafana-trace-id:
      - 089b73b8236290af50605402a0128446
      mise-correlation-id:
      - 63b93fb4-effc-490c-9a02-a507f8893d46
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504419.053.29.911390|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure Monitor"},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva"},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-6fBnLmtS1einf22/cfjC0g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:38 GMT
      grafana-trace-id:
      - 4e1331ce52566809457c8718add4c0f0
      mise-correlation-id:
      - 4e35e821-af1d-4b2c-8c2b-1bdbb754e8ab
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504419.276.29.699006|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"message":"Folder deleted"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '28'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RE6QkmecTRMHNy38Gsb7Rw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:38 GMT
      grafana-trace-id:
      - b43dcb9c01f9bb5267609c663f23d0a1
      mise-correlation-id:
      - c7e23153-7d54-4147-8db3-c6b0409e2c7a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504419.502.29.57806|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources/name/Test%20Azure%20Monitor%20Data%20Source
  response:
    body:
      string: '{"id":5,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '452'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Di/3KJ0G/YazWrZ1XNco0g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:39 GMT
      grafana-trace-id:
      - 519aba39dbf1eaf45dcf0537d4b9d1a7
      mise-correlation-id:
      - 55aa8bb6-e97e-487f-b93d-f7246caaaa52
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504420.281.30.418919|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources/uid/da714998-ca29-4adc-851b-1bd93371cbc6
  response:
    body:
      string: '{"id":5,"message":"Data source deleted"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '40'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-s6m4cBg3nIMckE4I636HxA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:39 GMT
      grafana-trace-id:
      - dddefddaa432bfb4c0c497341323adb5
      mise-correlation-id:
      - d23edf1b-3c15-42c3-9dd5-f577681889db
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504420.502.30.860604|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:53:40 GMT
      grafana-trace-id:
      - fed34a0fb0ac614f401815e622f1b337
      mise-correlation-id:
      - 652b3841-9fe7-4182-a0bd-7f4a494ec8d1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504421.415.26.739179|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 32, "uid": "ae1j483j9xuyod", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/ae1j483j9xuyod/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T09:53:28.840599Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T09:53:28.840599Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '379'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-10-21T09:53:40.835656536Z","updatedBy":"example@example.com","updated":"2024-10-21T09:53:40.835656636Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xZi9m5dc19lX8SP8oQ8OaQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:40 GMT
      grafana-trace-id:
      - 3a85b9b5af3d70fe76b9095d261e9d2e
      mise-correlation-id:
      - 1ba52c0d-9e9e-44fd-adcb-e8054da885e2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504421.802.29.295533|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:40.840393Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:40.840393Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-H4fR3FOJymIKBR/4stzxaw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:41 GMT
      grafana-trace-id:
      - 2f58f268d1e208a21855045a0ddb1e1a
      mise-correlation-id:
      - 04a177ce-f8e5-47af-8dfa-1b4508ad5c00
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504422.122.27.900229|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVa", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '137'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":37,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IMoc5TQLpuyBHbMnCHOrWg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:41 GMT
      grafana-trace-id:
      - f9b1bb0991a14219235a0b85a9fcde3f
      mise-correlation-id:
      - 08bb58d2-3d69-4a9e-be1e-fde15580e6ec
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504422.354.27.153357|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVb", "version": 1}, "folderId": 0, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '136'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVb","url":"/d/mg2OAlTVb/test-dashboard","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PXMzaN3S63R0r4f8UAS83Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:41 GMT
      grafana-trace-id:
      - 66b7525eb4647fd28ab5018f39553758
      mise-correlation-id:
      - a7070034-bcba-4247-aa2a-59c08b73ef32
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504422.635.29.68586|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:40.840393Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:40.840393Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jFAHA1xzKG9w05JwwrNGrQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:41 GMT
      grafana-trace-id:
      - ef5345248f018b38a0ddf4d4b1ce379d
      mise-correlation-id:
      - 3b844698-6652-4bb2-b3b6-d44c93e19963
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504422.911.26.150342|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard2", "uid":
      "mg2OAlTVc", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '138'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":38,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-EAz7FA6YuDdSjb47IeL56w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:42 GMT
      grafana-trace-id:
      - 9c9df0ede462841fa9efb80a15fd0cf4
      mise-correlation-id:
      - eaad973c-28c1-4653-b932-3388b11675b8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504423.137.27.586609|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 2, "uid": "2bf5f4cb-b112-4c36-8ed5-22a2b478d58f", "orgId": 1, "name":
      "Geneva SLI Data", "type": "grafana-azure-data-explorer-datasource", "typeName":
      "Azure Data Explorer Datasource", "typeLogoUrl": "public/plugins/grafana-azure-data-explorer-datasource/img/logo.png",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureCredentials": {"authType": "currentuser"},
      "clusterUrl": "https://genevaslidatafollower.westcentralus.kusto.windows.net",
      "dataConsistency": "strongconsistency", "defaultDatabase": "slihelper", "defaultEditorMode":
      "visual", "oauthPassThru": true}, "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '661'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"34b361085c41e5ded75ca58382d184a7"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-2PVsY0mTWsJpM8ofGmS5tg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:42 GMT
      grafana-trace-id:
      - 34b361085c41e5ded75ca58382d184a7
      mise-correlation-id:
      - 8ae4b8a4-ea3c-414a-af9d-c2c21e072b0d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504423.492.29.293101|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: '{"id": 1, "uid": "azure-monitor-oob", "orgId": 1, "name": "Azure Monitor",
      "type": "grafana-azure-monitor-datasource", "typeName": "Azure Monitor", "typeLogoUrl":
      "public/app/plugins/datasource/azuremonitor/img/logo.jpg", "access": "proxy",
      "url": "", "user": "", "database": "", "basicAuth": false, "isDefault": true,
      "jsonData": {"azureAuthType": "msi", "subscriptionId": "D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},
      "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '433'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"8507e735ce5f6713283415440f0e9249"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TwSYVLHyH1Ig6pUCN+I6MA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:42 GMT
      grafana-trace-id:
      - 8507e735ce5f6713283415440f0e9249
      mise-correlation-id:
      - aedb1c82-e03e-4c18-8cf9-20ee9b345a72
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504423.74.28.910006|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: '{"id": 5, "uid": "da714998-ca29-4adc-851b-1bd93371cbc6", "orgId": 1, "name":
      "Test Azure Monitor Data Source", "type": "grafana-azure-monitor-datasource",
      "typeName": "Azure Monitor", "typeLogoUrl": "public/app/plugins/datasource/azuremonitor/img/logo.jpg",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureAuthType": "msi", "subscriptionId": ""},
      "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '434'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"datasource":{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false},"id":6,"message":"Datasource
        added","name":"Test Azure Monitor Data Source"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '543'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-qPCQejX37pPFj6XPAS6N8A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:43 GMT
      grafana-trace-id:
      - 5317e088dec3ed6ae491ceda124daaf5
      mise-correlation-id:
      - 87e88d71-5816-4f85-a929-69ef1df038a3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504423.962.30.234290|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 3, "uid": "f6364b78-a58a-4fcd-8fae-8cd0d3ddc448", "orgId": 1, "name":
      "IcM via ADX", "type": "grafana-azure-data-explorer-datasource", "typeName":
      "Azure Data Explorer Datasource", "typeLogoUrl": "public/plugins/grafana-azure-data-explorer-datasource/img/logo.png",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureCredentials": {"authType": "currentuser"},
      "clusterUrl": "https://icmclusterfollower.centralus.kusto.windows.net", "dataConsistency":
      "strongconsistency", "defaultDatabase": "IcMDataWarehouse", "defaultEditorMode":
      "visual", "oauthPassThru": true}, "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '657'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"92f82c265d4983fae5d8bffe4327d605"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-B/Yh/r1zkzzQgRCbbAAGGA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:43 GMT
      grafana-trace-id:
      - 92f82c265d4983fae5d8bffe4327d605
      mise-correlation-id:
      - 3cbe4487-f32b-4992-b24d-17282077faf7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504424.222.27.489290|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: '{"id": 4, "uid": "Geneva", "orgId": 1, "name": "Geneva Datasource", "type":
      "geneva-datasource", "typeName": "Geneva Datasource", "typeLogoUrl": "public/plugins/geneva-datasource/img/logo.svg",
      "access": "proxy", "url": "", "user": "", "database": "", "basicAuth": false,
      "isDefault": false, "jsonData": {"azureCredentials": {"authType": "currentuser"},
      "oauthPassThru": true}, "readOnly": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '396'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '{"message":"data source with the same name already exists","traceID":"77bdbc93988d65bc5ca9961bb7b3f774"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '104'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-hop7SBzbKYxqqlcV57FyCA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:43 GMT
      grafana-trace-id:
      - 77bdbc93988d65bc5ca9961bb7b3f774
      mise-correlation-id:
      - eefb704e-68d5-44cc-912d-73a210c9b8fe
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504424.482.28.151809|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 409
      message: Conflict
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources/name/Test%20Azure%20Monitor%20Data%20Source
  response:
    body:
      string: '{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"basicAuthUser":"","withCredentials":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"secureJsonFields":{},"version":1,"readOnly":false}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '452'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-L+SxEZsv8Uc4k40px0iDHA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:44 GMT
      grafana-trace-id:
      - 1731454feaa8aa07bb7029bdbc690fc4
      mise-correlation-id:
      - 9896e511-dd8a-4726-aa13-8581541e681a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504425.193.27.249160|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-0ej2sp4aZUPnbU8zqavpkQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:44 GMT
      grafana-trace-id:
      - 6712937a9aac0d094a2bc3be239e8f11
      mise-correlation-id:
      - b8269ae8-d8a6-4ab3-94b1-aae760227bde
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504425.795.27.826198|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure Monitor"},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva"},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud"},{"id":36,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QC2s0qlk0DWk+tbYYJ0myA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:45 GMT
      grafana-trace-id:
      - 9e20d75348d2afc738e26daed18c57cb
      mise-correlation-id:
      - cbc8147f-fe96-4d8b-8fc7-53ba9668e9bf
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504426.039.29.267048|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:41Z","updated":"2024-10-21T09:53:41Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-yV1ulUJnfUFdKsmYyGnY9w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:45 GMT
      grafana-trace-id:
      - ad11a953eedfb5da24923b656d1931cd
      mise-correlation-id:
      - 3d5b0a1c-f094-4cda-a074-30569ee6b428
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504426.822.29.585123|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:33Z","updated":"2024-10-21T09:53:41Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVb","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8nghyFBI55HJbBQ8VUou6Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:46 GMT
      grafana-trace-id:
      - 398d222eb3a06a9e410f32c91dffba5d
      mise-correlation-id:
      - 96908065-faec-4cdd-888f-50223761661f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504427.602.30.770811|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:53:47 GMT
      grafana-trace-id:
      - 6d1c8e6315650d72e0f9ad684b66542b
      mise-correlation-id:
      - e7c3e9cb-5369-4992-a65a-8f1558f2a6f7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504428.329.29.999554|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/library-elements?page=1
  response:
    body:
      string: '{"result":{"totalCount":0,"elements":[],"page":1,"perPage":100}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '64'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4aV9tMUef4uNPGmkpf4VvQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:47 GMT
      grafana-trace-id:
      - 8d48ad6db0a0903a046194660e3c87ae
      mise-correlation-id:
      - 5d056444-56b0-4ac8-bd5c-f3419bc92a2e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504428.582.27.520736|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"de1j3sc2xntvkf","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/de1j3sc2xntvkf/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":27,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":18,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":23,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":21,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":34,"uid":"mg2OAlTVb","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVb/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":20,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zaiI5TtoFTskO27n8v6qOQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:47 GMT
      grafana-trace-id:
      - 31bdf12649d68b1f27177c2b74309936
      mise-correlation-id:
      - 8d0fff08-7be5-4a8e-9cef-e6cc99b59d92
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504428.845.27.395657|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"de1j3sc2xntvkf\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-L9hP9Z9uQgqmjLHJ8wjVUA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:48 GMT
      grafana-trace-id:
      - b676d071526833537d1c5f751eb76a27
      mise-correlation-id:
      - 2ace21d0-aecc-4010-b0e3-a09fc3856a1b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504429.082.29.858754|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"de1j3sd0fssu8a\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-jLKiESUf+2kcrmdJ1zuBAA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:48 GMT
      grafana-trace-id:
      - 1962a978a3d9d2e05f95449390d9114f
      mise-correlation-id:
      - 0f6635f4-652e-44dd-a1d6-f3aa30981b83
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504429.355.29.309172|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZrNR/VMygTeDScVvzulVZA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:48 GMT
      grafana-trace-id:
      - 5a5f867a879bd65718d8019c68e25c4b
      mise-correlation-id:
      - d508e85c-3a70-42b9-9175-45803389d014
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504429.574.29.45185|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ogFrb+L8syudBhTUtnZmPw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:48 GMT
      grafana-trace-id:
      - db91c3da02ea7f120debc90a0b838d55
      mise-correlation-id:
      - 8b92bf36-2530-4275-928b-fe7292d1ba8d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504429.826.29.726959|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:41Z","updated":"2024-10-21T09:53:41Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Hvm5gx5pZBkNWcNxopZ6eQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:49 GMT
      grafana-trace-id:
      - 8d12f955cefa88aaacf5deb805094682
      mise-correlation-id:
      - 0520dfef-937a-4554-b463-8561d9af7660
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504430.064.29.789833|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:42Z","updated":"2024-10-21T09:53:42Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":38,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-GDTbt2J700U2Sxslw/gXsg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:49 GMT
      grafana-trace-id:
      - 7d63ac446053742175fe0503c1d68483
      mise-correlation-id:
      - a4daa63d-46c4-42fd-bb9c-f7086f129a63
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504430.278.27.308707|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search/?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-gO+d9e76GJtJGmSN2Hk4Lw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:49 GMT
      grafana-trace-id:
      - ec0be6aedebccb0829e0aed52808c3f9
      mise-correlation-id:
      - 590a085a-68bb-4c0d-9079-51294d2ab85a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504430.505.28.56716|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search/?type=dash-folder
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring","uri":"db/azure-kubernetes-service-monitoring","url":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure
        Monitor","uri":"db/azure-monitor","url":"/dashboards/f/fe1j3savseyv4a/azure-monitor","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva","uri":"db/geneva","url":"/dashboards/f/fe1j3sc7xgirkb/geneva","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud","uri":"db/microsoft-defender-for-cloud","url":"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0},{"id":36,"uid":"ae1j483j9xuyod","title":"Test
        Folder","uri":"db/test-folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","slug":"","type":"dash-folder","tags":[],"isStarred":false,"sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1109'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Wn9/T18OLnvSWYEMCqrKoA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:49 GMT
      grafana-trace-id:
      - 9321e16ad7cb304eec79866b2a60a8e9
      mise-correlation-id:
      - 87ec677c-dcad-4e87-aa82-4f5922af9f99
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504430.733.27.968214|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/de1j3sd0fssu8a
  response:
    body:
      string: '{"id":28,"uid":"de1j3sd0fssu8a","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:48:34.823049Z","updatedBy":"Anonymous","updated":"2024-10-21T09:48:34Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '372'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-iH2Z5iNNyoe57fRLqbOz1Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:49 GMT
      grafana-trace-id:
      - 1658e382bbeb5a30886047a66387ef1d
      mise-correlation-id:
      - 289b3a94-c3a5-4ace-8ed0-e5d484118c08
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504430.952.29.780839|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/de1j3sd0fssu8a/permissions
  response:
    body:
      string: '[{"folderId":28,"created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"de1j3sd0fssu8a","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","inherited":false},{"folderId":28,"created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"de1j3sd0fssu8a","title":"Azure
        Kubernetes Service Monitoring","slug":"","isFolder":true,"url":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '877'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-meQ9jQG3YB/kMTfYVfXtug';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:50 GMT
      grafana-trace-id:
      - 5bdc8f96932f41114c44c391dea78ded
      mise-correlation-id:
      - 6be55c18-8d2c-446e-81fb-4afaa36f4cb9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504431.211.27.177484|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/de1j3sc2xntvkf
  response:
    body:
      string: '{"id":12,"uid":"de1j3sc2xntvkf","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:48:34.339465Z","updatedBy":"Anonymous","updated":"2024-10-21T09:48:34Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '358'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-lW3WOJphAZ8EYAn+sWeAdQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:50 GMT
      grafana-trace-id:
      - c20663ad7b727106d0782cf5dc81ded8
      mise-correlation-id:
      - 01cccfd2-1c0a-4172-a03e-e7f39cdeb839
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504431.501.29.845967|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/de1j3sc2xntvkf/permissions
  response:
    body:
      string: '[{"folderId":12,"created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud","inherited":false},{"folderId":12,"created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud","slug":"","isFolder":true,"url":"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '849'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-wKTBw6RyCsSX2ZW3E1DFdg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:50 GMT
      grafana-trace-id:
      - 7ab3664c3330a51a0773708607f01f64
      mise-correlation-id:
      - ca9afaf9-4771-4d8b-971f-c0a4790f930e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504431.71.29.562392|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:40.840393Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:40.840393Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pm9XwyQzqnenSVKLQPoDjw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:50 GMT
      grafana-trace-id:
      - 238eefc30d1175977e5e1059a73d6e10
      mise-correlation-id:
      - 93c47525-061a-4206-b424-561820635326
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504431.932.26.4287|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod/permissions
  response:
    body:
      string: '[{"folderId":36,"created":"2024-10-21T09:53:40Z","updated":"2024-10-21T09:53:40Z","userId":2,"userLogin":"example@example.com","userEmail":"example@example.com","userAvatarUrl":"/avatar/394901e50524f648e12a1f87395daac7","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","permission":4,"permissionName":"Admin","uid":"ae1j483j9xuyod","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ae1j483j9xuyod/test-folder","inherited":false},{"folderId":36,"created":"2024-10-21T09:53:40Z","updated":"2024-10-21T09:53:40Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Editor","permission":2,"permissionName":"Edit","uid":"ae1j483j9xuyod","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ae1j483j9xuyod/test-folder","inherited":false},{"folderId":36,"created":"2024-10-21T09:53:40Z","updated":"2024-10-21T09:53:40Z","userId":0,"userLogin":"","userEmail":"","userAvatarUrl":"","teamId":0,"teamEmail":"","teamAvatarUrl":"","team":"","role":"Viewer","permission":1,"permissionName":"View","uid":"ae1j483j9xuyod","title":"Test
        Folder","slug":"","isFolder":true,"url":"/dashboards/f/ae1j483j9xuyod/test-folder","inherited":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '1234'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-VUEaNFlZKsR16AOT4+gbxg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:51 GMT
      grafana-trace-id:
      - 4dcdf8df6bf65b4eef710385ffdfaccf
      mise-correlation-id:
      - 6b4b8159-3740-43c3-afe2-c2428d3feec3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504432.171.28.816527|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVb
  response:
    body:
      string: '{"id":34,"message":"Dashboard Test Dashboard deleted","title":"Test
        Dashboard"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OpbWg1nB580c3eUUGuRxMg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:52 GMT
      grafana-trace-id:
      - 74848328cd1af82f3c8b28f24a44165c
      mise-correlation-id:
      - ffd8bad7-9406-4fa9-b35a-484b22ba3519
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504433.117.29.466065|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:53:52 GMT
      grafana-trace-id:
      - fc3c95585a4012f974a50a452fb25520
      mise-correlation-id:
      - 8af851c4-adec-45e3-b1ff-d7c9021c8c3e
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504433.768.28.89380|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 36, "uid": "ae1j483j9xuyod", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/ae1j483j9xuyod/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T09:53:40.840393Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T09:53:40.840393Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '379'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rEAKJWZU9rvmvW2XMT+JOw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:53 GMT
      grafana-trace-id:
      - ece1b65894ac69bd692653272325f99a
      mise-correlation-id:
      - a86fed12-8bd4-40df-ae17-88994a7ad412
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504434.084.28.195280|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 36, "uid": "ae1j483j9xuyod", "orgId": 0, "title": "Test Folder",
      "url": "/dashboards/f/ae1j483j9xuyod/test-folder", "hasAcl": false, "canSave":
      true, "canEdit": true, "canAdmin": true, "canDelete": true, "createdBy": "Anonymous",
      "created": "2024-10-21T09:53:40.840393Z", "updatedBy": "Anonymous", "updated":
      "2024-10-21T09:53:40.840393Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '379'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:40.840393Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:53.338499Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-wk/KtFjSb8ap4UKxvLhvDg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:53 GMT
      grafana-trace-id:
      - 85c4c02ada7136ae2711341b1b9cac1c
      mise-correlation-id:
      - 3922a2f9-ad5e-4016-87c9-778191fe1fb8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504434.285.27.199408|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 12, "uid": "de1j3sc2xntvkf", "orgId": 0, "title": "Microsoft Defender
      for Cloud", "url": "/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T09:48:34.339465Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T09:48:34Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '406'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8HHoWVbtYg7Z+e5TJSLmaA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:53 GMT
      grafana-trace-id:
      - 9715d6d7cc04b31e0777999ff105054b
      mise-correlation-id:
      - e43b2b16-fc17-4eb5-a410-c2ac82dfc20c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504434.584.26.346973|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 12, "uid": "de1j3sc2xntvkf", "orgId": 0, "title": "Microsoft Defender
      for Cloud", "url": "/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T09:48:34.339465Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T09:48:34Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '406'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/de1j3sc2xntvkf
  response:
    body:
      string: '{"id":12,"uid":"de1j3sc2xntvkf","orgId":0,"title":"Microsoft Defender
        for Cloud","url":"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:48:34.339465Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:53.845943Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '365'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-gzQoMvVRNS2VjxobKP9KPg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:53 GMT
      grafana-trace-id:
      - f191f2e42f04e24c1d380bdcecd2c64b
      mise-correlation-id:
      - fdd5ef71-fe27-4281-8ddf-e60491fb5a4f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504434.8.28.819329|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"id": 28, "uid": "de1j3sd0fssu8a", "orgId": 0, "title": "Azure Kubernetes
      Service Monitoring", "url": "/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T09:48:34.823049Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T09:48:34Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '420'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"message":"the folder has been changed by someone else","status":"version-mismatch"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '85'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1sQ8dDemparlh43Hvggn4w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:54 GMT
      grafana-trace-id:
      - 3b8956428b51af6d984623387f441589
      mise-correlation-id:
      - 33a64dd4-fe17-4ff7-aa59-a391d0e64f77
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504435.078.30.497384|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 412
      message: Precondition Failed
- request:
    body: '{"id": 28, "uid": "de1j3sd0fssu8a", "orgId": 0, "title": "Azure Kubernetes
      Service Monitoring", "url": "/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring",
      "hasAcl": false, "canSave": true, "canEdit": true, "canAdmin": true, "canDelete":
      true, "createdBy": "Anonymous", "created": "2024-10-21T09:48:34.823049Z", "updatedBy":
      "Anonymous", "updated": "2024-10-21T09:48:34Z", "version": 1, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '420'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: PUT
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/de1j3sd0fssu8a
  response:
    body:
      string: '{"id":28,"uid":"de1j3sd0fssu8a","orgId":0,"title":"Azure Kubernetes
        Service Monitoring","url":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:48:34.823049Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:54.362146Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '379'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ezUcEKzNBrl8gjnIYu+xSQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:54 GMT
      grafana-trace-id:
      - 8f8e3948c871f81256f6f1357285046f
      mise-correlation-id:
      - e2d3bc65-070e-4e6a-890c-358aa03f1b74
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504435.3.26.675930|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:40.840393Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:53.338499Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-qp+SPCGSNgJlmcWw614iuQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:54 GMT
      grafana-trace-id:
      - 7314f61c12977ac8666e87d49d98f2f4
      mise-correlation-id:
      - e151a2be-4b87-4e2f-bf78-9e2c5fd475d7
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504435.607.29.224696|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard", "uid":
      "mg2OAlTVa", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '137'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":37,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-MK9pl2wNbtH/bVcvCl7IxA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:54 GMT
      grafana-trace-id:
      - df8b628b63834cbe94c13103e0e38ef6
      mise-correlation-id:
      - ee2ebc73-7f89-410f-acf8-e4a5be6df9b1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504435.82.28.17638|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders/ae1j483j9xuyod
  response:
    body:
      string: '{"id":36,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"Anonymous","created":"2024-10-21T09:53:40.840393Z","updatedBy":"Anonymous","updated":"2024-10-21T09:53:53.338499Z","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '331'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-IA6oTq+tC3IAZc7/toPCBg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:55 GMT
      grafana-trace-id:
      - 8b8594ef3cbe5f582c9f4dd684bb064b
      mise-correlation-id:
      - 08648323-333e-4b33-9015-695d8e40993f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504436.105.28.758008|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"id": null, "panels": [], "title": "Test Dashboard2", "uid":
      "mg2OAlTVc", "version": 1}, "folderId": 36, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '138'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":38,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":2}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pO4v8IWwgMK6bMSD831B8w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:55 GMT
      grafana-trace-id:
      - e98baad79b71b539812a883c40bce2de
      mise-correlation-id:
      - 7e7e9e5f-c2ec-4221-a72d-f3cd46698ebb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504436.314.28.854472|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"de1j3sc2xntvkf","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/de1j3sc2xntvkf/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":27,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":18,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":23,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":21,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":20,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10337'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-NR94mTfDFp9tpm3SxD0a/Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:55 GMT
      grafana-trace-id:
      - 6bf2a10711cdbdc4c67f649b2227af97
      mise-correlation-id:
      - 303d3cc0-2cd0-4364-8218-c87051233516
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504436.972.28.445354|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rQMUXx7j+oqVx96/RxQa2g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:56 GMT
      grafana-trace-id:
      - 5e80a181619f8d5ca1903509ba9ae4c2
      mise-correlation-id:
      - b0c40178-e132-4fbd-944c-56d503d8c40a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504437.23.28.322146|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"dashboard": {"title": "Test Dashboard", "panels": [], "uid": "mg2OAlTVd"},
      "overwrite": false}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '96'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":39,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVd","url":"/d/mg2OAlTVd/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8LaBOoncdosCf1NfHgtFSQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:53:56 GMT
      grafana-trace-id:
      - 1fb28efd1e62e9fceea2462f2e19db2d
      mise-correlation-id:
      - e3029717-8145-487c-8b66-740e110f26a8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504437.86.27.305400|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:53:57 GMT
      grafana-trace-id:
      - ce77b2da32516db9eb54b5994dbc026d
      mise-correlation-id:
      - 683d97d6-a4a6-4788-8a4d-188e82bf3e09
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504438.538.29.450266|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana dashboard sync
      Connection:
      - keep-alive
      ParameterSetName:
      - --source --destination --folders-to-include
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:49:17.3971887Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:49:17.3971887Z"},"identity":{"principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:00 GMT
      etag:
      - '"1c00113f-0000-0800-0000-6716240f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 6AA6F235D3A84AF892CCC6396FEB6B21 Ref B: CO6AA3150220025 Ref C: 2024-10-21T09:54:00Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:01 GMT
      grafana-trace-id:
      - c02fbdee734758376dc872d85df98c5a
      mise-correlation-id:
      - 826f54ed-8e0a-4fe9-86ce-3301361f81f3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504441.81.28.718913|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure Monitor"},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva"},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud"},{"id":36,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-7FYuUWfZ+Wi7vF9RGxOcyQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:01 GMT
      grafana-trace-id:
      - f961ce7de8c190fd6f3fbff5d631297e
      mise-correlation-id:
      - 470545df-d380-4b30-be53-04a2fb4a588d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504442.334.28.633245|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j403tv3rb4f","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"ee1j401ncao00e","title":"Azure Monitor"},{"id":14,"uid":"ae1j40330p1j4f","title":"Geneva"},{"id":12,"uid":"fe1j402xef9j4d","title":"Microsoft
        Defender for Cloud"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '258'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WgDwtNL1/JxghMrWetUVuQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:03 GMT
      grafana-trace-id:
      - 34a11c3f30f6f4345b6e586d29fbe74c
      mise-correlation-id:
      - deca97f0-2708-407a-a42b-2383ba672b8a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504442.65.28.823993|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"title": "Test Folder", "uid": "ae1j483j9xuyod"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '49'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '{"id":32,"uid":"ae1j483j9xuyod","orgId":0,"title":"Test Folder","url":"/dashboards/f/ae1j483j9xuyod/test-folder","hasAcl":false,"canSave":true,"canEdit":true,"canAdmin":true,"canDelete":true,"createdBy":"example@example.com","created":"2024-10-21T09:54:03.315581156Z","updatedBy":"example@example.com","updated":"2024-10-21T09:54:03.315581256Z","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '357'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-evvyFdUjYsGuv0G0G/gz5g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:03 GMT
      grafana-trace-id:
      - cb1081c734bc4644d185099121fa3815
      mise-correlation-id:
      - 422cf288-924e-4478-a4ca-f922596b1485
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504444.28.28.390393|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-122Fyw6LDB6g5C3NEb54cA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:03 GMT
      grafana-trace-id:
      - b84c5f94a238cb748f14c6bbcc0f13e8
      mise-correlation-id:
      - e014dc4d-0c1c-42c9-bf3c-a892d6734bc5
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504444.592.26.281758|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vwCYNSn5XTcjhrBJNHA+Ew';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:03 GMT
      grafana-trace-id:
      - f3e13c9a2c4c20fccaa6e05813fbc8dc
      mise-correlation-id:
      - 4191e538-8318-4e28-b2db-f7e4d1b12cb6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504444.851.30.482101|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"de1j3sc2xntvkf","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/de1j3sc2xntvkf/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":27,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":18,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":23,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":21,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":39,"uid":"mg2OAlTVd","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":20,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RKM0WPIWYtK8ysvyZ2Lckg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:04 GMT
      grafana-trace-id:
      - 5671f128bdc45e35a3e09875a4d64498
      mise-correlation-id:
      - 48cfa73b-1d07-4ca1-a6f2-5da858f01013
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504445.107.28.482019|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-N+uNaBpkUSFkBsXmwqz6bg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:04 GMT
      grafana-trace-id:
      - c6ba78ae565e92d904f9bc3527e6fb57
      mise-correlation-id:
      - 176f40f3-640b-43d0-9524-769593c76888
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504445.398.27.774815|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"fe1j3sc7xgirkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/fe1j3sc7xgirkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":15,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-2/tsDs0ZlyDwYrom99dGBQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:04 GMT
      grafana-trace-id:
      - a99716fdfb0a9c30489d15f6f5a7e55c
      mise-correlation-id:
      - afeb681a-fac9-432d-8dfc-000f5fd21567
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504445.686.29.952144|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":24,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-OtWStJAwxl7KPd6HSTiFog';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:04 GMT
      grafana-trace-id:
      - ad1e09afde58d3b0c436be5a3da27a9b
      mise-correlation-id:
      - 0ffbbc6f-3a4c-4f3a-984c-8a56fea8032c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504445.921.30.824180|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":25,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-k8ThdSxVeJ3vx104NAmloA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:05 GMT
      grafana-trace-id:
      - ea4695b59dbe49e8c1a92ef67ec12ec5
      mise-correlation-id:
      - f8897a84-9f3d-4db4-83b8-7c4f892e1d25
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504446.199.26.826777|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":4,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18653'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-T/lUUAkQbR3UpQCKEllVrA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:05 GMT
      grafana-trace-id:
      - 3683d77334df378d52e2817b9b49fa00
      mise-correlation-id:
      - 5fec9eb4-2a35-4ba2-ada3-33cc36f9477f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504446.431.28.225787|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":6,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-iNnb6IpTP/327O/t+5kpDw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:05 GMT
      grafana-trace-id:
      - 4215819a00f8cb5283448141feae6acf
      mise-correlation-id:
      - bc292e62-9806-4316-a115-8c23d311d911
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504446.655.29.714081|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":2,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rJx2nCTfSGuKFUGw+4qGyQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:05 GMT
      grafana-trace-id:
      - af2663a6a271c4bc0c4bdaa750c823a7
      mise-correlation-id:
      - 3087e86f-b31b-40fb-914c-8578e40d8919
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504446.943.27.765180|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":8,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-86He+2jsLPznGHrcXvjWgw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:06 GMT
      grafana-trace-id:
      - c3f7faaf4cdffbfc4a4ea9c61cf7c8e2
      mise-correlation-id:
      - ed4c9a23-8ccc-407f-9298-ed4b4ac3fb27
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504447.192.29.959813|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Data Explorer Cluster Resource overview,
        key mettrics, usage, tables, cache and ingestion.","editable":true,"id":9,"links":[],"panels":[{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"title":"Overview","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Keep
        Alive (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":3,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"CPU
        (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":6,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Utilization (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":9,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Latency (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":12,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Cache
        Utilization (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":15,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        Ingestions (#)","type":"stat"},{"datasource":"$ds","description":"The aggregated
        usage in the cluster, out of the total used CPU and memory. To see more details,
        go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"showHeader":true},"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":2,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":3,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Unique
        user count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"title":"Key
        Metrics","type":"row"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":20,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Keep
        Alive","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":21,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":22,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cache
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":23,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Instance
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":26},"hiddenSeries":false,"id":24,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Concurrent
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":26},"hiddenSeries":false,"id":25,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query
        Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":26},"hiddenSeries":false,"id":26,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Commands","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":26},"hiddenSeries":false,"id":27,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":36},"hiddenSeries":false,"id":28,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":36},"hiddenSeries":false,"id":29,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":36},"hiddenSeries":false,"id":30,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":36},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Volume","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":32,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Data Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":46},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":46},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Request Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":46},"hiddenSeries":false,"id":35,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":56},"hiddenSeries":false,"id":36,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Events
        Processed","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":56},"hiddenSeries":false,"id":37,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discovery
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"title":"Usage","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals and applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Queries
        and top commands by command type","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Changes
        in query count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Failed
        queries","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":79},"hiddenSeries":false,"id":47,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":79},"hiddenSeries":false,"id":48,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":79},"hiddenSeries":false,"id":49,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":89},"hiddenSeries":false,"id":51,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":89},"hiddenSeries":false,"id":52,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":89},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":99},"hiddenSeries":false,"id":53,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries
        + command count by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":99},"hiddenSeries":false,"id":54,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":99},"hiddenSeries":false,"id":55,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Command
        + query count by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        memory by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        CPU by workload group","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"title":"Tables","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"  Table
        details","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":117},"hiddenSeries":false,"id":62,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by row count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":117},"hiddenSeries":false,"id":63,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by hot cache size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":127},"hiddenSeries":false,"id":64,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":127},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"title":"Cache","type":"row"},{"datasource":"$ds","description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Table
        usage details","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"title":"Ingestion","type":"row"},{"datasource":"$ds","description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        ingestions by table","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":8,"y":143},"hiddenSeries":false,"id":74,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Stage
        latency (accumulative latency)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":16,"y":143},"hiddenSeries":false,"id":75,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        Processed Successfuly","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"$ds","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"workspaces()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"workspaces()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '166633'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-U+a7QD+MnFknHi8v9MSFlg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:06 GMT
      grafana-trace-id:
      - 177a18b5fb3762b091f13014cb46c046
      mise-correlation-id:
      - ac53b1ef-e4c1-4c3f-9f53-02aafc254885
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504447.431.28.996857|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"fe1j3savseyv4a\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/fe1j3savseyv4a/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"id\":10,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":19,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        Over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"ms\"},\"overrides\":[]},\"fill\":0,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"connected\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Overall
        Latency\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"ms\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"hiddenSeries\":false,\"id\":17,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Request
        Types over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"2xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Successes
        (2xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"4xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Failures
        (4xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"hiddenSeries\":false,\"id\":6,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"429\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Throttling
        (429)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"401\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"403\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":3,\"y\":26},\"hiddenSeries\":false,\"id\":35,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Success
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":10,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"value\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":13,\"y\":26},\"hiddenSeries\":false,\"id\":36,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"All
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":27,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceGroups($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":\"ResourceGroups($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceNames($sub,
        $rg, $ns)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":\"ResourceNames($sub,
        $rg, $ns)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"Workspaces($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":\"Workspaces($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '37723'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-v7LjWfjtXcGkB+T/9uzHvw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:06 GMT
      grafana-trace-id:
      - 91bae3c4ef7325fd03f2d6cbe99faa62
      mise-correlation-id:
      - 4a0f3f5b-49bf-4a5a-87b9-11b0f232ff12
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504447.69.29.790403|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"fe1j3savseyv4a\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/fe1j3savseyv4a/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":11,\"iteration\":1620257813794,\"links\":[],\"panels\":[{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":0,\"y\":1},\"id\":7,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":3,\"y\":1},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":6,\"y\":1},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":9,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":12,\"y\":1},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":15,\"y\":1},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":5},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by storage type\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":5},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"alignAsTable\":false,\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"rightSide\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by API Name\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":14},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"multi\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Capacity
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":14},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":23},\"id\":52,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":24},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":24},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":30},\"id\":20,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":30},\"id\":22,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":38},\"id\":24,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":38},\"id\":26,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":46},\"id\":50,\"panels\":[],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":47},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":47},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"lcd-gauge\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":53},\"id\":32,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":64},\"id\":48,\"panels\":[],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":65},\"id\":34,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.displayMode\",\"value\":\"color-background\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":73},\"id\":36,\"maxDataPoints\":1,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"percent\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":73},\"hiddenSeries\":false,\"id\":38,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability
        Trend\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":81},\"id\":46,\"panels\":[],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":82},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"decbytes\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":90},\"hiddenSeries\":false,\"id\":42,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":1,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Storage
        capacity\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"decbytes\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":90},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":27,\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123790'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pVxORHLTrxS9eeA3tf8WmQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:07 GMT
      grafana-trace-id:
      - 78d2e4a7b237476c927570daf0f22c82
      mise-correlation-id:
      - 701b3f2c-56da-4ab2-82fb-7169c25dfe76
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504447.966.28.828850|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":3,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-pvmxW5hvionZHDEexmMg8w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:07 GMT
      grafana-trace-id:
      - 3cb93181fe7d5f5a9a8bb9777a07430f
      mise-correlation-id:
      - e87cbae3-0e5c-4653-99f5-7657cb5e46a9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504448.236.30.710306|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117797'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Lyvy2qGnGMuGF5e3KfzZCA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:07 GMT
      grafana-trace-id:
      - 5bebf36582bd8429ac3b8834c9715dcb
      mise-correlation-id:
      - 0da6dcca-3595-4ac9-b9a2-7ef6fb6ed1df
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504448.519.29.442560|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":7,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79655'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-fVMXzQ2WVfRy12pH/6nXiQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:07 GMT
      grafana-trace-id:
      - 89d1551a1b0e863cbd6546a3cd227424
      mise-correlation-id:
      - a5f9154b-ea5c-4f8c-9a32-d8a12e3bd3fb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504448.806.29.937625|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":26,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-kox9Os8NRx3qNRfbsScIfw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:08 GMT
      grafana-trace-id:
      - 9834826dc8133c1bfcfe4db53fc81841
      mise-correlation-id:
      - 48ebcfdf-88f6-4882-80de-5e23da83d847
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504449.042.27.138537|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"de1j3sc2xntvkf\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zhogEI2vEBstr/FMLWOT8g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:08 GMT
      grafana-trace-id:
      - 75b583468ccde90e637f3b51a00242fa
      mise-correlation-id:
      - 547df784-43ed-4ee6-8ef0-a961c450c5d0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504449.273.26.418761|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"de1j3sd0fssu8a\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-qo09Thb7s4GrggWtMhv2VA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:08 GMT
      grafana-trace-id:
      - 1096da45f6a6a336b91acb6f578c99d8
      mise-correlation-id:
      - 705f8120-e91f-41bb-a078-4d9e52aff71f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504449.523.28.502073|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":17,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-9zbwmg6CYo42m2JpVlRJwQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:08 GMT
      grafana-trace-id:
      - de1c4299cc658c7261eb73f44e8e3b24
      mise-correlation-id:
      - ce8a4e54-6a82-4dc4-86fb-f256e995aabf
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504449.793.28.812428|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":16,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ftIM7FTKtMVk2Q89Mw9uZg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:09 GMT
      grafana-trace-id:
      - bd1235e5f759329344cf7fe2eb6ca22a
      mise-correlation-id:
      - 45e6379e-b220-4e8b-8b85-1d1930398ccc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504450.055.29.11106|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":27,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-rl/7OROX0yUKe058yTt7Sw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:09 GMT
      grafana-trace-id:
      - bc3746fc312efdf0d70ae7ace170d3c5
      mise-correlation-id:
      - 6a5c6246-b779-4c2a-a326-abefbb9d00eb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504450.307.29.385716|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-JP3mVWiODy35PaptRAIECw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:09 GMT
      grafana-trace-id:
      - 6bfa5da4232d303930033c801abd845f
      mise-correlation-id:
      - 4841ec15-6a0a-448e-a744-2ab29362d470
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504450.578.29.382533|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ahPQePrUnEMaaDoFDyJ4YA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:09 GMT
      grafana-trace-id:
      - ea726f615fa8e67a9158382cc0a25d08
      mise-correlation-id:
      - 98a95fb6-fce4-4f9a-8020-55a0ecc22d31
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504450.809.27.820234|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-EHmddb4Sis8bwFJjmVyx6Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:10 GMT
      grafana-trace-id:
      - bc815ef39a62f514e7bedfd7e83f584d
      mise-correlation-id:
      - e57fdd40-0ed1-4fa7-9b79-2e683fd68adf
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504451.064.30.405345|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":19,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-mJcG2dR2AfrwYcREDQPlJA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:10 GMT
      grafana-trace-id:
      - 95b7b1c74d65ab153a6aef1d15b8b0b8
      mise-correlation-id:
      - 11a20988-dd1f-4ee8-92ef-effdf84f2eb1
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504451.284.29.995040|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"fe1j3sc7xgirkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/fe1j3sc7xgirkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":22,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-8Ct+ikFQg9huNqGAZ7YVbw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:10 GMT
      grafana-trace-id:
      - 2ea7404615bc134d268261396a707720
      mise-correlation-id:
      - 58542bc9-f6a8-4085-9850-e6d49294b254
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504451.542.26.61490|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":23,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-JexNZ2vWn7sdrPB4NwTWsQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:10 GMT
      grafana-trace-id:
      - 4661863a4095d627414315ee0e1c3d7a
      mise-correlation-id:
      - 99f34b6a-de14-4958-8d19-77bddc43773d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504451.8.29.418810|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":21,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WvHH9HGviZxrL8Es/pg9QQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:11 GMT
      grafana-trace-id:
      - 7ea1690ad7e7752eaf50c9e5bd92e23d
      mise-correlation-id:
      - b444fee9-1864-4ae5-b45d-7b29e7c470dc
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504452.079.27.237739|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:56Z","updated":"2024-10-21T09:53:56Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":39,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVd","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZQZ5nwAAt5+g+hk731kyWQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:11 GMT
      grafana-trace-id:
      - 2337e499b9cb2619dddc9f28de7b103d
      mise-correlation-id:
      - 274c6bb1-f836-40d5-9814-b922bad83887
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504452.355.29.634679|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"bcad9291b39e2d706a57893b7ef3af8e"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-wQo9xexW51dJcw+sOTXEQw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:11 GMT
      grafana-trace-id:
      - bcad9291b39e2d706a57893b7ef3af8e
      mise-correlation-id:
      - dca16a9a-36c3-4063-904b-e032b560f0d9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504452.626.29.996750|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVd/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-10-21T09:53:56Z", "updated":
      "2024-10-21T09:53:56Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 1, "hasAcl": false, "isFolder": false, "folderId": 0, "folderUid":
      "", "folderTitle": "General", "folderUrl": "", "provisioned": false, "provisionedExternalId":
      "", "annotationsPermissions": {"dashboard": {"canAdd": true, "canEdit": true,
      "canDelete": true}, "organization": {"canAdd": true, "canEdit": true, "canDelete":
      true}}}, "dashboard": {"panels": [], "title": "Test Dashboard", "uid": "mg2OAlTVd",
      "version": 1}, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '803'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":33,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVd","url":"/d/mg2OAlTVd/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-zBUcVk1nWuJ5/GIB3qKvsQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:11 GMT
      grafana-trace-id:
      - 372c3cd8977f5bc2ae9f07a38000625e
      mise-correlation-id:
      - 446ad373-f323-42a8-8c30-a6dcab66c72c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504452.885.27.395684|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:41Z","updated":"2024-10-21T09:53:54Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Y+gUBU7OHcUr1IAGSovyFw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:12 GMT
      grafana-trace-id:
      - 1607e88ca357294dd407e788b721c82f
      mise-correlation-id:
      - 092f7f5f-a5a7-44e5-8bea-95f8153831cd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504453.192.28.53210|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"a4478a5f3e1a9a86bb0e922bb1870b5f"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-DIWa1olwrusjhylBPxLvBg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:12 GMT
      grafana-trace-id:
      - a4478a5f3e1a9a86bb0e922bb1870b5f
      mise-correlation-id:
      - 65ca3bfd-4ae7-4d91-93af-b49b3c06ac23
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504453.442.29.319764|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVa/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-10-21T09:53:41Z", "updated":
      "2024-10-21T09:53:54Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 2, "hasAcl": false, "isFolder": false, "folderId": 36, "folderUid":
      "ae1j483j9xuyod", "folderTitle": "Test Folder", "folderUrl": "/dashboards/f/ae1j483j9xuyod/test-folder",
      "provisioned": false, "provisionedExternalId": "", "annotationsPermissions":
      {"dashboard": {"canAdd": true, "canEdit": true, "canDelete": true}, "organization":
      {"canAdd": true, "canEdit": true, "canDelete": true}}}, "dashboard": {"panels":
      [], "title": "Test Dashboard", "uid": "mg2OAlTVa", "version": 2}, "folderUid":
      "ae1j483j9xuyod", "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '893'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":34,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-+ti1z5RwNEEBwPHYG6TV1A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:12 GMT
      grafana-trace-id:
      - 9ec9639f06803a13414858bcaacc7f45
      mise-correlation-id:
      - cc8e11e2-c6d1-4a05-b442-015ae77e476f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504453.712.27.739517|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:42Z","updated":"2024-10-21T09:53:55Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":38,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Yil8pRA1ZHJotvvaYRH7AA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:13 GMT
      grafana-trace-id:
      - fa9273b045d21e80071709600a5cbcfb
      mise-correlation-id:
      - 19d625a7-f603-4d55-bc03-7d647b3bd8c9
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504454.012.26.35151|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"c285fe36c06838438edcecdc28e3a39a"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TKnlwpXWWvqMqCSRG7WjiQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:13 GMT
      grafana-trace-id:
      - c285fe36c06838438edcecdc28e3a39a
      mise-correlation-id:
      - 6743e972-c99d-4074-9b5b-bcd8ff98dce2
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504454.265.28.350248|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard2", "url": "/d/mg2OAlTVc/test-dashboard2",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-10-21T09:53:42Z", "updated":
      "2024-10-21T09:53:55Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 2, "hasAcl": false, "isFolder": false, "folderId": 36, "folderUid":
      "ae1j483j9xuyod", "folderTitle": "Test Folder", "folderUrl": "/dashboards/f/ae1j483j9xuyod/test-folder",
      "provisioned": false, "provisionedExternalId": "", "annotationsPermissions":
      {"dashboard": {"canAdd": true, "canEdit": true, "canDelete": true}, "organization":
      {"canAdd": true, "canEdit": true, "canDelete": true}}}, "dashboard": {"panels":
      [], "title": "Test Dashboard2", "uid": "mg2OAlTVc", "version": 2}, "folderUid":
      "ae1j483j9xuyod", "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '896'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":35,"slug":"test-dashboard2","status":"success","uid":"mg2OAlTVc","url":"/d/mg2OAlTVc/test-dashboard2","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '149'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-eWNLXuZ6KaVOyoxWFDaFdA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:13 GMT
      grafana-trace-id:
      - 6b788c5cfdd8f23e0784e7047411ba0d
      mise-correlation-id:
      - c200f248-6de6-4618-9a66-47b81116b9ab
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504454.482.27.37681|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":20,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vmd00asPWCmOpTgpAWWIxw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:13 GMT
      grafana-trace-id:
      - fd2692973cd122a2a225d013ef14a835
      mise-correlation-id:
      - c296fa2a-8a09-4d6c-aaee-af9e69e0b7f8
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504454.782.28.299748|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/folders/Test%20Folder
  response:
    body:
      string: '{"message":"folder not found","status":"not-found"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '51'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-iKi0kaZeVAPWR40tDnIKUQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:14 GMT
      grafana-trace-id:
      - bb82a7e0c58367c43481a8d4710795a4
      mise-correlation-id:
      - 09cd41c4-4b25-4655-9ff0-13069f394a07
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504455.594.29.158334|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j403tv3rb4f","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"ee1j401ncao00e","title":"Azure Monitor"},{"id":14,"uid":"ae1j40330p1j4f","title":"Geneva"},{"id":12,"uid":"fe1j402xef9j4d","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-5P6M+G2ZvrZ70GMfpSWuKA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:14 GMT
      grafana-trace-id:
      - 55779ad791d8f46d60968dae89e7cf95
      mise-correlation-id:
      - ab23a579-cbdb-4296-9b36-248616cb30b0
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504455.854.28.352253|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:54:12Z","updated":"2024-10-21T09:54:12Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":32,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":34,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1Hm9AusmrWACVB1VyB7VvA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:15 GMT
      grafana-trace-id:
      - c1d100a3ac16db73bf0fa0d664927a41
      mise-correlation-id:
      - 4525b8e6-3b6e-4ad1-9d73-129e7529ae8c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504456.468.28.332530|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:54:11Z","updated":"2024-10-21T09:54:11Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":33,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVd","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4VhhAN6EHMmHZdARXPFjKg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:16 GMT
      grafana-trace-id:
      - 6cc5261f9b94e499dcbc85931552b72c
      mise-correlation-id:
      - 2bafb71f-be65-4c7c-9155-2fb05d7cf967
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504457.248.28.62257|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"id":34,"message":"Dashboard Test Dashboard deleted","title":"Test
        Dashboard"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-3j420CDATa9YIkptdzDi6A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:16 GMT
      grafana-trace-id:
      - 0505062bdeeca291da1b4d9269a3b1a2
      mise-correlation-id:
      - 42920b5e-0c79-4860-a324-096aa0beb63d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504457.846.28.479618|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"id":35,"message":"Dashboard Test Dashboard2 deleted","title":"Test
        Dashboard2"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '81'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Ay7rJGJDRrQ0P0+IfteIsA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:17 GMT
      grafana-trace-id:
      - 077fee7c39bef416b2e8c26ed7e554f9
      mise-correlation-id:
      - 7950483e-ba78-45a7-aa5b-6b3ca108a40f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504458.449.26.308815|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:17 GMT
      grafana-trace-id:
      - 19e2e8582037a5b03819855307022c8d
      mise-correlation-id:
      - 06737e4f-069f-4b1f-9682-b8c73b150dcb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504458.977.28.719664|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/health
  response:
    body:
      string: "{\n  \"commit\": \"ac358f3e561c56e9e5e01d315fd306e01a8aadc5\",\n  \"database\":
        \"ok\",\n  \"enterpriseCommit\": \"b93c5949c399ecd18d88492a7e7928dcc92f9f72\",\n
        \ \"version\": \"10.4.7\"\n}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '167'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:18 GMT
      grafana-trace-id:
      - 41f54a23166ba9ea6b6da533c50fb14b
      mise-correlation-id:
      - bcdb29b7-27f9-4695-8d52-b30839df0b44
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504459.167.28.59331|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j3sd0fssu8a","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"fe1j3savseyv4a","title":"Azure Monitor"},{"id":14,"uid":"fe1j3sc7xgirkb","title":"Geneva"},{"id":12,"uid":"de1j3sc2xntvkf","title":"Microsoft
        Defender for Cloud"},{"id":36,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-CjGg9oSx7cNiwM+UkhamiA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:18 GMT
      grafana-trace-id:
      - 6f61e72f1ec4aef7595aa84c16b03a14
      mise-correlation-id:
      - 1d35dd65-5672-4abe-ac91-89fe3453a532
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504459.42.27.329511|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/folders
  response:
    body:
      string: '[{"id":28,"uid":"de1j403tv3rb4f","title":"Azure Kubernetes Service
        Monitoring"},{"id":1,"uid":"ee1j401ncao00e","title":"Azure Monitor"},{"id":14,"uid":"ae1j40330p1j4f","title":"Geneva"},{"id":12,"uid":"fe1j402xef9j4d","title":"Microsoft
        Defender for Cloud"},{"id":32,"uid":"ae1j483j9xuyod","title":"Test Folder"}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '313'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-nu2LNmqKSsu99ocpK9+qbg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:18 GMT
      grafana-trace-id:
      - 8156dced9bcffc1f4c9d7d79b774fe6b
      mise-correlation-id:
      - 1ab18814-1591-4555-b501-379aedc4b711
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504459.673.27.123000|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2005'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/ESHyAHWTvFu9pQRwUfHEw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:18 GMT
      grafana-trace-id:
      - c29fdfe83c0d8538feecce5e6455fb8e
      mise-correlation-id:
      - cfa13f83-e46c-414e-a4d5-1e555f551e1d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504459.915.30.347220|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/datasources
  response:
    body:
      string: '[{"id":1,"uid":"azure-monitor-oob","orgId":1,"name":"Azure Monitor","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":true,"jsonData":{"azureAuthType":"msi","subscriptionId":"D8AC4F1D-71CA-40FE-A98C-49BCF2F20130"},"readOnly":false},{"id":4,"uid":"Geneva","orgId":1,"name":"Geneva
        Datasource","type":"geneva-datasource","typeName":"Geneva Datasource","typeLogoUrl":"public/plugins/geneva-datasource/img/logo.svg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"oauthPassThru":true},"readOnly":false},{"id":2,"uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f","orgId":1,"name":"Geneva
        SLI Data","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://genevaslidatafollower.westcentralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"slihelper","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":3,"uid":"f6364b78-a58a-4fcd-8fae-8cd0d3ddc448","orgId":1,"name":"IcM
        via ADX","type":"grafana-azure-data-explorer-datasource","typeName":"Azure
        Data Explorer Datasource","typeLogoUrl":"public/plugins/grafana-azure-data-explorer-datasource/img/logo.png","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureCredentials":{"authType":"currentuser"},"clusterUrl":"https://icmclusterfollower.centralus.kusto.windows.net","dataConsistency":"strongconsistency","defaultDatabase":"IcMDataWarehouse","defaultEditorMode":"visual","oauthPassThru":true},"readOnly":false},{"id":6,"uid":"da714998-ca29-4adc-851b-1bd93371cbc6","orgId":1,"name":"Test
        Azure Monitor Data Source","type":"grafana-azure-monitor-datasource","typeName":"Azure
        Monitor","typeLogoUrl":"public/app/plugins/datasource/azuremonitor/img/logo.jpg","access":"proxy","url":"","user":"","database":"","basicAuth":false,"isDefault":false,"jsonData":{"azureAuthType":"msi","subscriptionId":""},"readOnly":false}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-a09TNMf8CO8P9nT/qQ0FsA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:19 GMT
      grafana-trace-id:
      - 114a0c64e5d31ed93c305b5fe0eab235
      mise-correlation-id:
      - ef2065b5-2744-4f72-b442-a5ace2635a66
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504460.17.28.62803|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":15,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":24,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":25,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":4,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":6,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":2,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":8,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":9,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":10,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":11,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":5,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":7,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/Azure Monitor","sortMeta":0},{"id":26,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"de1j3sc2xntvkf","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/de1j3sc2xntvkf/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":16,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":27,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":18,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":19,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":22,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":23,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":21,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0},{"id":39,"uid":"mg2OAlTVd","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":38,"uid":"mg2OAlTVc","title":"Test
        Dashboard2","uri":"db/test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":20,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10520'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-A0XSyJ2z8VcGUlJVgXNG8g';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:19 GMT
      grafana-trace-id:
      - 2247ff3829c618d5801eb32c8a8e06a9
      mise-correlation-id:
      - dab8f3f8-d39e-49be-aaf4-07b59a6f6aab
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504460.385.29.916028|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-QilCSbqjnYkQYJqtkkDq3A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:19 GMT
      grafana-trace-id:
      - 5c5c5d29b648bf6dfc25c6c5bc8e9784
      mise-correlation-id:
      - 714762a5-f7c2-4045-8432-da6d632cbb2f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504460.579.27.728240|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/OSBzdgnnz
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"agent-qos\",\"url\":\"/d/OSBzdgnnz/agent-qos\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"fe1j3sc7xgirkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/fe1j3sc7xgirkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"agentQoS.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"type\":\"dashboard\"}]},\"description\":\"\",\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":15,\"links\":[],\"panels\":[{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n   \\u003cp\\u003eThis dashboard helps
        understand and diagnose monitoring agent health. It gives an overview of:\\u003cbr\\u003e\\u003c/p\\u003e\\n
        \  \\u003cul\\u003e\\n      \\u003cli\\u003eData Quality (Data loss and latency
        in monitoring agent)\\u003c/li\\u003e\\n      \\u003cli\\u003eResource usage
        (Monitoring Agent memory and CPU usage)\\u003c/li\\u003e\\n   \\u003c/ul\\u003e\\n
        \  \\u003cp\\u003eFor an overview of the Monitoring Agent \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/overview\\\"
        target=\\\"_blank\\\"\\u003eplease click here\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"What
        is this dashboard?\",\"type\":\"text\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":12,\"x\":12,\"y\":0},\"id\":4,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em\\\"\\u003e\\n    \\u003cp\\u003e\\u003cspan style=\\\"color:#C97777\\\"\\u003e\\u003cstrong\\u003eNot
        seeing data in this dashboard?\\u003c/strong\\u003e\\u003c/span\\u003e\\u003c/p\\u003e\\n
        \   \\u003col\\u003e\\n        \\u003cli\\u003e\\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\"\\u003eLearn about Agent Metrics\\u003c/a\\u003e.\\u003c/li\\u003e\\n
        \       \\u003cli\\u003eDepending on where you have created an account, go
        to \\n            \\u003ca data-cke-saved-href=\\\"\\\" href=\\\"https://jarvis-west.dc.ad.msft.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-prod\\u003c/a\\u003e or \\u003ca data-cke-saved-href=\\\"\\\"
        href=\\\"https://jarvis-west-int.cloudapp.net/settings/mds?page=settings\\u0026mode=mds\\\"
        target=\\\"_blank\\\"\\u003ejarvis-int\\u003c/a\\u003e, select your environment
        and account, and select the most recent config id to open new Config Builder
        experience.\\u003c/li\\u003e\\n        \\u003cli\\u003eFollow the steps as
        mentioned \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics\\\"
        target=\\\"_blank\\\"\\u003ehere\\u003c/a\\u003e to configure Agent metrics.\\u003c/li\\u003e\\n
        \   \\u003c/ol\\u003e\\n    \\u003cp\\u003eFor more information, review \\u003ca
        data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos\\\"
        target=\\\"_blank\\\"\\u003eQoS metric\\u003c/a\\u003e and \\u003ca data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        href=\\\"https://eng.ms/docs/products/geneva/collect/manage/agentmetrics#cost-metrics\\\"
        target=\\\"_blank\\\"\\u003eresource cost metric\\u003c/a\\u003e documentation.\\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"How
        to activate this dashboard?\",\"type\":\"text\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":10,\"w\":12,\"x\":0,\"y\":6},\"id\":6,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        delay in Seconds\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"DataDelayInSeconds\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project Average=replacenulls(Average,0) | zoom avg=avg(Average) by 1h\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Latency\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":10,\"w\":12,\"x\":12,\"y\":6},\"id\":8,\"options\":{\"content\":\"\\u003cdiv\\u003e\\n
        \   \\u003cp\\u003e\\n        \u200B\\u003cstrong\\u003eData Latency\\u003c/strong\\u003e:
        The delay from when the Monitoring Agent receives all of the data it schedules
        to upload in a batch and when it uploads that batch of data to the pipeline.
        See the\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           agent metrics help page\\n        \\u003c/a\\u003e\\n        for
        more information on how to interpret this chart.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        \\u003cstrong\\u003eRetries due to Throttling:\\u003c/strong\\u003e\\n
        \       A high value for this metric means many data upload requests or Geneva
        pipeline notification requests from the Monitoring Agent are being throttled
        and retried.\\n    \\u003c/p\\u003e\\n    \\u003cp\\u003e\\u003cstrong\\u003eData
        and Notification Failures:\\u003c/strong\\u003e A high value for this metric
        means that MA failed to upload a batch of event data or the notifications
        that the data was pushed to the pipeline.\\u003c/p\\u003e\\n    \\u003cp\\u003e\\n
        \       \\u003cstrong\\u003eEvents Dropped: \\u003c/strong\\u003eThe number
        of events lost. See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/agentqos#agent-metrics\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        for more details.\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the \\u003ca
        href=\\\"change this\\\" target=\\\"_blank\\\" data-cke-saved-href=\\\"change
        this\\\"\\u003ewiki\\u003c/a\\u003e\\n        for guidance on many storage
        accounts and event hubs you need.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Data
        Quality Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":100,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"light-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload retries\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"rgba(255,
        202, 104, 1)\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":9,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        retries\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload retries\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"FailedUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload retries\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        and Notification Throttling\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"Count\",\"axisPlacement\":\"auto\",\"barAlignment\":-1,\"drawStyle\":\"bars\",\"fillOpacity\":90,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"orange\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Notification
        failures\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Data
        upload failure\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":11,\"w\":8,\"x\":9,\"y\":16},\"id\":20,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Notification
        failures\",\"dimension\":\"\",\"hide\":false,\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutNotificationTask\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Notification
        failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true},{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Data
        upload failure\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"TimedoutUploadTasks\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom Sum=sum(Sum) by 1d\",\"refId\":\"Data
        upload failures\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Data
        Upload and Pipeline Notification Failures\",\"transformations\":[{\"id\":\"groupBy\",\"options\":{\"fields\":{\"time\":{\"aggregations\":[],\"operation\":null}}}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-blue\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":11,\"w\":7,\"x\":17,\"y\":16},\"id\":16,\"maxDataPoints\":null,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Events
        Dropped\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"EventsDropped\\\").samplingTypes(\\\"Sum\\\").preaggregate(\\\"Total\\\")
        | project Sum=replacenulls(Sum,0) | zoom avg=avg(Sum) by 1h\",\"refId\":\"Events
        Dropped\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"title\":\"Events
        Dropped\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"light-yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"semi-dark-green\",\"value\":null},{\"color\":\"light-yellow\",\"value\":65},{\"color\":\"semi-dark-red\",\"value\":85}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":27},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"CPU
        Usage (fraction)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"CpuUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project cpuUsage=Average | zoom cpuUsage=avg(cpuUsage) by 1h\",\"refId\":\"CPU
        Usage\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (CPU)\",\"transformations\":[{\"id\":\"calculateField\",\"options\":{\"alias\":\"CPU
        Usage (%)\",\"binary\":{\"left\":\"CPU Usage (fraction)\",\"operator\":\"*\",\"reducer\":\"sum\",\"right\":\"100\"},\"mode\":\"binary\",\"reduce\":{\"include\":[\"CPU
        Usage (fraction)\"],\"reducer\":\"last\"},\"replaceFields\":true}}],\"type\":\"timeseries\"},{\"datasource\":\"Geneva
        Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"MB\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":50,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"area\"}},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":10000}]},\"unit\":\"none\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":27},\"id\":19,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.0.6\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"Memory
        Usage (MB)\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MemoryUsage\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"Total\\\")
        | project MemoryUsage=Average/(1024*1024)\",\"refId\":\"A\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"MA
        Resource Usage (Memory)\",\"type\":\"timeseries\"},{\"datasource\":null,\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":35},\"id\":10,\"options\":{\"content\":\"\\u003cdiv
        style=\\\"padding: 1em;\\\"\\u003e\\n    \\u003cp\\u003e\\n        These metrics
        help you determine what MA features are taking the most time within the MA
        process. You can track which MA data collection operations are the most costly
        and which event tasks are the most expensive in terms of time\\n        they
        take to execute. Common causes of costly events include derived events that
        have expensive queries or push a\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           large amount of data to storage\\n        \\u003c/a\\u003e\\n
        \   \\u003c/p\\u003e\\n    \\u003cp\\u003e\\n        Please review the\\n
        \       \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/advanced/windowsdatacosts\\\"\\u003e\\n
        \           cost metrics help page\\n        \\u003c/a\\u003e\\n        for
        a more detailed description of how the metrics are calculated, operation definitions,
        and how to further drill down to debug why an event is expensive.\\n    \\u003c/p\\u003e\\n
        \   \\u003cp\\u003e\\n        See\\n        \\u003ca href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"
        target=\\\"_blank\\\" data-cke-saved-href=\\\"https://eng.ms/docs/products/geneva/collect/manage/costmetricconfig\\\"\\u003e\\n
        \           this help page\\n        \\u003c/a\\u003e\\n        if you do
        not see data in the charts to your left.\\n    \\u003c/p\\u003e\\n\\u003c/div\\u003e\\n\",\"mode\":\"html\"},\"pluginVersion\":\"8.0.6\",\"title\":\"Costly
        Events Help\",\"type\":\"text\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":41},\"id\":22,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{Operation}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaOperationCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerOperation\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| zoom Average=avg(Average)
        by 5m\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        Costly Operations\",\"type\":\"piechart\"},{\"datasource\":\"Geneva Datasource\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"mappings\":[]},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":41},\"id\":23,\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{EventName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"Monitoring
        Agent\",\"queryText\":\"metric(\\\"MaEventCosts\\\").samplingTypes(\\\"Average\\\").preaggregate(\\\"AgentQOSPerEventName\\\")
        \\n| project Average=replacenulls(Average, 0) \\n| where avg(Average) \\u003e
        0\\n| top 10 by avg(Average) desc\",\"refId\":\"Costly Operations\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Costly
        Event Names\",\"type\":\"piechart\"}],\"refresh\":false,\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-7d\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Agent
        QoS\",\"uid\":\"OSBzdgnnz\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19960'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-utDf6jw/R6u2IhYSo+ckHw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:19 GMT
      grafana-trace-id:
      - 1fd6b1019eaa086e990504257f86a1aa
      mise-correlation-id:
      - 16bfec41-310d-4f4f-a993-63cf2fa844f6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504460.811.28.351145|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/54KhiZ7nz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"AKSLinuxSample.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":24,"links":[],"liveNow":false,"panels":[{"datasource":null,"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":6,"options":{"content":"This
        dashboard shows telemetry from the machine running the AKSGenevaSample Application.\n\u003cbr\u003e\nThe
        dashboard will contain data only if your service (AKSGenevaSample) is running
        and the Geneva Agent is set up correctly.\n\u003cbr\u003e\nTo set up a sample
        application and send telemetry to Geneva refer \n\u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003ethis
        documentation\u003c/a\u003e.\n\u003cbr\u003e\nTo learn more about running
        Geneva Monitoring to collect telemetry from AKS \u003ca href=\"https://eng.ms/docs/products/geneva/getting_started/environments/akslinux\"\u003esee
        here\u003c/a\u003e.","mode":"html"},"pluginVersion":"8.3.0-pre","title":"What
        is this dashboard?","type":"text"},{"datasource":"Geneva Datasource","description":"Average
        temperature of the machine where the Geneva Agent is running","fieldConfig":{"defaults":{"color":{"fixedColor":"super-light-yellow","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"yellow","value":35},{"color":"red","value":40}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":4},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Avg
        Node Temperature (F)","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Temperature\").samplingTypes(\"Average\").resolution(1m)","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Temperature of the Node","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        number of boot failures on the node","fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":2,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Failure"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Success"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":4},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"","backends":[],"customSeriesNaming":"Success","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Success\").samplingTypes(\"Count\").resolution(1m)","refId":"SuccessQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"","backends":[],"customSeriesNaming":"Failure","dimension":"","environment":"prod","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"","queryText":"metric(\"Boot
        Failure\").samplingTypes(\"Count\").resolution(1m)","refId":"FailureQuery","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Average
        Count of Boot Failures vs Success","type":"timeseries"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-30m","to":"now"},"timepicker":{},"timezone":"","title":"AKS
        Linux Sample Application","uid":"54KhiZ7nz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '5507'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Vu3vn5AVCe2oFwhf6bToUQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:20 GMT
      grafana-trace-id:
      - 5509d4ac3cf307126a1de2f3a5d235b6
      mise-correlation-id:
      - e145600f-965a-4e81-8dfb-7eda495fbe70
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504461.066.27.588748|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/6uRDjTNnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"app-detail","url":"/d/6uRDjTNnz/app-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"AppDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":25,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-GrYlRd"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":0,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":15,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"auto","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"ClusterName, AppName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,null,["Ok"]],"dimensionFilters":["AppName","ClusterName","HealthState"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"AppHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$clusterName\")
        and AppName in (\"$appName\") | project Count=replacenulls(Count, 0) | zoom
        Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Ok","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" and ClusterName
        in (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName} {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" and ClusterName in
        (\"$ClusterName\") and AppName in (\"$AppName\") | project Count=replacenulls(Count,
        0) | zoom Count=sum(Count) by 5m | top 40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Application
        health timeline","type":"state-timeline"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":true,"text":["None"],"value":[""]},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, AppHealthState,
        AppName)","description":"Application name in the cluster","error":null,"hide":0,"includeAll":false,"label":"App
        Name","multi":true,"name":"AppName","options":[],"query":"dimensionValues($account,
        ServiceFabric, AppHealthState, AppName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"App
        Detail","uid":"6uRDjTNnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '6138'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-U+0toA5mizmmJ3cFG0O2xA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:20 GMT
      grafana-trace-id:
      - 110f9da2c18a4aa833b925bc4be46771
      mise-correlation-id:
      - 6f414f21-57ec-4755-9126-3296d0437c44
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504461.747.27.422302|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/dyzn5SK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"v1Alerts.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"A
        summary of all alerts for the subscription and other filters selected","editable":true,"id":4,"links":[],"liveNow":false,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Total
        Alerts"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0\u0026var-sev=Sev1\u0026var-sev=Sev2\u0026var-sev=Sev3\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":0,"y":0},"id":4,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev)\r\n| summarize count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Total
        Alerts"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Critical"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev0"}]}]}]},"gridPos":{"h":4,"w":2,"x":2,"y":0},"id":15,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev0\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Critical"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"orange","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev1"}]}]}]},"gridPos":{"h":4,"w":2,"x":4,"y":0},"id":8,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev1\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Error"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev2"}]}]}]},"gridPos":{"h":4,"w":2,"x":6,"y":0},"id":10,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev2\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Warning"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Informational"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev3"}]}]}]},"gridPos":{"h":4,"w":2,"x":8,"y":0},"id":12,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev3\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Informational"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Verbose"},"properties":[{"id":"links","value":[{"targetBlank":false,"title":"","url":"d/dyzn5SK7z/azure-alert-consumption?${ds:queryparam}\u0026${sub:queryparam}\u0026${rg:queryparam}\u0026${__url_time_range}\u0026var-mc=Fired\u0026var-mc=Resolved\u0026var-as=New\u0026var-as=Acknowledged\u0026var-as=Closed\u0026var-sev=Sev4"}]}]}]},"gridPos":{"h":4,"w":2,"x":10,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"value_and_name"},"targets":[{"azureMonitor":{"dimensionFilters":[],"timeGrain":"auto"},"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        where type == \"microsoft.alertsmanagement/alerts\"\r\n| where todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| where tolower(subscriptionId) == tolower(\"$sub\")
        and properties.essentials.targetResourceGroup in~ ($rg) and properties.essentials.monitorCondition
        in~ ($mc)\r\nand properties.essentials.alertState in~ ($as) and properties.essentials.severity
        in~ ($sev) and properties.essentials.severity == \"Sev4\" \r\n| summarize
        count()"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"Verbose"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-BlYlRd"},"custom":{"align":"center","displayMode":"auto","filterable":true},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80.0002}]}},"overrides":[{"matcher":{"id":"byName","options":"Severity"},"properties":[{"id":"mappings","value":[{"options":{"\"Sev0\"":{"color":"red","index":4,"text":"Critical"},"\"Sev1\"":{"color":"orange","index":3,"text":"Error"},"\"Sev2\"":{"color":"yellow","index":2,"text":"Warning"},"\"Sev3\"":{"color":"blue","index":1,"text":"Informational"},"\"Sev4\"":{"color":"#8F3BB8","index":0,"text":"Verbose"}},"type":"value"}]},{"id":"custom.displayMode","value":"color-background-solid"}]},{"matcher":{"id":"byName","options":"Name"},"properties":[{"id":"custom.displayMode","value":"color-text"},{"id":"links","value":[{"targetBlank":true,"title":"test
        title","url":"https://ms.portal.azure.com/#blade/Microsoft_Azure_Monitoring/AlertDetailsTemplateBlade/alertId/%2Fsubscriptions%2F${sub}%2Fresourcegroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%2Fproviders%2FMicrosoft.AlertsManagement%2Falerts%2F${__data.fields[\"Alert
        ID\"]}"}]}]},{"matcher":{"id":"byName","options":"properties_essentials_monitorCondition"},"properties":[{"id":"mappings","value":[{"options":{"Fired":{"color":"orange","index":1},"Resolved":{"color":"green","index":0}},"type":"value"}]},{"id":"custom.displayMode","value":"basic"}]}]},"gridPos":{"h":16,"w":24,"x":0,"y":4},"id":2,"links":[],"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":0,"showHeader":true,"sortBy":[]},"targets":[{"azureResourceGraph":{"query":"alertsmanagementresources\r\n|
        join kind=leftouter (ResourceContainers | where type==''microsoft.resources/subscriptions''
        | project SubName=name, subscriptionId) on subscriptionId\r\n| where type
        == \"microsoft.alertsmanagement/alerts\"\r\n| where tolower(subscriptionId)
        == tolower(\"$sub\") and properties.essentials.targetResourceGroup in~ ($rg)
        and properties.essentials.monitorCondition in~ ($mc)\r\nand properties.essentials.alertState
        in~ ($as) and properties.essentials.severity in~ ($sev)\r\nand todatetime(properties.essentials.lastModifiedDateTime)
        \u003e= $__timeFrom and todatetime(properties.essentials.lastModifiedDateTime)
        \u003c= $__timeTo\r\n| parse id with * \"alerts/\" alertId\r\n| project name,
        properties.essentials.severity, tostring(properties.essentials.monitorCondition),
        \r\ntostring(properties.essentials.alertState), todatetime(properties.essentials.lastModifiedDateTime),
        tostring(properties.essentials.monitorService), alertId\r\n","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"insightsAnalytics":{"query":"","resultFormat":"time_series"},"queryType":"Azure
        Resource Graph","refId":"A","subscription":"","subscriptions":["$sub"]}],"title":"V1
        Alerts","transformations":[{"id":"organize","options":{"excludeByName":{"alertId":false},"indexByName":{"alertId":6,"name":0,"properties_essentials_alertState":3,"properties_essentials_lastModifiedDateTime":5,"properties_essentials_monitorCondition":2,"properties_essentials_monitorService":4,"properties_essentials_severity":1},"renameByName":{"alertId":"Alert
        ID","name":"Name","properties_essentials_alertState":"User Response","properties_essentials_lastModifiedDateTime":"Fired
        Time","properties_essentials_monitorCondition":"Alert Condition","properties_essentials_monitorService":"Monitor
        Service","properties_essentials_severity":"Severity"}}}],"transparent":true,"type":"table"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":["Fired","Resolved"],"value":["Fired","Resolved"]},"hide":0,"includeAll":false,"label":"Alert
        Condition","multi":true,"name":"mc","options":[{"selected":true,"text":"Fired","value":"Fired"},{"selected":true,"text":"Resolved","value":"Resolved"}],"query":"Fired,
        Resolved","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["New","Acknowledged","Closed"],"value":["New","Acknowledged","Closed"]},"hide":0,"includeAll":false,"label":"User
        Response","multi":true,"name":"as","options":[{"selected":true,"text":"New","value":"New"},{"selected":true,"text":"Acknowledged","value":"Acknowledged"},{"selected":true,"text":"Closed","value":"Closed"}],"query":"New,
        Acknowledged, Closed","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":["Critical","Error","Warning","Informational","Verbose"],"value":["Sev0","Sev1","Sev2","Sev3","Sev4"]},"hide":0,"includeAll":false,"label":"Severity","multi":true,"name":"sev","options":[{"selected":true,"text":"Critical","value":"Sev0"},{"selected":true,"text":"Error","value":"Sev1"},{"selected":true,"text":"Warning","value":"Sev2"},{"selected":true,"text":"Informational","value":"Sev3"},{"selected":true,"text":"Verbose","value":"Sev4"}],"query":"Critical
        : Sev0, Error : Sev1, Warning : Sev2, Informational : Sev3,  Verbose : Sev4","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{"hidden":false,"refresh_intervals":["30m","1h","12h","24h","3d","7d","30d"]},"title":"Azure
        / Alert Consumption","uid":"dyzn5SK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '18653'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-32MY8ikQJ6xHCUKgXrjHKA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:20 GMT
      grafana-trace-id:
      - 23e6a06bf044fb117e1b119820e5108d
      mise-correlation-id:
      - c093d830-e5c5-4a3e-af20-f0c72c70356f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504461.966.28.942751|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/Yo38mcvnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"appInsights.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"The dashboard provides
        insights of Azure Apps via different metrics for app monitoring through Application
        Insights.","editable":true,"id":6,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":52,"panels":[],"title":"Azure
        Portal Links","type":"row"},{"gridPos":{"h":3,"w":5,"x":0,"y":1},"id":10,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/overview\"
        target=\"_blank\"\u003e\n  \u003cdiv\u003e\n    \u003ch3 style=\"color: #a16feb\"\u003e
        ${res} \u003c/h1\u003e\n    \u003ch5 style=\"margin-bottom: 0px;\"\u003e Application
        Insights  \u003c/h5\u003e\n  \u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}]}]}]},"gridPos":{"h":3,"w":2,"x":5,"y":1},"id":40,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"vertical","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^Availability$/","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability","type":"stat"},{"gridPos":{"h":3,"w":4,"x":7,"y":1},"id":44,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#blade/AppInsightsExtension/ProactiveDetectionFeedBlade/ComponentId/%7B%22Name%22%3A%22${res}%22%2C%22SubscriptionId%22%3A%22${sub}%22%2C%22ResourceGroup%22%3A%22${rg}%22%7D/TimeContext/%7B%22durationMs%22%3A604800000%2C%22endTime%22%3Anull%2C%22createdTime%22%3A%222021-10-18T19%3A26%3A58.876Z%22%2C%22isInitialTime%22%3Atrue%2C%22grain%22%3A1%2C%22useDashboardTimeRange%22%3Afalse%7D\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #4d99b8; font-size:18px;\"\u003eSmart detection\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":11,"y":1},"id":46,"links":[],"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/quickPulse\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"color: #2272b9; font-size:18px;\"\u003eLive Metrics\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           \n           ","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":14,"y":1},"id":42,"options":{"content":"\u003ca
        style=\"color: inherit;\" href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/applicationMap\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 20px;\"\u003e\n  \u003ccenter\u003e\u003cp
        style=\"position:center; color: #ff8c00; font-size:18px\"\u003eApp map\u003c/p\u003e\u003c/center\u003e\n  \u003ccenter\u003e\u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n           ","mode":"html"},"targets":[],"type":"text"},{"collapsed":false,"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":54,"panels":[],"title":"Application
        Insights","type":"row"},{"gridPos":{"h":3,"w":4,"x":0,"y":5},"id":12,"options":{"content":"\u003ch1
        style=\"font-size: 20px; color:#73bf69;\"\u003e Usage \u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"${res}  |
        Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}]},{"id":"displayName","value":"Users"}]}]},"gridPos":{"h":3,"w":2,"x":4,"y":5},"id":48,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, 1m)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"B","subscription":"$sub","subscriptions":[]}],"transformations":[],"type":"stat"},{"gridPos":{"h":3,"w":4,"x":6,"y":5},"id":14,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#ec008c;\"\u003eReliability\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":10,"y":5},"id":36,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\"\u003e Failures \u003c/p\u003e\n  \u003cp
        style=\"margin-top: 0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":12,"y":5},"id":17,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#7e58ff;\"\u003eResponsiveness\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":3,"x":15,"y":5},"id":38,"links":[],"options":{"content":"\u003ca
        href=\"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"
        target=\"_blank\"\u003e\n\u003cdiv\u003e\n  \u003cp style=\"font-size:16px;
        margin-bottom:0px;margin-top:0px;\"\u003e Performance \u003c/p\u003e\n  \u003cp
        style=\"margin-top:0px;\"\u003e${res}\u003c/p\u003e\n\u003c/div\u003e\n\u003c/a\u003e\n","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":4,"x":18,"y":5},"id":18,"options":{"content":"\u003ch1
        style=\"font-size:20px; color:#3274d9;\"\u003eBrowser\u003c/h1\u003e","mode":"html"},"targets":[],"type":"text"},{"gridPos":{"h":3,"w":2,"x":22,"y":5},"id":50,"options":{"content":"\u003ca
        style=\"color: #ffffff;\" href=\"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/id/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/detailBlade/MetricsExplorerBlade/sourceExtension/AppInsightsExtension/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22v2charts%22%3A%5B%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Browsers%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22dependencies%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22dependencies%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22dependency%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Have%20AJAX%20calls%20been%20slow%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fcount%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22operation%2Fname%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22Has%20page%20view%20traffic%20changed%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-g2%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22When%20are%20script%20errors%20occurring%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%2C%22color%22%3A%22msportalfx-bgcolor-g0%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22pageViews%2Fduration%22%7D%2C%22name%22%3A%22pageViews%2Fduration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A4%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3Afalse%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20slowest%20pages%3F%22%7D%2C%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%2C%22sku%22%3A%7B%22name%22%3A%22${res}%22%7D%7D%2C%22metricVisualization%22%3A%7B%22resourceDisplayName%22%3A%22exceptions%2Fbrowser%22%2C%22color%22%3A%22msportalfx-bgcolor-d0%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%2Fkusto%22%2C%22aggregationType%22%3A1%7D%5D%2C%22visualization%22%3A%7B%22chartType%22%3A5%2C%22axisVisualization%22%3A%7B%22y%22%3A%7B%22isVisible%22%3Atrue%7D%7D%7D%2C%22grouping%22%3A%7B%22dimension%22%3A%22exception%2FproblemId%22%7D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%7B%22key%22%3A%22client%2Ftype%22%2C%22operator%22%3A0%2C%22values%22%3A%5B%22Browser%22%5D%7D%5D%7D%2C%22title%22%3A%22What%20are%20my%20most%20common%20script%20errors%3F%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A86400000%7D%2C%22grain%22%3A1%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D%7D%5D%7D/openInEditMode/\"
        target=\"_blank\"\u003e\n\u003cdiv style=\"padding-top: 35px; background-color:
        #3274d9; width: 100%; height: 100%\"\u003e\n  \u003ccenter\u003e\u003cp style=\"font-size:16px;
        margin-bottom:0px;\"\u003e Browsers \u003c/p\u003e\u003c/center\u003e\n\u003c/div\u003e\n\u003c/a\u003e","mode":"html"},"targets":[],"transparent":true,"type":"text"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e JSON Model. Edit as you''d like in your new copy
        by going to Settings \u003e Save as.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"users/count_unique"},"properties":[{"id":"displayName","value":"Users
        (Unique)"}]},{"matcher":{"id":"byName","options":"sessions/count_unique"},"properties":[{"id":"displayName","value":"Sessions
        (Unique)"},{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":6,"x":0,"y":8},"id":20,"interval":"60s","links":[{"targetBlank":true,"title":"${res}
        | Users","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"union\n    (traces\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (requests\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (pageViews\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (dependencies\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customEvents\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (availabilityResults\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (exceptions\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (customMetrics\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\n    (browserTimings\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\n| where
        notempty(user_Id)\n| summarize [''users/count_unique''] = dcount(user_Id)
        by bin(timestamp, $__interval)\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]},{"azureLogAnalytics":{"query":"union\r\n    (traces\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (requests\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (pageViews\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (dependencies\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customEvents\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (availabilityResults\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (exceptions\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (customMetrics\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo),\r\n    (browserTimings\r\n    |
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo)\r\n| where
        notempty(session_Id)\r\n| summarize [''sessions/count_unique''] = dcount(session_Id)
        by bin(timestamp, $__interval)\r\n| order by timestamp desc","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res","resultFormat":"time_series"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"B","subscription":""}],"title":"Users","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":6,"y":8},"id":2,"links":[{"targetBlank":true,"title":"${res}
        | Failures","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/failures"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Failed requests","subscription":"$sub","subscriptions":[]}],"title":"Failed
        requests","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":12,"y":8},"id":4,"links":[{"targetBlank":true,"title":"${res}
        | Performance","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"requests/duration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Server
        response time","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"semi-dark-blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":25,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":6,"x":18,"y":8},"id":6,"links":[{"targetBlank":true,"title":"${res}
        | Page Views","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Afalse%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22pageViews%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20views%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Count%20Page%20views%20for%20${res}%22%2C%22titleKind%22%3A1%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Afalse%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"pageViews/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Page
        Views","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":14,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":2,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"links":[],"mappings":[],"max":100,"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Availability"},"properties":[{"id":"links","value":[]}]}]},"gridPos":{"h":10,"w":6,"x":0,"y":17},"id":8,"links":[{"targetBlank":true,"title":"${res}
        | Availability","url":"https://portal.azure.com/#@${tenant}/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/availability"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/availabilityPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        availability","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[{"options":{"match":"null","result":{"index":0,"text":"0"}},"type":"special"}],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Server
        exceptions"},"properties":[{"id":"color","value":{"fixedColor":"#ec008c","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":6,"y":17},"id":24,"links":[{"targetBlank":true,"title":"${res}
        | Server exceptions and Dependency failures","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fserver%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Server%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22dependencies%2Ffailed%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Dependency%20failures%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Server%20exceptions%20and%20Dependency%20failures%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"exceptions/server","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Server Exceptions","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Count","alias":"Dependency
        failures","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"dependencies/failed","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Dependency failures","subscription":"$sub","subscriptions":[]}],"title":"Server
        exceptions and Dependency failures","transformations":[],"type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMax":-6,"axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":17},"id":28,"links":[{"targetBlank":true,"title":"${res}
        | Average processor and process CPU utilization","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessorCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Processor%20time%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessCpuPercentage%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20CPU%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20processor%20and%20process%20CPU%20utilization%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processorCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Processor","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processCpuPercentage","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Process CPU","subscription":"$sub","subscriptions":[]}],"title":"Average
        processor and process CPU utilization","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#5794F2","mode":"continuous-BlPu"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":16,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Page
        load network connect time"},"properties":[{"id":"color","value":{"fixedColor":"dark-blue","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Client
        processing time"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Send
        request time"},"properties":[{"id":"color","value":{"fixedColor":"purple","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Receiving
        response time"},"properties":[{"id":"color","value":{"fixedColor":"orange","mode":"fixed"}}]}]},"gridPos":{"h":10,"w":6,"x":18,"y":17},"id":32,"links":[{"targetBlank":true,"title":"${res}
        | Average page load time breakdown","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FnetworkDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Page%20load%20network%20connect%20time%22%2C%22color%22%3A%22%237E58FF%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FprocessingDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Client%20processing%20time%22%2C%22color%22%3A%22%2344F1C8%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FsendDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Send%20request%20time%22%2C%22color%22%3A%22%23EB9371%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%2C%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22browserTimings%2FreceiveDuration%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Receiving%20response%20time%22%2C%22color%22%3A%22%230672F1%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A3%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20page%20load%20time%20breakdown%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/networkDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Page load network connect time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/processingDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Client processing time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/sendDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Send request time","subscription":"$sub","subscriptions":[]},{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"browserTimings/receiveDuration","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"Receiving response time","subscription":"$sub","subscriptions":[]}],"title":"Average
        page load time breakdown","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":27},"id":22,"links":[{"targetBlank":true,"title":"${res}
        | Availability test results count","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22availabilityResults%2Fcount%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Availability%20test%20results%20count%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Availability%20test%20results%20count%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"availabilityResults/count","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Availability
        test results count","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#ec008c","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":6,"y":27},"id":26,"links":[{"targetBlank":true,"title":"${res}
        | Average process I/O rate","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FprocessIOBytesPerSecond%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Process%20IO%20rate%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20process%20I%2FO%20rate%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":100,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"performanceCounters/processIOBytesPerSecond","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"100"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        process I/O rate","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"#7e58ff","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":80,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":12,"y":27},"id":30,"links":[{"targetBlank":true,"title":"${res}
        | Average available memory","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22performanceCounters%2FmemoryAvailableBytes%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Available%20memory%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A4%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Average%20available%20memory%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"microsoft.insights/components","metricName":"performanceCounters/memoryAvailableBytes","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Average
        available memory","type":"timeseries"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"axisWidth":50,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":18,"y":27},"id":34,"links":[{"targetBlank":true,"title":"${res}
        | Browser exceptions","url":"https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/ResourceId/%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}/TimeContext/%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22options%22%3A%7B%22grain%22%3A1%2C%22showUTCTime%22%3Atrue%7D%7D/Chart/%7B%22metrics%22%3A%5B%7B%22resourceMetadata%22%3A%7B%22id%22%3A%22%2Fsubscriptions%2F${sub}%2FresourceGroups%2F${rg}%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2F${res}%22%7D%2C%22name%22%3A%22exceptions%2Fbrowser%22%2C%22namespace%22%3A%22microsoft.insights%2Fcomponents%22%2C%22metricVisualization%22%3A%7B%22displayName%22%3A%22Browser%20exceptions%22%2C%22color%22%3A%22%2347BDF5%22%7D%2C%22aggregationType%22%3A7%2C%22thresholds%22%3A%5B%5D%7D%5D%2C%22filterCollection%22%3A%7B%22filters%22%3A%5B%5D%7D%2C%22grouping%22%3Anull%2C%22visualization%22%3A%7B%22chartType%22%3A2%2C%22legendVisualization%22%3A%7B%22isVisible%22%3Atrue%2C%22position%22%3A2%2C%22hideSubtitle%22%3Afalse%7D%2C%22axisVisualization%22%3A%7B%22x%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A2%7D%2C%22y%22%3A%7B%22isVisible%22%3Atrue%2C%22axisType%22%3A1%7D%7D%2C%22disablePinning%22%3Atrue%7D%2C%22title%22%3A%22Browser%20exceptions%22%2C%22timespan%22%3A%7B%22relative%22%3A%7B%22duration%22%3A1800000%7D%2C%22showUTCTime%22%3Atrue%2C%22grain%22%3A1%7D%2C%22ariaLabel%22%3Anull%7D/openInEditMode/true"}],"maxDataPoints":150,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureMonitor":{"aggOptions":[],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"metricDefinition":"Microsoft.Insights/components","metricName":"exceptions/browser","metricNamespace":"microsoft.insights/components","resourceGroup":"$rg","resourceName":"$res","timeGrain":"auto","timeGrains":[],"top":"50"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"Browser
        exceptions","type":"timeseries"}],"refresh":"","schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Namespaces($sub,
        $rg)","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":"Namespaces($sub,
        $rg)","refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"ResourceNames($sub,
        $rg, $ns)","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"resources\n|
        project tenantId","hide":2,"includeAll":false,"label":"tenantId","multi":false,"name":"tenant","options":[],"query":{"azureLogAnalytics":{"query":"","resource":""},"azureResourceGraph":{"query":"Resources\r\n|project
        tenantId"},"queryType":"Azure Resource Graph","refId":"A","subscriptions":["$sub"]},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-30m","to":"now"},"title":"Azure
        / Insights / Applications","uid":"Yo38mcvnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '58603'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-28ktA9pLbpBi1GYqAl9edw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:21 GMT
      grafana-trace-id:
      - baebb58b836c48406a6badd2a3501fdb
      mise-correlation-id:
      - c1132cf3-e215-46fd-a07f-3cd0c72f4e4d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504462.214.30.17122|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/AppInsightsAvTestGeoMap
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"appInsightsGeoMap.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"gauge","name":"Gauge","type":"panel","version":""},{"id":"geomap","name":"Geomap","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"8.5.1"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":2,"iteration":null,"liveNow":false,"panels":[{"gridPos":{"h":4,"w":24,"x":0,"y":0},"id":18,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003e This dashboard
        helps you visualize data on availability tests for your Application Insights.
        Note that even if you have an App Insights resource configured, if you have
        no tests configured for it, no data will show. You can configure the following:\u003c/p\u003e\n  \u003cul
        style=\"display: inline-block; text-align:left\"\u003e\n\n      \u003cli\u003eThe
        regions (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe Availability
        tests (Select one or more)\u003c/li\u003e\n\n      \u003cli\u003eThe colors
        and thresholds in the Geo Maps to make the dashboard more relevant to your
        environment.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","mode":"html"},"type":"text"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"green","value":100}]},"unit":"percent"},"overrides":[{"matcher":{"id":"byName","options":"avg_percentage"},"properties":[{"id":"unit","value":"percent"},{"id":"min","value":0},{"id":"max","value":100},{"id":"thresholds","value":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":100}]}}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":0},"id":10,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avg_percentage","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avg_percentage","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and true and location in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        percentage = toint(success) * 100\r\n| summarize avg(percentage) by name,
        location, latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test:
        ${avTest}","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        dashboard provides geographic insights of availability tests on Azure Apps
        via different metrics for app monitoring through Application Insights.","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Successful"}]}]},"gridPos":{"h":4,"w":5,"x":14,"y":0},"id":14,"options":{"colorMode":"background","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 1 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"red","mode":"fixed"},"mappings":[],"noValue":"--","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"avTestResults"},"properties":[{"id":"displayName","value":"Failed"}]}]},"gridPos":{"h":4,"w":5,"x":19,"y":0},"id":16,"options":{"colorMode":"background","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo\r\n| where
        name in ($avTest) and success == 0 and location in ($reg)\r\n| summarize [''avTestResults'']
        = sum(itemCount) by success","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"transparent":true,"type":"stat"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":4,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"max":100,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"yellow","value":50},{"color":"green","value":100}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":10,"x":14,"y":4},"id":12,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e $__timeFrom and timestamp \u003c $__timeTo \r\n| where
        true and name in ($avTest)\r\n| extend percentage = toint(success) * 100\r\n|
        summarize avg(percentage) by name, bin(timestamp, 1h)\r\n| sort by timestamp
        asc\r\n| render timechart","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Availability test
        : ${avTest}","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)\\s(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[{"matcher":{"id":"byName","options":"latitude"},"properties":[{"id":"unit","value":"degree"}]},{"matcher":{"id":"byName","options":"longitude"},"properties":[{"id":"unit","value":"degree"}]}]},"gridPos":{"h":15,"w":14,"x":0,"y":15},"id":8,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":true,"showAttribution":true,"showDebug":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"avTestResults","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"avTestResults","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"location":{"mode":"auto"},"name":"Layer
        1","tooltip":true,"type":"markers"}],"view":{"id":"zero","lat":0,"lon":0,"zoom":1}},"targets":[{"azureLogAnalytics":{"query":"let
        regToCoords = dynamic({\r\n  \"East Asia\":\r\n    {\r\n      \"latitude\":
        22.267,\r\n      \"longitude\": 114.188\r\n    },\r\n  \"Southeast Asia\":\r\n    {\r\n      \"latitude\":
        1.283,\r\n      \"longitude\": 103.833\r\n    },\r\n  \"Central US\":\r\n    {\r\n      \"latitude\":
        41.5908,\r\n      \"longitude\": -93.6208\r\n    },\r\n    \"East US\":\r\n    {\r\n      \"latitude\":
        37.3719,\r\n      \"longitude\": -79.8164\r\n    },\r\n    \"East US 2\":\r\n    {\r\n      \"latitude\":
        36.6681,\r\n      \"longitude\": -78.3889\r\n    },\r\n    \"West US\":\r\n    {\r\n      \"latitude\":
        37.783,\r\n      \"longitude\": -122.417\r\n    },\r\n    \"North Central
        US\":\r\n    {\r\n      \"latitude\": 41.8819,\r\n      \"longitude\": -87.6278\r\n    },\r\n    \"South
        Central US\":\r\n    {\r\n      \"latitude\": 29.4167,\r\n      \"longitude\":
        -98.5\r\n    },\r\n    \"North Europe\":\r\n    {\r\n      \"latitude\": 53.3478,\r\n      \"longitude\":
        -6.2597\r\n    },\r\n    \"West Europe\":\r\n    {\r\n      \"latitude\":
        52.3667,\r\n      \"longitude\": 4.9\r\n    },\r\n    \"Japan West\":\r\n    {\r\n      \"latitude\":
        34.6939,\r\n      \"longitude\": 135.5022\r\n    },\r\n    \"Japan East\":\r\n    {\r\n      \"latitude\":
        35.68,\r\n      \"longitude\": 139.77\r\n    },\r\n    \"Brazil South\":\r\n    {\r\n      \"latitude\":
        -23.55,\r\n      \"longitude\": -46.633\r\n    },\r\n    \"Australia East\"
        : \r\n    {\r\n    \"latitude\": -33.86, \r\n    \"longitude\": 151.2094\r\n    },
        \r\n    \"Australia Southeast\":\r\n    {\r\n      \"latitude\": -37.8136,\r\n      \"longitude\":
        144.9631\r\n    },\r\n    \"South India\":\r\n    {\r\n      \"latitude\":
        12.9822,\r\n      \"longitude\": 80.1636\r\n    },\r\n    \"Central India\":\r\n    {\r\n      \"latitude\":
        18.5822,\r\n      \"longitude\": 73.9197\r\n    },\r\n    \"West India\":\r\n    {\r\n      \"latitude\":
        19.088,\r\n      \"longitude\": 72.868\r\n    },\r\n    \"Canada Central\":\r\n    {\r\n      \"latitude\":
        43.653,\r\n      \"longitude\": -79.383\r\n    },\r\n    \"Canada East\":\r\n    {\r\n      \"latitude\":
        46.817,\r\n      \"longitude\": -71.217\r\n    },\r\n    \"UK South\":\r\n    {\r\n      \"latitude\":
        50.941,\r\n      \"longitude\": -0.799\r\n    },\r\n  \"UK West\": \r\n    {\r\n      \"latitude\":
        53.427, \r\n      \"longitude\": -3.084\r\n    },\r\n  \"West Central US\":
        \r\n    {\r\n      \"latitude\": 40.890, \r\n      \"longitude\": -110.234\r\n    },\r\n    \"West
        US 2\": \r\n    {\r\n      \"latitude\": 47.233, \r\n      \"longitude\":
        -119.852\r\n    },\r\n    \"Korea Central\": \r\n    {\r\n      \"latitude\":
        37.5665, \r\n      \"longitude\": 126.9780\r\n    },\r\n    \"Korea South\":
        \r\n    {\r\n      \"latitude\": 35.1796, \r\n      \"longitude\": 129.0756\r\n    },\r\n    \"France
        Central\": \r\n    {\r\n      \"latitude\": 46.3772, \r\n      \"longitude\":
        2.3730\r\n    },\r\n    \"France South\": \r\n    {\r\n      \"latitude\":
        43.8345, \r\n      \"longitude\": 2.1972\r\n   },\r\n   \"Australia Central\":
        \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\": 149.1244\r\n    },\r\n    \"Australia
        Central 2\": \r\n    {\r\n      \"latitude\": -35.3075, \r\n      \"longitude\":
        149.1244\r\n    },\r\n    \"UAE Central\": \r\n    {\r\n      \"latitude\":
        24.466667, \r\n      \"longitude\": 54.366669\r\n    },\r\n    \"UAE North\":
        \r\n    {\r\n      \"latitude\": 25.266666, \r\n      \"longitude\": 55.316666\r\n    },\r\n    \"South
        Africa North\": \r\n    {\r\n      \"latitude\": -25.731340, \r\n      \"longitude\":
        28.218370\r\n    },\r\n    \"South Africa West\": \r\n    {\r\n      \"latitude\":
        -34.075691, \r\n      \"longitude\": 18.843266\r\n    }\r\n});\r\navailabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| extend latitude = tostring(regToCoords[location][\"latitude\"])\r\n|
        extend longitude = tostring(regToCoords[location][\"longitude\"])\r\n| extend
        availabilityResult_duration = iif(itemType == ''availabilityResult'', duration,
        todouble(''''))\r\n| summarize [''avTestResults''] = sum(itemCount) by location,
        latitude, longitude","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"${metric} (Sum)","type":"geomap"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"dark-blue","mode":"fixed"},"mappings":[],"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":288}]}},"overrides":[]},"gridPos":{"h":15,"w":10,"x":14,"y":15},"id":4,"options":{"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^avTestResults$/","values":true},"showThresholdLabels":false,"showThresholdMarkers":false},"targets":[{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where timestamp \u003e= $__timeFrom and timestamp \u003c $__timeTo and location
        in ($reg)\r\n| summarize [''avTestResults''] = sum(itemCount) by location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Test result count
        by Location","transformations":[],"type":"gauge"}],"schemaVersion":36,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"SubscriptionsQuery","rawQuery":"Subscriptions()"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceGroupsQuery","rawQuery":"ResourceGroups($sub)","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"MetricDefinitionsQuery","rawQuery":"Namespaces($sub,
        $rg)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana Template
        Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"([mM](icrosoft)\\.[iI](nsights)/(components))","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"res","options":[],"query":{"grafanaTemplateVariableFn":{"kind":"ResourceNamesQuery","metricDefinition":"$ns","rawQuery":"ResourceNames($sub,
        $rg, $ns)","resourceGroup":"$rg","subscription":"$sub"},"queryType":"Grafana
        Template Variable Function","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Region","multi":true,"name":"reg","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        distinct location","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"allValue":"","current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Availability
        Test","multi":true,"name":"avTest","options":[],"query":{"azureLogAnalytics":{"query":"availabilityResults\r\n|
        where location in ($reg)\r\n| distinct name","resource":"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Availability
        test results count","value":"itemCount"},"hide":2,"includeAll":false,"label":"Metric","multi":false,"name":"metric","options":[{"selected":true,"text":"Availability
        test results count","value":"itemCount"},{"selected":false,"text":"Test duration","value":"availabilityResult_duration"}],"query":"Availability
        test results count : itemCount, Test duration : availabilityResult_duration","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{"selected":false,"text":"Sum","value":"Sum"},"hide":2,"includeAll":false,"label":"Aggregation","multi":false,"name":"agg","options":[{"selected":true,"text":"Sum","value":"Sum"},{"selected":false,"text":"Max","value":"Max"},{"selected":false,"text":"Min","value":"Min"}],"query":"Sum,
        Max, Min","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-24h","to":"now"},"title":"Azure
        / Insights / Applications Test Availability Geo Map","uid":"AppInsightsAvTestGeoMap","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '23260'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-PDZzOQ/Fr48by4oLi/t7RA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:21 GMT
      grafana-trace-id:
      - 1709f2522473d07a7bdd07d23679f95f
      mise-correlation-id:
      - 5bc36717-056e-4317-beaf-213d72986012
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504462.446.30.389171|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/INH9berMk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"cosmosdb.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Cosmos DB overview, throughput, requests,
        storage, availability latency, system and account management.","editable":true,"id":8,"links":[],"panels":[{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":1},"hiddenSeries":false,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":1},"hiddenSeries":false,"id":19,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null
        as zero","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":10},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":true,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption (max)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]},"unit":"short"},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":10},"hiddenSeries":false,"id":12,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Index
        \u0026 Data Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":18},"id":11,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        Requests (Count) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":18},"id":14,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Document
        Count (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":18},"id":15,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"continuous-GrYlRd"}}]}]},"gridPos":{"h":9,"w":8,"x":0,"y":27},"id":16,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"D","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Index
        Usage (Avg) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":8,"y":27},"id":17,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"E","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"fixed"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[{"matcher":{"id":"byName","options":"Total"},"properties":[{"id":"custom.displayMode","value":"lcd-gauge"},{"id":"color","value":{"mode":"palette-classic"}}]}]},"gridPos":{"h":9,"w":8,"x":16,"y":27},"id":18,"maxDataPoints":1,"options":{"showHeader":true},"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":""},"hide":false,"queryType":"Azure Monitor","refId":"F","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Normalized
        RU Consumption (Max) By Collection","transformations":[{"id":"reduce","options":{"reducers":["sum"]}}],"type":"table"}],"title":"Overview","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":1},"id":21,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":2},"hiddenSeries":false,"id":23,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequestUnits","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Request Units","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":2},"hiddenSeries":false,"id":24,"legend":{"alignAsTable":false,"avg":false,"current":false,"max":true,"min":false,"rightSide":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Maximum","Average"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,3600000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"PartitionKeyRangeId","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"},{"text":"PartitionKeyRangeId","value":"PartitionKeyRangeId"}],"metricDefinition":"$ns","metricName":"NormalizedRUConsumption","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"1 hour","value":"PT1H"},{"text":"1
        day","value":"P1D"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Normalized
        RU Consumption By PartitionKeyRangeID","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":6,"w":24,"x":0,"y":10},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"}],"metricDefinition":"$ns","metricName":"ProvisionedThroughput","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":""},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Provisioned
        Throughput (Max) by Collection","type":"stat"}],"title":"Throughput","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":2},"id":27,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":3},"hiddenSeries":false,"id":28,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":3},"hiddenSeries":false,"id":29,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Requests (429)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":11},"hiddenSeries":false,"id":30,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"},{"text":"OperationType","value":"OperationType"},{"text":"Status","value":"Status"}],"metricDefinition":"$ns","metricName":"TotalRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        Requests by Operation Type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Requests","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":3},"id":32,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":4},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        \u0026 Index Usage","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":4},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Document
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":24,"x":0,"y":12},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DataUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Total","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"IndexUsage","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Total","Average"],"aggregation":"Average","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"CollectionName","filter":"","operator":"eq"}],"dimensions":[{"text":"CollectionName","value":"CollectionName"},{"text":"DatabaseName","value":"DatabaseName"},{"text":"Region","value":"Region"}],"metricDefinition":"$ns","metricName":"DocumentCount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Data,
        Index \u0026 Document Usage","type":"stat"}],"title":"Storage","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":5},"hiddenSeries":false,"id":39,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","scopedVars":{"sub":{"selected":true,"text":"RTD-Experimental
        - f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","value":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc"}},"seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Minimum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Minimum","Average","Maximum"],"aggregation":"Maximum","allowedTimeGrainsMs":[3600000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"ServiceAvailability","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        hour","value":"PT1H"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Service
        Availability (min/max/avg in %)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"repeat":"sub","title":"Availability","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":5},"id":41,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":42,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"Region","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Region","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":43,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"OperationType","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"ConnectionMode","value":"ConnectionMode"},{"text":"OperationType","value":"OperationType"},{"text":"PublicAPIType","value":"PublicAPIType"}],"metricDefinition":"$ns","metricName":"ServerSideLatency","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Server
        Side Latency (Avg) By Operation","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Latency","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":6},"id":45,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":7},"hiddenSeries":false,"id":46,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests by Status Code","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":7},"hiddenSeries":false,"id":47,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"StatusCode","filter":"429","operator":"eq"}],"dimensions":[{"text":"DatabaseName","value":"DatabaseName"},{"text":"CollectionName","value":"CollectionName"},{"text":"Region","value":"Region"},{"text":"StatusCode","value":"StatusCode"}],"metricDefinition":"$ns","metricName":"MetadataRequests","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Metadata
        Requests That Exceeded Capacity (429s)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"System","type":"row"},{"collapsed":true,"datasource":"${ds}","gridPos":{"h":1,"w":24,"x":0,"y":7},"id":49,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":8},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"CreateAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"DeleteAccount","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"KeyType","value":"KeyType"}],"metricDefinition":"$ns","metricName":"UpdateAccountKeys","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Management (Creates, Deletes) and Account Key Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"${ds}","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":8},"hiddenSeries":false,"id":51,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[{"text":"DiagnosticSettings
        Name","value":"DiagnosticSettingsName"},{"text":"ResourceGroup Name","value":"ResourceGroupName"}],"metricDefinition":"$ns","metricName":"UpdateDiagnosticsSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"queryType":"Azure Monitor","refId":"A","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountNetworkSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"B","subscription":"$sub"},{"azureMonitor":{"aggOptions":["Count"],"aggregation":"Count","allowedTimeGrainsMs":[300000],"dimensionFilter":"*","dimensionFilters":[{"dimension":null,"filter":"","operator":"eq"}],"dimensions":[],"metricDefinition":"$ns","metricName":"UpdateAccountReplicationSettings","metricNamespace":"Microsoft.DocumentDB/databaseAccounts","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"5
        minutes","value":"PT5M"}],"top":"10"},"hide":false,"queryType":"Azure Monitor","refId":"C","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cosmos
        DB Account Diagnostic, Network and Replication Settings Updates","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"title":"Account
        Management","type":"row"}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.DocumentDb/databaseAccounts","value":"Microsoft.DocumentDb/databaseAccounts"}],"query":"Microsoft.DocumentDb/databaseAccounts","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-6h","to":"now"},"title":"Azure
        / Insights / Cosmos DB","uid":"INH9berMk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '56537'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-xk5PCWUjBMJQiGLFpJVaEw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:21 GMT
      grafana-trace-id:
      - ed4af7e2dbaac7bdef5082eb6ce4c6f1
      mise-correlation-id:
      - 7710a82b-67d8-4750-9977-de3f361e389f
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504462.687.28.912120|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/8UDB1s3Gk
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"dataexplorercluster.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"7.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"graph","name":"Graph","type":"panel","version":""},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Data Explorer Cluster Resource overview,
        key mettrics, usage, tables, cache and ingestion.","editable":true,"id":9,"links":[],"panels":[{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":0},"id":6,"panels":[],"title":"Overview","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":0,"y":1},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Keep
        Alive (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":3,"y":1},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"CPU
        (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":6,"y":1},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Utilization (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":9,"y":1},"id":14,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Ingestion
        Latency (Avg)  ","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":12,"y":1},"id":15,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Cache
        Utilization (Avg)","type":"stat"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":3,"x":15,"y":1},"id":16,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        Ingestions (#)","type":"stat"},{"datasource":"$ds","description":"The aggregated
        usage in the cluster, out of the total used CPU and memory. To see more details,
        go to the Usage tab.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":17,"options":{"showHeader":true},"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Over
        a sliding timeline window. Not affected by the time range parameter","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":6},"hiddenSeries":false,"id":2,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":3,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ApplicationName !=
        ''Kusto.WinSvc.DM.Svc''\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where DatabaseName !in (system_databases) and User !in
        (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ApplicationName != ''Kusto.WinSvc.DM.Svc''\r\n    | extend MemoryPeak
        = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User,\r\n        ApplicationName,\r\n        Principal,\r\n        TotalCPU,\r\n        MemoryPeak,\r\n        CorrelationId,\r\n        cluster_name;\r\nlet
        raw = dataset_commands_queries\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest''\r\n    | where StartedOn \u003e ago(365d)\r\n;\r\nraw\r\n|
        evaluate activity_engagement(User, StartedOn, 1d, 7d)\r\n| join kind = inner
        (\r\n    raw\r\n    | evaluate activity_engagement(User, StartedOn, 1d, 30d)\r\n    )\r\n    on
        StartedOn\r\n| project StartedOn, Daily=dcount_activities_inner, Weekly=dcount_activities_outer,
        Monthly = dcount_activities_outer1     \r\n| where StartedOn \u003e ago(90d)\r\n|
        project Daily, StartedOn, Weekly, Monthly\r\n| sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Unique
        user count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":15},"id":19,"panels":[],"title":"Key
        Metrics","type":"row"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":20,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"KeepAlive","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Keep
        Alive","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":21,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CPU","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":22,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"CacheUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Cache
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":23,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"InstanceCount","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Instance
        Count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":26},"hiddenSeries":false,"id":24,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfConcurrentQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Concurrent
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":26},"hiddenSeries":false,"id":25,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Query
        Status","value":"QueryStatus"}],"metricDefinition":"$ns","metricName":"QueryDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query
        Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":26},"hiddenSeries":false,"id":26,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Command
        Type","value":"CommandType"}],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledCommands","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Commands","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":26},"hiddenSeries":false,"id":27,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum","Total"],"aggregation":"Maximum","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"TotalNumberOfThrottledQueries","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled
        Queries","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":36},"hiddenSeries":false,"id":28,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionUtilization","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Utilization","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percent","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":36},"hiddenSeries":false,"id":29,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Maximum","Minimum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"IngestionLatencyInSeconds","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":36},"hiddenSeries":false,"id":30,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Status","value":"IngestionResultDetails"}],"metricDefinition":"$ns","metricName":"IngestionResult","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":36},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Database","value":"Database"}],"metricDefinition":"$ns","metricName":"IngestionVolumeInMB","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingestion
        Volume","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":32,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDataRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Data Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":6,"y":46},"hiddenSeries":false,"id":33,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average","Minimum","Maximum"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"StreamingIngestDuration","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":12,"y":46},"hiddenSeries":false,"id":34,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["None","Average","Minimum","Maximum","Total","Count"],"aggregation":"None","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[],"metricDefinition":"$ns","metricName":"SteamingIngestRequestRate","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Request Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":6,"x":18,"y":46},"hiddenSeries":false,"id":35,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Result","value":"Result"}],"metricDefinition":"$ns","metricName":"StreamingIngestResults","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streaming
        Ingest Result","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":56},"hiddenSeries":false,"id":36,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"EventsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Events
        Processed","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":12,"y":56},"hiddenSeries":false,"id":37,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discovery
        Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":65},"id":40,"panels":[],"title":"Usage","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":66},"id":43,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand \r\n    | where
        TimeGenerated \u003e datetime(2020-09-09T09:30:00Z) \r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)
        \r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State, FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    //|
        where totimespan(TotalCPU) \u003e totimespan(0)\r\n    | summarize TotalCPU=max(TotalCPU)
        \r\n        , MemoryPeak=max(MemoryPeak)\r\n        by User, ApplicationName,
        CorrelationId \r\n;\r\nlet totalCPU = toscalar(dataset\r\n    | summarize
        sum((totimespan(TotalCPU) / 1s)));\r\nlet totalMemory = toscalar(dataset\r\n    |
        summarize sum(MemoryPeak));\r\nlet topMemory = \r\n    dataset\r\n    | top-nested
        10000 of User with others=\"Others\" by sum(MemoryPeak), top-nested 10000
        of ApplicationName with others=\"Others\" by sum(MemoryPeak)\r\n    | extend
        PercentOfTotalClusterMemoryUsed = aggregated_ApplicationName / toreal(totalMemory)\r\n;\r\nlet
        topCpu = \r\n    dataset\r\n    | top-nested 10000 of User with others=\"Others\"
        by sum(totimespan(TotalCPU) / 1s), top-nested 10000 of ApplicationName with
        others=\"Others\" by sum(totimespan(TotalCPU) / 1s)\r\n    | extend PercentOfTotalClusterCpuUsed
        = aggregated_ApplicationName / toreal(totalCPU)\r\n;\r\ntopMemory\r\n| join
        kind = fullouter(topCpu) on User, ApplicationName\r\n| extend BothPercentages
        = PercentOfTotalClusterMemoryUsed + PercentOfTotalClusterCpuUsed\r\n| top
        10 by BothPercentages desc\r\n| extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\",
        strcat(\"Kusto Data Management \", \"(\", User, \")\"),\r\n    ApplicationName
        == \"KustoQueryRunner\", strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User
        == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001
        (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS
        clusters \r\n    User)\r\n| extend PercentOfTotalClusterMemoryUsed_display
        = iff(isnan(PercentOfTotalClusterMemoryUsed * 100), toreal(0), PercentOfTotalClusterMemoryUsed
        * 100)\r\n| extend PercentOfTotalClusterCpuUsed_display = iff(isnan(PercentOfTotalClusterCpuUsed
        * 100), toreal(0), PercentOfTotalClusterCpuUsed * 100)\r\n| where not (ApplicationName
        == \"Others\" and PercentOfTotalClusterMemoryUsed_display == 0 and PercentOfTotalClusterCpuUsed_display
        == 0)\r\n| project User, ApplicationName, PercentOfTotalClusterMemoryUsed_display,
        PercentOfTotalClusterCpuUsed_display","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        resource consumers (within the CPU and memory consumption of the cluster)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":66},"id":44,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by User, ApplicationName\r\n    | project User, ApplicationName, Count\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters\r\n        User)\r\n    | top 10 by Count;\r\n//|
        order by Count desc\r\n// \u003cOption #1 for top-nested\u003e | top-nested
        10 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\n//
        \u003cOption #2 for top-nested\u003e| top-nested 10 of User by agg_User=sum(Count)
        desc, top-nested 5 of ApplicationName with others=\"Other applications\" by
        agg_App=sum(Count) desc\r\n// \u003cOption #2 for top-nested\u003e| where
        not (ApplicationName == \"Other applications\" and agg_App == 0)\r\n// \u003cOption
        #2 for top-nested\u003e| project-away agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals and applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":0,"y":70},"id":38,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",\r\n        ApplicationName)\r\n    |
        project CommandType, DatabaseName, StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason,
        RootActivityId, User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId,
        cluster_name;\r\nlet dataset = dataset_commands_queries\r\n    | where cluster_name
        == ''mitulktest''\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        summarize Count=count() by ApplicationName\r\n    | project ApplicationName,
        Count\r\n    | order by Count desc\r\n    //| top-nested 10 of User with others=\"Other
        Values\" by agg_User=sum(Count) desc;\r\n    | top-nested 7 of ApplicationName
        with others=\"Other Values\"  by agg_App=sum(Count) desc;\r\n//|where not
        (ApplicationName == \"Other applications\" and agg_App == 0)\r\n//|project-away
        agg_User;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        applications by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":8,"y":70},"id":41,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n    | summarize Count=count()
        by User\r\n    | project User, Count\r\n    | order by Count desc\r\n    |
        top-nested 7 of User with others=\"Other Values\" by agg_User=sum(Count) desc;\r\ndataset\r\n\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Top
        principals by command and query count","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":5,"w":8,"x":16,"y":70},"id":42,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest''\r\n    |
        where CommandType != ''TableSetOrAppend''\r\n    | summarize Count=count()
        by CommandType\r\n    | project CommandType, Count\r\n    | order by Count
        desc\r\n    | top-nested 7 of CommandType with others=\"Other Values\"  by
        agg_App=sum(Count) desc;\r\ndataset\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Queries
        and top commands by command type","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":14,"x":0,"y":75},"id":45,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is KustoRunner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        project-away ResourceUtilization;\r\nlet QueryTable = ADXQuery\r\n    | where
        TimeGenerated \u003e ago(17d)\r\n    | where DatabaseName !in (system_databases)
        and User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | extend MemoryPeak = tolong(MemoryPeak)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        extend CommandType = ''Query'';\r\nlet dataset_commands_queries = CommandTable\r\n    |
        union (QueryTable)\r\n    | project CommandType, DatabaseName, StartedOn,
        LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend'';\r\nlet
        Last24Hours =\r\n    FullList\r\n    | where StartedOn \u003e= ago(1d) and
        StartedOn \u003c now()\r\n    | summarize Count=count() by User, ApplicationName\r\n    |
        top 100 by Count desc\r\n;\r\nlet HistoricalDailyAverage =\r\n    FullList\r\n    |
        where StartedOn \u003e= ago(16d) and StartedOn \u003c ago(1d)\r\n    | summarize
        Count=count() / 15.0 by User, ApplicationName\r\n    | top 100 by Count desc\r\n;\r\nlet
        TimeRangeComparison =\r\n    Last24Hours\r\n    | join kind=leftouter (HistoricalDailyAverage)
        on User, ApplicationName\r\n    | project User=coalesce(User, User1), ApplicationName,
        Last24Hours=Count, HistoricalDailyAverage=round(Count1, 0)\r\n    | extend
        PercentChange=round((Last24Hours - HistoricalDailyAverage) / toreal(HistoricalDailyAverage),
        2)\r\n    | top 10 by Last24Hours desc\r\n;\r\nTimeRangeComparison\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| project User, ApplicationName, HistoricalDailyAverage=round(HistoricalDailyAverage,
        0), Last24Hours, PercentChange\r\n| order by Last24Hours desc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Changes
        in query count by principal (not affected by the the time range parameter)","transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":10,"x":14,"y":75},"id":46,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Quert Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where LastUpdatedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where LastUpdatedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' and State == ''Failed''\r\n| summarize
        Count=count() by User, ApplicationName\r\n| top 10 by Count desc\r\n| extend
        User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data
        Management \", \"(\", User, \")\"),\r\n    ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n    User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n    User)\r\n| order by Count desc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Failed
        queries","transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":79},"hiddenSeries":false,"id":47,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, StartedOn, ApplicationName, CommandType\r\n;\r\nlet Top =\r\n    dataset\r\n    |
        summarize Count=count() by User\r\n    | top 10 by Count desc\r\n    | extend
        OriginalUser = User\r\n    | extend Category=User\r\n;\r\nFullList\r\n| join
        kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), ApplicationName, CommandType, StartedOn\r\n| extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n    ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto Query
        Runner \", \"(\", User, \")\"),\r\n    User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n    User)\r\n| summarize count() by User, bin(StartedOn,
        1h)\r\n| summarize sum(count_) by bin(StartedOn, 1h), tostring(User)\r\n|
        sort by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":79},"hiddenSeries":false,"id":48,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak\r\n    |
        extend User = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto
        Data Management \", \"(\", User, \")\"),\r\n        ApplicationName == \"KustoQueryRunner\",
        strcat(\"Kusto Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD
        app id=e0331ea9-83fc-4409-a17d-6375364c3280\", \"DataMap Agent 001 (app id:
        e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used for internal MS clusters
        \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak)
        by User\r\n    | top 10 by Memory desc\r\n    | extend OriginalUser = User\r\n    |
        project OriginalUser, Category=User\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on $left.User == $right.OriginalUser\r\n| project User=coalesce(Category,
        ''Other''), StartedOn, MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakGB=sum(MemoryPeakGB) by User, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakGB) by bin(StartedOn, 1h), tostring(User)\r\n| sort
        by StartedOn asc","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":79},"hiddenSeries":false,"id":49,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        where cluster_name == ''mitulktest'';\r\nlet FullList = dataset\r\n    | where
        CommandType != ''TableSetOrAppend''\r\n    | project User, ApplicationName,
        CommandType, StartedOn, TotalCPU\r\n    | extend User = case(ApplicationName
        == \"Kusto.WinSvc.DM.Svc\", strcat(\"Kusto Data Management \", \"(\", User,
        \")\"),\r\n        ApplicationName == \"KustoQueryRunner\", strcat(\"Kusto
        Query Runner \", \"(\", User, \")\"),\r\n        User == \"AAD app id=e0331ea9-83fc-4409-a17d-6375364c3280\",
        \"DataMap Agent 001 (app id: e0331ea9-83fc-4409-a17d-6375364c3280)\", // Used
        for internal MS clusters \r\n        User)\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(totimespan(TotalCPU)) by User\r\n    | top 10 by TotalCpu
        desc\r\n    | extend OriginalUser = User\r\n    | project OriginalUser, Category=User\r\n;\r\nFullList\r\n|
        join kind=leftouter(Top) on $left.User == $right.OriginalUser\r\n| project
        User=coalesce(Category, ''Other''), StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by User, bin(StartedOn,
        1h)\r\n| top-nested of bin(StartedOn, 1h) by sum(TotalCpuMinutes), top-nested
        5 of User with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, User, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by principal","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":89},"hiddenSeries":false,"id":51,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User\r\n;\r\nlet Top =\r\n    FullList\r\n    |
        summarize Count=count() by ApplicationName\r\n    | top 10 by Count desc\r\n    |
        extend Category=ApplicationName\r\n;\r\nFullList\r\n| join kind=leftouter(Top)
        on ApplicationName \r\n| project Application=coalesce(Category, ''-''), CommandType,
        User, StartedOn\r\n| summarize count() by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(count_) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Command
        + query count by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":89},"hiddenSeries":false,"id":52,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, StartedOn, CommandType, User, MemoryPeak\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize Memory=sum(MemoryPeak) by ApplicationName\r\n    |
        top 10 by Memory desc\r\n    | extend Category=ApplicationName;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, MemoryPeakMB=MemoryPeak / 1024.0 / 1024.0\r\n|
        summarize MemoryPeakMB=sum(MemoryPeakMB) by Application, bin(StartedOn, 1h)\r\n|
        summarize sum(MemoryPeakMB) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":89},"hiddenSeries":false,"id":50,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project CommandType, DatabaseName, StartedOn, LastUpdatedOn,
        Duration, State,\r\n        FailureReason, RootActivityId, User, ApplicationName,
        Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet dataset
        = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\nlet
        FullList = dataset\r\n    | where CommandType != ''TableSetOrAppend''\r\n    |
        project ApplicationName, CommandType, User, StartedOn, TotalCPU\r\n;\r\nlet
        Top =\r\n    FullList\r\n    | summarize TotalCPU=sum(totimespan(TotalCPU))
        by ApplicationName\r\n    | top 10 by TotalCPU desc\r\n    | extend Category=ApplicationName\r\n;\r\nFullList\r\n|
        join kind=inner(Top) on ApplicationName\r\n| project Application=coalesce(Category,
        ''-''), CommandType, User, StartedOn, TotalCpuMinutes=totimespan(TotalCPU)
        / 1m\r\n| summarize TotalCpuMinutes=sum(TotalCpuMinutes) by Application, bin(StartedOn,
        1h)\r\n| summarize sum(TotalCpuMinutes) by bin(StartedOn, time(1h)), tostring(Application)\r\n|
        sort by StartedOn asc\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by application","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":0,"y":99},"hiddenSeries":false,"id":53,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| top-nested of bin(StartedOn,
        time(1h)) by count(), top-nested 5 of CommandType by count_=count() desc\r\n|
        sort by StartedOn asc\r\n| project StartedOn, CommandType, count_\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries
        + command count by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":8,"y":99},"hiddenSeries":false,"id":54,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend MemoryPeakGB=MemoryPeak
        / 1024.0 / 1024.0 / 1024.0\r\n| top-nested of bin(StartedOn, time(1h)) by
        sum(MemoryPeakGB), top-nested 5 of CommandType with others=\"Other Values\"
        by sum_MemoryPeakGB=sum(MemoryPeakGB) desc\r\n| sort by StartedOn asc\r\n|
        project StartedOn, CommandType, sum_MemoryPeakGB\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        memory by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":8,"x":16,"y":99},"hiddenSeries":false,"id":55,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet CommandTable = ADXCommand\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak) \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where DatabaseName !in (system_databases) and User
        !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | project-away ResourceUtilization;\r\nlet QueryTable
        = ADXQuery\r\n    | where StartedOn \u003e ago(7d)\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where ((false == \"false\"
        and ApplicationName != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    |
        extend MemoryPeak = tolong(MemoryPeak)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | extend CommandType = ''Query'';\r\nlet dataset_commands_queries
        = CommandTable\r\n    | union (QueryTable)\r\n    | project CommandType, DatabaseName,
        StartedOn, LastUpdatedOn, Duration, State,\r\n        FailureReason, RootActivityId,
        User, ApplicationName, Principal, TotalCPU, MemoryPeak, CorrelationId, cluster_name;\r\nlet
        dataset = dataset_commands_queries\r\n    | where cluster_name == ''mitulktest'';\r\ndataset\r\n|
        where CommandType != ''TableSetOrAppend'' \r\n| extend TotalCpuMinutes = totimespan(TotalCPU)
        / 1m\r\n| top-nested of bin(StartedOn, time(1h)) by sum(TotalCpuMinutes),
        top-nested 5 of CommandType with others=\"Other Values\" by sum_TotalCpuMinutes=sum(TotalCpuMinutes)
        desc\r\n| sort by StartedOn asc\r\n| project StartedOn, CommandType, sum_TotalCpuMinutes\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Total
        CPU by type","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":109},"id":56,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand \r\n    |
        where StartedOn \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup\r\n;\r\nlet queryTable = \r\n    ADXQuery \r\n    | where StartedOn
        \u003e ago(7d)\r\n    | where ((false == \"false\" and ApplicationName !=
        ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | parse _ResourceId with *
        \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    | where cluster_name
        == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    | project
        User, StartedOn, ApplicationName, CommandType, WorkloadGroup;\r\nlet FullList
        = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, StartedOn, ApplicationName, CommandType,
        WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize Count=count()
        by WorkloadGroup\r\n    | top 10 by Count desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n|
        project WorkloadGroup = iff((WorkloadGroup in(Top)) == true, WorkloadGroup,
        ''Other''), CommandType, StartedOn\r\n| make-series count() on StartedOn from
        ago(7d) to now() step 1h by WorkloadGroup\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Command
        + query count by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":8,"y":109},"id":57,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | extend
        MemoryPeak = tolong(ResourceUtilization.MemoryPeak)\r\n    | project User,
        ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, MemoryPeak, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        MemoryPeak, WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    | summarize
        Memory=sum(MemoryPeak) by WorkloadGroup\r\n    | top 10 by Memory desc\r\n    |
        distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup = iff((WorkloadGroup
        in(Top)) == true, WorkloadGroup, ''Other''), CommandType, User, StartedOn,
        MemoryPeakGB=MemoryPeak / 1024.0 / 1024.0 / 1024.0\r\n| make-series MemoryPeakGB=sum(MemoryPeakGB)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        memory by workload group","transformations":[],"transparent":true,"type":"table"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":16,"y":109},"id":58,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        system_databases = dynamic([''KustoMonitoringPersistentDatabase'', ''$systemdb'']);
        \r\nlet system_users = dynamic([''AAD app id=b753584e-c468-4503-852a-374280ce7a62'',
        ''KustoServiceBuiltInPrincipal'']); // b753584e-c468-4503-852a-374280ce7a62
        is Kusto Query Runner\r\nlet system_cluster_management_applications = dynamic([''Kusto.WinSvc.CM.Svc'']);
        // Kusto Cluster Management\r\nlet commandTable = \r\n    ADXCommand\r\n    |
        where ((false == \"false\" and ApplicationName != ''Kusto.WinSvc.DM.Svc'')
        or false == \"true\")\r\n    | where DatabaseName !in (system_databases) and
        User !in (system_users) and ApplicationName !in (system_cluster_management_applications)\r\n    |
        where StartedOn \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | project
        User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup\r\n;\r\nlet
        queryTable = \r\n    ADXQuery \r\n    | where ((false == \"false\" and ApplicationName
        != ''Kusto.WinSvc.DM.Svc'') or false == \"true\")\r\n    | where DatabaseName
        !in (system_databases) and User !in (system_users) and ApplicationName !in
        (system_cluster_management_applications)\r\n    | where StartedOn \u003e ago(7d)\r\n    |
        parse _ResourceId with * \"providers/microsoft.kusto/clusters/\" cluster_name\r\n    |
        where cluster_name == ''mitulktest''\r\n    | extend CommandType = ''Query''\r\n    |
        project User, ApplicationName, CommandType, StartedOn, TotalCPU, WorkloadGroup;\r\nlet
        FullList = commandTable\r\n    | union (queryTable)\r\n    | extend ApplicationName
        = case(ApplicationName == \"Kusto.WinSvc.DM.Svc\", \"Kusto Data Management\",
        ApplicationName)\r\n    | project User, ApplicationName, CommandType, StartedOn,
        totimespan(TotalCPU), WorkloadGroup;\r\nlet Top =\r\n    FullList\r\n    |
        summarize TotalCpu=sum(TotalCPU) by WorkloadGroup\r\n    | top 10 by TotalCpu
        desc\r\n    | distinct WorkloadGroup\r\n;\r\nFullList\r\n| project WorkloadGroup
        = iff((WorkloadGroup in(Top)) == true, WorkloadGroup, ''Other''), StartedOn,
        TotalCpuMinutes=totimespan(TotalCPU) / 1m\r\n| make-series TotalCpuMinutes=sum(TotalCpuMinutes)
        on StartedOn from ago(7d) to now() step 1h by WorkloadGroup","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Total
        CPU by workload group","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":113},"id":60,"panels":[],"title":"Tables","type":"row"},{"datasource":"$ds","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":3,"w":24,"x":0,"y":114},"id":61,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"ADXTableDetails
        \r\n| where TimeGenerated \u003e= ago(1d)\r\n| project TimeGenerated,\r\n    DatabaseName,\r\n    TableName,\r\n    RetentionPolicyOrigin,\r\n    CachingPolicyOrigin,\r\n    OriginalSize
        = TotalOriginalSize, \r\n    TotalExtentSize, \r\n    HotExtentSize = HotExtentSize,
        \r\n    RowCount = TotalRowCount, \r\n    ExtentCount = TotalExtentCount,\r\n    SoftDelete
        = format_timespan(totimespan(todynamic(RetentionPolicy).SoftDeletePeriod),
        ''d''),\r\n    HotCache = format_timespan(totimespan(todynamic(CachingPolicy).DataHotSpan),
        ''d'')      \r\n| extend CompressionRatio = round(toreal(OriginalSize) / TotalExtentSize,
        1)\r\n| extend SoftDelete = iff(RetentionPolicyOrigin == \"default\" and isempty(SoftDelete),
        \"unlimited\", SoftDelete)\r\n| extend HotCache = iff(CachingPolicyOrigin
        == \"default\" and isempty(HotCache), \"unlimited\", HotCache)\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| top 351 by HotExtentSize
        desc\r\n| project DatabaseName,\r\n    TableName,\r\n    RowCount, \r\n    HotExtentSize,\r\n    SoftDelete,\r\n    HotCache,\r\n    OriginalSize,
        \r\n    TotalExtentSize,\r\n    CompressionRatio, \r\n    ExtentCount\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"  Table
        details","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":117},"hiddenSeries":false,"id":62,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalRowCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = toreal(TotalRowCount);\r\nlet topCategories = \r\n    TotalRowCountTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalRowCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by row count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":117},"hiddenSeries":false,"id":63,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        HotExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e ago(7d)\r\n    |
        project Time = TimeGenerated, Category = strcat(TableName, \" (DB: \", DatabaseName,
        \")\"), Value = HotExtentSize;\r\nlet topCategories = \r\n    HotExtentSizeTable\r\n    |
        summarize sum(Value) by Category\r\n    | top 9 by sum_Value desc;\r\nHotExtentSizeTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by hot cache size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":127},"hiddenSeries":false,"id":64,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentCountTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = toreal(TotalExtentCount);\r\nlet
        topCategories = \r\n    TotalExtentCountTable\r\n    | summarize sum(Value)
        by Category\r\n    | top 9 by sum_Value desc\r\n;\r\nTotalExtentCountTable\r\n|
        join kind = leftouter (topCategories) on Category\r\n| project Category =
        coalesce(Category1, ''Other Tables''), Value, Time\r\n| summarize max(Value)
        by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent count","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":12,"y":127},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":true,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TotalExtentSizeTable = ADXTableDetails\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | project Time = TimeGenerated, Category = strcat(TableName,
        \" (DB: \", DatabaseName, \")\"), Value = TotalExtentSize;\r\nlet topCategories
        = \r\n    TotalExtentSizeTable\r\n    | summarize sum(Value) by Category\r\n    |
        top 9 by sum_Value desc;\r\nTotalExtentSizeTable\r\n| join kind = leftouter
        (topCategories) on Category\r\n| project Category = coalesce(Category1, ''Other
        Tables''), Value, Time\r\n| summarize max(Value) by Category, bin(Time, 1h)\r\n","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Top
        tables by extent size","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":137},"id":67,"panels":[],"title":"Cache","type":"row"},{"datasource":"$ds","description":"This
        page presents data based on the Time Range parameter. You can change the Time
        Range parameter to present data starting from 05/25/21 ,11:38 PM (based on
        your oldest diagnostic logs data).\n  The table names and the Cache policy
        column refreshes every 8 hours.\n  Notice the queries statistics presented
        are based only on queries that scanned data. For instance queries that failed,
        and queries with time operator of future don''t scan any data therefore would
        not be part of the queries statistics presented.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":24,"x":0,"y":138},"id":72,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"let
        TableUsageStatsWithLookBack = ADXTableUsageStatistics\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | extend LookBackPeriod = datetime_diff(''day'', StartedOn,
        MinCreatedOn) \r\n    | summarize CountQueries=count() by DatabaseName, TableName,
        LookBackPeriod;\r\nlet sumAllQueries = TableUsageStatsWithLookBack\r\n    |
        summarize sumQueries=sum(CountQueries) by DatabaseName, TableName;\r\nlet
        percentileLookBackTable= TableUsageStatsWithLookBack\r\n    | summarize percentile_LookbackDuration_
        = percentilesw(LookBackPeriod, CountQueries, 95) by DatabaseName, TableName;\r\nlet
        defaultRetention = 365d * 10;\r\nADXTableDetails \r\n| where TimeGenerated
        \u003e= ago(1d) // so we filter out tables that are deprecated\r\n| summarize
        arg_max(TimeGenerated, *) by DatabaseName, TableName\r\n| extend RetentionPolicy
        = iff(isnull(RetentionPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(RetentionPolicy)).SoftDeletePeriod)),\r\n    CachingPolicy
        = iff(isnull(CachingPolicy) or RetentionPolicy == \"null\", defaultRetention,
        totimespan(parse_json(tostring(CachingPolicy)).DataHotSpan))\r\n| extend ActiveCachingPolicy
        = min_of(CachingPolicy, RetentionPolicy)\r\n| join kind = leftouter (percentileLookBackTable)
        on DatabaseName, TableName\r\n| join kind = leftouter (sumAllQueries) on DatabaseName,
        TableName\r\n| where DatabaseName != \"KustoMonitoringPersistentDatabase\"\r\n|
        top 351 by HotExtentSize desc\r\n| project DatabaseName, TableName, CacheSize
        = HotExtentSize, format_timespan(ActiveCachingPolicy, ''d''),  \r\n    sumQueries=sumQueries,
        QueryPeriod = percentile_LookbackDuration_","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Table
        usage details","transformations":[],"transparent":true,"type":"table"},{"collapsed":false,"datasource":"$ds","gridPos":{"h":1,"w":24,"x":0,"y":142},"id":69,"panels":[],"title":"Ingestion","type":"row"},{"datasource":"$ds","description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":null,"filterable":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"gridPos":{"h":4,"w":8,"x":0,"y":143},"id":73,"options":{"showHeader":true},"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[],"dimensions":[{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"DiscoveryLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub"}],"timeFrom":null,"timeShift":null,"title":"Succeeded
        ingestions by table","transformations":[],"transparent":true,"type":"table"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Time
        from when a message is discovered by Azure Data Explorer, until its content
        is received by the Engine Storage for processing.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":8,"y":143},"hiddenSeries":false,"id":74,"legend":{"avg":true,"current":false,"max":false,"min":false,"show":true,"total":false,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Average"],"aggregation":"Average","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"}],"metricDefinition":"$ns","metricName":"StageLatency","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Stage
        latency (accumulative latency)","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$ds","description":"Number
        of blobs processed by the Storage Engine.","fieldConfig":{"defaults":{"color":{},"custom":{},"thresholds":{"mode":"absolute","steps":[]}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":9,"w":8,"x":16,"y":143},"hiddenSeries":false,"id":75,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":true,"values":true},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"appInsights":{"dimension":[],"metricName":"select","timeGrain":"auto"},"azureLogAnalytics":{"query":"//SucceededIngestion\r\n//|
        where TimeGenerated \u003e ago(7d)\r\n//| parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n//| where cluster_name == ''mitulktest''\r\n//| summarize
        count=dcount(IngestionSourcePath) by Database, Table\r\n//| order by [''count''],Database,
        Table\r\nlet tenant=\r\n    FailedIngestion\r\n    | where TimeGenerated \u003e
        ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet failures = FailedIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant)\r\n    | summarize f_count=count() by Database,
        Table;\r\nlet tenant_success=\r\n    SucceededIngestion\r\n    | where TimeGenerated
        \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | distinct
        TenantId\r\n    | take 1; //choose one tenant as logs are transferred to many
        tenants which represents workSpace\r\nlet success = SucceededIngestion\r\n    |
        where TimeGenerated \u003e ago(7d)\r\n    | parse _ResourceId with * \"providers/microsoft.kusto/clusters/\"
        cluster_name\r\n    | where cluster_name == ''mitulktest''\r\n    | where
        TenantId == toscalar(tenant_success)\r\n    | summarize s_count=count() by
        Database, Table;\r\nsuccess\r\n| join kind=leftouter failures on Database,
        Table\r\n| extend f_count = iif(isnull(f_count), 0, f_count)\r\n| extend s_count
        = iif(isnull(s_count), 0, s_count)\r\n| extend overall = iif(isnull(s_count),
        0.0, s_count * 100.0 / (s_count + f_count))\r\n| project Database, Table,
        s_count, overall\r\n| order by s_count, Database, Table","resultFormat":"time_series","workspace":"$ws"},"azureMonitor":{"aggOptions":["Total","Average","Minimum","Maximum"],"aggregation":"Total","allowedTimeGrainsMs":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],"dimensionFilter":"*","dimensionFilters":[{"dimension":"ComponentType","filter":"StorageEngine","operator":"eq"}],"dimensions":[{"text":"Database","value":"Database"},{"text":"Component
        Type","value":"ComponentType"},{"text":"Component Name","value":"ComponentName"}],"metricDefinition":"$ns","metricName":"BlobsProcessed","metricNamespace":"Microsoft.Kusto/clusters","resourceGroup":"$rg","resourceName":"$resource","timeGrain":"auto","timeGrains":[{"text":"auto","value":"auto"},{"text":"1
        minute","value":"PT1M"},{"text":"5 minutes","value":"PT5M"},{"text":"15 minutes","value":"PT15M"},{"text":"30
        minutes","value":"PT30M"},{"text":"1 hour","value":"PT1H"},{"text":"6 hours","value":"PT6H"},{"text":"12
        hours","value":"PT12H"},{"text":"1 day","value":"P1D"}],"top":"10"},"queryType":"Azure
        Monitor","refId":"A","subscription":"$sub"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Data
        Processed Successfuly","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"transformations":[],"transparent":true,"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"refresh":false,"schemaVersion":27,"style":"dark","tags":[],"templating":{"list":[{"current":{},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"$ds","definition":"subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceGroups($sub)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource
        Group","multi":false,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":false,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"},"description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"ns","options":[{"selected":true,"text":"Microsoft.Kusto/clusters","value":"Microsoft.Kusto/clusters"}],"query":"Microsoft.Kusto/clusters","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"datasource":"$ds","definition":"ResourceNames($sub,
        $rg, $ns)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Resource","multi":false,"name":"resource","options":[],"query":"ResourceNames($sub,
        $rg, $ns)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$ds","definition":"workspaces()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"workspaces()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-12h","to":"now"},"title":"Azure
        / Insights / Data Explorer Clusters","uid":"8UDB1s3Gk","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '166633'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-sTOuVAmOU5Lp1alF2wYtuA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:22 GMT
      grafana-trace-id:
      - 8a1bc8fddd671107b426157379967056
      mise-correlation-id:
      - e46ed973-701f-4c82-a277-81bae9d04b02
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504462.987.28.828619|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/tQZAMYrMk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-key-vaults\",\"url\":\"/d/tQZAMYrMk/azure-insights-key-vaults\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"fe1j3savseyv4a\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/fe1j3savseyv4a/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"keyvault.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__inputs\":[],\"__requires\":[{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"The
        dashboard provides insights of Azure Key Vaults overview, failures and operations.\",\"editable\":true,\"id\":10,\"links\":[],\"panels\":[{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":0},\"id\":25,\"panels\":[],\"title\":\"Overview\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":7,\"w\":19,\"x\":0,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"P1D\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"title\":\"Availability,
        Requests and Latency\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":8},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        Over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"ms\"},\"overrides\":[]},\"fill\":0,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":8},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"connected\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiLatency\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Overall
        Latency\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"ms\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":8},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":8},\"hiddenSeries\":false,\"id\":17,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiHit\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Request
        Types over Time\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":16},\"id\":23,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":17},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"2xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Successes
        (2xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":17},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCodeClass\",\"filter\":\"4xx\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Failures
        (4xx)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":17},\"hiddenSeries\":false,\"id\":6,\"legend\":{\"avg\":true,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"429\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Throttling
        (429)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"custom\":{}},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":17},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"401\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"azureMonitor\":{\"aggOptions\":[\"None\",\"Average\",\"Minimum\",\"Maximum\",\"Total\",\"Count\"],\"aggregation\":\"Count\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"StatusCode\",\"filter\":\"403\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Activity
        Type\",\"value\":\"ActivityType\"},{\"text\":\"Activity Name\",\"value\":\"ActivityName\"},{\"text\":\"Status
        Code\",\"value\":\"StatusCode\"},{\"text\":\"Status Code Class\",\"value\":\"StatusCodeClass\"}],\"metricDefinition\":\"Microsoft.KeyVault/vaults\",\"metricName\":\"ServiceApiResult\",\"metricNamespace\":\"Microsoft.KeyVault/vaults\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Authentication
        Errors (401 \\u0026 403)\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"${ds}\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":25},\"id\":21,\"panels\":[],\"title\":\"Operations\",\"type\":\"row\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":0,\"y\":26},\"id\":19,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData \\r\\n| make-series Trend = count()
        default = 0 on TimeGenerated from ago(1d) to now() step 30m by ResultStatus\\r\\n|
        join kind = inner (rawData\\n    | where $__timeFilter(TimeGenerated)\\r\\n
        \   | summarize Count = count() by ResultStatus\\r\\n    )\\r\\n    on ResultStatus\\n
        \   \\r\\n\\r\\n| project ResultStatus, Count, Trend\\r\\n| order by Count
        desc;\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Success
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":3,\"y\":26},\"hiddenSeries\":false,\"id\":35,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r\\n    // Create ResultStatus with all
        the 'success' results bucked as 'Success'\\r\\n    // Certain operations like
        StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n    | extend ResultStatus = case (ResultSignature == \\\"\\\",
        \\\"Success\\\",\\r\\n        ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n
        \       ResultSignature == \\\"Accepted\\\", \\\"Success\\\",\\r\\n        ResultSignature);
        \                           \\r\\nrawData\\n| where $__timeFilter(TimeGenerated)\\n|
        extend resultCount = iif(ResultStatus == \\\"Success\\\", 1, 0)\\n| summarize
        count(resultCount) by bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Success
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[]},\"gridPos\":{\"h\":5,\"w\":3,\"x\":10,\"y\":26},\"id\":26,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"changeCount\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"value\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                     \\r\\nrawData
        \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from ago(1d)
        to now() step 30m by ResultSignature \\n| join kind = inner (rawData\\n    |
        where $__timeFilter(TimeGenerated)\\r\\n    | summarize Count = count() by
        ResultSignature \\n    )\\r\\n    on ResultSignature \\n\\r\\n\\r\\n| project
        ResultSignature , Count, Trend\\r\\n| order by Count desc;\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"All
        Operations\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":5,\"w\":7,\"x\":13,\"y\":26},\"hiddenSeries\":false,\"id\":36,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":false,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        rawData = AzureDiagnostics \\r\\n    // Ignore Authentication operations with
        a 401. This is normal when using Key Vault SDK, first an unauthenticated request
        is done then the response is used for authentication.\\r\\n    | where Category
        == \\\"AuditEvent\\\" and not (OperationName == \\\"Authentication\\\" and
        httpStatusCode_d == 401)\\r\\n    | where OperationName in ('SecretGet', 'VaultGet')
        or '*' in ('SecretGet', 'VaultGet')\\r;                          \\r\\nrawData\\n|
        where $__timeFilter(TimeGenerated)\\n| summarize count(ResultSignature ) by
        bin(TimeGenerated, 30m)\\n| sort by TimeGenerated;\\n\\r\\r\\n\\r\",\"resultFormat\":\"table\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"All
        Operations Counts\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":\"0\",\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":24,\"x\":0,\"y\":31},\"id\":28,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        data = AzureDiagnostics \\r\\n    | where TimeGenerated \\u003e ago(1d)\\r\\n
        \   // Ignore Authentication operations with a 401. This is normal when using
        Key Vault SDK, first an unauthenticated request is done then the response
        is used for authentication.\\r\\n    | where Category == \\\"AuditEvent\\\"
        and not (OperationName == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n
        \   | where OperationName in ('SecretGet', 'VaultGet') or '*' in ('SecretGet',
        'VaultGet')\\r\\n    // Create ResultStatus with all the 'success' results
        bucked as 'Success'\\r\\n    // Certain operations like StorageAccountAutoSyncKey
        have no ResultSignature, for now set to 'Success' as well\\r\\n    | extend
        ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n        ResultSignature
        == \\\"OK\\\", \\\"Success\\\",\\r\\n        ResultSignature == \\\"Accepted\\\",
        \\\"Success\\\",\\r\\n        ResultSignature)\\r\\n    | where ResultStatus
        == 'All' or 'All' == 'All';\\r\\ndata\\r\\n// Data aggregated to the OperationName\\r\\n|
        summarize OperationCount = count(), SuccessCount = countif(ResultStatus ==
        \\\"Success\\\"), FailureCount = countif(ResultStatus != \\\"Success\\\"),
        PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\\r\\n|
        join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on
        TimeGenerated from ago(1d) to now() step 30m by OperationName\\r\\n    | project-away
        TimeGenerated)\\r\\n    on OperationName\\r\\n| order by OperationCount desc\\r\\n|
        project Name = strcat('\u26A1 ', OperationName), Id = strcat(Resource, '/',
        OperationName), ['Operation count'] = OperationCount, ['Operation count trend']
        = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount,
        ['p99 Duration'] = PDurationMs\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Name\",\"type\":\"table\"},{\"datasource\":\"${ds}\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Duration\"},\"properties\":[{\"id\":\"custom.width\",\"value\":86}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Result\"},\"properties\":[{\"id\":\"custom.width\",\"value\":94}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Operation\"},\"properties\":[{\"id\":\"custom.width\",\"value\":136}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.width\",\"value\":219}]}]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":35},\"id\":30,\"options\":{\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        gridRowSelected = dynamic({\\\"Id\\\": \\\"*\\\"});\\r\\nlet resourceName
        = split(gridRowSelected.Id, \\\"/\\\")[0];\\r\\nlet operationName = split(gridRowSelected.Id,
        \\\"/\\\")[1];\\r\\nAzureDiagnostics \\r\\n| where TimeGenerated \\u003e ago(1d)\\r\\n//
        Ignore Authentication operations with a 401. This is normal when using Key
        Vault SDK, first an unauthenticated request is done then the response is used
        for authentication.\\r\\n| where Category == \\\"AuditEvent\\\" and not (OperationName
        == \\\"Authentication\\\" and httpStatusCode_d == 401)\\r\\n| where OperationName
        in ('SecretGet', 'VaultGet') or '*' in ('SecretGet', 'VaultGet')\\r\\n| where
        resourceName == \\\"*\\\" or Resource == resourceName\\r\\n| where operationName
        == \\\"\\\" or OperationName == operationName\\r\\n// Create ResultStatus
        with all the 'success' results bucked as 'Success'\\r\\n// Certain operations
        like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success'
        as well\\r\\n| extend ResultStatus = case (ResultSignature == \\\"\\\", \\\"Success\\\",\\r\\n
        \   ResultSignature == \\\"OK\\\", \\\"Success\\\",\\r\\n    ResultSignature
        == \\\"Accepted\\\", \\\"Success\\\",\\r\\n    ResultSignature)\\r\\n| where
        ResultStatus == 'All' or 'All' == 'All'\\r\\n| extend p = pack_all()\\r\\n|
        mv-apply p on \\r\\n    ( \\r\\n    extend key = tostring(bag_keys(p)[0])\\r\\n
        \   | where isnotempty(p[key]) and isnotnull(p[key])\\r\\n    | where key
        !in (\\\"SourceSystem\\\", \\\"Type\\\")\\r\\n    | summarize make_bag(p)\\r\\n
        \   )\\r\\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature,
        Duration = DurationMs, [\\\"Details\\\"]=bag_p\\r\\n| sort by Time desc\",\"resultFormat\":\"time_series\",\"workspace\":\"$ws\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Operations
        by Time\",\"type\":\"table\"}],\"refresh\":false,\"schemaVersion\":27,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceGroups($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":\"ResourceGroups($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"hide\":2,\"label\":\"Namespace\",\"name\":\"ns\",\"query\":\"Microsoft.KeyVault/vaults\",\"skipUrlSync\":false,\"type\":\"constant\"},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"ResourceNames($sub,
        $rg, $ns)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":\"ResourceNames($sub,
        $rg, $ns)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"${ds}\",\"definition\":\"Workspaces($sub)\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":\"Workspaces($sub)\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-24h\",\"to\":\"now\"},\"title\":\"Azure
        / Insights / Key Vaults\",\"uid\":\"tQZAMYrMk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '37723'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4zHTIDNx/HlAFH3HXY3Udg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:22 GMT
      grafana-trace-id:
      - be2c99e6f33311732f92a0655f1edc81
      mise-correlation-id:
      - 119d2eba-70fc-4d84-a7af-ba16cf2a4f11
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504463.24.27.610980|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/3n2E8CrGk
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"azure-insights-storage-accounts\",\"url\":\"/d/3n2E8CrGk/azure-insights-storage-accounts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":1,\"folderUid\":\"fe1j3savseyv4a\",\"folderTitle\":\"Azure
        Monitor\",\"folderUrl\":\"/dashboards/f/fe1j3savseyv4a/azure-monitor\",\"provisioned\":true,\"provisionedExternalId\":\"storage.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__requires\":[{\"id\":\"gauge\",\"name\":\"Gauge\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"7.4.3\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"0.3.0\"},{\"id\":\"graph\",\"name\":\"Graph\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":11,\"iteration\":1620257813794,\"links\":[],\"panels\":[{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":0,\"y\":1},\"id\":7,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"/^Availability$/\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability\",\"transparent\":true,\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":3,\"y\":1},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"PT5M\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":6,\"y\":1},\"id\":8,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":9,\"y\":1},\"id\":9,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":12,\"y\":1},\"id\":10,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Ingress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":3,\"x\":15,\"y\":1},\"id\":11,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"value_and_name\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\",\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Egress\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transparent\":true,\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":5},\"hiddenSeries\":false,\"id\":2,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Table
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Blob
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"File
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"Queue
        transactions\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by storage type\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"short\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":5},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"alignAsTable\":false,\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"rightSide\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Transactions
        by API Name\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":14},\"id\":13,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"multi\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"\",\"alias\":\"Table
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Capacity
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineStyle\":{\"fill\":\"solid\"},\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"percent\"},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":14},\"id\":12,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by storage type\",\"transformations\":[],\"type\":\"timeseries\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":23},\"id\":52,\"panels\":[],\"title\":\"Failures\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        ClientOtherError\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}},{\"id\":\"displayName\",\"value\":\"ClientOtherError\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Success\"}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":24},\"id\":16,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"red\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Transactions
        Success\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":24},\"id\":18,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":30},\"id\":20,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Blob Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":30},\"id\":22,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"File Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":38},\"id\":24,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Table Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Total\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"basic\"}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":38},\"id\":26,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Total\"],\"aggregation\":\"Total\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"},{\"dimension\":\"ResponseType\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Response
        type\",\"value\":\"ResponseType\"},{\"text\":\"Geo type\",\"value\":\"GeoType\"},{\"text\":\"API
        name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Transactions\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"}],\"title\":\"Queue Services\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"reducers\":[\"sum\"]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":46},\"id\":50,\"panels\":[],\"title\":\"Performance\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":6,\"x\":0,\"y\":47},\"id\":28,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"sum\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":0,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Success
        Server Latency\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":18,\"x\":6,\"y\":47},\"id\":30,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"timeseries\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"blue\",\"value\":null}]},\"unit\":\"ms\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"lcd-gauge\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Min\"},\"properties\":[{\"id\":\"custom.displayMode\",\"value\":\"gradient-gauge\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"continuous-GrYlRd\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Field\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Latency\"}]}]},\"gridPos\":{\"h\":11,\"w\":24,\"x\":0,\"y\":53},\"id\":32,\"options\":{\"showHeader\":true},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessE2ELatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"SuccessServerLatency\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"}],\"title\":\"\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\",\"max\",\"min\"]}},{\"id\":\"sortBy\",\"options\":{\"fields\":{},\"sort\":[{\"desc\":true,\"field\":\"Mean\"}]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":64},\"id\":48,\"panels\":[],\"title\":\"Availability\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"description\":\"The
        data comes from Storage metrics. It measures the availability of requests
        on Storage accounts.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"red\",\"value\":null},{\"color\":\"green\",\"value\":100}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":65},\"id\":34,\"options\":{\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"showThresholdLabels\":false,\"showThresholdMarkers\":false,\"text\":{}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"gauge\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":null,\"filterable\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Mean\"},\"properties\":[{\"id\":\"unit\",\"value\":\"percent\"},{\"id\":\"custom.displayMode\",\"value\":\"color-background\"},{\"id\":\"color\",\"value\":{\"mode\":\"continuous-RdYlGr\"}}]}]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":73},\"id\":36,\"maxDataPoints\":1,\"options\":{\"showHeader\":false},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[{\"dimension\":\"ApiName\",\"filter\":\"\",\"operator\":\"eq\"}],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Availability
        by API name\",\"transformations\":[{\"id\":\"reduce\",\"options\":{\"includeTimeField\":false,\"mode\":\"seriesToRows\",\"reducers\":[\"mean\"]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"percent\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":73},\"hiddenSeries\":false,\"id\":38,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":true,\"values\":true},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"File
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"},{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\",\"Minimum\",\"Maximum\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Availability\",\"allowedTimeGrainsMs\":[60000,300000,900000,1800000,3600000,21600000,43200000,86400000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Geo
        type\",\"value\":\"GeoType\"},{\"text\":\"API name\",\"value\":\"ApiName\"},{\"text\":\"Authentication\",\"value\":\"Authentication\"}],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"Availability\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        minute\",\"value\":\"PT1M\"},{\"text\":\"5 minutes\",\"value\":\"PT5M\"},{\"text\":\"15
        minutes\",\"value\":\"PT15M\"},{\"text\":\"30 minutes\",\"value\":\"PT30M\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"},{\"text\":\"6 hours\",\"value\":\"PT6H\"},{\"text\":\"12
        hours\",\"value\":\"PT12H\"},{\"text\":\"1 day\",\"value\":\"P1D\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Availability
        Trend\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"transformations\":[],\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"percent\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"collapsed\":false,\"datasource\":\"$ds\",\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":81},\"id\":46,\"panels\":[],\"title\":\"Capacity\",\"type\":\"row\"},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":24,\"x\":0,\"y\":82},\"id\":40,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"text\":{},\"textMode\":\"auto\"},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Account
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns\",\"metricName\":\"UsedCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"title\":\"\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{},\"custom\":{},\"thresholds\":{\"mode\":\"absolute\",\"steps\":[]},\"unit\":\"decbytes\"},\"overrides\":[]},\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":8,\"w\":12,\"x\":0,\"y\":90},\"hiddenSeries\":false,\"id\":42,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"7.4.3\",\"pointradius\":1,\"points\":true,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Capacity\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCapacity\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"thresholds\":[],\"timeFrom\":null,\"timeRegions\":[],\"timeShift\":null,\"title\":\"Storage
        capacity\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"buckets\":null,\"mode\":\"time\",\"name\":null,\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"decbytes\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true},{\"format\":\"short\",\"label\":null,\"logBase\":1,\"max\":null,\"min\":null,\"show\":true}],\"yaxis\":{\"align\":false,\"alignLevel\":null}},{\"datasource\":\"$ds\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"graph\":false,\"legend\":false,\"tooltip\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":4,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"always\",\"spanNulls\":true},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":12,\"x\":12,\"y\":90},\"id\":44,\"options\":{\"legend\":{\"calcs\":[\"mean\"],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltipOptions\":{\"mode\":\"single\"}},\"pluginVersion\":\"7.4.3\",\"targets\":[{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Blob
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"Blob
        type\",\"value\":\"BlobType\"},{\"text\":\"Blob tier\",\"value\":\"Tier\"}],\"metricDefinition\":\"$ns/blobServices\",\"metricName\":\"BlobCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/blobServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"B\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Table
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/tableServices\",\"metricName\":\"TableCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/tableServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"C\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"File
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[{\"text\":\"File
        Share\",\"value\":\"FileShare\"}],\"metricDefinition\":\"$ns/fileServices\",\"metricName\":\"FileCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/fileServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"D\",\"subscription\":\"$sub\"},{\"appInsights\":{\"dimension\":[],\"metricName\":\"select\",\"timeGrain\":\"auto\"},\"azureLogAnalytics\":{\"query\":\"//change
        this example to create your own time series query\\n\\u003ctable name\\u003e
        \                                                             //the table
        to query (e.g. Usage, Heartbeat, Perf)\\n| where $__timeFilter(TimeGenerated)
        \                                     //this is a macro used to show the full
        chart\u2019s time range, choose the datetime column here\\n| summarize count()
        by \\u003cgroup by column\\u003e, bin(TimeGenerated, $__interval) //change
        \u201Cgroup by column\u201D to a column in your table, such as \u201CComputer\u201D.
        The $__interval macro is used to auto-select the time grain. Can also use
        1h, 5m etc.\\n| order by TimeGenerated asc\",\"resultFormat\":\"time_series\",\"workspace\":\"00000000-0000-0000-0000-000000000000\"},\"azureMonitor\":{\"aggOptions\":[\"Average\"],\"aggregation\":\"Average\",\"alias\":\"Queue
        Count\",\"allowedTimeGrainsMs\":[3600000],\"dimensionFilter\":\"*\",\"dimensionFilters\":[],\"dimensions\":[],\"metricDefinition\":\"$ns/queueServices\",\"metricName\":\"QueueCount\",\"metricNamespace\":\"Microsoft.Storage/storageAccounts/queueServices\",\"resourceGroup\":\"$rg\",\"resourceName\":\"$resource/default\",\"timeGrain\":\"auto\",\"timeGrains\":[{\"text\":\"auto\",\"value\":\"auto\"},{\"text\":\"1
        hour\",\"value\":\"PT1H\"}],\"top\":\"10\"},\"hide\":false,\"insightsAnalytics\":{\"query\":\"\",\"resultFormat\":\"time_series\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"E\",\"subscription\":\"$sub\"}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Storage
        count\",\"type\":\"timeseries\"}],\"refresh\":false,\"schemaVersion\":27,\"tags\":[],\"templating\":{\"list\":[{\"current\":{},\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Data
        Source\",\"multi\":false,\"name\":\"ds\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"subscriptions()\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":\"subscriptions()\",\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${ds}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"Namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        [\\\"type\\\"]\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"type\":\"query\"},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureResourceGraph\":{\"query\":\"resources\\r\\n|
        where [\\\"type\\\"] =~ \\\"Microsoft.Storage/storageAccounts\\\"\\r\\n| distinct
        resourceGroup\"},\"queryType\":\"Azure Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$sub\"]},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"allValue\":null,\"current\":{},\"datasource\":\"$ds\",\"definition\":\"\",\"description\":null,\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Resource\",\"multi\":false,\"name\":\"resource\",\"options\":[],\"query\":{\"namespace\":\"$ns\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":5,\"tagValuesQuery\":\"\",\"tags\":[],\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Azure
        / Insights / Storage Accounts\",\"uid\":\"3n2E8CrGk\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123790'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-o8b+muqXxQ6llkIfz1guSA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:22 GMT
      grafana-trace-id:
      - a11eba3a83e149e619bcbfd14d4b1700
      mise-correlation-id:
      - 94737d91-05e4-497c-807c-9e6689e95a89
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504463.463.28.240777|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByRG
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsRG.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Resource Group","editable":true,"id":3,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n  \u003cp\u003eWelcome to
        the Azure Monitor data source for Grafana. To learn more about it, visit our
        \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights to get
        started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Resource
        Group"},"properties":[{"id":"custom.width","value":136}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":111}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":98}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 500;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize hint.shufflekey = ComputerId Average = avg(Val), Max = max(Val),
        percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer, _ResourceId\r\n|
        project ComputerId, Computer, Average, Max, P5th = percentile_Val_5, P10th
        = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;let trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":true,"NodeProps":true,"P50th":false,"ResourceId":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","UseRelativeScale":"","list_TrendPoint":"95th Trend","resGroup":"Resource
        Group","resourceGroup":"Resource Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId   \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}??/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/??${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}??/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":95}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","Type":"","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":108}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":114}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":104}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":106}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":103}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":95}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":102}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":107}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[{"datasource":{"uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":10},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"/subscriptions/$sub","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":84}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":105}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":110}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":97}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":22},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"description":"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \u003e Save As. Edit as you''d like in your new copy
        by going to Settings \u003e JSON Model.","fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":22},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"/subscriptions/$sub","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max vailable Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Logical
        Disk Space Used %","type":"row"}],"refresh":"","schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"ResourceGroups($sub)","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":"ResourceGroups($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":2,"includeAll":false,"multi":false,"name":"tenantId","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        project TenantId","resource":"/subscriptions/$sub"},"queryType":"Azure Log
        Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Resource Group","uid":"AzVmInsightsByRG","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '123308'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vWQ4HEKG4ahdWAny8uVWOQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:22 GMT
      grafana-trace-id:
      - ce493900ef2163c12326c256693e4fdb
      mise-correlation-id:
      - 53898bdc-5d33-4348-ad3e-7236e119d281
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504463.713.29.697397|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/AzVmInsightsByWS
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:33Z","updated":"2024-10-21T09:48:33Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"vMInsightsWs.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":[],"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.4.3"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"description":"This dashboard shows
        the performance and health of Azure Virtual Machines via different metrics
        collected by Azure Monitor VM Insights. Filter data by Workspace","editable":true,"id":5,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":5,"w":24,"x":0,"y":0},"id":54,"options":{"content":"\u003cdiv
        style=\"padding: 1em; text-align: center\"\u003e\n    \u003cp\u003eWelcome
        to the Azure Monitor data source for Grafana. To learn more about it, visit
        our \u003ca href=\"https://grafana.com/docs/grafana/latest/datasources/azuremonitor/\"
        target=\"__blank\"\u003edocs\u003c/a\u003e.  \u003c/p\u003e\n  \u003cp\u003e  Choose
        the resource group(s) with VMs enabled with Azure Monitor VM Insights and
        related Workspace to get started.\u003c/p\u003e\n\u003c/div\u003e","mode":"markdown"},"title":"How
        to activate this dashboard","type":"text"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":28,"panels":[],"title":"CPU
        Utilization %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMax":100,"axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":6},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n | summarize arg_max(TimeGenerated,
        *) by Machine        \n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n
        | summarize arg_max(Priority, *) by ComputerId;\n summary\n | join (InsightsMetrics    \n
        | where TimeGenerated between (startDateTime .. endDateTime)    \n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \n
        | where ComputerId in (computerList)    \n | summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId   \n | sort by TimeGenerated asc) on ComputerId","resource":"$ws","resultFormat":"table","workspace":""},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":"$sub","subscriptions":[]}],"title":"${agg:text}
        CPU Utilization %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/?${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}?/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":76}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":75}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":72}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":78}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":16},"id":26,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"frameIndex":1,"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"\r\nlet
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')  \r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resourceGroup
        ''/p(.+)'' *\t\r\n| where resourceGroup in~ ($rg)  \r\n| extend ComputerId
        = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n| summarize hint.shufflekey
        = ComputerId Average = round(avg(Val), 2), Max = max(Val), percentiles(Val,
        5, 10, 50, 80, 90, 95) by ComputerId, Computer, _ResourceId\r\n| project ComputerId,
        Computer, Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10,
        P50th = percentile_Val_50, P80th = percentile_Val_80, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend AzureCloudServiceNodeIdentity = iif(isnotempty(AzureCloudServiceName),
        strcat(AzureCloudServiceInstanceId, ''|'', AzureCloudServiceDeployment), ''''),
        AzureScaleSetNodeIdentity = iif(isnotempty\r\n(AzureVmScaleSetName), strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''), ComputerProps = pack(''type'', ''StandAloneNode'',
        ''name'', DisplayName, ''mappingResourceId'', \r\nResourceId, ''subscriptionId'',
        AzureSubscriptionId, ''resourceGroup'', AzureResourceGroup, ''azureResourceId'',
        _ResourceId), AzureCloudServiceNodeProps =  pack(''type'', ''AzureCloudServiceNode'',\r\n''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId, ''cloudServiceRoleName'', AzureCloudServiceRoleName,
        ''cloudServiceDeploymentId'', AzureCloudServiceDeployment, ''fullDisplayName'',
        FullDisplayName,''cloudServiceName'', AzureCloudServiceName, ''mappingResourceId'',
        ResourceId), AzureScaleSetNodeProps = pack(''type'', ''AzureScaleSetNode'',
        ''scaleSetInstanceId'', AzureResourceName, ''vmScaleSetDeploymentId'', \r\nAzureVmScaleSetDeployment,
        ''vmScaleSetName'', AzureVmScaleSetName, ''serviceFabricClusterName'', AzureServiceFabricClusterName,
        ''vmScaleSetResourceId'', AzureVmScaleSetResourceId, ''resourceGroupName'',
        \r\nAzureResourceGroup, ''subscriptionId'', AzureSubscriptionId, ''fullDisplayName'',
        FullDisplayName, ''mappingResourceId'', ResourceId)        \r\n| project   ComputerId,
        Computer, NodeId = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeIdentity,\r\nComputer),
        NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeProps,
        isnotempty(AzureScaleSetNodeIdentity), AzureScaleSetNodeProps, ComputerProps),
        Priority = 2;\r\nlet NodeIdentityAndProps = union kind=inner isfuzzy = true
        EmptyNodeIdentityAndProps, OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps\r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Average, P50th, P90th, P95th, Max, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"CPU
        Utilization % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"Max":false,"NodeId":false,"NodeProps":false,"P50th":false,"ResourceId":false,"name
        2":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Column1":"Computer","Name":"Resource
        Name","ResourceId":"Resource ID","UseRelativeScale":"","list_TrendPoint":"95th
        Trend","resGroup":"Resource Group","resourceGroup":"Resource Group","tenantId":"Tenant
        ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":16},"id":46,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachine`alesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n
        | extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n | where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n | extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n | summarize
        arg_max(TimeGenerated, *) by Machine        \r\n | extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName), strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''), AzureScaleSetNodeIdentity = iif(isnotempty(AzureVmScaleSetName),
        strcat(AzureVmScaleSetInstanceId, ''|'', AzureVmScaleSetDeployment), ''''),
        ComputerProps = pack(''type'', ''StandAloneNode'',                           ''name'',
        DisplayName,                           ''mappingResourceId'', ResourceId,                           ''subscriptionId'',
        AzureSubscriptionId,                           ''resourceGroup'', AzureResourceGroup,                           ''azureResourceId'',
        _ResourceId),                  AzureCloudServiceNodeProps =                      pack(''type'',
        ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n
        | project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\n
        let NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n
        | summarize arg_max(Priority, *) by ComputerId;\r\n summary\r\n | join (InsightsMetrics    \r\n
        | where TimeGenerated between (startDateTime .. endDateTime)    \r\n | where
        Origin == ''vm.azm.ms'' and (Namespace == ''Processor'' and Name == ''UtilizationPercentage'')    \r\n
        | extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)    \r\n
        | where ComputerId in (computerList)    \r\n | summarize Max = max(Val) by
        bin(TimeGenerated, trendBinSize), ComputerId  \r\n | sort by TimeGenerated
        asc) on ComputerId","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max CPU Utilization
        % and trend lines","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"Computer":false,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true,"score":false},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":30,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"decmbytes"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\nlet summary = InsightsMetrics\n| where
        TimeGenerated between (startDateTime .. endDateTime)\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\n| where
        resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\n| summarize hint.shufflekey=ComputerId $agg by ComputerId, Computer\n|
        top 10 by score;\nlet computerList=(summary\n| project ComputerId, Computer);\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet OmsNodeIdentityAndProps
        = computerList        \n| extend NodeId = ComputerId        \n| extend Priority
        = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'', ''name'',
        Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n|where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize $agg by bin(TimeGenerated, trendBinSize),
        ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Available Memory","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Min"},"properties":[{"id":"custom.width","value":81}]},{"matcher":{"id":"byName","options":"P5th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P10th"},"properties":[{"id":"custom.width","value":77}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":91}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":78}]},{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}?/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/?${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}?/infrainsights"}]}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":17},"id":32,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet maxResultCount
        = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n| where TimeGenerated
        between (startDateTime .. endDateTime)\r\n| where Origin == ''vm.azm.ms''
        and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n| parse kind=regex
        tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)'' *\r\n| where
        resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId), Computer,
        _ResourceId)\r\n| summarize hint.shufflekey = ComputerId Average = round(avg(Val),
        2), Min = min(Val), percentiles(Val, 5, 10, 50, 80, 90, 95) by ComputerId,
        Computer, _ResourceId\r\n| project ComputerId, Computer, Average, Min, P5th
        = percentile_Val_5, P10th = percentile_Val_10, P50th = percentile_Val_50,
        P80th = percentile_Val_80,\r\nP90th = percentile_Val_90, P95th = percentile_Val_95,
        ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList =
        summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps
        = datatable(ComputerId: string, Computer:string, NodeId:string, NodeProps:dynamic,
        Priority: long) [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n|
        extend NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend
        NodeProps = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet
        ServiceMapNodeIdentityAndProps = VMComputer        \r\n| where TimeGenerated
        \u003e= startDateTime        \r\n| where TimeGenerated \u003c endDateTime        \r\n|
        extend ResourceId = strcat(''machines/'', Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId),
        Computer, _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| project ComputerId, Computer;\r\nsummaryPerComputer\r\n|
        join ( trend ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n|
        parse tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName
        \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\"
        vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup
        \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse tolower(ResourceId)
        with * \"microsoft.compute/\" typeScale \"/\" nameScale \"/virtualmachines\"
        remaining\r\n| project resourceGroup, Min, Average, P5th, P10th, P50th, Computer,
        Type = iff(isnotempty(typeScale), typeScale, typeVM), Name = iff(isnotempty(nameScale),
        nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Memory Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true,"list_TrendPoint":true},"indexByName":{"Average":6,"Computer":0,"Min":2,"Name":8,"P10th":4,"P50th":5,"P5th":3,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"P5th Trend","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":17},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["min"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        =  (endDateTime - startDateTime)/100;\r\nlet summary = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize hint.shufflekey=ComputerId Average =
        avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th = round(percentile(Val,
        10), 2), \r\nP50th = round(percentile(Val, 50), 2), P80th = round(percentile(Val,
        80), 2),\r\nP90th = round(percentile(Val, 90), 2), P95th = round(percentile(Val,
        95), 2) by ComputerId, Computer\r\n| top 10 by ${agg:text};\r\nlet computerList=(summary\r\n|
        project ComputerId, Computer);\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|where
        TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true  EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Memory'' and Name == ''AvailableMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Min = min(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A"}],"title":"Min Available Memory and Trend Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Available
        Memory","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":22,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        \nlet
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)         \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;summary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Sent Rate","transformations":[{"id":"organize","options":{"excludeByName":{"Computer":false,"ComputerId":true,"ComputerId1":true,"P5th":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":94}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":101}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":131}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":19},"id":34,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;\r\nsummaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Sent Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":19},"id":48,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        let ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;summary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''WriteBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Sent and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Sent","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":36,"panels":[{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"Bps"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":9},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| summarize Val = sum(Val) by bin(TimeGenerated, trendBinSize),
        ComputerId, Computer\n| summarize hint.shufflekey=ComputerId $agg by ComputerId,
        Computer\n| top 10 by score;\nlet computerList=(summary\n| project ComputerId,
        Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId: string,
        Computer:string, NodeId:string, NodeProps:dynamic, Priority: long) [];        let
        OmsNodeIdentityAndProps = computerList        \n| extend NodeId = ComputerId        \n|
        extend Priority = 1        \n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps = VMComputer        \n|
        where TimeGenerated \u003e= startDateTime        \n| where TimeGenerated \u003c
        endDateTime        \n| extend ResourceId = strcat(''machines/'', Machine)        \n|
        extend tempComputerId=iff(isempty(_ResourceId), Computer, _ResourceId) \n|
        extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \nComputer\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Bytes Received Rate","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":97}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":82}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":99}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":93}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":20},"id":38,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime) \r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        summarize Val = sum(Val) by bin(TimeGenerated, 1m), ComputerId, Computer,
        _ResourceId\r\n| summarize hint.shufflekey = ComputerId Average = avg(Val),
        Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by ComputerId, Computer,
        _ResourceId\r\n| project ComputerId, Computer, Average, Max, P5th = percentile_Val_5,
        P10th = percentile_Val_10, P50th = percentile_Val_50, P90th = percentile_Val_90,
        P95th = percentile_Val_95, ResourceId = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet
        computerList = summaryPerComputer\r\n| summarize by ComputerId, Computer;\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        \r\nlet OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        1m), ComputerId, Computer, _ResourceId\r\n| summarize hint.shufflekey = ComputerId
        TrendValue = percentile(Val, 95) by ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n| project ComputerId, Computer\r\n| summarize hint.shufflekey
        = ComputerId by ComputerId, Computer;summaryPerComputer\r\n| join ( trend
        ) on ComputerId\r\n| join ( NodeIdentityAndProps ) on ComputerId\r\n| parse
        tolower(ResourceId) with * \"virtualmachinescalesets/\" scaleSetName \"/virtualmachines/\"
        vmNameScale\r\n| parse tolower(ResourceId) with * \"virtualmachines/\" vmName\r\n|
        parse tolower(ResourceId) with * \"resourcegroups/\" resourceGroup \"/providers/microsoft.compute/\"
        typeVM \"/\" nameVM\r\n| parse tolower(ResourceId) with * \"microsoft.compute/\"
        typeScale \"/\" nameScale \"/virtualmachines\" remaining\r\n| project resourceGroup,
        Average, P50th, P90th, P95th, Max, Computer, Type = iff(isnotempty(typeScale),
        typeScale, typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Bytes Received Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"NodeId":true,"NodeProps":true,"ResourceId":true,"UseRelativeScale":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":20},"id":50,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\r\nlet MaxListSize = 1000;\r\nlet summary
        = InsightsMetrics\r\n| where TimeGenerated between (startDateTime .. endDateTime)\r\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        parse kind=regex tolower(_ResourceId) with ''resourcegroups/'' resGroup ''/p(.+)''
        *\r\n| where resGroup in~ ($rg)\r\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, Computer\r\n| summarize hint.shufflekey=ComputerId
        Average = avg(Val), Min = min(Val),P5th = round(percentile(Val, 5), 2), P10th
        = round(percentile(Val, 10), 2), \r\nP50th = round(percentile(Val, 50), 2),
        P80th = round(percentile(Val, 80), 2),\r\nP90th = round(percentile(Val, 90),
        2), P95th = round(percentile(Val, 95), 2) by ComputerId, Computer\r\n| top
        10 by ${agg:text};\r\nlet computerList=(summary\r\n| project ComputerId, Computer);\r\nlet
        EmptyNodeIdentityAndProps = datatable(ComputerId: string, Computer:string,
        NodeId:string, NodeProps:dynamic, Priority: long) [];        let OmsNodeIdentityAndProps
        = computerList        \r\n| extend NodeId = ComputerId        \r\n| extend
        Priority = 1        \r\n| extend NodeProps = pack(''type'', ''StandAloneNode'',
        ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps = VMComputer        \r\n|
        where TimeGenerated \u003e= startDateTime        \r\n| where TimeGenerated
        \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)        \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\r\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        let
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nsummary\r\n| join (InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''Network'' and Name == ''ReadBytesPerSecond'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)\r\n| summarize Val = sum(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId, \r\nComputer\r\n| summarize Max = max(Val) by bin(TimeGenerated,
        trendBinSize), ComputerId\r\n| sort by TimeGenerated asc) on ComputerId\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max Available Bytes
        Recieved and Trend  Line","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"title":"Network
        Bytes Received","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":40,"panels":[],"title":"Logical
        Disk Space Used %","type":"row"},{"datasource":{"uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisGridShow":true,"axisLabel":"","axisPlacement":"auto","axisSoftMin":0,"barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":true,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"-","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":32},"id":20,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\nlet endDateTime = $__timeTo;\nlet trendBinSize
        = (endDateTime - startDateTime)/100;\nlet MaxListSize = 1000;\nlet summary
        = InsightsMetrics\n| where TimeGenerated between (startDateTime .. endDateTime)\n|
        where Origin == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name ==
        ''FreeSpaceMB'')\n| parse kind=regex tolower(_ResourceId) with ''resourcegroups/''
        resGroup ''/p(.+)'' *\n| where resGroup in~ ($rg)\n| extend ComputerId = iff(isempty(_ResourceId),
        Computer, _ResourceId)\n| extend Tags = todynamic(Tags)\n| extend Total =
        todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize hint.shufflekey=ComputerId
        $agg by ComputerId, Computer\n| top 10 by score;\nlet computerList=(summary\n|
        project ComputerId, Computer);\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \nlet OmsNodeIdentityAndProps = computerList        \n| extend
        NodeId = ComputerId        \n| extend Priority = 1        \n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \n| where TimeGenerated \u003e= startDateTime        \n|
        where TimeGenerated \u003c endDateTime        \n| extend ResourceId = strcat(''machines/'',
        Machine)         \n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \n| extend laResourceId = iff(isempty(_ResourceId),'''', replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',
        @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'', _ResourceId))\n|
        extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \n| summarize arg_max(TimeGenerated,
        *) by Machine        \n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \n|
        summarize arg_max(Priority, *) by ComputerId;\nsummary\n| join (InsightsMetrics\n|
        where TimeGenerated between (startDateTime .. endDateTime)\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\n| where
        ComputerId in (computerList)\n| extend Tags = todynamic(Tags)\n| extend Total
        = todouble(Tags[''vm.azm.ms/diskSizeMB''])\n| summarize Val = sum(Val), Total
        = sum(Total)  by bin(TimeGenerated, trendBinSize), ComputerId, Computer, _ResourceId\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\n| summarize $agg by bin(TimeGenerated,
        trendBinSize), ComputerId\n| sort by TimeGenerated asc) on ComputerId\n","resource":"$ws","resultFormat":"table","workspace":""},"queryType":"Azure
        Log Analytics","refId":"A","subscription":"","subscriptions":[]}],"title":"${agg:text}
        Logical Disk Space Used %","transformations":[{"id":"organize","options":{"excludeByName":{"ComputerId":true,"ComputerId1":true,"P95th":true,"score":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Computer"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"","url":"https://ms.portal.azure.com/#@${__data.fields[\"Tenant
        ID\"]}/resource/subscriptions/${sub}/resourcegroups/${__data.fields[\"Resource
        Group\"]}/providers/microsoft.compute/${__data.fields.Type}/${__data.fields[\"Resource
        Name\"]}/infrainsights"}]},{"id":"custom.width","value":193}]},{"matcher":{"id":"byName","options":"Average"},"properties":[{"id":"custom.width","value":89}]},{"matcher":{"id":"byName","options":"P50th"},"properties":[{"id":"custom.width","value":86}]},{"matcher":{"id":"byName","options":"P90th"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"P95th"},"properties":[{"id":"custom.width","value":87}]},{"matcher":{"id":"byName","options":"Max"},"properties":[{"id":"custom.width","value":77}]}]},"gridPos":{"h":12,"w":14,"x":0,"y":44},"id":42,"options":{"footer":{"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nlet trend = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = percentile(Val, 95) by MountId, ComputerId, Computer,
        bin(TimeGenerated, trendBinSize)\r\n| project MountId, ComputerId, Computer\r\n|
        summarize hint.shufflekey = ComputerId by MountId, ComputerId, Computer;summaryPerComputer\r\n|
        join kind=leftouter ( trend ) on ComputerId, MountId\r\n| join kind=leftouter
        ( NodeIdentityAndProps ) on ComputerId\r\n| extend VolumeId = strcat(MountId,
        ''|'', NodeId), VolumeProps = pack(''type'', ''NodeVolume'', ''volumeName'',
        MountId, ''node'', NodeProps)\r\n| parse tolower(ResourceId) with * \"virtualmachinescalesets/\"
        scaleSetName \"/virtualmachines/\" vmNameScale\r\n| parse tolower(ResourceId)
        with * \"virtualmachines/\" vmName\r\n| parse tolower(ResourceId) with * \"resourcegroups/\"
        resourceGroup \"/providers/microsoft.compute/\" typeVM \"/\" nameVM\r\n| parse
        tolower(ResourceId) with * \"microsoft.compute/\" typeScale \"/\" nameScale
        \"/virtualmachines\" remaining\r\n| project resourceGroup, Average, P50th,
        P90th, P95th, Max, Computer,  Type = iff(isnotempty(typeScale), typeScale,
        typeVM), Name = iff(isnotempty(nameScale), nameScale, nameVM)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},{"azureResourceGraph":{"query":"resources\r\n|
        where tolower(type) contains \"virtualmachines\" and resourceGroup in~ ($rg)
        \r\n| project Name = tolower(name), tenantId, resourceGroup"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"hide":false,"queryType":"Azure
        Resource Graph","refId":"B","subscription":"","subscriptions":["$sub"]}],"title":"Available
        Logical Space Disk Used % Statistics","transformations":[{"id":"merge","options":{}},{"id":"organize","options":{"excludeByName":{"ResourceId":true,"UseRelativeScale":true,"VolumeId":true,"VolumeProps":true},"indexByName":{"Average":2,"Computer":0,"Max":6,"Name":8,"P50th":3,"P90th":4,"P95th":5,"Type":7,"resourceGroup":1,"tenantId":9},"renameByName":{"Name":"Resource
        Name","list_TrendPoint":"Trend 95th","resGroup":"Resource Group","resourceGroup":"Resource
        Group","tenantId":"Tenant ID","typeName":"Type/Name"}}},{"id":"filterByValue","options":{"filters":[{"config":{"id":"isNotNull","options":{}},"fieldName":"Computer"}],"match":"all","type":"include"}}],"type":"table"},{"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"light-green","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":12,"w":10,"x":14,"y":44},"id":52,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["max"],"fields":"","values":false},"text":{},"textMode":"auto"},"targets":[{"azureLogAnalytics":{"query":"let
        startDateTime = $__timeFrom;\r\nlet endDateTime = $__timeTo;\r\nlet trendBinSize
        = 5m;\r\nlet maxResultCount = 10;\r\nlet summaryPerComputer = InsightsMetrics\r\n|
        where TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin
        == ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        extend Tags = todynamic(Tags)\r\n| extend Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']),
        MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n| extend Val = (100.0 -
        (Val * 100.0)/Total)\r\n| summarize hint.shufflekey = ComputerId Average =
        avg(Val), Max = max(Val), percentiles(Val, 5, 10, 50, 90, 95) by MountId,
        ComputerId, Computer, _ResourceId\r\n| project MountId, ComputerId, Computer,
        Average, Max, P5th = percentile_Val_5, P10th = percentile_Val_10, P50th =
        percentile_Val_50, P90th = percentile_Val_90, P95th = percentile_Val_95, ResourceId
        = _ResourceId\r\n| top 10 by ${agg:text};\r\nlet computerList = summaryPerComputer\r\n|
        summarize by ComputerId, Computer;\r\nlet EmptyNodeIdentityAndProps = datatable(ComputerId:
        string, Computer:string, NodeId:string, NodeProps:dynamic, Priority: long)
        [];        \r\nlet OmsNodeIdentityAndProps = computerList        \r\n| extend
        NodeId = ComputerId        \r\n| extend Priority = 1        \r\n| extend NodeProps
        = pack(''type'', ''StandAloneNode'', ''name'', Computer);        \r\nlet ServiceMapNodeIdentityAndProps
        = VMComputer        \r\n| where TimeGenerated \u003e= startDateTime        \r\n|
        where TimeGenerated \u003c endDateTime        \r\n| extend ResourceId = strcat(''machines/'',
        Machine)         \r\n| extend tempComputerId=iff(isempty(_ResourceId), Computer,
        _ResourceId) \r\n| extend laResourceId = iff(isempty(_ResourceId),'''',     replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',     @''virtualmachinescalesets/\\\\1/virtualmachines/\\\\1_\\\\2'',
        _ResourceId))    \r\n| extend oldLaResourceId=iff(isempty(_ResourceId),'''',replace(@''virtualmachinescalesets/(.+)/virtualmachines/(\\\\d+)'',@''virtualmachines/\\\\1_\\\\2'',
        _ResourceId))        \r\n| where tempComputerId in~ (computerList) or laResourceId
        in (computerList) or oldLaResourceId in (computerList) \r\n| extend ComputerId
        = iff(laResourceId in (computerList), laResourceId, iff(oldLaResourceId in
        (computerList), oldLaResourceId, tempComputerId))        \r\n| summarize arg_max(TimeGenerated,
        *) by Machine        \r\n| extend                  AzureCloudServiceNodeIdentity
        = iif(isnotempty(AzureCloudServiceName),                      strcat(AzureCloudServiceInstanceId,
        ''|'', AzureCloudServiceDeployment), ''''),                  AzureScaleSetNodeIdentity
        = iif(isnotempty(AzureVmScaleSetName),                      strcat(AzureVmScaleSetInstanceId,
        ''|'', AzureVmScaleSetDeployment), ''''),                  ComputerProps =                      pack(''type'',
        ''StandAloneNode'',                           ''name'', DisplayName,                           ''mappingResourceId'',
        ResourceId,                           ''subscriptionId'', AzureSubscriptionId,                           ''resourceGroup'',
        AzureResourceGroup,                           ''azureResourceId'', _ResourceId),                  AzureCloudServiceNodeProps
        =                      pack(''type'', ''AzureCloudServiceNode'',                           ''cloudServiceInstanceId'',
        AzureCloudServiceInstanceId,                           ''cloudServiceRoleName'',
        AzureCloudServiceRoleName,                           ''cloudServiceDeploymentId'',
        AzureCloudServiceDeployment,                           ''fullDisplayName'',
        FullDisplayName,                           ''cloudServiceName'', AzureCloudServiceName,                           ''mappingResourceId'',
        ResourceId),                  AzureScaleSetNodeProps =                       pack(''type'',
        ''AzureScaleSetNode'',                           ''scaleSetInstanceId'', AzureResourceName,                           ''vmScaleSetDeploymentId'',
        AzureVmScaleSetDeployment,                           ''vmScaleSetName'', AzureVmScaleSetName,                           ''serviceFabricClusterName'',
        AzureServiceFabricClusterName,                           ''vmScaleSetResourceId'',
        AzureVmScaleSetResourceId,                           ''resourceGroupName'',
        AzureResourceGroup,                           ''subscriptionId'', AzureSubscriptionId,                           ''fullDisplayName'',
        FullDisplayName,                           ''mappingResourceId'', ResourceId)        \r\n|
        project   ComputerId,                    Computer,                    NodeId
        = case(isnotempty(AzureCloudServiceNodeIdentity), AzureCloudServiceNodeIdentity,                               isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeIdentity, Computer),                    NodeProps = case(isnotempty(AzureCloudServiceNodeIdentity),
        AzureCloudServiceNodeProps,                                  isnotempty(AzureScaleSetNodeIdentity),
        AzureScaleSetNodeProps, ComputerProps),                    Priority = 2;        \r\nlet
        NodeIdentityAndProps = union kind=inner isfuzzy = true                                          EmptyNodeIdentityAndProps,
        OmsNodeIdentityAndProps, ServiceMapNodeIdentityAndProps                                    \r\n|
        summarize arg_max(Priority, *) by ComputerId;\r\nInsightsMetrics\r\n| where
        TimeGenerated between (startDateTime .. endDateTime)\r\n| where Origin ==
        ''vm.azm.ms'' and (Namespace == ''LogicalDisk'' and Name == ''FreeSpaceMB'')\r\n|
        extend ComputerId = iff(isempty(_ResourceId), Computer, _ResourceId)\r\n|
        where ComputerId in (computerList)| extend Tags = todynamic(Tags)\r\n| extend
        Total = todouble(Tags[''vm.azm.ms/diskSizeMB'']), MountId = tostring(Tags[''vm.azm.ms/mountId''])\r\n|
        extend Val = (100.0 - (Val * 100.0)/Total)\r\n| summarize hint.shufflekey
        = ComputerId TrendValue = max(Val) by MountId, ComputerId, Computer, bin(TimeGenerated,
        trendBinSize)\r\n","resource":"$ws","resultFormat":"table"},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""}],"title":"Max available Logical
        Space Disk Used % ","transformations":[{"id":"organize","options":{"excludeByName":{"Average":true,"ComputerId":true,"ComputerId1":true,"Min":true,"MountId":true,"P10th":true,"P50th":true,"P5th":true,"P80th":true,"P90th":true,"P95th":true},"indexByName":{},"renameByName":{}}},{"id":"prepareTimeSeries","options":{"format":"many"}},{"id":"renameByRegex","options":{"regex":"(.+)\\s(.+)","renamePattern":"$2"}}],"type":"stat"}],"refresh":false,"schemaVersion":35,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Subscriptions()","hide":0,"includeAll":false,"label":"Subscription","multi":false,"name":"sub","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"uid":"${ds}"},"definition":"Workspaces($sub)","hide":0,"includeAll":false,"label":"Workspace","multi":false,"name":"ws","options":[],"query":"Workspaces($sub)","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{},"datasource":{"type":"grafana-azure-monitor-datasource","uid":"${ds}"},"definition":"","hide":0,"includeAll":false,"label":"Resource
        Group(s)","multi":true,"name":"rg","options":[],"query":{"azureLogAnalytics":{"query":"InsightsMetrics\r\n|
        where Origin == ''vm.azm.ms''\r\n| parse kind=regex tolower(_ResourceId) with
        ''resourcegroups/'' resourceGroup ''/p(.+)'' *\r\n| project resourceGroup","resource":"$ws"},"queryType":"Azure
        Log Analytics","refId":"A","subscription":""},"refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"},{"current":{"selected":false,"text":"Average","value":"score
        = round(avg(Val), 2)"},"hide":0,"includeAll":false,"label":"Aggregate","multi":false,"name":"agg","options":[{"selected":true,"text":"Average","value":"score
        = round(avg(Val), 2)"},{"selected":false,"text":"P5th","value":"score= round(percentile(Val,
        5), 2)"},{"selected":false,"text":"P10th","value":"score= round(percentile(Val,
        10), 2)"},{"selected":false,"text":"P50th","value":"score= round(percentile(Val,
        50), 2)"},{"selected":false,"text":"P80th","value":"score= round(percentile(Val,
        80), 2)"},{"selected":false,"text":"P90th","value":"score= round(percentile(Val,
        90), 2)"},{"selected":false,"text":"P95th","value":"score= round(percentile(Val,
        95), 2)"}],"query":"Average : score = round(avg(Val)\\, 2), P5th : score=
        round(percentile(Val\\, 5)\\, 2),  P10th : score= round(percentile(Val\\,
        10)\\, 2), P50th : score= round(percentile(Val\\, 50)\\, 2), P80th : score=
        round(percentile(Val\\, 80)\\, 2), P90th : score= round(percentile(Val\\,
        90)\\, 2), P95th : score= round(percentile(Val\\, 95)\\, 2)","queryValue":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-15m","to":"now"},"title":"Azure
        / Insights / Virtual Machines by Workspace","uid":"AzVmInsightsByWS","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '117797'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZdcmA2DQYAhGD66+SKuAww';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:22 GMT
      grafana-trace-id:
      - 98175a16f69c911029ec6250c470e617
      mise-correlation-id:
      - ecd4d5f9-5907-406a-a599-79dc4082f9eb
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504463.922.30.691195|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/Mtwt2BV7k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":1,"folderUid":"fe1j3savseyv4a","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/fe1j3savseyv4a/azure-monitor","provisioned":true,"provisionedExternalId":"arg.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"8.2.0-pre"},{"id":"grafana-azure-monitor-datasource","name":"Azure
        Monitor","type":"datasource","version":"0.3.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""}],"description":"The
        dashboard provides insights of Azure Resource Graph Explorer overview, compute,
        Paas, networking, monitoring and security. Queries used in this Azure Monitor
        dashboard we sourced from the [Azure Inventory Workbook](https://github.com/scautomation/Azure-Inventory-Workbook)
        by Billy York. You can find more sample Azure Resource Graph queries by Billy
        at this [GitHub](https://github.com/scautomation/AzureResourceGraph-Examples)
        repository.","editable":true,"gnetId":14986,"id":7,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Azure
        Resource Graph queries by Billy York","tooltip":"See more","type":"link","url":"https://github.com/scautomation/AzureResourceGraph-Examples"}],"liveNow":false,"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":4,"panels":[],"title":"Overview","type":"row"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":6,"w":7,"x":0,"y":1},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | summarize count(type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of All Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"type"},"properties":[{"id":"custom.width","value":386}]},{"matcher":{"id":"byName","options":"properties"},"properties":[{"id":"custom.width","value":339}]}]},"gridPos":{"h":6,"w":17,"x":7,"y":1},"id":6,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resourcecontainers
        \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n|
        summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\",
        @\"Resource Groups\", type)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Subscriptions
        and Resource Groups","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":7},"id":8,"options":{"colorMode":"none","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{"titleSize":18},"textMode":"value_and_name"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| extend type = case(\r\ntype contains ''microsoft.netapp/netappaccounts'',
        ''NetApp Accounts'',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype
        contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains ''microsoft.keyvault/vaults'',
        \"Key Vaults\",\r\ntype contains ''microsoft.storage/storageaccounts'', \"Storage
        Accounts\",\r\ntype contains ''microsoft.compute/availabilitysets'', ''Availability
        Sets'',\r\ntype contains ''microsoft.operationalinsights/workspaces'', ''Azure
        Monitor Resources'',\r\ntype contains ''microsoft.operationsmanagement'',
        ''Operations Management Resources'',\r\ntype contains ''microsoft.insights'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.desktopvirtualization/applicationgroups'',
        ''WVD Application Groups'',\r\ntype contains ''microsoft.desktopvirtualization/workspaces'',
        ''WVD Workspaces'',\r\ntype contains ''microsoft.desktopvirtualization/hostpools'',
        ''WVD Hostpools'',\r\ntype contains ''microsoft.recoveryservices/vaults'',
        ''Backup Vaults'',\r\ntype contains ''microsoft.web'', ''App Services'',\r\ntype
        contains ''microsoft.managedidentity/userassignedidentities'',''Managed Identities'',\r\ntype
        contains ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\ntype
        contains ''microsoft.hybridcompute/machines'', ''ARC Machines'',\r\ntype contains
        ''Microsoft.EventHub'', ''Event Hub'',\r\ntype contains ''Microsoft.EventGrid'',
        ''Event Grid'',\r\ntype contains ''Microsoft.Sql'', ''SQL Resources'',\r\ntype
        contains ''Microsoft.HDInsight/clusters'', ''HDInsight Clusters'',\r\ntype
        contains ''microsoft.devtestlab'', ''DevTest Labs Resources'',\r\ntype contains
        ''microsoft.containerinstance'', ''Container Instances Resources'',\r\ntype
        contains ''microsoft.portal/dashboards'', ''Azure Dashboards'',\r\ntype contains
        ''microsoft.containerregistry/registries'', ''Container Registry'',\r\ntype
        contains ''microsoft.automation'', ''Automation Resources'',\r\ntype contains
        ''sendgrid.email/accounts'', ''SendGrid Accounts'',\r\ntype contains ''microsoft.datafactory/factories'',
        ''Data Factory'',\r\ntype contains ''microsoft.databricks/workspaces'', ''Databricks
        Workspaces'',\r\ntype contains ''microsoft.machinelearningservices/workspaces'',
        ''Machine Learnings Workspaces'',\r\ntype contains ''microsoft.alertsmanagement/smartdetectoralertrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.apimanagement/service'',
        ''API Management Services'',\r\ntype contains ''microsoft.dbforpostgresql'',
        ''PostgreSQL Resources'',\r\ntype contains ''microsoft.scheduler/jobcollections'',
        ''Scheduler Job Collections'',\r\ntype contains ''microsoft.visualstudio/account'',
        ''Azure DevOps Organization'',\r\ntype contains ''microsoft.network/'', ''Network
        Resources'',\r\ntype contains ''microsoft.migrate/'' or type contains ''microsoft.offazure'',
        ''Azure Migrate Resources'',\r\ntype contains ''microsoft.servicebus/namespaces'',
        ''Service Bus Namespaces'',\r\ntype contains ''microsoft.classic'', ''ASM
        Obsolete Resources'',\r\ntype contains ''microsoft.resources/templatespecs'',
        ''Template Spec Resources'',\r\ntype contains ''microsoft.virtualmachineimages'',
        ''VM Image Templates'',\r\ntype contains ''microsoft.documentdb'', ''CosmosDB
        DB Resources'',\r\ntype contains ''microsoft.alertsmanagement/actionrules'',
        ''Azure Monitor Resources'',\r\ntype contains ''microsoft.kubernetes/connectedclusters'',
        ''ARC Kubernetes Clusters'',\r\ntype contains ''microsoft.purview'', ''Purview
        Resources'',\r\ntype contains ''microsoft.security'', ''Security Resources'',\r\ntype
        contains ''microsoft.cdn'', ''CDN Resources'',\r\ntype contains ''microsoft.devices'',''IoT
        Resources'',\r\ntype contains ''microsoft.datamigration'', ''Data Migraiton
        Services'',\r\ntype contains ''microsoft.cognitiveservices'', ''Congitive
        Services'',\r\ntype contains ''microsoft.customproviders'', ''Custom Providers'',\r\ntype
        contains ''microsoft.appconfiguration'', ''App Services'',\r\ntype contains
        ''microsoft.search'', ''Search Services'',\r\ntype contains ''microsoft.maps'',
        ''Maps'',\r\ntype contains ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\ntype contains ''microsoft.signalrservice'', ''SignalR'',\r\ntype
        contains ''microsoft.resourcegraph/queries'', ''Resource Graph Queries'',\r\ntype
        contains ''microsoft.batch'', ''MS Batch'',\r\ntype contains ''microsoft.analysisservices'',
        ''Analysis Services'',\r\ntype contains ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\ntype contains ''microsoft.synapse/workspaces/sqlpools'',
        ''Synapse SQL Pools'',\r\ntype contains ''microsoft.kusto/clusters'', ''ADX
        Clusters'',\r\ntype contains ''microsoft.resources/deploymentscripts'', ''Deployment
        Scripts'',\r\ntype contains ''microsoft.aad/domainservices'', ''AD Domain
        Services'',\r\ntype contains ''microsoft.labservices/labaccounts'', ''Lab
        Accounts'',\r\ntype contains ''microsoft.automanage/accounts'', ''Automanage
        Accounts'',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Resource
        Counts","type":"stat"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":22},"id":10,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":6,"x":0,"y":2},"id":12,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState
        = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n|
        extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n|
        summarize count() by vmState","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Current
        VM Status","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":6,"w":18,"x":6,"y":2},"id":13,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        | where type =~ \"microsoft.compute/virtualmachines\"\r\nor type =~ ''microsoft.compute/virtualmachinescalesets''\r\n|
        extend Size = case(\r\ntype contains ''microsoft.compute/virtualmachinescalesets'',
        strcat(\"VMSS \", sku.name),\r\ntype contains ''microsoft.compute/virtualmachines'',
        properties.hardwareProfile.vmSize,\r\n\"Size not found\")\r\n| summarize Count=count(Size)
        by vmSize=tostring(Size)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Count
        of VMs by VM Size","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"OverProvision"},"properties":[{"id":"custom.width","value":141}]},{"matcher":{"id":"byName","options":"location"},"properties":[{"id":"custom.width","value":90}]},{"matcher":{"id":"byName","options":"Size"},"properties":[{"id":"custom.width","value":154}]},{"matcher":{"id":"byName","options":"Capacity"},"properties":[{"id":"custom.width","value":118}]},{"matcher":{"id":"byName","options":"OSType"},"properties":[{"id":"custom.width","value":115}]},{"matcher":{"id":"byName","options":"UpgradeMode"},"properties":[{"id":"custom.width","value":157}]},{"matcher":{"id":"byName","options":"resourceGroup"},"properties":[{"id":"custom.width","value":281}]}]},"gridPos":{"h":4,"w":24,"x":0,"y":8},"id":15,"options":{"showHeader":true,"sortBy":[]},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.compute/virtualmachinescalesets''\r\n| extend
        Size = sku.name\r\n| extend Capacity = sku.capacity\r\n| extend UpgradeMode
        = properties.upgradePolicy.mode\r\n| extend OSType = properties.virtualMachineProfile.storageProfile.osDisk.osType\r\n|
        extend OS = properties.virtualMachineProfile.storageProfile.imageReference.offer\r\n|
        extend OSVersion = properties.virtualMachineProfile.storageProfile.imageReference.sku\r\n|
        extend OverProvision = properties.overprovision\r\n| extend ZoneBalance =
        properties.zoneBalance\r\n| extend Details = pack_all()\r\n| project VMSS
        = id, location, resourceGroup, subscriptionId, Size, Capacity, OSType, UpgradeMode,
        OverProvision, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Scale Sets","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":12},"id":17,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmID
        = tolower(id)\r\n| extend osDiskId= tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(resources\r\n\t\t\t| where type =~ ''microsoft.compute/availabilitysets''\r\n\t\t\t|
        extend VirtualMachines = array_length(properties.virtualMachines)\r\n\t\t\t|
        mv-expand VirtualMachine=properties.virtualMachines\r\n\t\t\t| extend FaultDomainCount
        = properties.platformFaultDomainCount\r\n\t\t\t| extend UpdateDomainCount
        = properties.platformUpdateDomainCount\r\n\t\t\t| extend vmID = tolower(VirtualMachine.id)\r\n\t\t\t|
        project AvailabilitySetID = id, vmID, FaultDomainCount, UpdateDomainCount
        ) on vmID\r\n\t\t| join kind=leftouter(resources\r\n\t\t\t| where type =~
        ''microsoft.sqlvirtualmachine/sqlvirtualmachines''\r\n\t\t\t| extend SQLLicense
        = properties.sqlServerLicenseType\r\n\t\t\t| extend SQLImage = properties.sqlImageOffer\r\n\t\t\t|
        extend SQLSku = properties.sqlImageSku\r\n\t\t\t| extend SQLManagement = properties.sqlManagement\r\n\t\t\t|
        extend vmID = tostring(tolower(properties.virtualMachineResourceId))\r\n\t\t\t|
        project SQLId=id, SQLLicense, SQLImage, SQLSku, SQLManagement, vmID ) on vmID\r\n|
        project-away vmID1, vmID2, osDiskId1\r\n| extend Details = pack_all()\r\n|
        project vmID, SQLId, AvailabilitySetID, OS, resourceGroup, location, subscriptionId,
        SQLLicense, SQLImage,SQLSku, SQLManagement, FaultDomainCount, UpdateDomainCount,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Overview","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":25},"id":18,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources
        \r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId=
        tolower(tostring(properties.storageProfile.osDisk.managedDisk.id))\r\n        |
        join kind=leftouter(resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has ''Unattached''\r\n            | where properties has
        ''osType''\r\n            | project timeCreated = tostring(properties.timeCreated),
        OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB
        = toint(properties.diskSizeGB), osDiskId=tolower(tostring(id))) on osDiskId\r\n        |
        join kind=leftouter(Resources\r\n            | where type =~ ''microsoft.compute/disks''\r\n            |
        where properties !has \"osType\"\r\n            | where properties !has ''Unattached''\r\n            |
        project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB),
        id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id,
        sku) on id\r\n| project vmId=id, OS, location, resourceGroup, timeCreated,subscriptionId,
        osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n|
        sort by diskSkuCount desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Storage","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":38},"id":19,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.compute/virtualmachines''\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n|
        mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics
        == 1 or nic.properties.primary =~ ''true'' or isempty(nic)\r\n| project vmId
        = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId
        = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/networkinterfaces''\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t|
        mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount
        == 1 or ipconfig.properties.primary =~ ''true''\r\n  \t\t| project nicId =
        id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId
        = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n|
        project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId,
        subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        project-away publicIpId1\r\n| sort by publicIpAddress desc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"VM
        Networking","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":51},"id":21,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources  \r\n|
        where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n|
        where managedBy == \"\"\r\n    or diskState == ''Unattached''\r\n| project
        id, diskState, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        Disks","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":64},"id":20,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ \"microsoft.network/networkinterfaces\"\r\n| join kind=leftouter
        (resources\r\n| where type =~ ''microsoft.network/privateendpoints''\r\n|
        extend nic = todynamic(properties.networkInterfaces)\r\n| mv-expand nic\r\n|
        project id=tostring(nic.id) ) on id\r\n| where isempty(id1)\r\n| where properties
        !has ''virtualmachine''\r\n| project id, resourceGroup, location, subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Orphaned
        NICs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":77},"id":26,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type == \"microsoft.hybridcompute/machines\"\r\n| project MachineId=id, status
        = properties.status, \r\n\t\t\t  LastSeen = properties.lastStatusChange, \r\n\t\t\t  FQDN
        = properties.machineFqdn, \r\n\t\t\t  OS = properties.osName, \r\n\t\t\t  ServerVersion
        = properties.osVersion\r\n| extend ServerVersion = case(\r\n    ServerVersion
        has ''10.0.17763'', ''Server 2019'',\r\n    ServerVersion has ''10.0.16299'',
        ''Server 2016'',\r\n    ServerVersion has ''10.0.14393'', ''Server 2016'',\r\n    ServerVersion
        has ''6.3.9600'', ''Server 2012 R2'',\r\n\tServerVersion)","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Hybrid
        Compute","type":"table"}],"title":"Compute","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":23},"id":23,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":3},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\tor type has ''microsoft.logic''\r\n\tor
        type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind == ''functionapp'',
        \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == ''microsoft.web/sites'',
        \"App Services\",\r\n\ttype =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype
        =~ ''microsoft.web/customapis'',''LogicApp API Connectors'',\r\n\ttype =~
        ''microsoft.logic/workflows'',''LogicApps'',\r\n    type =~ ''microsoft.logic/integrationaccounts'',
        ''Integration Accounts'',\r\n\ttype =~ ''microsoft.automation/automationaccounts/runbooks'',
        ''Automation Runbooks'',\r\n    type =~ ''microsoft.automation/automationaccounts/configurations'',
        ''Automation Configurations'',\r\nstrcat(\"Not Translated: \", type))\r\n|
        summarize count() by type\r\n| where type !has \"Not Translated\"","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Animation
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":3},"id":27,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.automation''\r\n\t or type has ''microsoft.logic''\r\n\t
        or type has ''microsoft.web/customapis''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.automation/automationaccounts'', ''Automation Accounts'',\r\n\ttype
        =~ ''microsoft.web/connections'', ''LogicApp Connectors'',\r\n\ttype =~ ''microsoft.web/customapis'',''LogicApp
        API Connectors'',\r\n\ttype =~ ''microsoft.logic/workflows'',''LogicApps'',\r\n    type
        =~ ''microsoft.logic/integrationaccounts'', ''Integration Accounts'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/runbooks'', ''Automation Runbooks'',\r\n\ttype
        =~ ''microsoft.automation/automationaccounts/configurations'', ''Automation
        Configurations'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType
        = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n|
        extend LogicAppTrigger = iif(type =~ ''LogicApps'', case(\r\n\tLogicAppTrigger
        has ''manual'', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger
        has ''Recurrence'', tostring(LogicAppTrigger.Recurrence.type),\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Alert'', ''Azure Security Center Alert'',\r\n    LogicAppTrigger
        has ''When_an_Azure_Security_Center_Recommendation'', ''Azure Security Center
        Recommendation'',\r\n    LogicAppTrigger has ''When_a_response_to_an_Azure_Sentinel_alert'',
        ''Azure Sentinel Alert'',\r\n    LogicAppTrigger has ''When_Azure_Sentinel_incident_creation'',
        ''Azure Sentinel Incident'',\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)),
        LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ ''Automation Runbooks'',
        properties.state, \r\n\ttype =~ ''LogicApps'', properties.state,\r\n\ttype
        =~ ''Automation Accounts'', properties.state,\r\n\ttype =~ ''Automation Configurations'',
        properties.state,\r\n\t'' '')\r\n| extend CreatedDate = case(\r\n\ttype =~
        ''Automation Runbooks'', properties.creationTime, \r\n\ttype =~ ''LogicApps'',
        properties.createdTime,\r\n\ttype =~ ''Automation Accounts'', properties.creationTime,\r\n\ttype
        =~ ''Automation Configurations'', properties.creationTime,\r\n\t'' '')\r\n|
        extend LastModified = case(\r\n\ttype =~ ''Automation Runbooks'', properties.lastModifiedTime,
        \r\n\ttype =~ ''LogicApps'', properties.changedTime,\r\n\ttype =~ ''Automation
        Accounts'', properties.lastModifiedTime,\r\n\ttype =~ ''Automation Configurations'',
        properties.lastModifiedTime,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger,
        State, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Automation
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":13},"id":29,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.web''\r\n\t or type =~ ''microsoft.apimanagement/service''\r\n\t
        or type =~ ''microsoft.network/frontdoors''\r\n\t or type =~ ''microsoft.network/applicationgateways''\r\n\t
        or type =~ ''microsoft.appconfiguration/configurationstores''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.web/serverfarms'', \"App Service Plans\",\r\n\tkind
        == ''functionapp'', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\",
        \r\n\ttype == ''microsoft.web/sites'', \"App Services\",\r\n\ttype =~ ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype =~ ''microsoft.network/frontdoors'', ''Front Door'',\r\n\ttype
        =~ ''microsoft.apimanagement/service'', ''API Management'',\r\n\ttype =~ ''microsoft.web/certificates'',
        ''App Certificates'',\r\n\ttype =~ ''microsoft.appconfiguration/configurationstores'',
        ''App Config Stores'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''App Gateways'',
        properties.sku.name, \r\n\ttype =~ ''Azure Functions'', properties.sku,\r\n\ttype
        =~ ''API Management'', sku.name,\r\n\ttype =~ ''App Service Plans'', sku.name,\r\n\ttype
        =~ ''App Services'', properties.sku,\r\n\ttype =~ ''App Config Stores'', sku.name,\r\n\t''
        '')\r\n| extend State = case(\r\n\ttype =~ ''App Config Stores'', properties.provisioningState,\r\n\ttype
        =~ ''App Service Plans'', properties.status,\r\n\ttype =~ ''Azure Functions'',
        properties.enabled,\r\n\ttype =~ ''App Services'', properties.state,\r\n\ttype
        =~ ''API Management'', properties.provisioningState,\r\n\ttype =~ ''App Gateways'',
        properties.provisioningState,\r\n\ttype =~ ''Front Door'', properties.provisioningState,\r\n\t''
        '')\r\n| mv-expand publicIpId=properties.frontendIPConfigurations\r\n| mv-expand
        publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId
        = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t|
        where type =~ ''microsoft.network/publicipaddresses''\r\n  \t\t| project publicIpId
        = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n|
        extend PublicIP = case(\r\n\ttype =~ ''API Management'', properties.publicIPAddresses,\r\n\ttype
        =~ ''App Gateways'', publicIpAddress,\r\n\t'' '')\r\n| extend Details = pack_all()\r\n|
        project Resource=id, type, subscriptionId, Sku, State, PublicIP, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Apps
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":23},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":23},"id":31,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.servicebus''\r\n\tor type has ''microsoft.eventhub''\r\n\tor
        type has ''microsoft.eventgrid''\r\n\tor type has ''microsoft.relay''\r\n|
        extend type = case(\r\n\ttype == ''microsoft.eventgrid/systemtopics'', \"EventGrid
        System Topics\",\r\n\ttype =~ \"microsoft.eventgrid/topics\", \"EventGrid
        Topics\",\r\n\ttype =~ ''microsoft.eventhub/namespaces'', \"EventHub Namespaces\",\r\n\ttype
        =~ ''microsoft.servicebus/namespaces'', ''ServiceBus Namespaces'',\r\n\ttype
        =~ ''microsoft.relay/namespaces'', ''Relays'',\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend Sku = case(\r\n\ttype =~ ''Relays'', sku.name, \r\n\ttype
        =~ ''EventGrid System Topics'', properties.sku,\r\n\ttype =~ ''EventGrid Topics'',
        sku.name,\r\n\ttype =~ ''EventHub Namespaces'', sku.name,\r\n\ttype =~ ''ServiceBus
        Namespaces'', sku.sku,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''Relays'', properties.serviceBusEndpoint,\r\n\ttype =~ ''EventGrid Topics'',
        properties.endpoint,\r\n\ttype =~ ''EventHub Namespaces'', properties.serviceBusEndpoint,\r\n\ttype
        =~ ''ServiceBus Namespaces'', properties.serviceBusEndpoint,\r\n\t'' '')\r\n|
        extend Status = case(\r\n\ttype =~ ''Relays'', properties.provisioningState,\r\n\ttype
        =~ ''EventGrid System Topics'', properties.provisioningState,\r\n\ttype =~
        ''EventGrid Topics'', properties.publicNetworkAccess,\r\n\ttype =~ ''EventHub
        Namespaces'', properties.status,\r\n\ttype =~ ''ServiceBus Namespaces'', properties.status,\r\n\t''
        '')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId,
        resourceGroup, Sku, Status, Endpoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Events
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":33},"id":32,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":33},"id":33,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type has ''microsoft.documentdb''\r\n\tor type has ''microsoft.sql''\r\n\tor
        type has ''microsoft.dbformysql''\r\n\tor type has ''microsoft.sql''\r\n    or
        type has ''microsoft.purview''\r\n    or type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.analysisservices''\r\n\tor type has ''microsoft.datamigration''\r\n\tor
        type has ''microsoft.synapse''\r\n\tor type has ''microsoft.datafactory''\r\n\tor
        type has ''microsoft.kusto''\r\n| extend type = case(\r\n\ttype =~ ''microsoft.documentdb/databaseaccounts'',
        ''CosmosDB'',\r\n\ttype =~ ''microsoft.sql/servers/databases'', ''SQL DBs'',\r\n\ttype
        =~ ''microsoft.dbformysql/servers'', ''MySQL'',\r\n\ttype =~ ''microsoft.sql/servers'',
        ''SQL Servers'',\r\n    type =~ ''microsoft.purview/accounts'', ''Purview
        Accounts'',\r\n\ttype =~ ''microsoft.synapse/workspaces/sqlpools'', ''Synapse
        SQL Pools'',\r\n\ttype =~ ''microsoft.kusto/clusters'', ''ADX Clusters'',\r\n\ttype
        =~ ''microsoft.datafactory/factories'', ''Data Factories'',\r\n\ttype =~ ''microsoft.synapse/workspaces'',
        ''Synapse Workspaces'',\r\n\ttype =~ ''microsoft.analysisservices/servers'',
        ''Analysis Services Servers'',\r\n\ttype =~ ''microsoft.datamigration/services'',
        ''DB Migration Service'',\r\n\ttype =~ ''microsoft.sql/managedinstances/databases'',
        ''Managed Instance DBs'',\r\n\ttype =~ ''microsoft.sql/managedinstances'',
        ''Managed Instnace'',\r\n\ttype =~ ''microsoft.datamigration/services/projects'',
        ''Data Migration Projects'',\r\n\ttype =~ ''microsoft.sql/virtualclusters'',
        ''SQL Virtual Clusters'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ ''CosmosDB'',
        properties.databaseAccountOfferType,\r\n\ttype =~ ''SQL DBs'', sku.name,\r\n\ttype
        =~ ''MySQL'', sku.name,\r\n\ttype =~ ''ADX Clusters'', sku.name,\r\n\ttype
        =~ ''Purview Accounts'', sku.name,\r\n\t'' '')\r\n| extend Status = case(\r\n\ttype
        =~ ''CosmosDB'', properties.provisioningState,\r\n\ttype =~ ''SQL DBs'', properties.status,\r\n\ttype
        =~ ''MySQL'', properties.userVisibleState,\r\n\ttype =~ ''Managed Instance
        DBs'', properties.status,\r\n\t'' '')\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''MySQL'', properties.fullyQualifiedDomainName,\r\n\ttype =~ ''SQL Servers'',
        properties.fullyQualifiedDomainName,\r\n\ttype =~ ''CosmosDB'', properties.documentEndpoint,\r\n\ttype
        =~ ''ADX Clusters'', properties.uri,\r\n\ttype =~ ''Purview Accounts'', properties.endpoints,\r\n\ttype
        =~ ''Synapse Workspaces'', properties.connectivityEndpoints,\r\n\ttype =~
        ''Synapse SQL Pools'', sku.name,\r\n\t'' '')\r\n| extend Tier = sku.tier\r\n|
        extend License = properties.licenseType\r\n| extend maxSizeGB = todouble(case(\r\n\ttype
        =~ ''SQL DBs'', properties.maxSizeBytes,\r\n\ttype =~ ''MySQL'', properties.storageProfile.storageMB,\r\n\ttype
        =~ ''Synapse SQL Pools'', properties.maxSizeBytes,\r\n\t'' ''))\r\n| extend
        maxSizeGB = case(\r\n\t\ttype has ''SQL DBs'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype
        has ''Synapse SQL Pools'', maxSizeGB /1000 /1000 /1000,\r\n\t\ttype has ''MySQL'',
        maxSizeGB /1000,\r\n\t\tmaxSizeGB)\r\n| extend Details = pack_all()\r\n| project
        Resource=id, resourceGroup, subscriptionId, type, Sku, Tier, Status, Endpoint,
        maxSizeGB, Details\r\n","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":43},"id":34,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":43},"id":35,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.storagesync/storagesyncservices''\r\n\tor
        type =~ ''microsoft.recoveryservices/vaults''\r\n\tor type =~ ''microsoft.storage/storageaccounts''\r\n\tor
        type =~ ''microsoft.keyvault/vaults''\r\n| extend type = case(\r\n\ttype =~
        ''microsoft.storagesync/storagesyncservices'', ''Azure File Sync'',\r\n\ttype
        =~ ''microsoft.recoveryservices/vaults'', ''Azure Backup'',\r\n\ttype =~ ''microsoft.storage/storageaccounts'',
        ''Storage Accounts'',\r\n\ttype =~ ''microsoft.keyvault/vaults'', ''Key Vaults'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has ''Key Vaults'',
        sku.name,\r\n\ttype =~ ''Key Vaults'', properties.sku.name,\r\n\t'' '')\r\n|
        extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId,
        resourceGroup, Sku, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Storage
        and Backup Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":53},"id":36,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| summarize count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":53},"id":37,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.containerservice/managedclusters''\r\n\tor type
        =~ ''microsoft.containerregistry/registries''\r\n\tor type =~ ''microsoft.containerinstance/containergroups''\r\n|
        extend type = case(\r\n\ttype =~ ''microsoft.containerservice/managedclusters'',
        ''AKS'',\r\n\ttype =~ ''microsoft.containerregistry/registries'', ''Container
        Registry'',\r\n\ttype =~ ''microsoft.containerinstance/containergroups'',
        ''Container Instnaces'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where
        type !has \"Not Translated\"\r\n| extend Tier = sku.tier\r\n| extend sku =
        sku.name\r\n| extend State = case(\r\n\ttype =~ ''Container Registry'', properties.provisioningState,\r\n\ttype
        =~ ''Container Instance'', properties.instanceView.state,\r\n\tproperties.powerState.code)\r\n|
        extend Containers = properties.containers\r\n| mvexpand Containers\r\n| extend
        RestartCount = Containers.properties.instanceView.restartCount\r\n| extend
        Image = Containers.properties.image\r\n| extend RestartPolicy = properties.restartPolicy\r\n|
        extend IP = properties.ipAddress.ip\r\n| extend Version = properties.kubernetesVersion\r\n|
        extend AgentProfiles = properties.agentPoolProfiles\r\n| mvexpand AgentProfiles\r\n|
        extend NodeCount = AgentProfiles.[\"count\"]\r\n| extend Details = pack_all()\r\n|
        project id, type, location, resourceGroup, subscriptionId, sku, Tier, State,
        RestartCount, Version, NodeCount, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Containers
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":63},"id":38,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type\t","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":63},"id":39,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''Microsoft.MachineLearningServices/workspaces''\r\n\tor type
        =~ ''microsoft.cognitiveservices/accounts''\r\n| extend type = case(\r\n\ttype
        =~ ''Microsoft.MachineLearningServices/workspaces'', ''ML Workspaces'',\r\n\ttype
        =~ ''microsoft.cognitiveservices/accounts'', ''Cognitive Services'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Tier = sku.tier\r\n| extend sku = sku.name\r\n| extend Endpoint = case(\r\n\ttype
        =~ ''ML Workspaces'', properties.discoveryUrl,\r\n\ttype =~ ''Cognitive Services'',
        properties.endpoint,\r\n\t'' '')\r\n| extend Capabilities = properties.capabilities\r\n|
        mvexpand Capabilities\r\n| extend Capabilities.value\r\n| extend Storage =
        properties.storageAccount\r\n| extend AppInsights = properties.applicationInsights\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, Endpoint, Capabilities_value, Storage, AppInsights,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"ML/AI
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":73},"id":40,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count()
        by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":73},"id":41,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type =~ ''microsoft.devices/iothubs''\r\n\tor type =~ ''microsoft.iotcentral/iotapps''\r\n\tor
        type =~ ''microsoft.security/iotsecuritysolutions''\r\n| extend type = case
        (\r\n\ttype =~ ''microsoft.devices/iothubs'', ''IoT Hubs'',\r\n\ttype =~ ''microsoft.iotcentral/iotapps'',
        ''IoT Apps'',\r\n\ttype =~ ''microsoft.security/iotsecuritysolutions'', ''IoT
        Security'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Tier = sku.tier\r\n|
        extend sku = sku.name\r\n| extend State = properties.state\r\n| extend HostName
        = properties.hostName\r\n| extend EventHubEndPoint = properties.eventHubEndpoints.events.endpoint\r\n|
        extend Details = pack_all()\r\n| project id, type, location, resourceGroup,
        subscriptionId, sku, Tier, State, HostName, EventHubEndPoint, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"IoT
        Detailed View","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":6,"x":0,"y":83},"id":42,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":18,"x":6,"y":83},"id":43,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.desktopvirtualization''\r\n| extend type = case(\r\n\ttype
        =~ ''microsoft.desktopvirtualization/applicationgroups'', ''WVD App Groups'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/hostpools'', ''WVD Host Pools'',\r\n\ttype
        =~ ''microsoft.desktopvirtualization/workspaces'', ''WVD Workspaces'',\r\n\tstrcat(\"Not
        Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend
        Details = pack_all()\r\n| project id, type, resourceGroup, subscriptionId,
        kind, location, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Windows
        Virtual Desktop Detailed View","type":"table"}],"title":"PaaS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":45,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":4},"id":47,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type has \"microsoft.network\"\r\n    or type has ''microsoft.cdn''\r\n| extend
        type = case(\r\n\ttype == ''microsoft.network/networkinterfaces'', \"NICs\",\r\n\ttype
        == ''microsoft.network/networksecuritygroups'', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\",
        \"Public IPs\", \r\n\ttype == ''microsoft.network/virtualnetworks'', \"vNets\",\r\n\ttype
        == ''microsoft.network/networkwatchers/connectionmonitors'', \"Connection
        Monitors\",\r\n\ttype == ''microsoft.network/privatednszones'', \"Private
        DNS\",\r\n\ttype == ''microsoft.network/virtualnetworkgateways'', @\"vNet
        Gateways\",\r\n\ttype == ''microsoft.network/connections'', \"Connections\",\r\n\ttype
        == ''microsoft.network/networkwatchers'', \"Network Watchers\",\r\n\ttype
        == ''microsoft.network/privateendpoints'', \"Private Endpoints\",\r\n\ttype
        == ''microsoft.network/localnetworkgateways'', \"Local Network Gateways\",\r\n\ttype
        == ''microsoft.network/privatednszones/virtualnetworklinks'', \"vNet Links\",\r\n\ttype
        == ''microsoft.network/dnszones'', ''DNS Zones'',\r\n\ttype == ''microsoft.network/networkwatchers/flowlogs'',
        ''Flow Logs'',\r\n\ttype == ''microsoft.network/routetables'', ''Route Tables'',\r\n\ttype
        == ''microsoft.network/loadbalancers'', ''Load Balancers'',\r\n\ttype == ''microsoft.network/ddosprotectionplans'',
        ''DDoS Protection Plans'',\r\n\ttype == ''microsoft.network/applicationsecuritygroups'',
        ''App Security Groups'',\r\n\ttype == ''microsoft.network/azurefirewalls'',
        ''Azure Firewalls'',\r\n\ttype == ''microsoft.network/applicationgateways'',
        ''App Gateways'',\r\n\ttype == ''microsoft.network/frontdoors'', ''Front Doors'',\r\n\ttype
        == ''microsoft.network/applicationgatewaywebapplicationfirewallpolicies'',
        ''AppGateway Policies'',\r\n\ttype == ''microsoft.network/bastionhosts'',
        ''Bastion Hosts'',\r\n\ttype == ''microsoft.network/frontdoorwebapplicationfirewallpolicies'',
        ''FrontDoor Policies'',\r\n\ttype == ''microsoft.network/firewallpolicies'',
        ''Firewall Policies'',\r\n\ttype == ''microsoft.network/networkintentpolicies'',
        ''Network Intent Policies'',\r\n\ttype == ''microsoft.network/trafficmanagerprofiles'',
        ''Traffic Manager Profiles'',\r\n\ttype == ''microsoft.network/publicipprefixes'',
        ''PublicIP Prefixes'',\r\n\ttype == ''microsoft.network/privatelinkservices'',
        ''Private Link'',\r\n\ttype == ''microsoft.network/expressroutecircuits'',
        ''Express Route Circuits'',\r\n\ttype =~ ''microsoft.cdn/cdnwebapplicationfirewallpolicies'',
        ''CDN Web App Firewall Policies'',\r\n\ttype =~ ''microsoft.cdn/profiles'',
        ''CDN Profiles'',\r\n\ttype =~ ''microsoft.cdn/profiles/afdendpoints'', ''CDN
        Front Door Endpoints'',\r\n\ttype =~ ''microsoft.cdn/profiles/endpoints'',
        ''CDN Endpoints'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize
        count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Networking
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":4},"id":48,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":49,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n|
        where type =~ ''microsoft.network/networksecuritygroups'' and isnull(properties.networkInterfaces)
        and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId,
        location","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Unassociated
        NSGs","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":50,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"Resources\r\n    |
        where type =~ ''microsoft.network/networksecuritygroups''\r\n    | project
        id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName
        = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule
        = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol
        ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState
        ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix,
        \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix
        = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes
        = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName,
        networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId,
        resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange
        = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange
        = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n|
        project id, location, access, direction, subscriptionId, resourceGroup, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"NSG
        Rules","type":"table"}],"title":"Networking","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":52,"panels":[{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":9,"x":0,"y":5},"id":54,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources
        \r\n| where type =~ ''microsoft.operationalinsights/workspaces''\r\nor type
        =~ ''microsoft.insights/components''\r\n| summarize count() by type\r\n| extend
        type = case(\r\ntype == ''microsoft.insights/components'', \"Application Insights\",\r\ntype
        == ''microsoft.operationalinsights/workspaces'', \"Log Analytics workspaces\",\r\nstrcat(type,
        type))","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workspaces
        Overview","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":15,"x":9,"y":5},"id":55,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"text":{},"textMode":"auto"},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n     or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.insights/webtests'', ''URL Web
        Tests'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal Dashboards'',\r\n    type
        =~ ''microsoft.insights/datacollectionrules'', ''Data Collection Rules'',\r\n    type
        =~ ''microsoft.insights/autoscalesettings'', ''Auto Scale Settings'',\r\n    type
        =~ ''microsoft.insights/alertrules'', ''Alert Rules'',\r\nstrcat(\"Not Translated:
        \", type))\r\n| summarize count() by type","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Monitor Workbooks \u0026 Alerting Resources","type":"stat"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":13},"id":57,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type has ''microsoft.insights/''\r\n     or type has ''microsoft.alertsmanagement/smartdetectoralertrules''\r\n    or
        type has ''microsoft.portal/dashboards''\r\n| where type != ''microsoft.insights/components''\r\n|
        extend type = case(\r\n \ttype == ''microsoft.insights/workbooks'', \"Workbooks\",\r\n\ttype
        == ''microsoft.insights/activitylogalerts'', \"Activity Log Alerts\",\r\n\ttype
        == ''microsoft.insights/scheduledqueryrules'', \"Log Search Alerts\",\r\n\ttype
        == ''microsoft.insights/actiongroups'', \"Action Groups\",\r\n\ttype == ''microsoft.insights/metricalerts'',
        \"Metric Alerts\",\r\n\ttype =~ ''microsoft.alertsmanagement/smartdetectoralertrules'',''Smart
        Detection Rules'',\r\n    type =~ ''microsoft.portal/dashboards'', ''Portal
        Dashboards'',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Enabled
        = case(\r\n\ttype =~ ''Smart Detection Rules'', properties.state,\r\n\ttype
        != ''Smart Detection Rules'', properties.enabled,\r\n\tstrcat(\"Not Translated:
        \", type))\r\n| extend WorkbookType = iif(type =~ ''Workbooks'', properties.category,
        '' '')\r\n| extend Details = pack_all()\r\n| project name, type, subscriptionId,
        location, resourceGroup, Enabled, WorkbookType, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Workbooks
        \u0026 Alerting Resources","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":13},"id":59,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.operationalinsights/workspaces''\r\n| extend Sku = properties.sku.name\r\n|
        extend RetentionInDays = properties.retentionInDays\r\n| extend Details =
        pack_all()\r\n| project Workspace=id, resourceGroup, location, subscriptionId,
        Sku, RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":56,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"AlertsManagementResources\r\n|
        extend AlertStatus = properties.essentials.monitorCondition\r\n| extend AlertState
        = properties.essentials.alertState\r\n| extend AlertTime = properties.essentials.startDateTime\r\n|
        extend AlertSuppressed = properties.essentials.actionStatus.isSuppressed\r\n|
        extend Severity = properties.essentials.severity\r\n| where AlertStatus ==
        ''Fired''\r\n| extend Details = pack_all()\r\n| project id, name, subscriptionId,
        resourceGroup, AlertStatus, AlertState, AlertTime, AlertSuppressed, Severity,
        Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Active
        Alerts","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":61,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"securityresources\r\n|
        where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore
        = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max),
        0.001))\r\n| where subscriptionSecureScore \u003e 0\r\n| project subscriptionSecureScore,
        subscriptionId\r\n| order by subscriptionSecureScore asc","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Store by Subscription","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":58,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"where
        type =~ ''microsoft.insights/components''\r\n| extend RetentionInDays = properties.RetentionInDays\r\n|
        extend IngestionMode = properties.IngestionMode\r\n| extend Details = pack_all()\r\n|
        project Resource=id, location, resourceGroup, subscriptionId, IngestionMode,
        RetentionInDays, Details","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"App
        Monitoring","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":37},"id":60,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"resources\r\n|
        where type == \"microsoft.operationsmanagement/solutions\"\r\n| project Solution=plan.name,
        Workspace=tolower(tostring(properties.workspaceResourceId)), subscriptionId\r\n\t|
        join kind=leftouter(\r\n\t\tresources\r\n\t\t| where type =~ ''microsoft.operationalinsights/workspaces''\r\n\t\t|
        project Workspace=tolower(tostring(id)),subscriptionId) on Workspace\r\n|
        summarize Solutions = strcat_array(make_list(Solution), \",\") by Workspace,
        subscriptionId\r\n| extend AzureSecurityCenter = iif(Solutions has ''Security'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSecurityCenterFree = iif(Solutions has ''SecurityCenterFree'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureSentinel = iif(Solutions has \"SecurityInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorVMs = iif(Solutions has \"VMInsights\",''Enabled'',''Not
        Enabled'')\r\n| extend ServiceDesk = iif(Solutions has \"ITSM Connector\",''Enabled'',''Not
        Enabled'')\r\n| extend AzureAutomation = iif(Solutions has \"AzureAutomation\",''Enabled'',''Not
        Enabled'')\r\n| extend ChangeTracking = iif(Solutions has ''ChangeTracking'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateManagement = iif(Solutions has ''Updates'',''Enabled'',''Not
        Enabled'')\r\n| extend UpdateCompliance = iif(Solutions has ''WaaSUpdateInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend AzureMonitorContainers = iif(Solutions has ''ContainerInsights'',''Enabled'',''Not
        Enabled'')\r\n| extend KeyVaultAnalytics = iif(Solutions has ''KeyVaultAnalytics'',''Enabled'',''Not
        Enabled'')\r\n| extend SQLHealthCheck = iif(Solutions has ''SQLAssessment'',''Enabled'',''Not
        Enabled'')","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Log
        Analytics workspaces with enabled Solutions","type":"table"},{"datasource":"${ds}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","displayMode":"auto"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":45},"id":62,"options":{"showHeader":true},"targets":[{"account":"","azureResourceGraph":{"query":"SecurityResources
        \r\n| where type == ''microsoft.security/securescores/securescorecontrols''
        \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount,
        currentscore = properties.score.current, maxscore = properties.score.max,
        subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore,
        subscriptionId","resultFormat":"table"},"backends":[],"dimension":"","environment":"prod","metric":"","namespace":"","queryType":"Azure
        Resource Graph","refId":"A","samplingType":"","service":"metric","subscriptions":["$subscriptions"],"useBackends":false,"useCustomSeriesNaming":false}],"title":"Azure
        Security Center Secure Controls Score by Controls","type":"table"}],"title":"Monitoring
        \u0026 Security","type":"row"}],"refresh":"","schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"current":{},"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"ds","options":[],"query":"grafana-azure-monitor-datasource","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"current":{},"datasource":"${ds}","definition":"Subscriptions()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Subscription(s)","multi":true,"name":"subscriptions","options":[],"query":"Subscriptions()","refresh":1,"regex":"","skipUrlSync":false,"sort":5,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"title":"Azure
        / Resources Overview","uid":"Mtwt2BV7k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79655'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-oDjv/O9RyD3gKbP3Lj4jmg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:23 GMT
      grafana-trace-id:
      - 5aed444a6bfd2f3e95d64edde5af1bdf
      mise-correlation-id:
      - c82a5f29-65eb-4598-9f82-81793bfdb725
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504464.199.28.34364|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/xLERdASnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"cluster-detail","url":"/d/xLERdASnz/cluster-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"ClusterDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":26,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster, this widget shows it''s
        health timeline - time at which each health state value was reported. For
        a group of clusters, it shows the percentage of each health state reported
        at a given time.","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]}]},"gridPos":{"h":6,"w":24,"x":0,"y":0},"id":14,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Ok\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Ok","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Warning\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Warning","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true},{"account":"$account","backends":[],"customSeriesNaming":"{HealthState}
        {ClusterName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","hide":false,"metric":"","metricType":"query","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"ClusterHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        HealthState\") | where HealthState == \"Error\" and ClusterName in (\"$ClusterName\")
        | project Count=replacenulls(Count, 0) | zoom Count=sum(Count) by 5m | top
        40 by avg(Count)","refId":"Error","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"timeFrom":null,"timeShift":null,"title":"Cluster
        health timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Total
        number of nodes reporting at least once per health state. A node may be counted
        twice if it reported more than one health state during the selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":0,"y":6},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"DistinctCount_NodeName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\")  | summarize sum=sum(DistinctCount_NodeName)
        by HealthState","queryType":"Azure Monitor","refId":"NodeHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Nodes
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Total
        number of applications reporting at least once per health state. An application
        may be counted twice if it reported more than one health state during the
        selected time range.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":0,"mappings":[]},"overrides":[{"matcher":{"id":"byName","options":"Warning"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Error"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]}]},"gridPos":{"h":8,"w":12,"x":12,"y":6},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"pie","reduceOptions":{"calcs":["distinctCount"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"customSeriesNaming":"{HealthState}","dimension":"","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"  metric(\"AppHealthState\").samplingTypes(\"DistinctCount_AppName\").preaggregate(\"By-HealthState-ClusterName\")
        | where ClusterName in (\"$clusterName\") | summarize sum=sum(DistinctCount_AppName)
        by HealthState","queryType":"Azure Monitor","refId":"AppHealthCount","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":true}],"title":"Applications
        in each health state","type":"piechart"},{"datasource":"Geneva Datasource","description":"Shows
        the timeline of when the health state was reported as Error by a node. The
        nodes shown are the top 10 nodes that reported error most frequently across
        the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":14},"id":10,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"repeat":null,"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Error by an application. The applications shown are the top 10
        applications that reported error most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":14},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Error\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"ErrorTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Error state with their Error timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by a node. The nodes shown are the top 10 nodes that reported
        warning health state most frequently across the selected cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":1},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":23},"id":21,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {NodeName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        NodeName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Nodes in Warning state with their Warning timelines","type":"state-timeline"},{"datasource":"Geneva
        Datasource","description":"Shows the timeline of when the health state was
        reported as Warning by an application. The applications shown are the top
        10 applications that reported warning state most frequently across the selected
        cluster.","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":50,"lineWidth":2},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"#4a4a4a","value":null},{"color":"yellow","value":1}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":23},"id":20,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"pluginVersion":"8.1.2","targets":[{"account":"$account","backends":[],"customSeriesNaming":"{ClusterName}
        {AppName}","dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricType":"query","namespace":"ServiceFabric","queryText":"metric(\"AppHealthState\").samplingTypes(\"Count\").preaggregate(\"ClusterName,
        AppName, HealthState\") | where HealthState == \"Warning\" | project Count=replacenulls(Count,0)
        | zoom Count=max(Count) by 5m | top 10 by avg(Count) desc","queryType":"query","refId":"WarningTimeline","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Top
        10 Applications in Warning state with their Warning timelines","type":"state-timeline"}],"refresh":false,"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, ClusterHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":true,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, ClusterHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Cluster
        Detail","uid":"xLERdASnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14470'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vijgJI/cF/OwZQ6lNXGf1w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:23 GMT
      grafana-trace-id:
      - 2f039bd5149652cd0cf36b03b2c9d188
      mise-correlation-id:
      - e10a60e2-7286-4a98-b824-5bf9ffeb1bb6
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504464.439.29.737494|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/defenderForCloudActiveAlerts
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"defender-for-cloud-active-alerts\",\"url\":\"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":12,\"folderUid\":\"de1j3sc2xntvkf\",\"folderTitle\":\"Microsoft
        Defender for Cloud\",\"folderUrl\":\"/dashboards/f/de1j3sc2xntvkf/microsoft-defender-for-cloud\",\"provisioned\":true,\"provisionedExternalId\":\"Defender-for-Cloud-ActiveAlerts.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"9.4.12\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"}],\"description\":\"Alert
        dashboard for Defender for Cloud (MDC)\",\"editable\":true,\"id\":13,\"links\":[{\"asDropdown\":false,\"icon\":\"external
        link\",\"includeVars\":false,\"keepTime\":false,\"tags\":[],\"targetBlank\":true,\"title\":\"Feedback\",\"tooltip\":\"\",\"type\":\"link\",\"url\":\"https://forms.office.com/r/trfcu7UYK9\"}],\"liveNow\":false,\"panels\":[{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":9,\"x\":0,\"y\":0},\"id\":2,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eActive alerts by severity\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":15,\"x\":9,\"y\":0},\"id\":7,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts generated by severity and day\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-green\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":0,\"y\":3},\"id\":31,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Information'\\r\\n  |
        project Severity = tostring(Severity)\\r\\n  | summarize information = count()
        by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Information\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-yellow\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":2,\"y\":3},\"id\":5,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Low'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize Low = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Low\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Low\":false},\"indexByName\":{},\"renameByName\":{}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-orange\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":4,\"y\":3},\"id\":4,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'Medium'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize medium = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Medium\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"Severity\":false,\"count_\":true,\"medium\":false},\"indexByName\":{},\"renameByName\":{\"count_\":\"\"}}}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-red\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":8,\"w\":2,\"x\":6,\"y\":3},\"id\":6,\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | where properties.Status in ('Active')\\r\\n  | extend Severity = properties.Severity\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where TimeRange
        \\u003e ago($TimeRange)\\r\\n  | where Severity == 'High'\\r\\n  | project
        Severity = tostring(Severity)\\r\\n  | summarize high = count() by Severity\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"High\",\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"0\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"InfoCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-green\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"LowCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MediumCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"HighCount\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":10,\"w\":15,\"x\":9,\"y\":3},\"id\":30,\"options\":{\"barRadius\":0,\"barWidth\":0.34,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"always\",\"stacking\":\"normal\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"datestamp\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Medium\\\"\\r\\n| summarize MediumCount = count() by
        bin(TimeGeneratedUtc, 1d), Severity\\r\\n| join kind=leftouter (\\r\\nsecurityresources
        \\r\\n| where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend
        Severity = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Low\\\"\\r\\n| summarize LowCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter (\\r\\nsecurityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc = todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"High\\\"\\r\\n| summarize HighCount = count() by bin(TimeGeneratedUtc,
        1d), Severity) on TimeGeneratedUtc\\r\\n| join kind=leftouter\\r\\n(securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Severity
        = tostring(properties.Severity), TimeGeneratedUtc\_=\_todatetime(properties.TimeGeneratedUtc)\\r\\n|
        where Severity == \\\"Informational\\\"\\r\\n| summarize InfoCount = count()
        by bin(TimeGeneratedUtc,\_1d),\_Severity\\r\\n) on TimeGeneratedUtc\\r\\n|
        where TimeGeneratedUtc \\u003e ago($TimeRange)\\r\\n| extend datestamp = format_datetime(TimeGeneratedUtc,
        'yyyy-MM-dd')\\r\\n| project datestamp, HighCount,\_MediumCount,\_LowCount,\_InfoCount\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"TimeGeneratedUtc\":false},\"indexByName\":{},\"renameByName\":{\"HighCount\":\"Alerts
        with high severity\",\"InfoCount\":\"Alerts with information severity\",\"LowCount\":\"Alerts
        with low severity\",\"MediumCount\":\"Alerts with medium severity\",\"TimeGeneratedUtc\":\"Date\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":13},\"id\":10,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eMITRE ATT\\u0026CK Tactics: Enterprise\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"dark-blue\",\"value\":null}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":16},\"id\":12,\"options\":{\"colorMode\":\"background\",\"graphMode\":\"area\",\"justifyMode\":\"center\",\"orientation\":\"auto\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":true},\"text\":{},\"textMode\":\"auto\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type == \\\"microsoft.security/locations/alerts\\\"\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend Tactics = Details.[\\\"Intent\\\"]\\r\\n| extend
        TimeGeneratedUtc = Details.[\\\"TimeGeneratedUtc\\\"]\\r\\n| project Tactics\\r\\n|
        extend Tactic = split(Tactics,\\\",\\\")\\r\\n| mv-expand Tactic\\r\\n| extend
        Tactic = trim(\\\" \\\",tostring(Tactic))\\r\\n| summarize count = count()
        by Tactic\\r\\n| sort by Tactic desc\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transparent\":true,\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":11,\"x\":7,\"y\":30},\"id\":13,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eAlerts by count\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[]},\"gridPos\":{\"h\":12,\"w\":23,\"x\":0,\"y\":32},\"id\":14,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"
        \ datatable(AlertDisplayName: string) [ \\\"All\\\"] | union(securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Prop = parse_json(properties)\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend AlertDisplayName
        = Prop.[\\\"AlertDisplayName\\\"]\\r\\n| extend str = strcat(AlertDisplayName,
        \\\"  \\\")\\r\\n| summarize Count = count() by tostring(str))\\r\\n| where
        Count \\u003e 0\\r\\n| order by Count desc  \\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"AlertDisplayName\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Count\",\"str\":\"Alert
        Displayname\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":44},\"id\":15,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Alerts by affected resource\",\"mode\":\"markdown\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Number
        of alerts\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":47},\"id\":16,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"Resource
        Group\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| extend Details
        = parse_json(properties)\\r\\n| where properties.Status in ('Active')\\r\\n|
        extend TimeRange = properties.TimeGeneratedUtc \\r\\n| where TimeRange \\u003e
        ago($TimeRange)\\r\\n| extend RG = tostring(resourceGroup)\\r\\n| where RG
        != \\\"\\\"\\r\\n| summarize count = count() by RG\\r\\n| sort by RG desc
        \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource group\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{},\"indexByName\":{},\"renameByName\":{\"RG\":\"Resource
        Group\",\"count\":\"Number of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":12,\"x\":11,\"y\":47},\"id\":26,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"ResourceType\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n| where type =~ 'microsoft.security/locations/alerts'\\r\\n|
        where properties.Status in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc
        \\r\\n| where TimeRange \\u003e ago($TimeRange)\\r\\n| extend TimeGenerated
        = properties.TimeGeneratedUtc \\r\\n| extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n|
        mv-expand ResourceIdentifiers\\r\\n| extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n
        \       AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        where ResourceType == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n|
        parse AzureResourceId with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\"
        ResourceGroup \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\"
        ResourceName\\r\\n| extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\",
        ResourceType)\\r\\n| summarize Count=count() by ResourceType)\\r\\n| where
        Count \\u003e 0\\r\\n| sort by ResourceType\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by resource type\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":0,\"y\":64},\"id\":27,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"TAG\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"resources\\r\\n
        \ | project id = tolower(id), tags\\r\\n  | join kind=inner (securityresources\\r\\n
        \ | where type =~ \\\"microsoft.security/locations/alerts\\\"\\r\\n  | extend
        isAzure = tostring(properties.ResourceIdentifiers) matches regex '\\\"Type\\\"\\\\\\\\s*:\\\\\\\\s*\\\"AzureResource\\\"'\\r\\n
        \ | extend affectedResourceId = extract('\\\"AzureResourceId\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.ResourceIdentifiers))\\r\\n  | extend hostName = iff(isAzure,
        \\\"\\\", extract('\\\"HostName\\\"\\\\\\\\s*:\\\\\\\\s*\\\"([^\\\"]*)\\\"',
        1, tostring(properties.Entities)))\\r\\n  | extend splitAffectedResourceId
        = split(affectedResourceId, \\\"/\\\")\\r\\n  | extend resourceNameIndex =
        iff(array_length(splitAffectedResourceId) \\u003e 1, array_length(splitAffectedResourceId)
        - 1, 0)\\r\\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex],
        iff(isempty(hostName), \\\"Non-Azure\\\", hostName))| project-away resourceNameIndex,
        splitAffectedResourceId, hostName, isAzure\\r\\n  | project alertId = id,
        subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\\r\\n
        \   ) on $left.id == $right.affectedResourceId\\r\\n  | extend id = alertId,
        subscriptionId, properties = alertProperties\\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where properties.Severity in ('Low', 'Medium', 'High')\\r\\n
        \ | extend TimeGenerated = properties.TimeGeneratedUtc \\r\\n  | where TimeGenerated
        \\u003e ago($TimeRange)\\r\\n  | extend SeverityRank = case(\\r\\n    properties.Severity
        == 'High', 3,\\r\\n    properties.Severity == 'Medium', 2,\\r\\n    properties.Severity
        == 'Low', 1,\\r\\n    0\\r\\n    )\\r\\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId)
        asc\\r\\n| extend tags = tags\\r\\n| mv-expand ['tags']\\r\\n| extend tagparse
        = parse_json(['tags'])\\r\\n| parse tagparse with '{\\\"' TagName '\\\":\\\"'
        Value '\\\"}'\\r\\n| where isnotempty(TagName)\\r\\n| project Value, alertId\\r\\n|
        summarize Count = count() by Value\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by tag\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"continuous-blues\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"series\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"scheme\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"mappings\":[],\"max\":75,\"min\":0,\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null}]},\"unit\":\"none\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":17,\"w\":11,\"x\":11,\"y\":64},\"id\":28,\"options\":{\"barRadius\":0,\"barWidth\":0.8,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"vertical\",\"showValue\":\"always\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xField\":\"location\",\"xTickLabelRotation\":-45,\"xTickLabelSpacing\":0},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        in ('Active')\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n//| where location != \\\"\\\"\\r\\n|
        extend ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n| mv-expand
        ResourceIdentifiers\\r\\n| extend AzureResourceId = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n|
        project id, AzureResourceId, subscriptionId\\r\\n| join (\\r\\nresources\\r\\n|
        project AzureResourceId = tolower(id), location\\r\\n) on AzureResourceId\\r\\n|
        summarize Count = count() by location\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Alert
        count by region\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"RG\":\"Resource Group\",\"ResourceType\":\"Resource Type\",\"Value\":\"TAG\",\"count\":\"Number
        of alerts\",\"location\":\"Region\"}}}],\"transparent\":true,\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":81},\"id\":21,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Number
        of alerts\"}]},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"datatable(ResourceId:
        string) [ \\\"All\\\"] | union (securityresources\\r\\n  | where type =~ 'microsoft.security/locations/alerts'\\r\\n
        \ | extend TimeRange = properties.TimeGeneratedUtc \\r\\n  | where properties.Status
        in ('Active')\\r\\n  | where TimeRange \\u003e ago($TimeRange)\\r\\n  | extend
        ResourceIdentifiers = properties.ResourceIdentifiers\\r\\n | mv-expand ResourceIdentifiers\\r\\n
        | extend ResourceType = tostring(ResourceIdentifiers.Type),\\r\\n        AzureResourceId
        = tolower(tostring(ResourceIdentifiers.AzureResourceId))\\r\\n| where ResourceType
        == \\\"AzureResource\\\" and isnotempty(AzureResourceId)\\r\\n| parse AzureResourceId
        with \\\"/subscriptions/\\\" Subscription \\\"/resourcegroups/\\\" ResourceGroup
        \\\"/providers/\\\" ProviderName \\\"/\\\" ResourceType \\\"/\\\" ResourceName\\r\\n|
        extend ResourceName = iif(isempty(ResourceName), subscriptionId, ResourceName)\\r\\n|
        extend ResourceType = iif(isempty(ResourceType), \\\"Subscription\\\", ResourceType)\\r\\n|
        extend ResourceGroup = iif(isempty(ResourceGroup), \\\"n/a\\\", ResourceGroup)\\r\\n|
        summarize Count=count() by ResourceName, ResourceType, ResourceGroup\\r\\n|
        top 25 by Count)\\r\\n| order by Count desc  \"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"title\":\"Top
        25 attacked resources\",\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":95},\"id\":22,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eDismissed Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":98},\"id\":23,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Dismissed'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"description\":\"\",\"gridPos\":{\"h\":3,\"w\":12,\"x\":6,\"y\":112},\"id\":24,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ch1
        style=\\\"font-size:2vw;\\\"\\u003eResolved Alerts\\u003c/h1\\u003e\",\"mode\":\"html\"},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Monitor\",\"refId\":\"A\"}],\"transparent\":true,\"type\":\"text\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"left\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"mappings\":[],\"noValue\":\"No
        alerts in this time range\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"text\",\"value\":null},{\"color\":\"dark-blue\",\"value\":1}]}},\"overrides\":[]},\"gridPos\":{\"h\":14,\"w\":23,\"x\":0,\"y\":115},\"id\":25,\"options\":{\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true},\"targets\":[{\"azureMonitor\":{\"allowedTimeGrainsMs\":[],\"timeGrain\":\"auto\"},\"azureResourceGraph\":{\"query\":\"securityresources\\r\\n|
        where type =~ 'microsoft.security/locations/alerts'\\r\\n| where properties.Status
        == 'Resolved'\\r\\n| extend TimeRange = properties.TimeGeneratedUtc \\r\\n|
        where TimeRange \\u003e ago($TimeRange)\\r\\n| extend start = todatetime(properties.StartTimeUtc)\\r\\n|
        extend end = todatetime(properties.ProcessingEndTimeUtc)\\r\\n| extend aname
        = tostring(properties.AlertDisplayName)\\r\\n| extend intent = properties.Intent\\r\\n|
        extend severity = tostring(properties.Severity)\\r\\n| extend hours = datetime_diff('minute',
        end, start)\\r\\n| project start, end, aname, intent, severity, ['hours']\\r\\n|
        order by severity, aname\\r\\n\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"queryType\":\"Azure
        Resource Graph\",\"refId\":\"A\",\"subscriptions\":[\"$Subscriptions\"]}],\"transformations\":[{\"id\":\"organize\",\"options\":{\"excludeByName\":{\"ResourceId\":true},\"indexByName\":{},\"renameByName\":{\"Count\":\"Number
        of alerts\",\"ResourceGroup\":\"Resource group\",\"ResourceName\":\"Resource
        name\",\"ResourceType\":\"Resource type\",\"aname\":\"Alert name\",\"end\":\"Alert
        end\",\"hours\":\"Minutes between alert start and end\",\"intent\":\"Alert
        intent\",\"severity\":\"Alert severity\",\"start\":\"Alerts start\"}}}],\"transparent\":true,\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[\"Defender
        for Cloud\",\"Alerts\"],\"templating\":{\"list\":[{\"current\":{},\"hide\":0,\"includeAll\":false,\"label\":\"Datasource\",\"multi\":false,\"name\":\"Datasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${Datasource}\"},\"definition\":\"\",\"description\":\"Azure
        subscriptions\",\"hide\":0,\"includeAll\":true,\"label\":\"Subscription(s)\",\"multi\":true,\"name\":\"Subscriptions\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{\"selected\":true,\"text\":\"1d\",\"value\":\"1d\"},\"description\":\"Time
        range for the dashboard\",\"hide\":0,\"includeAll\":false,\"label\":\"Time
        Range\",\"multi\":false,\"name\":\"TimeRange\",\"options\":[{\"selected\":false,\"text\":\"30m\",\"value\":\"30m\"},{\"selected\":false,\"text\":\"1h\",\"value\":\"1h\"},{\"selected\":false,\"text\":\"6h\",\"value\":\"6h\"},{\"selected\":false,\"text\":\"12h\",\"value\":\"12h\"},{\"selected\":false,\"text\":\"1d\",\"value\":\"1d\"},{\"selected\":false,\"text\":\"7d\",\"value\":\"7d\"},{\"selected\":false,\"text\":\"14d\",\"value\":\"14d\"},{\"selected\":false,\"text\":\"30d\",\"value\":\"30d\"},{\"selected\":true,\"text\":\"90d\",\"value\":\"90d\"}],\"query\":\"30m,1h,6h,12h,1d,7d,14d,30d,90d\",\"queryValue\":\"\",\"skipUrlSync\":false,\"type\":\"custom\"}]},\"time\":{\"from\":\"now-90h\",\"to\":\"now\"},\"timepicker\":{\"hidden\":true},\"timezone\":\"browser\",\"title\":\"Defender
        for Cloud / Active Alerts\",\"uid\":\"defenderForCloudActiveAlerts\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '35425'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-oV514SHsjwpwRX+Xos8JDA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:23 GMT
      grafana-trace-id:
      - b2bb89bc88c88f69c01d0878d6e8273e
      mise-correlation-id:
      - 341d221c-d035-4dd1-a3ba-4a8bcaa9f77c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504464.725.28.454162|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/c0613871-ebb0-4a2d-b071-f51a851f375d
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"full-stack-aks-monitoring\",\"url\":\"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":28,\"folderUid\":\"de1j3sd0fssu8a\",\"folderTitle\":\"Azure
        Kubernetes Service Monitoring\",\"folderUrl\":\"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring\",\"provisioned\":true,\"provisionedExternalId\":\"Full
        Stack AKS Monitoring.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"__elements\":{},\"__inputs\":[],\"__requires\":[{\"id\":\"barchart\",\"name\":\"Bar
        chart\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"geneva-datasource\",\"name\":\"Geneva
        Datasource\",\"type\":\"datasource\",\"version\":\"%VERSION%\"},{\"id\":\"grafana\",\"name\":\"Grafana\",\"type\":\"grafana\",\"version\":\"10.0.0-pre\"},{\"id\":\"grafana-azure-monitor-datasource\",\"name\":\"Azure
        Monitor\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"graph\",\"name\":\"Graph
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"prometheus\",\"name\":\"Prometheus\",\"type\":\"datasource\",\"version\":\"1.0.0\"},{\"id\":\"stat\",\"name\":\"Stat\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table\",\"name\":\"Table\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"table-old\",\"name\":\"Table
        (old)\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"text\",\"name\":\"Text\",\"type\":\"panel\",\"version\":\"\"},{\"id\":\"timeseries\",\"name\":\"Time
        series\",\"type\":\"panel\",\"version\":\"\"}],\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":{\"type\":\"grafana\",\"uid\":\"--
        Grafana --\"},\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":29,\"links\":[],\"liveNow\":false,\"panels\":[{\"gridPos\":{\"h\":5,\"w\":12,\"x\":0,\"y\":0},\"id\":94,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        Azure Kubernetes Service Monitoring\\n\\nThis dashboard provides visibility
        into AKS clusters monitored with Azure Monitor services: \\n- [Azure Monitor
        managed service for Prometheus](https://learn.microsoft.com/en-Us/azure/azure-monitor/essentials/prometheus-metrics-overview)
        for infrastructure metrics\\n- [Azure Monitor Container Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/containers/container-insights-overview)
        for logs\\n- [Azure Monitor Application Insights](https://learn.microsoft.com/en-us/azure/azure-monitor/app/kubernetes-codeless)
        for application metrics and traces\\n\\n\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"gridPos\":{\"h\":5,\"w\":12,\"x\":12,\"y\":0},\"id\":95,\"options\":{\"code\":{\"language\":\"go\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"#
        User Guide\\n\\nFor best results please use the following instructions to
        configure Prometheus and Azure Monitor data sources for this dashboard.\\n
        - [Enable](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-overview#enable)
        Azure Monitor managed service for Prometheus.\\n - [Configure](https://learn.microsoft.com/en-us/azure/managed-grafana/how-to-data-source-plugins-managed-identity?tabs=azure-portal#azure-monitor-configuration)
        Azure Monitor data source.\\n\\n If you have feedback, please reach out to
        us at genevaingrafana@microsoft.com\",\"mode\":\"markdown\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":5},\"id\":71,\"panels\":[],\"title\":\"Cluster
        Level KPIs\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":0,\"y\":6},\"id\":80,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"builder\",\"expr\":\"cluster:node_cpu:ratio_rate5m{cluster=\\\"$cluster\\\"}\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"min\":0,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":4,\"y\":6},\"id\":82,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":8,\"y\":6},\"id\":84,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"cpu\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":12,\"y\":6},\"id\":86,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"1
        - sum(:node_memory_MemAvailable_bytes:sum{cluster=\\\"$cluster\\\"}) / sum(node_memory_MemTotal_bytes{job=\\\"node\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":16,\"y\":6},\"id\":88,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Requests Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"max\":100,\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"#ffffff\",\"value\":null}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":4,\"w\":4,\"x\":20,\"y\":6},\"id\":90,\"links\":[],\"options\":{\"colorMode\":\"value\",\"graphMode\":\"area\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\\\"$cluster\\\"})
        / sum(kube_node_status_allocatable{job=\\\"kube-state-metrics\\\",resource=\\\"memory\\\",cluster=\\\"$cluster\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Limits Commitment\",\"transformations\":[],\"type\":\"stat\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of nodes in the cluster grouped by status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"nodecount
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        VMEventScheduled,Ready\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":0,\"y\":10},\"id\":73,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubeNodeInventory\\r\\n|
        where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), Computer, Status\\r\\n|
        summarize arg_max(TimeGenerated, *) by Computer, Status\\r\\n| summarize nodecount=count()
        by Status\\r\\n| project now(), nodecount, Status\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Node count
        by Status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"nodecount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":6,\"y\":10},\"id\":78,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace !in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"User Pod
        count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Pod
        count grouped by Pod Status\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"decimals\":0,\"links\":[{\"title\":\"\",\"url\":\"\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"transparent\",\"value\":null},{\"color\":\"red\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byFrameRefID\",\"options\":\"A\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"title\":\"Drill
        down to Logs Dashboard\",\"url\":\"/d/KoV9p7BVk/pod-level-logs?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ws:queryparam}\\u0026${clusterid:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":12,\"y\":10},\"id\":75,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"KubePodInventory
        | where ClusterId =~ '$clusterid'\\r\\n| where $__timeFilter(TimeGenerated)\\r\\n|
        where Namespace in ('kube-system')\\r\\n| summarize count() by bin(TimeGenerated,
        $__interval), PodUid, PodStatus\\r\\n| summarize arg_max(TimeGenerated, *)
        by PodUid, PodStatus\\r\\n| summarize podCount = count() by PodStatus\\r\\n|
        project now(), podCount, PodStatus\\r\\n\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"System
        Pod count by status\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"podCount(.*)(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Number
        of controllers in the cluster by Controller Kind\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"fillOpacity\":80,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineWidth\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicaSet\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"
        ReplicationController\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":8,\"w\":6,\"x\":18,\"y\":10},\"id\":77,\"links\":[],\"options\":{\"barRadius\":0,\"barWidth\":0.97,\"fullHighlight\":false,\"groupWidth\":0.7,\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"orientation\":\"auto\",\"showValue\":\"auto\",\"stacking\":\"none\",\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"},\"xTickLabelRotation\":0,\"xTickLabelSpacing\":0},\"pluginVersion\":\"9.3.6\",\"targets\":[{\"appInsights\":{\"groupBy\":\"none\",\"metricName\":\"select\",\"rawQuery\":false,\"rawQueryString\":\"\",\"spliton\":\"\",\"timeGrainType\":\"auto\",\"xaxis\":\"timestamp\",\"yaxis\":\"\"},\"azureLogAnalytics\":{\"query\":\"\\r\\nKubePodInventory
        | where ClusterId =~ '$clusterid' | where $__timeFilter(TimeGenerated) \\r\\n|
        summarize count() by bin(TimeGenerated, $__interval), PodUid, ControllerKind\\r\\n|
        summarize arg_max(TimeGenerated, *) by PodUid, ControllerKind\\r\\n| summarize
        controllerCount = count() by ControllerKind\\r\\n| extend ControllerKind=iif(isempty(ControllerKind),
        \\\"None\\\", ControllerKind)\\r\\n| project now(), ControllerKind, controllerCount\",\"resource\":\"$ws\",\"resultFormat\":\"time_series\"},\"azureMonitor\":{\"dimensionFilter\":\"*\",\"metricDefinition\":\"select\",\"metricName\":\"select\",\"metricNamespace\":\"select\",\"resourceGroup\":\"select\",\"resourceName\":\"select\",\"timeGrain\":\"auto\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"\"}],\"title\":\"Controller
        count by Controller Kind\",\"transformations\":[{\"id\":\"renameByRegex\",\"options\":{\"regex\":\"controllerCount(.*)\",\"renamePattern\":\"$1\"}}],\"type\":\"barchart\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":18},\"id\":19,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Compute
        Resources - Namespaces (Pods)\",\"type\":\"row\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":0,\"y\":19},\"id\":1,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":6,\"y\":19},\"id\":2,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"CPU
        Utilisation (from limits)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":12,\"y\":19},\"id\":3,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from requests)\",\"type\":\"stat\"},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]},\"unit\":\"percentunit\"},\"overrides\":[]},\"gridPos\":{\"h\":3,\"w\":6,\"x\":18,\"y\":19},\"id\":4,\"links\":[],\"options\":{\"colorMode\":\"none\",\"graphMode\":\"none\",\"justifyMode\":\"auto\",\"orientation\":\"horizontal\",\"reduceOptions\":{\"calcs\":[\"mean\"],\"fields\":\"\",\"values\":false},\"textMode\":\"auto\"},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) / sum(kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"})\",\"format\":\"time_series\",\"instant\":true,\"intervalFactor\":2,\"refId\":\"A\"}],\"title\":\"Memory
        Utilisation (from limits)\",\"type\":\"stat\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":22},\"hiddenSeries\":false,\"id\":5,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.cpu\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"CPU
        Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"transparent\",\"mode\":\"fixed\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"mode\":\"basic\",\"type\":\"color-background\"},\"inspect\":false},\"displayName\":\"\",\"mappings\":[{\"options\":{\"0\":{\"color\":\"orange\",\"index\":0}},\"type\":\"value\"}],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"},{\"id\":\"custom.width\",\"value\":300}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":29},\"id\":6,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"editorMode\":\"code\",\"expr\":\"sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10}],\"title\":\"CPU
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":36},\"hiddenSeries\":false,\"id\":7,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[{\"alias\":\"quota
        - requests\",\"color\":\"#F2495C\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false},{\"alias\":\"quota
        - limits\",\"color\":\"#FF9830\",\"dashes\":true,\"fill\":0,\"hiddenSeries\":true,\"hideTooltip\":true,\"legend\":true,\"linewidth\":2,\"stack\":false}],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"requests.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - requests\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"scalar(kube_resourcequota{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\", type=\\\"hard\\\",resource=\\\"limits.memory\\\"})\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"quota
        - limits\",\"refId\":\"C\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Memory
        Usage (w/o cache)\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"bytes\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"datasource\":{\"uid\":\"$promDatasource\"},\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"decimals\":2,\"displayName\":\"\",\"mappings\":[],\"noValue\":\"-\",\"thresholds\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"transparent\"}]},\"unit\":\"short\"},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Time\"},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #A\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #B\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #C\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Requests
        %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"thresholds\",\"value\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #D\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #E\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Limits %\"},{\"id\":\"unit\",\"value\":\"percentunit\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"},{\"id\":\"thresholds\",\"value\":{\"mode\":\"percentage\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"color-background\"}},{\"id\":\"mappings\",\"value\":[{\"options\":{\"match\":\"null\",\"result\":{\"color\":\"orange\",\"index\":0}},\"type\":\"special\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #F\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (RSS)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #G\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Cache)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Value
        #H\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Memory Usage (Swap)\"},{\"id\":\"unit\",\"value\":\"bytes\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"pod\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Pod\"},{\"id\":\"unit\",\"value\":\"short\"},{\"id\":\"decimals\",\"value\":2},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down\",\"url\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=${__data.fields.pod}\"}]},{\"id\":\"custom.align\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Time\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":true}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":43},\"id\":8,\"links\":[],\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":false,\"displayName\":\"Memory
        Usage\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_working_set_bytes{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\",
        image!=\\\"\\\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}) by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_rss{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_cache{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"G\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(container_memory_swap{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\",container!=\\\"\\\"})
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"H\",\"step\":10}],\"title\":\"Memory
        Quota\",\"transformations\":[{\"id\":\"merge\",\"options\":{\"reducers\":[]}}],\"type\":\"table\"},{\"collapsed\":false,\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":50},\"id\":25,\"panels\":[],\"targets\":[{\"datasource\":{\"type\":\"datasource\",\"uid\":\"grafana\"},\"refId\":\"A\"}],\"title\":\"Network
        Metrics - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"${promDatasource}\"},\"gridPos\":{\"h\":3,\"w\":12,\"x\":0,\"y\":51},\"id\":93,\"options\":{\"code\":{\"language\":\"plaintext\",\"showLineNumbers\":false,\"showMiniMap\":false},\"content\":\"\\u003ca
        style=\\\"color: inherit;\\\" href=\\\"/d/a5g8n2b48/aks-cluster-platform-network-metrics?{amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${__url_time_range}\\\"
        target=\\\"_blank\\\"\\u003e\\n\\u003cdiv style=\\\"padding-top: 20px\\\"\\u003e\\n
        \ \\u003ccenter\\u003e\\u003cp style=\\\"color: #4d99b8; font-size:18px;\\\"\\u003eCluster
        Network Metrics Dashboard\\u003c/center\\u003e\\n  \\u003ccenter\\u003e\\u003cp
        style=\\\"margin-top:0px;\\\"\\u003eAdditional Network Metrics from AKS Platform\\u003c/p\\u003e\\u003c/center\\u003e\\n\\u003c/div\\u003e\\n\\u003c/a\\u003e\",\"mode\":\"html\"},\"pluginVersion\":\"10.0.0-pre\",\"type\":\"text\"},{\"aliasColors\":{},\"bars\":false,\"columns\":[],\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":1,\"fontSize\":\"100%\",\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":54},\"id\":9,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"percentage\":false,\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"showHeader\":true,\"sort\":{\"col\":0,\"desc\":true},\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"styles\":[{\"$$hashKey\":\"object:246\",\"alias\":\"Time\",\"align\":\"auto\",\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"pattern\":\"Time\",\"type\":\"hidden\"},{\"$$hashKey\":\"object:247\",\"alias\":\"Current
        Receive Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #A\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:248\",\"alias\":\"Current
        Transmit Bandwidth\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #B\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"Bps\"},{\"$$hashKey\":\"object:249\",\"alias\":\"Rate
        of Received Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #C\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:250\",\"alias\":\"Rate
        of Transmitted Packets\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #D\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:251\",\"alias\":\"Rate
        of Received Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #E\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:252\",\"alias\":\"Rate
        of Transmitted Packets Dropped\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":false,\"linkTargetBlank\":false,\"linkTooltip\":\"Drill
        down\",\"linkUrl\":\"\",\"pattern\":\"Value #F\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"pps\"},{\"$$hashKey\":\"object:253\",\"alias\":\"Pod\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"link\":true,\"linkTargetBlank\":true,\"linkTooltip\":\"Drill
        down to pods\",\"linkUrl\":\"/d/6fAFR90Vk/kubernetes-compute-resources-pod-with-logs-v1?var-datasource=$promDatasource\\u0026var-cluster=$cluster\\u0026var-namespace=$namespace\\u0026from=$__from\\u0026to=$__to\\u0026var-pod=$__cell\",\"pattern\":\"pod\",\"thresholds\":[],\"type\":\"number\",\"unit\":\"short\"},{\"$$hashKey\":\"object:254\",\"alias\":\"\",\"align\":\"auto\",\"colors\":[],\"dateFormat\":\"YYYY-MM-DD
        HH:mm:ss\",\"decimals\":2,\"pattern\":\"/.*/\",\"thresholds\":[],\"type\":\"string\",\"unit\":\"short\"}],\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"A\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"B\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"C\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"D\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"E\",\"step\":10},{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{job=\\\"cadvisor\\\",
        cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}[$__rate_interval]))
        by (pod)\",\"format\":\"table\",\"instant\":true,\"intervalFactor\":2,\"legendFormat\":\"\",\"refId\":\"F\",\"step\":10}],\"thresholds\":[],\"title\":\"Current
        Network Usage\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"transform\":\"table\",\"type\":\"table-old\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}]},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":61},\"hiddenSeries\":false,\"id\":10,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Receive
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":61},\"hiddenSeries\":false,\"id\":11,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_bytes_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Transmit
        Bandwidth\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"Bps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":68},\"hiddenSeries\":false,\"id\":12,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":68},\"hiddenSeries\":false,\"id\":13,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":0,\"y\":75},\"hiddenSeries\":false,\"id\":14,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_receive_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Received Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":{\"uid\":\"$promDatasource\"},\"fill\":10,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":12,\"x\":12,\"y\":75},\"hiddenSeries\":false,\"id\":15,\"legend\":{\"avg\":false,\"current\":false,\"max\":false,\"min\":false,\"show\":true,\"total\":false,\"values\":false},\"lines\":true,\"linewidth\":0,\"links\":[],\"nullPointMode\":\"null
        as zero\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.0.0-pre\",\"pointradius\":5,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"spaceLength\":10,\"stack\":true,\"steppedLine\":false,\"targets\":[{\"datasource\":{\"uid\":\"$promDatasource\"},\"expr\":\"sum(irate(container_network_transmit_packets_dropped_total{cluster=\\\"$cluster\\\",
        namespace=\\\"$namespace\\\"}[$__rate_interval])) by (pod)\",\"format\":\"time_series\",\"intervalFactor\":2,\"legendFormat\":\"{{pod}}\",\"refId\":\"A\",\"step\":10}],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Rate
        of Transmitted Packets Dropped\",\"tooltip\":{\"shared\":true,\"sort\":2,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"pps\",\"logBase\":1,\"min\":0,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":false}],\"yaxis\":{\"align\":false}},{\"collapsed\":false,\"gridPos\":{\"h\":1,\"w\":24,\"x\":0,\"y\":82},\"id\":27,\"panels\":[],\"title\":\"Application
        Insights - Namespaces\",\"type\":\"row\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":62,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-blue\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":83},\"id\":31,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"${res}
        | Users\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/segmentationUsers\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize Count = count() by bin(timestamp, $__interval)\\n|
        order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Requests (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"axisSoftMin\":0,\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":64,\"gradientMode\":\"opacity\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"none\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"users/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Users
        (Unique)\"}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sessions/count_unique\"},\"properties\":[{\"id\":\"displayName\",\"value\":\"Sessions
        (Unique)\"},{\"id\":\"color\",\"value\":{\"fixedColor\":\"purple\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"semi-dark-orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"P95\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"MAX\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":6,\"w\":24,\"x\":0,\"y\":89},\"id\":33,\"interval\":\"60s\",\"links\":[{\"targetBlank\":true,\"title\":\"Performance\",\"url\":\"https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/${sub}/resourceGroups/${rg}/providers/microsoft.insights/components/${res}/performance\"}],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n// calculate average request duration
        for all requests\\n| summarize AVG = avg(duration), P95 = percentiles(duration,
        95), MAX = max(duration) by bin(timestamp, $__interval)\\n| project timestamp,
        AVG = AVG/1000, P95 = P95/1000, MAX = MAX/1000\\n| order by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Server
        Response Time (sec)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":true,\"title\":\"Drill
        down to transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"},{\"color\":\"#EAB839\",\"value\":0.5},{\"color\":\"dark-red\",\"value\":1}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Avg\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":269},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Max\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"basic\",\"type\":\"gauge\"}},{\"id\":\"custom.width\",\"value\":715},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":237},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Count\"},\"properties\":[{\"id\":\"custom.hidden\",\"value\":false},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":95},\"id\":43,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"Count\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nlet
        dataset = requests\\n| where $__timeFilter(timestamp)\\n| where cloud_RoleName
        in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n;\\ndataset\\n| summarize  Avg = avg(duration)/1000,
        Max = max(duration)/1000, Count = count() by operation_Name\\n| top 5 by Avg
        desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Operation Names by Avg Duration\",\"transformations\":[],\"type\":\"table\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"The
        resource path for this panel uses multiple template variables which requires
        modifying the dashboard JSON directly. If you would like to do something similar
        please go to Settings \\u003e JSON Model. Edit as you'd like in your new copy
        by going to Settings \\u003e Save as.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"},\"custom\":{\"axisCenteredZero\":false,\"axisColorMode\":\"text\",\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":22,\"gradientMode\":\"hue\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":1,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"auto\",\"spanNulls\":false,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/1M41p4nVk/azure-insights-applications-performance-kayode?orgId=1\\u0026var-ds=Azure%20Monitor%20-%20Contoso%20Hotels\\u0026var-sub=ebb79bc0-aa86-44a7-8111-cabbe0c43993\\u0026var-rg=CH1-FabrikamRG\\u0026var-ns=Microsoft.Insights%2Fcomponents\\u0026var-res=CH1-RetailAppAI\\u0026from=now-1h\\u0026to=now\\u0026var-operation_Name=${__data.fields.operation_Name}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"orange\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"sum_itemCount
        500\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"ResultCode
        404\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-orange\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":102},\"id\":35,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\",\"showLegend\":true},\"tooltip\":{\"mode\":\"single\",\"sort\":\"none\"}},\"pluginVersion\":\"9.0.8.1\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"\\nrequests\\n//
        additional filters can be applied here\\n| where $__timeFilter(timestamp)\\n|
        where cloud_RoleName in ($cloudrolename)\\n| where cloud_RoleInstance in ($cloudroleinstance)\\n|
        where client_Type != \\\"Browser\\\"\\n| where success == false\\n| summarize
        ResultCode = sum(itemCount) by resultCode, bin(timestamp, $__interval)\\n|
        sort by timestamp asc\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"time_series\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Failure
        Response codes (count)\",\"transformations\":[],\"type\":\"timeseries\"},{\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"description\":\"Click
        on an operation_Name to filter to Top slowest Failed sample Operations panel
        by selected name.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"fixedColor\":\"green\",\"mode\":\"thresholds\"},\"custom\":{\"align\":\"auto\",\"cellOptions\":{\"type\":\"auto\"},\"inspect\":false},\"links\":[{\"targetBlank\":false,\"title\":\"Show
        list of sample transactions\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\uFEFF\\u0026\uFEFF${sub:queryparam}\uFEFF\\u0026\uFEFF${rg:queryparam}\uFEFF\\u0026\uFEFF${ns:queryparam}\uFEFF\\u0026\uFEFF${res:queryparam}\uFEFF\\u0026\uFEFF${cloudrolename:queryparam}\uFEFF\\u0026\uFEFF${cloudroleinstance:queryparam}\uFEFF\\u0026\uFEFF${operation_Name:queryparam}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\uFEFF\\u0026\uFEFF${cluster:queryparam}\uFEFF\\u0026\uFEFF${namespace:queryparam}\uFEFF\\u0026\uFEFF${type:queryparam}\\u0026${__url_time_range}\"}],\"mappings\":[],\"noValue\":\"--\",\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\"}]}},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"dark-red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"custom.cellOptions\",\"value\":{\"mode\":\"lcd\",\"type\":\"gauge\"}},{\"id\":\"color\",\"value\":{\"fixedColor\":\"text\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"operation_Name\"},\"properties\":[{\"id\":\"custom.width\",\"value\":184},{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Failures and Performance\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"custom.width\",\"value\":118}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"failedCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"impactedUsers\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"totalCount\"},\"properties\":[{\"id\":\"links\",\"value\":[{\"targetBlank\":true,\"title\":\"Drill
        Down to Performance and Failures\",\"url\":\"/d/Q4mZF8oVk/azure-monitor-azure-insights-applications-performance-and-failure?${amDatasource:queryparam}\\u0026${sub:queryparam}\\u0026${rg:queryparam}\\u0026${ns:queryparam}\\u0026${res:queryparam}\\u0026${cloudrolename:queryparam}\\u0026${cloudroleinstance:queryparam}\\u0026var-operation_Name=${__data.fields.operation_Name}\\u0026var-failed_operation_Name=${__data.fields.operation_Name}\\u0026${promDatasource:queryparam}\\u0026${cluster:queryparam}\\u0026${namespace:queryparam}\\u0026${type:queryparam}\\u0026${__url_time_range}\"}]}]}]},\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":109},\"id\":69,\"interval\":\"60s\",\"links\":[],\"maxDataPoints\":150,\"options\":{\"cellHeight\":\"sm\",\"footer\":{\"countRows\":false,\"fields\":\"\",\"reducer\":[\"sum\"],\"show\":false},\"showHeader\":true,\"sortBy\":[{\"desc\":true,\"displayName\":\"failedCount\"}]},\"pluginVersion\":\"10.0.0-pre\",\"targets\":[{\"azureLogAnalytics\":{\"query\":\"let
        dataset =\\nrequests\\n// additional filters can be applied here\\n| where
        $__timeFilter(timestamp)\\n| where cloud_RoleName in ($cloudrolename)\\n|
        where cloud_RoleInstance in ($cloudroleinstance)\\n| where client_Type !=
        \\\"Browser\\\"\\n;\\ndataset\\n| summarize\\n    failedCount=sumif(itemCount,
        success == 'False'),\\n    impactedUsers=dcountif(user_Id, success == 'False'),\\n
        \   totalCount=sum(itemCount)\\n    by operation_Name\\n| where failedCount
        \\u003e 0\\n| top 5 by failedCount desc\\n\\n\\n\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"],\"resultFormat\":\"table\"},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"$sub\",\"subscriptions\":[]}],\"title\":\"Top
        5 Failed Operation Name List\",\"transformations\":[],\"type\":\"table\"}],\"refresh\":\"\",\"revision\":1,\"schemaVersion\":38,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"current\":{\"selected\":false,\"text\":\"Prometheus
        - KubeCon\",\"value\":\"Prometheus - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Prometheus
        Data Source\",\"multi\":false,\"name\":\"promDatasource\",\"options\":[],\"query\":\"prometheus\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"cluster\",\"options\":[],\"query\":{\"query\":\"label_values(up{job=\\\"kube-state-metrics\\\"},
        cluster)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-cluster-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{},\"datasource\":{\"type\":\"datasource\",\"uid\":\"$promDatasource\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"multi\":false,\"name\":\"namespace\",\"options\":[],\"query\":{\"query\":\"label_values(kube_namespace_status_phase{job=\\\"kube-state-metrics\\\",
        cluster=\\\"$cluster\\\"}, namespace)\",\"refId\":\"Managed_Prometheus_ch-azuremonitorworkspace-namespace-Variable-Query\"},\"refresh\":2,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"tagValuesQuery\":\"\",\"tagsQuery\":\"\",\"type\":\"query\",\"useTags\":false},{\"current\":{\"selected\":false,\"text\":\"Azure
        Monitor - KubeCon\",\"value\":\"Azure Monitor - KubeCon\"},\"hide\":0,\"includeAll\":false,\"label\":\"Azure
        Monitor Data Source\",\"multi\":false,\"name\":\"amDatasource\",\"options\":[],\"query\":\"grafana-azure-monitor-datasource\",\"queryValue\":\"\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"type\":\"datasource\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Subscription\",\"multi\":false,\"name\":\"sub\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Subscriptions\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Resource
        Group\",\"multi\":false,\"name\":\"rg\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Resource Groups\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":2,\"includeAll\":false,\"label\":\"namespace\",\"multi\":false,\"name\":\"ns\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Namespaces\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"([mM](icrosoft)\\\\.[iI](nsights)/(components))\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"App
        Insights Resource\",\"multi\":false,\"name\":\"res\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"namespace\":\"microsoft.insights/components\",\"queryType\":\"Azure
        Resource Names\",\"refId\":\"A\",\"resourceGroup\":\"$rg\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Name\",\"multi\":true,\"name\":\"cloudrolename\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleName\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":true,\"label\":\"Cloud
        Role Instance\",\"multi\":true,\"name\":\"cloudroleinstance\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"requests\\r\\n|
        where $__timeFilter(timestamp)\\r\\n| where client_Type != \\\"Browser\\\"\\r\\n|
        distinct cloud_RoleInstance\",\"resources\":[\"/subscriptions/$sub/resourceGroups/$rg/providers/$ns/$res\"]},\"queryType\":\"Azure
        Log Analytics\",\"refId\":\"A\",\"subscription\":\"ebb79bc0-aa86-44a7-8111-cabbe0c43993\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Workspace\",\"multi\":false,\"name\":\"ws\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"\",\"resource\":\"\"},\"queryType\":\"Azure
        Workspaces\",\"refId\":\"A\",\"subscription\":\"$sub\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"},{\"current\":{},\"datasource\":{\"type\":\"grafana-azure-monitor-datasource\",\"uid\":\"${amDatasource}\"},\"definition\":\"\",\"hide\":0,\"includeAll\":false,\"label\":\"Cluster
        Id\",\"multi\":false,\"name\":\"clusterid\",\"options\":[],\"query\":{\"azureLogAnalytics\":{\"query\":\"workspace(\\\"$ws\\\").KubePodInventory
        \\r\\n| summarize n=count() by ClusterId \\r\\n|project tolower(ClusterId)
        \",\"resource\":\"$ws\"},\"queryType\":\"Azure Log Analytics\",\"refId\":\"A\",\"subscription\":\"369d066e-54f8-436c-bf65-eadb9647d212\"},\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":0,\"type\":\"query\"}]},\"time\":{\"from\":\"now-1h\",\"to\":\"now\"},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"utc\",\"title\":\"Full
        Stack AKS Monitoring\",\"uid\":\"c0613871-ebb0-4a2d-b071-f51a851f375d\",\"version\":1,\"weekStart\":\"\"}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '74629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-6YKcyHnS+7SfbcLeYIVEgQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:24 GMT
      grafana-trace-id:
      - 2256fe022a410d0e1831c3dac4d8d05d
      mise-correlation-id:
      - ed418c12-6ede-45d2-ae1a-03951f4ab765
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504465.015.26.364692|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/QTVw7iK7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"geneva-health","url":"/d/QTVw7iK7z/geneva-health","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"Health.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"datasource":"Geneva
        Datasource","enable":true,"iconColor":"light-blue","name":"Geneva Health Annotations","target":{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Watchdog
        Health","isAnnotationsMode":true,"limit":100,"matchAny":false,"metric":"","metricsQueryType":"ui","namespace":"","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","tags":[],"type":"dashboard","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":17,"links":[],"panels":[{"datasource":"Geneva
        Datasource","gridPos":{"h":21,"w":6,"x":0,"y":0},"id":2,"options":{"monitorNameVar":"$monitorName","monitorVar":"$monitor","orientation":"vertical","resourceHealthVar":"$nodeIds","resourceNameVar":"$selectedRes"},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","service":"health","topologyNodeId":"$res","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Topology","type":"geneva-health-panel"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"fillOpacity":70,"lineWidth":0},"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"1":{"color":"green","index":1,"text":"Healthy"},"2":{"color":"orange","index":2,"text":"Degraded"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"text","value":null},{"color":"red","value":0},{"color":"green","value":1},{"color":"#EAB839","value":2}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":0},"id":4,"options":{"alignValue":"left","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Resource
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedResourcesVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Resource
        Health History $selectedRes","type":"state-timeline"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds","seriesBy":"last"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"scheme","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"dash":[0,3,3],"fill":"dot"},"lineWidth":2,"pointSize":3,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"decimals":0,"mappings":[{"options":{"0":{"color":"red","index":0,"text":"Unhealthy"},"100":{"color":"green","index":2,"text":"Healthy"},"50":{"color":"orange","index":1,"text":"Degraded"}},"type":"value"}],"max":100,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"orange","value":50},{"color":"green","value":99}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":7},"id":6,"options":{"legend":{"calcs":["lastNotNull"],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"multi"}},"targets":[{"account":"$acc","backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"percent","healthQueryType":"Watchdog
        Health","metric":"","metricsQueryType":"ui","namespace":"","refId":"A","samplingType":"","selectedWatchdogResourceVar":"$nodeIds","service":"health","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Watchdog
        Health History $selectedRes","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":7,"w":18,"x":6,"y":14},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"account":"$acc","dimension":"","dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Monitor
        Evaluation","metric":"","metricsQueryType":"ui","namespace":"","orderAggFunc":"avg","orderBy":"desc","refId":"A","samplingType":"","selectedMonitorVar":"$monitor","service":"health","showTop":"40","useCustomSeriesNaming":false,"useResourceVars":true}],"title":"Monitor
        Evaluation $monitorName","type":"timeseries"}],"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"acc","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"HealthResources($acc)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Health
        Resource","multi":false,"name":"res","options":[],"query":"HealthResources($acc)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{"selected":false,"text":"","value":""},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"nodeIds","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"allValue":null,"current":{},"description":null,"error":null,"hide":2,"includeAll":false,"label":null,"multi":false,"name":"selectedRes","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitor","options":[],"query":"","skipUrlSync":false,"type":"custom"},{"current":{},"hide":2,"includeAll":false,"multi":false,"name":"monitorName","options":[],"query":"","skipUrlSync":false,"type":"custom"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Geneva
        Health","uid":"QTVw7iK7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7466'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-1WICajrK/oSKxZ+PqmRdVg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:24 GMT
      grafana-trace-id:
      - 07755d7f04fb9ad1bb226fecbce7e073
      mise-correlation-id:
      - b730c26e-c278-45be-b6ee-57c62277adc3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504465.3.29.368170|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/icm-geneva-canned-dashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"icm.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"barchart","name":"Bar
        chart","type":"panel","version":""},{"id":"bargauge","name":"Bar gauge","type":"panel","version":""},{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.17"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"datasource","uid":"grafana"},"enable":true,"hide":true,"iconColor":"rgba(0,
        211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":16,"links":[],"liveNow":false,"panels":[{"collapsed":false,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":8,"panels":[],"title":"Incident
        Volume","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":1,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":1},"id":2,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), Status\n| order by
        CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Status","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":1},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| where
        isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity=strcat(\"Sev\", tostring(Severity)),
        Status, SourceName, SourceType, RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0,
        \"False\", \"True\") , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\",
        \"True\"), IncidentType, HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate\n| summarize count() by bin(CreateDate, 1d), Severity\n|
        order by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Severity","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":10},"id":3,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project CreateDate, IncidentId, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| summarize count() by bin(CreateDate, 1d), SourceType\n| order
        by CreateDate asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Incident
        Volume Per Alert Source Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":19},"id":6,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":false,"displayName":"IsOutage"}]},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| sort by IncidentId asc\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","type":"table"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":28},"id":10,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":7,"w":12,"x":0,"y":2},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"//
        set query_take_max_records=5000;\n// let uincidents=\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":22,"w":12,"x":12,"y":2},"id":43,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        summarize [\"# Incident\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"#
        Incidents","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Manual
        Detect","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| where ServiceType  == \"VOICE\"\n| summarize arg_max(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, Severity)
        by NotificationActionId \n| summarize [\"# Voice Calls\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"Voice
        calls","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\" and IsOutage ==
        \"yes\"\n| summarize [\"#Outage\"] = count()\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"outages","resultFormat":"table"}],"title":"Funnel","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","fillOpacity":80,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineWidth":1,"scaleDistribution":{"type":"linear"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":15,"w":12,"x":0,"y":9},"id":29,"options":{"barRadius":0,"barWidth":0.96,"colorByField":"Month_Year","fullHighlight":false,"groupWidth":0.7,"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"orientation":"auto","showValue":"always","stacking":"none","tooltip":{"mode":"single","sort":"none"},"xTickLabelRotation":0,"xTickLabelSpacing":200},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        MonthNames = dynamic({\n    \"1\": \"January\",\n    \"2\": \"February\",\n    \"3\":
        \"March\",\n    \"4\": \"April\",\n    \"5\": \"May\",\n    \"6\": \"June\",\n    \"7\":
        \"July\",\n    \"8\": \"August\",\n    \"9\": \"September\",\n    \"10\":
        \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n});\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n//
        | project IncidentId, CreateDate, Severity, Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\"), IncidentType,
        HowFixed, IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate,
        ResolveDate\n| extend Month = datetime_part(''Month'', CreateDate), Year =
        datetime_part(''year'', CreateDate)\n| extend MonthName = tostring(MonthNames[tostring(Month)])\n|
        extend Month_Year = strcat(MonthName, '' '', Year)\n| summarize count() by
        Month_Year\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"#
        Incidents","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"count_":"#
        Incidents"}}}],"type":"barchart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":24},"id":16,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":24},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":33},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,95,99) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"IncidentId"},"properties":[{"id":"links","value":[{"targetBlank":true,"title":"View
        incident details","url":"https://portal.microsofticm.com/imp/v3/incidents/incident/${__data.fields.IncidentId}/summary"}]}]}]},"gridPos":{"h":11,"w":24,"x":0,"y":42},"id":27,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents","type":"table"}],"title":"Time-to
        Analysis (TTx)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":30,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":30},"id":32,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,50,75,90), [\"TTD Avg\"]
        = avg(TTD)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Detect (TTD) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}},{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"TTD_50":"TTD_P50","TTD_75":"TTD_P75","TTD_90":"TTD_P90"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"links":[],"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"%Auto-Detect"},"properties":[{"id":"unit","value":"percent"}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":30},"id":33,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Customer\", \"Email\", \"Forum/DL\", \"Manual\",
        \"Other\", \"Partner\", \"Service\", \"Unknown\")\n| summarize [\"#Manual
        Detection\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"let
        totalIncidents = toscalar(\n  IncidentsSnapshotV2() \n  | where $__timeFilter(CreateDate)
        \n  | where OwningTenantName == \"$svc\" \n  | where isnull(ParentIncidentId)
        and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'') \n  | summarize count()\n);\n\nIncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        where isnull(ParentIncidentId) and Status in (''ACTIVE'', ''MITIGATED'', ''RESOLVED'')\n|
        where SourceOrigin in (\"Monitor\", \"Deployment\", \"Monitoring\", \"Performance
        Counter\", \"Runner\", \"Workflow\")\n| summarize Count_IncidentType = count()\n|
        extend Percent_AutoDetect = Count_IncidentType * 100.0 / totalIncidents\n|
        project [\"%Auto-Detect\"] = Percent_AutoDetect","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incident
        Details","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":39},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2()\n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\" and isnull(ParentIncidentId)\n|
        project IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed,
        IncidentSubType, SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate,
        OwningTeamId;\nlet acks=uincidents\n| join kind=inner (Notifications| where
        RequestType == \"PRIMARY\" and isnotnull(AcknowledgeDate) | project IncidentId,
        AcknowledgeDate, NotificationId,Lens_IngestionTime ) on $left.IncidentId ==
        $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate) by IncidentId;\nuincidents|
        join kind=leftouter(acks ) on $left.IncidentId == $right.IncidentId| join
        kind=inner (Teams | summarize (Lens_IngestionTime, TeamName)=argmax(Lens_IngestionTime,
        TeamName) by TeamId ) \n    on $left.OwningTeamId == $right.TeamId| project
        IncidentId, CreateDate, Severity, State, SourceCreateDate, ImpactStartDate,
        MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTD,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Detect (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Detect
        (TTD)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":48},"id":35,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":49},"id":36,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,50,75,90), [\"TTE (avg.)\"]
        = avg(TTE) ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Engage (TTE) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"Hops
        refer to the Team Transfers of incidents, which contribute to a higher Time
        to Engage. For more information, please click on the link attached to this
        panel.","fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":49},"id":42,"links":[{"title":"Hops
        refers to the Team Transfer of incidents, which contributes to a higher Time
        to Engage for said Incident. For more information on this, please click on
        the link.","url":"https://icmdocs.azurewebsites.net/reporting/hops-definition.html"}],"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED'' and RequestType == \"TRANSFER\"\n| summarize hops
        = dcount(NotificationId) by IncidentId\n| summarize [\"Hop (Avg)\"] = avg(hops),  [\"Hops
        (P75)\"] = percentiles(hops,75)\n\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":58},"id":37,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTE,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Engage (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Engage
        (TTE)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":68},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":5},"id":39,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,50,75,90), [\"TTM_AVG\"]
        = avg(TTM)\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"
        Time To Mitigate (TTM) Percentiles ","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[{"matcher":{"id":"byName","options":"High
        TTM"},"properties":[{"id":"color","value":{"fixedColor":"red","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Ok"},"properties":[{"id":"color","value":{"fixedColor":"green","mode":"fixed"}}]},{"matcher":{"id":"byName","options":"TTM
        Value \u003c=0"},"properties":[{"id":"color","value":{"fixedColor":"yellow","mode":"fixed"}}]}]},"gridPos":{"h":9,"w":12,"x":12,"y":5},"id":40,"options":{"displayMode":"gradient","minVizHeight":10,"minVizWidth":0,"orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003e 30\n| summarize [\"High TTM\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e30","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 30\n| summarize [\"TTM Ok\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| extend TTM_noNulls = coalesce(TTM, 0.0)\n// |
        extend TTM_Group = case(TTM_noNulls \u003e 30, \"High TTM\", TTM_noNulls \u003c=
        0.0, \"TTM Value \u003c= 0\", TTM_noNulls \u003c= 30, \"TTM Ok\", \"Other\")\n|
        where TTM_noNulls \u003c= 0\n| summarize [\"TTM Value \u003c=0\"] = count()","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"B","resultFormat":"table"}],"title":"TTM
        Group","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":14},"id":46,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"set
        query_take_max_records=5000;\nlet uincidents=\nIncidentsSnapshotV2() \n| where
        $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| project
        IncidentId, CreateDate, Severity, State=Status, SourceName, SourceType, RoutingId,
        OwningTenantName, IsNoise, IsCustomerImpacting, IncidentType, HowFixed, IncidentSubType,
        SourceCreateDate, ImpactStartDate, MitigateDate, ResolveDate, OwningTeamId;\nlet
        acks=uincidents\n| join kind=inner (Notifications| where RequestType == \"PRIMARY\"
        and isnotnull(AcknowledgeDate) | project IncidentId, AcknowledgeDate, NotificationId,Lens_IngestionTime
        ) on $left.IncidentId == $right.IncidentId\n| summarize AckDate=max(AcknowledgeDate)
        by IncidentId;\nuincidents| join kind=leftouter(acks ) on $left.IncidentId
        == $right.IncidentId| join kind=inner (Teams | summarize (Lens_IngestionTime,
        TeamName)=argmax(Lens_IngestionTime, TeamName) by TeamId ) \n    on $left.OwningTeamId
        == $right.TeamId| project IncidentId, CreateDate, Severity, State, SourceCreateDate,
        ImpactStartDate, MitigateDate, ResolveDate, AckDate\n    , TTD = round(iff(isnull(ImpactStartDate),
        real(null), iff(SourceCreateDate\u003cImpactStartDate, real(0), (SourceCreateDate-ImpactStartDate)/time(1m))),2)\n    ,
        TTE = round(iff(isnull(AckDate) or isnull(ImpactStartDate), real(null), iff(AckDate\u003cImpactStartDate,
        real(0), (AckDate-ImpactStartDate)/time(1m))),2)\n    , TTM = round(iff(isnull(MitigateDate)
        or isnull(ImpactStartDate), real(null), iff(MitigateDate\u003cImpactStartDate,
        real(0), (MitigateDate-ImpactStartDate)/time(1m))),2), SourceName, SourceType,
        RoutingId, OwningTenantName, IsNoise=iif(IsNoise==0, \"False\", \"True\")
        , IsCustomerImpacting=iif(IsCustomerImpacting==0, \"False\", \"True\") ,  HowFixed,
        IncidentSubType, TeamName\n| summarize percentiles(TTM,75) by bin(CreateDate,
        time(1h)) | sort by CreateDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"
        Time To Mitigate (75th Percentile)","transformations":[{"id":"renameByRegex","options":{"regex":"(percentile_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Mitigate
        (TTM)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":69},"id":45,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"fixed"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byFrameRefID","options":"percentiles"},"properties":[{"id":"unit","value":"m"}]},{"matcher":{"id":"byName","options":"percentile_TTA_75"},"properties":[{"id":"displayName","value":"TTA
        (75P)"}]},{"matcher":{"id":"byName","options":"percentile_TTA_90"},"properties":[{"id":"displayName","value":"TTA
        (90P)"}]},{"matcher":{"id":"byName","options":"avg_TTA"},"properties":[{"id":"displayName","value":"TTA
        (Avg.)"}]}]},"gridPos":{"h":20,"w":3,"x":0,"y":70},"id":44,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        summarize percentiles(TTA, 75, 90), avg(TTA)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"percentiles","resultFormat":"table"},{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTA\n|
        where TTA \u003e 15\n| summarize [\"#Notices with TTA \u003e 15 min\"] = percentile(TTA,
        75)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003e15min","resultFormat":"table"}],"title":"TTA
        (75P)","transformations":[],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"fixedColor":"text","mode":"continuous-RdYlGr"},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":20,"w":21,"x":3,"y":70},"id":47,"options":{"displayMode":"basic","minVizHeight":10,"minVizWidth":0,"orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^count_$/","values":true},"showUnfilled":true,"valueMode":"color"},"pluginVersion":"9.5.17","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| summarize count()
        by TTABucket","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"table"}],"title":"TTA Groups","transformations":[],"type":"bargauge"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":51,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"smooth","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"min":0,"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"m"},"overrides":[]},"gridPos":{"h":16,"w":24,"x":0,"y":90},"id":48,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"cluster(''icmdataro.centralus.kusto.windows.net'').database(''Common'').Get_Report_TTA()\n|
        where SendDate \u003e ago(30d) and TenantName == \"$svc\"\n| project TTABucket,
        SendDate\n| summarize count() by TTABucket, bin(SendDate, time(1d)) | sort
        by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"\u003c=
        5","resultFormat":"time_series"}],"title":"TTA Groups","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Time-to-Acknowledge
        (TTA)","type":"row"},{"collapsed":true,"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":1,"w":24,"x":0,"y":106},"id":12,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":7},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()\n|
        where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n| join
        kind=inner (\n    NotificationActions \n    | where $__timeFilter(SendDate)
        and isnotnull(SendDate) and Status =~ ''COMPLETED''\n) on $left.IncidentId
        == $right.IncidentId\n| summarize arg_max(Lens_IngestionTime, NotificationId,
        SendDate, OwningTeamId, IncidentId, ServiceType, Severity) by NotificationActionId
        \n| summarize count() by bin(SendDate, 1d), ServiceType\n| sort by SendDate
        asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Contact Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"bars","fillOpacity":50,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"normal"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":7},"id":14,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"hide":false,"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, OwningTeamId\n|
        join kind= inner(Notifications \n                    | where $__timeFilter(CreateDate))\non
        $left.IncidentId == $right.IncidentId\n| join kind=inner (NotificationActions
        \n                    | where $__timeFilter(SendDate))\non $left.NotificationId
        == $right.NotificationId \n| where isnotnull(SendDate) and Status =~ ''COMPLETED''\n|
        summarize arg_max(Lens_IngestionTime, *) by NotificationActionId\n| summarize
        count() by bin(SendDate, 1d), RequestType\n| sort by SendDate asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Notification
        by Request Type","transformations":[{"id":"renameByRegex","options":{"regex":"(count_)(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"AcknowledgeDate"},"properties":[{"id":"custom.width","value":532}]},{"matcher":{"id":"byName","options":"SendDate"},"properties":[{"id":"custom.width","value":320}]},{"matcher":{"id":"byName","options":"CreateDate"},"properties":[{"id":"custom.width","value":246}]}]},"gridPos":{"h":9,"w":24,"x":0,"y":16},"id":15,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"9.5.13","targets":[{"database":"IcmDataWarehouse","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"IncidentsSnapshotV2()
        \n| where $__timeFilter(CreateDate)\n| where OwningTenantName == \"$svc\"\n|
        project IncidentId, Lens_IngestionTime, OwningTenantName, Severity, OwningTeamId\n|
        join kind= inner(Notifications | where $__timeFilter(CreateDate))\non $left.IncidentId
        == $right.IncidentId\n| join kind=inner (NotificationActions | where $__timeFilter(SendDate))\non
        $left.NotificationId == $right.NotificationId \n| where isnotnull(SendDate)
        and Status =~ ''COMPLETED''\n| summarize (Lens_IngestionTime, NotificationId,
        SendDate, TeamId, IncidentId, ServiceType, PrimaryTargetType, RequestType,Severity)=argmax(Lens_IngestionTime,
        NotificationId, SendDate, OwningTeamId, IncidentId, ServiceType, PrimaryTargetType,
        RequestType, Severity) by NotificationActionId \n| join kind=inner (Teams
        | summarize (Lens_IngestionTime, TeamName, TenantName)=argmax(Lens_IngestionTime,
        TeamName, TenantName) by TeamId | project TeamId, TeamName, TenantName)\non
        $left.TeamId == $right.TeamId\n| project NotificationId, IncidentId, SendDate,
        TeamName, ServiceType, PrimaryTargetType, RequestType, TenantName, Severity\n\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Notification
        Details","type":"table"}],"title":"Notification Volume","type":"row"}],"refresh":"","schemaVersion":38,"style":"dark","tags":[],"templating":{"list":[{"current":{"selected":false,"text":"Azure
        Data Explorer Datasource","value":"Azure Data Explorer Datasource"},"hide":2,"includeAll":false,"multi":false,"name":"ds","options":[],"query":"grafana-azure-data-explorer-datasource","queryValue":"","refresh":1,"regex":"/Icm
        via ADX/i","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"${ds}"},"definition":"Tenants
        | distinct TenantName","error":{},"hide":0,"includeAll":false,"label":"Service","multi":false,"name":"svc","options":[],"query":{"database":"IcmDataWarehouse","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"Tenants
        | distinct TenantName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"adx-Tenants
        | distinct TenantName","resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-30d","to":"now"},"timepicker":{},"timezone":"","title":"IcM
        Canned Dashboard","uid":"icm-geneva-canned-dashboard","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '75219'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-r6WjX5oQGYrC732huKb6dQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:24 GMT
      grafana-trace-id:
      - ef8df02cbf68004cdbba70ef18c8bec5
      mise-correlation-id:
      - 2bbcab31-dc3a-4e3f-b4fc-4a0395ed604d
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504465.555.29.500900|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/sVKyjvpnz
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"IncomingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":27,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiReliability\").samplingTypes(\"Rate\")\n\n|
        top 40 by avg(Rate) desc\n","refId":"A","samplingType":"Rate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"RoleInstance-CallerName-OperationName","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["CallerName","Environment","OperationName","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"CallerName\",
        \"Environment\", \"OperationName\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":36},"id":9,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiRequests","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiRequests\").dimensions(\"OperationName\").samplingTypes(\"Count\")\n\n|
        top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Requests","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":48},"id":10,"options":{"orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"showThresholdLabels":false,"showThresholdMarkers":true,"text":{}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in","in"],"dimensionFilterValues":[[]],"dimensionFilters":["OperationName","Environment"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiSuccessLatency\").dimensions(\"OperationName\",
        \"Environment\").samplingTypes(\"Count\")\n\n| top 1000 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Latency","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"gauge"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":60},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":60},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\IncomingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\IncomingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, OperationName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Operation
        Name","multi":true,"name":"OperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, OperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, CallerName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Caller
        Name","multi":true,"name":"CallerName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, CallerName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Incoming
        Service QoS","uid":"sVKyjvpnz","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '19754'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-/zIqyu0NiamZ5HoYx34BDQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:24 GMT
      grafana-trace-id:
      - 5b8fced611db6e84a3fe7cb19b00ad70
      mise-correlation-id:
      - 2a443e55-9fef-40a0-937f-8e73053123ba
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504465.83.26.302764|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/kubernetesApiserverDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesAPIServer.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"editable":true,"id":30,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":37,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  API server is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":6,"x":0,"y":3},"id":19,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"API
        Server - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Inflight
        request by the API server instance","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":10,"x":6,"y":3},"id":38,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (instance)(max_over_time(apiserver_current_inflight_requests{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Inflight
        Requests","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Counter
        of apiserver requests across instances","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":3},"id":29,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"Tota
        number of requests to the API server","range":true,"refId":"A"}],"title":"API
        Server HTTP Request Total","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":11},"id":41,"panels":[],"title":"Requests
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"API
        server requests broken down by the HTTP response code. Error code 429 is split
        into throttled and eviction","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":12},"id":25,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (code) (\r\n\r\n  label_replace(\r\n\r\n      label_replace(   \r\n\r\n          label_join(\r\n\r\n                    rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]),
        \r\n\r\n                    \"resource_sub_code\", \"_\", \"resource\", \"subresource\",
        \"code\"), # concat labels of interest\r\n\r\n          \"code\", \"429-eviction\",
        \"resource_sub_code\", \"pods_eviction_429\"  # replace eviction 429 with
        429-eviction\r\n\r\n      ),\r\n\r\n      \"code\", \"429-throttled\", \"code\",
        \"429\"  # replace plain 429 with 429-throttled\r\n\r\n  )\r\n\r\n)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server HTTP Request by code ","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of API  server requests broken down by the verb","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":12},"id":26,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum
        by (verb) (rate(apiserver_request_total{cluster=\"$cluster\"}[$__rate_interval]))","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server  Total HTTP Request split by verb","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":20},"id":42,"panels":[],"title":"Latency
        ","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server Latency: Restricted to cluster and namespaces resource, also excludes
        WATCH operations. This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":21},"id":24,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","instant":false,"legendFormat":"P95 API server request duration
        in seconds","range":true,"refId":"A"}],"title":"API server latency for LIST
        queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. Restricted to cluster and namespaces resource, also excludes
        WATCH operations","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":21},"id":34,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", resource=~\"cluster|namespaces\", verb=\"list\", operation!=\"watch\"}[5m]))
        by (le))","legendFormat":"P95 API server SLI duration in seconds","range":true,"refId":"A"}],"title":"
        API server latency SLI for LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency. Scope limited to resource and empty, excludes WATCH operations.
        This query includes the webhook execution duration","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":29},"id":35,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request duration in seconds ","range":true,"refId":"A"}],"title":"API
        Server latency for NON-LIST queries","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"P95
        API server latency not counting webhook duration and priority \u0026 fairness
        queue wait times. .Scope limited to resource and empty, excludes WATCH operations.
        ","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"s"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":29},"id":27,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"histogram_quantile(0.95,
        sum(rate(apiserver_request_sli_duration_seconds_bucket{job=\"controlplane-apiserver\",
        cluster=\"$cluster\", verb!=\"list\", operation!=\"watch\", scope=~\"resource|^$\"}[5m]))
        by (le))","legendFormat":"P95 API server request SLI duration in seconds ","range":true,"refId":"A"}],"title":"
        API Server latency for NON-LIST queries","type":"timeseries"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":44,"panels":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from watch cache in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":30,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Fetched Objects by resource prefix","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from watch cache","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":31,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_cache_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource_prefix)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server Cache List Returned Objects by resource_prefix","type":"timeseries"}],"title":"API
        server cache","type":"row"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":38},"id":40,"panels":[],"title":"Storage","type":"row"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects returned for a LIST request from storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":39},"id":28,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_returned_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Returned objects","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Number
        of objects read from storage in the course of serving a LIST request","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":39},"id":33,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(apiserver_storage_list_fetched_objects_total{cluster=\"$cluster\",job=\"controlplane-apiserver\"}[$__rate_interval]))
        by (resource)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"API
        Server storage List Fetched objects","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":47},"id":43,"panels":[],"title":"Miscellaneous","type":"row"},{"datasource":{"type":"prometheus","uid":"$datasource"},"description":"Number
        of hours for which the API server has been running since the inception/restart","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":10,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":8,"x":0,"y":48},"id":18,"interval":"1m","links":[],"options":{"legend":{"calcs":[],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"uid":"$datasource"},"editorMode":"code","exemplar":false,"expr":"process_start_time_seconds{job=\"controlplane-apiserver\",
        cluster=\"$cluster\"}/3600","format":"time_series","instant":false,"intervalFactor":2,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"title":"Process
        start time for the API server","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Time-weighted
        average, over last adjustment period, of demand_seats","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":8,"y":48},"id":36,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_demand_seats_average{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Demand Seats by priority levels","type":"timeseries"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Current
        derived number of execution seats available to each priority level","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":8,"w":8,"x":16,"y":48},"id":32,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(apiserver_flowcontrol_current_limit_seats{cluster=\"$cluster\",job=\"controlplane-apiserver\"})
        by (priority_level)","legendFormat":"__auto","range":true,"refId":"A"}],"title":"Flow
        Control Current Limit Seats by priority levels","type":"timeseries"}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / API Server","uid":"kubernetesApiserverDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '25012'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-BD9+efiD1VdALsQULWNaiw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:25 GMT
      grafana-trace-id:
      - c65d9d91bb425f0ce281539a47829b9c
      mise-correlation-id:
      - 3e088a9a-457b-4a7d-89e5-81b25d6f8765
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504466.155.28.282443|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/kubernetesEtcdDashboard
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":28,"folderUid":"de1j3sd0fssu8a","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j3sd0fssu8a/azure-kubernetes-service-monitoring","provisioned":true,"provisionedExternalId":"KubernetesETCD.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"graph","name":"Graph
        (old)","type":"panel","version":""},{"id":"prometheus","name":"Prometheus","type":"datasource","version":"1.0.0"},{"id":"stat","name":"Stat","type":"panel","version":""},{"id":"text","name":"Text","type":"panel","version":""}],"editable":true,"id":31,"links":[],"liveNow":false,"panels":[{"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":10,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"#
        Control Plane Metrics \nThis dashboard is to be meant to visualize the Control
        plane metrics in AKS clusters with Azure Managed Prometheus. Read more in
        [our documentation](https://aka.ms/aks/controlplanemetrics).","mode":"markdown"},"type":"text"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        whether at least one instance of  etcd is available ","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"text":"DOWN"},"1":{"text":"UP"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":0,"y":3},"id":1,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(up{job=\"controlplane-etcd\",
        cluster=\"$cluster\"})","interval":"","legendFormat":"{{ instance }}","range":true,"refId":"A"}],"title":"ETCD
        - Health Status","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Indicates
        if ETCD has a leader","fieldConfig":{"defaults":{"mappings":[{"options":{"0":{"color":"dark-red","index":1,"text":"NO"},"1":{"index":0,"text":"YES"}},"type":"value"}],"thresholds":{"mode":"absolute","steps":[{"color":"red","value":null},{"color":"green","value":1}]}},"overrides":[]},"gridPos":{"h":8,"w":5,"x":5,"y":3},"id":11,"options":{"colorMode":"background","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"value_and_name"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":true,"expr":"max(etcd_server_has_leader{cluster=\"$cluster\"})","interval":"","legendFormat":"{{
        instance }}","range":true,"refId":"A"}],"title":"ETCD has leader","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":10,"y":3},"id":4,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_heartbeat_send_failures_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        heartbeat send failures","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        heartbeat send failures","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":4,"x":15,"y":3},"id":5,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_apply_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Apply total ","type":"stat"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Max
        Slow Read indexes total","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[{"options":{"match":"null","result":{"text":"N/A"}},"type":"special"}],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":8,"w":5,"x":19,"y":3},"id":7,"links":[],"maxDataPoints":100,"options":{"colorMode":"none","graphMode":"none","justifyMode":"auto","orientation":"horizontal","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"textMode":"auto"},"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"max(etcd_server_slow_read_indexes_total{cluster=''$cluster''})","legendFormat":"__auto","range":true,"refId":"A"}],"title":"ETCD
        Slow Read Indexes total ","type":"stat"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"ETCD
        database utilization by instance ","editable":true,"error":false,"fill":0,"fillGradient":0,"grid":{},"gridPos":{"h":8,"w":9,"x":0,"y":11},"hiddenSeries":false,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":2,"links":[],"nullPointMode":"connected","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","exemplar":false,"expr":"100*etcd_mvcc_db_total_size_in_use_in_bytes{cluster=''$cluster''}
        /etcd_mvcc_db_total_size_in_bytes{cluster=''$cluster''} ","instant":false,"legendFormat":"{{instance}}","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Percentage
        Utlilzation of ETCD database","tooltip":{"msResolution":false,"shared":true,"sort":0,"value_type":"cumulative"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:200","format":"percent","logBase":1,"show":true},{"$$hashKey":"object:201","format":"short","logBase":1,"show":false}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"Total
        client requests","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":8,"x":9,"y":11},"hiddenSeries":false,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(rest_client_requests_total{cluster=''$cluster''}[1m]))","legendFormat":"Total
        client requests","range":true,"refId":"A"}],"thresholds":[],"timeRegions":[],"title":"Total  Client
        Requests","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:133","format":"short","logBase":1,"show":true},{"$$hashKey":"object:134","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":{"type":"prometheus","uid":"${datasource}"},"description":"The
        total number of bytes received/semt from grpc clients","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":7,"x":17,"y":11},"hiddenSeries":false,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null","options":{"alertThreshold":true},"percentage":false,"pluginVersion":"9.5.13","pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_received_bytes_total{cluster=''$cluster''}[1m]))","legendFormat":"Received
        bytes","range":true,"refId":"A"},{"datasource":{"type":"prometheus","uid":"${datasource}"},"editorMode":"code","expr":"sum(rate(etcd_network_client_grpc_sent_bytes_total{cluster=''$cluster''}[1m]))","hide":false,"legendFormat":"Sent
        Bytes","range":true,"refId":"B"}],"thresholds":[],"timeRegions":[],"title":"ETCD
        Network GRPC bytes","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"mode":"time","show":true,"values":[]},"yaxes":[{"$$hashKey":"object:310","format":"short","logBase":1,"show":true},{"$$hashKey":"object:311","format":"short","logBase":1,"show":true}],"yaxis":{"align":false}}],"refresh":"","schemaVersion":38,"style":"dark","tags":["kubernetes-mixin"],"templating":{"list":[{"current":{"selected":false,"text":"Managed_Prometheus_defaultazuremonitorworkspace-eap","value":"Managed_Prometheus_defaultazuremonitorworkspace-eap"},"hide":0,"includeAll":false,"label":"Data
        Source","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"current":{},"datasource":{"type":"datasource","uid":"$datasource"},"definition":"","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(up{job=\"controlplane-apiserver\"},
        cluster)","refresh":2,"regex":"","skipUrlSync":false,"sort":1,"tagValuesQuery":"","tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"UTC","title":"Kubernetes
        / ETCD","uid":"kubernetesEtcdDashboard","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '11155'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-x0F7gD3cEczGtu8HZnlgGQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:25 GMT
      grafana-trace-id:
      - 18d1ec7da216cd40af513885c7cab7bd
      mise-correlation-id:
      - c594bac5-62ea-43c1-ba09-936c96b72655
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504466.573.27.214842|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/_sKhXTH7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"node-detail","url":"/d/_sKhXTH7z/node-detail","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"NodeDetail.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":18,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","description":"For a particular cluster and an application, this
        widget shows it''s health timeline - time when the application sent Ok, Warning
        and Error as it''s health status","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":75,"lineWidth":0},"mappings":[],"max":1,"min":0,"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[{"matcher":{"id":"byRegexp","options":"Error.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"red","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Ok.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"green","index":1}},"type":"value"}]}]},{"matcher":{"id":"byRegexp","options":"Warning.*"},"properties":[{"id":"mappings","value":[{"options":{"0":{"color":"transparent","index":0},"1":{"color":"yellow","index":1}},"type":"value"}]}]}]},"gridPos":{"h":13,"w":24,"x":0,"y":0},"id":2,"options":{"alignValue":"center","legend":{"displayMode":"hidden","placement":"bottom"},"mergeValues":true,"rowHeight":0.9,"showValue":"never","tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"ClusterName,
        NodeName, HealthState","dimensionFilterOperators":["in","in","in"],"dimensionFilterValues":[null,["Ok"]],"dimensionFilters":["ClusterName","HealthState","NodeName"],"groupByUnit":"m","groupByValue":"5","healthQueryType":"Topology","metric":"NodeHealthState","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"NodeHealthState\").dimensions(\"ClusterName\",
        \"HealthState\", \"NodeName\")\n      .samplingTypes(\"Count\") | top 40 by
        avg(Count) desc | where HealthState in (\"Ok\") | zoom sum_Count=sum(Count)
        by 5m","refId":"A","resAggFunc":"sum","samplingType":"Count","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Node
        Health Timeline","type":"state-timeline"},{"datasource":"Geneva Datasource","description":"Average
        CPU usage for each node across the selected clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"line+area"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"#EAB839","value":65},{"color":"red","value":85}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":13},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"\\Process(FabricDCA)\\%
        Processor Time","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Processor(_Total)\\\\%
        Processor Time\").samplingTypes(\"NullableAverage\").preaggregate(\"ClusterName,
        NodeName\") | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")","refId":"A","samplingType":"NullableAverage","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"CPU
        usage for Nodes","type":"timeseries"},{"datasource":"Geneva Datasource","description":"Average
        available memory in bytes for each node across all clusters","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"area"}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"red","value":null},{"color":"#EAB839","value":25},{"color":"red","value":65}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":13},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","azureMonitor":{"timeGrain":"auto"},"backends":[],"dimension":"","groupByUnit":"m","groupByValue":"1","healthQueryType":"Topology","metric":"","metricsQueryType":"query","namespace":"ServiceFabric","queryText":"metric(\"\\\\Memory\\\\Available
        Bytes\").samplingTypes(\"NullableAverage\").preaggregate(\"By-ClusterName-NodeName\").resolution(1m)
        | where ClusterName in (\"$ClusterName\") and NodeName in (\"$NodeName\")
        | top 10 by avg(NullableAverage) asc","refId":"A","samplingType":"","service":"metrics","subscription":"f7152080-b4e8-47ee-9c85-7f1d0e6b72dc","useBackends":false,"useCustomSeriesNaming":false}],"title":"Available
        memory for nodes","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        ClusterName)","description":"The name of the cluster you want to see data
        for","error":null,"hide":0,"includeAll":false,"label":"Cluster Name","multi":true,"name":"ClusterName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, ClusterName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($account, ServiceFabric, NodeHealthState,
        NodeName)","description":"Node you want to see data for","error":null,"hide":0,"includeAll":false,"label":"Node
        Name","multi":true,"name":"NodeName","options":[],"query":"dimensionValues($account,
        ServiceFabric, NodeHealthState, NodeName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Node
        Detail","uid":"_sKhXTH7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '7878'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-tRM3IwXn23P0cV85RfJmaw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:26 GMT
      grafana-trace-id:
      - b55fa409f4d1e88f164573ea6ae57f47
      mise-correlation-id:
      - 225eea03-a67c-4eab-811d-e74e3611b973
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504466.973.27.977027|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/6naEwcp7z
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"OutgoingQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"id":19,"links":[],"liveNow":false,"panels":[{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Reliability","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":0},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        RPS","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":0,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":9},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Request Count","transformations":[],"type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":9},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"Overall
        Avg Latency (ms)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":18},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        Reliability","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":2,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":18},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"ROLEINSTANCE-DEPENDENCYNAME-DEPENDENCYOPERATIONNAME","dimensionFilterOperators":["in","in","in","in","in"],"dimensionFilterValues":[],"dimensionFilters":["DependencyName","DependencyOperationName","Environment","Role","RoleInstance"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyName\",
        \"DependencyOperationName\", \"Environment\", \"Role\", \"RoleInstance\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"title":"API
        RPS","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"always","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"short"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":27},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","metric":"StandingQuery\\OutgoingApiSuccessLatency","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiSuccessLatency\").samplingTypes(\"NullableAverage\")\n\n|
        top 40 by avg(NullableAverage) desc\n","refId":"A","samplingType":"NullableAverage","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Success Latency","type":"timeseries"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":9,"w":24,"x":0,"y":36},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"Average\")\n\n|
        top 40 by avg(Average) desc\n","refId":"A","samplingType":"Average","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        Reliability","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":24,"x":0,"y":45},"id":10,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["mean"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Non-index","dimensionFilterOperators":["in"],"dimensionFilterValues":[[]],"dimensionFilters":["DependencyOperationName"],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiReliability","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiReliability\").dimensions(\"DependencyOperationName\").samplingTypes(\"RequestRate\")\n\n|
        top 40 by avg(RequestRate) desc\n","refId":"A","samplingType":"RequestRate","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"API
        PRS","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":53},"id":11,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["sum"],"fields":"","values":false},"text":{},"textMode":"auto"},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"stat"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":53},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"pluginVersion":"8.2.2","targets":[{"account":"AnswersUIProd","backends":[],"dimension":"Total","dimensionFilterOperators":[],"dimensionFilterValues":[],"dimensionFilters":[],"groupByUnit":"m","groupByValue":"1","healthHistoryValueTransform":"raw","healthQueryType":"Topology","hide":false,"metric":"StandingQuery\\OutgoingApiErrorCount","metricsQueryType":"ui","namespace":"ApplicationMetrics","queryText":"metric(\"StandingQuery\\\\OutgoingApiErrorCount\").samplingTypes(\"Count\")\n\n|
        top 40 by avg(Count) desc\n","refId":"A","samplingType":"Count","service":"metrics","useBackends":false,"useCustomSeriesNaming":false,"useResourceVars":false}],"timeFrom":null,"timeShift":null,"title":"Error
        Code Summary","transformations":[{"id":"configFromData","options":{"configRefId":"A","mappings":[{"fieldName":"time","handlerKey":"__ignore","reducerId":"lastNotNull"},{"fieldName":"Count
        microsoft.support.community.portal.controllers.threadcontroller.viewthread","handlerKey":"field.name","reducerId":"mean"},{"fieldName":"Count
        Thread.ViewThread","handlerKey":"field.name","reducerId":"mean"}]}}],"type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Accounts()","description":null,"error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"Account","options":[],"query":"Accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Namespaces($Account)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Namespace","multi":false,"name":"Namespace","options":[],"query":"Namespaces($Account)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"Metrics($Account, $Namespace)","description":null,"error":null,"hide":0,"includeAll":false,"label":"Metric","multi":false,"name":"Metric","options":[],"query":"Metrics($Account,
        $Namespace)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Role)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/{{*}}/RoleInstance/All/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/Role/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role","multi":true,"name":"Role","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Role)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, RoleInstance)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/{{*}}/DependencyOperationName/All/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/RoleInstance/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Role
        Instance","multi":true,"name":"RoleInstance","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, RoleInstance)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyOperationName)","description":null,"error":{"config":{"data":null,"headers":{"Accept":"application/json","Content-Type":"application/json","Target":"https://prod5.prod.microsoftmetrics.com/user-api/v2/hint/tophints/monitoringAccount/AnswersUIProd/metricNamespace/ApplicationMetrics/metric/StandingQuery%255COutgoingApiReliability/startTimeUtcMillis/1637794466338/endTimeUtcMillis/1637798066338/top/500000/Role/All/RoleInstance/All/DependencyOperationName/{{*}}/Environment/All/DependencyName/N/DependencyName/o/DependencyName/n/DependencyName/e/DependencyOperationName/value","X-Grafana-Org-Id":1},"hideFromInspector":false,"method":"GET","retry":0,"url":"api/datasources/proxy/1/geneva/dimensionValues"},"data":{"error":"Bad
        Request","message":"Bad Request","response":"Bad Request"},"message":"Bad
        Request","status":400,"statusText":"Bad Request"},"hide":0,"includeAll":true,"label":"Dependency
        Operation Name","multi":true,"name":"DependencyOperationName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyOperationName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, Environment)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Environment","multi":true,"name":"Environment","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, Environment)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"dimensionValues($Account, $Namespace, $Metric, DependencyName)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Dependency
        Name","multi":true,"name":"DependencyName","options":[],"query":"dimensionValues($Account,
        $Namespace, $Metric, DependencyName)","refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{},"timezone":"","title":"Outgoing
        Service QoS","uid":"6naEwcp7z","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '22629'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-4E5liO36jb8JIETNb57JTg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:26 GMT
      grafana-trace-id:
      - de3ca012d8883efde36a5a6d32ff6df5
      mise-correlation-id:
      - ca490ec8-e58b-4075-9273-ca25236c83a3
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504467.313.28.110659|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/GIgvhSV7z
  response:
    body:
      string: "{\"meta\":{\"type\":\"db\",\"canSave\":true,\"canEdit\":true,\"canAdmin\":true,\"canStar\":true,\"canDelete\":true,\"slug\":\"service-fabric-application-overview\",\"url\":\"/d/GIgvhSV7z/service-fabric-application-overview\",\"expires\":\"0001-01-01T00:00:00Z\",\"created\":\"2024-10-21T09:48:34Z\",\"updated\":\"2024-10-21T09:48:34Z\",\"updatedBy\":\"Anonymous\",\"createdBy\":\"Anonymous\",\"version\":1,\"hasAcl\":false,\"isFolder\":false,\"folderId\":14,\"folderUid\":\"fe1j3sc7xgirkb\",\"folderTitle\":\"Geneva\",\"folderUrl\":\"/dashboards/f/fe1j3sc7xgirkb/geneva\",\"provisioned\":true,\"provisionedExternalId\":\"ServiceFabricApplicationOverview.json\",\"annotationsPermissions\":{\"dashboard\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true},\"organization\":{\"canAdd\":true,\"canEdit\":true,\"canDelete\":true}}},\"dashboard\":{\"annotations\":{\"list\":[{\"builtIn\":1,\"datasource\":\"--
        Grafana --\",\"enable\":true,\"hide\":true,\"iconColor\":\"rgba(0, 211, 255,
        1)\",\"name\":\"Annotations \\u0026 Alerts\",\"target\":{\"limit\":100,\"matchAny\":false,\"tags\":[],\"type\":\"dashboard\"},\"type\":\"dashboard\"}]},\"editable\":true,\"gnetId\":null,\"graphTooltip\":0,\"id\":22,\"links\":[{\"asDropdown\":true,\"icon\":\"external
        link\",\"includeVars\":true,\"keepTime\":true,\"tags\":[],\"targetBlank\":true,\"title\":\"New
        link\",\"tooltip\":\"\",\"type\":\"dashboards\",\"url\":\"\"}],\"panels\":[{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Total number of clusters reporting at least
        once per health state. A cluster may be counted twice if it reported more
        than one health state during the selected time range.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false}},\"links\":[],\"mappings\":[]},\"overrides\":[{\"matcher\":{\"id\":\"byName\",\"options\":\"Error\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"red\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Warning\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"yellow\",\"mode\":\"fixed\"}}]},{\"matcher\":{\"id\":\"byName\",\"options\":\"Ok\"},\"properties\":[{\"id\":\"color\",\"value\":{\"fixedColor\":\"green\",\"mode\":\"fixed\"}}]}]},\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":0},\"id\":2,\"links\":[],\"options\":{\"legend\":{\"displayMode\":\"list\",\"placement\":\"bottom\"},\"pieType\":\"donut\",\"reduceOptions\":{\"calcs\":[\"lastNotNull\"],\"fields\":\"\",\"values\":false},\"tooltip\":{\"mode\":\"single\"}},\"pluginVersion\":\"8.0.0-beta3\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{HealthState}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").samplingTypes(\\\"DistinctCount_ClusterName\\\").preaggregate(\\\"By-HealthState\\\")
        \\n| zoom Sum=sum(DistinctCount_ClusterName) by 5m\",\"refId\":\"ClusterHealth\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Clusters
        in each health state\",\"type\":\"piechart\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateYlOrRd\",\"exponent\":0.8,\"max\":2,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Shows the top 10 clusters with most missing
        values for cluster health. Note that clusters which have reported their health
        at least once in the given time range will be shown. Missing heartbeats are
        shown in red. ClusterHealthState metric is emitted every 5 minutes by default.
        Click on the chart to see more information about a particular cluster.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":0},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":3,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\").samplingTypes(\\\"Count\\\")\\n|
        zoom Count = sum(Count) by 10m\",\"refId\":\"ClusterHeartbeats\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"title\":\"Top
        10 Clusters with missing heart beats\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":\"\",\"yAxis\":{\"decimals\":null,\"format\":\"string\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"datasource\":\"Geneva
        Datasource\",\"description\":\"Provides a list of clusters sending OK as their
        health state. Click on a particular cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":0,\"y\":9},\"id\":4,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"OK\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count = sum(Count)
        by 5m\",\"refId\":\"OkTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in OK state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending warning as their health state. Click on a particular
        cluster in the legend to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\uFEFF\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":8,\"y\":9},\"id\":11,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Warning\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count
        = sum(Count) by 5m\",\"refId\":\"WarningTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Warning state\",\"type\":\"timeseries\"},{\"datasource\":\"Geneva Datasource\",\"description\":\"Provides
        a list of clusters sending Error as their health state. Click on a particular
        cluster name to know more.\",\"fieldConfig\":{\"defaults\":{\"color\":{\"mode\":\"palette-classic\"},\"custom\":{\"axisLabel\":\"\",\"axisPlacement\":\"auto\",\"barAlignment\":0,\"drawStyle\":\"line\",\"fillOpacity\":10,\"gradientMode\":\"none\",\"hideFrom\":{\"legend\":false,\"tooltip\":false,\"viz\":false},\"lineInterpolation\":\"linear\",\"lineWidth\":1,\"pointSize\":5,\"scaleDistribution\":{\"type\":\"linear\"},\"showPoints\":\"never\",\"spanNulls\":true,\"stacking\":{\"group\":\"A\",\"mode\":\"normal\"},\"thresholdsStyle\":{\"mode\":\"off\"}},\"links\":[{\"targetBlank\":true,\"title\":\"Cluster
        Detail\",\"url\":\"http://localhost:3000/d/xLERdASnz/cluster-detail?orgId=1\\u0026${env:queryparam}\\u0026${account:queryparam}\\u0026${__field.name}\"}],\"mappings\":[],\"thresholds\":{\"mode\":\"absolute\",\"steps\":[{\"color\":\"green\",\"value\":null},{\"color\":\"red\",\"value\":80}]}},\"overrides\":[]},\"gridPos\":{\"h\":9,\"w\":8,\"x\":16,\"y\":9},\"id\":10,\"options\":{\"legend\":{\"calcs\":[],\"displayMode\":\"list\",\"placement\":\"bottom\"},\"tooltip\":{\"mode\":\"multi\"}},\"pluginVersion\":\"8.1.2\",\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{ClusterName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"ClusterHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where HealthState ==
        \\\"Error\\\"\\n| project Count = replacenulls(Count, 0)\\n| zoom Count =
        sum(Count) by 5m\",\"refId\":\"ErrorTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Clusters
        in Error state\",\"type\":\"timeseries\"},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of nodes indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":0,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":true,\"highlightCards\":true,\"id\":7,\"legend\":{\"show\":false},\"links\":[],\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{NodeName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\" \\n| summarize OK = max(Count) by NodeName\\n| join
        kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by NodeName\\n)\\n| join kind=fullouter (\\n    metric(\\\"NodeHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"NodeName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        NodeName\\n)\\n| project NodeHealthValues = foreach(a in OK, b in Warning,
        c in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize NodeHealthSummary = max(NodeHealthValues) by NodeName\\n|
        zoom NodeHealthReduced = max(NodeHealthSummary) by 15m | top 10 by avg(NodeHealthReduced)\",\"refId\":\"NodeTimelines\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy nodes across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null},{\"cards\":{\"cardPadding\":null,\"cardRound\":null},\"color\":{\"cardColor\":\"#b4ff00\",\"colorScale\":\"sqrt\",\"colorScheme\":\"interpolateRdYlGn\",\"exponent\":0.5,\"max\":3,\"min\":0,\"mode\":\"spectrum\"},\"dataFormat\":\"tsbuckets\",\"datasource\":\"Geneva
        Datasource\",\"description\":\"Timeline of health state of applications indicated
        by Error - red, Warning - yellow, OK - green.\",\"gridPos\":{\"h\":9,\"w\":12,\"x\":12,\"y\":18},\"heatmap\":{},\"hideZeroBuckets\":false,\"highlightCards\":true,\"id\":8,\"legend\":{\"show\":false},\"pluginVersion\":\"8.0.0-beta3\",\"reverseYBuckets\":false,\"targets\":[{\"account\":\"$account\",\"backends\":[],\"customSeriesNaming\":\"{AppName}\",\"dimension\":\"\",\"metric\":\"\",\"metricsQueryType\":\"query\",\"namespace\":\"ServiceFabric\",\"queryText\":\"metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n| where
        HealthState == \\\"OK\\\"\\n| summarize OK = max(Count) by AppName\\n| join
        kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Warning\\\"\\n    | summarize Warning = max(Count)
        by AppName\\n)\\n| join kind=fullouter (\\n    metric(\\\"AppHealthState\\\").dimensions(\\\"ClusterName\\\",
        \\\"AppName\\\", \\\"HealthState\\\").samplingTypes(\\\"Count\\\")\\n    |
        where HealthState == \\\"Error\\\"\\n    | summarize Error = max(Count) by
        AppName\\n)\\n| project AppHealthValues = foreach(a in OK, b in Warning, c
        in Error) =\\u003e iif(isnull(c), iif(isnull(b), iif(isnull(a), 0, 1), 2),
        3)\\n| summarize AppHealthMaxCount = max(AppHealthValues) by AppName\\n| zoom
        AppHealthReduced = max(AppHealthMaxCount) by 15m | top 10 by avg(AppHealthReduced)\",\"refId\":\"AppTimeline\",\"samplingType\":\"\",\"service\":\"metrics\",\"useBackends\":false,\"useCustomSeriesNaming\":true}],\"timeFrom\":null,\"timeShift\":null,\"title\":\"Top
        10 unhealthy applications across all clusters\",\"tooltip\":{\"show\":true,\"showHistogram\":false},\"type\":\"heatmap\",\"xAxis\":{\"show\":true},\"xBucketNumber\":null,\"xBucketSize\":null,\"yAxis\":{\"decimals\":null,\"format\":\"short\",\"logBase\":1,\"max\":null,\"min\":null,\"show\":true,\"splitFactor\":null},\"yBucketBound\":\"auto\",\"yBucketNumber\":null,\"yBucketSize\":null}],\"refresh\":\"\",\"schemaVersion\":30,\"style\":\"dark\",\"tags\":[],\"templating\":{\"list\":[{\"allValue\":null,\"current\":{},\"datasource\":\"Geneva
        Datasource\",\"definition\":\"accounts()\",\"description\":\"The Geneva metrics
        account name\",\"error\":null,\"hide\":0,\"includeAll\":false,\"label\":\"Account\",\"multi\":false,\"name\":\"account\",\"options\":[],\"query\":\"accounts()\",\"refresh\":1,\"regex\":\"\",\"skipUrlSync\":false,\"sort\":1,\"type\":\"query\"}]},\"time\":{\"from\":\"now-6h\",\"to\":\"now\"},\"timepicker\":{},\"timezone\":\"\",\"title\":\"Service
        Fabric Application Overview\",\"uid\":\"GIgvhSV7z\",\"version\":1}}"
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14254'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-J5hO27CdWlU3iGiZgCmylQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:26 GMT
      grafana-trace-id:
      - 553a72412be02d98f438ccc224dff28d
      mise-correlation-id:
      - 54d570e7-50ff-42a4-a2ed-c085aea56c24
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504467.715.29.297137|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-customer-views
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"SlIInsightsDRICustomerViews.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":23,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - Overview","tooltip":"Open SLI Insights - Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-overview/sli-insights-overview"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":3},"id":2,"links":[],"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview dashboard helps to understand Service health through SLI data for
        DRI scenarios. This SLI data is coming through Streaming in near real time
        with the goal of \u003c 10 minutes latency. Impacted indicates the value is
        below the SLO defined in YAML.\r\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\r\nLearn
        more\r\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":0,"y":5},"id":3,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["allValues"],"fields":"/.*/","values":true},"text":{},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet total_regions= GetTotalImpactedRegions(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer,  _isARM)\r\n|
        extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{"Impacted/Total":true},"indexByName":{"Column2":0,"Column3":1},"renameByName":{"Column2":"%","Column3":"Impacted
        / Total","subvalue":"Impacted / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":4,"y":5},"id":4,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":9,"y":5},"id":5,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcustomers=GetImpactedAndTotalCustomerCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| extend id=3,value=iff((ImpactedCustomers!=0
        and TotalCustomers!=0),(todouble(ImpactedCustomers)/todouble(TotalCustomers))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCustomers,1),\"/\",SummarizeNumber(TotalCustomers,1));\r\nimpactedbytotalcustomers\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":9},"id":12,"maxDataPoints":1,"options":{"basemap":{"config":{},"name":"Basemap","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"text":{"fixed":"","mode":"field"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"latitude":"Latitude","longitude":"Longitude","mode":"coords"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM = strcat(toscalar(tobool(\"{IsARM}\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        summarize Attainment = avg(attainment), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":9},"id":13,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Granularity\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetCustomerAttainment(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region,_customer,_isARM)\r\n|
        project LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","transformations":[],"type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":19},"id":14,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLOsAttainment(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"Overview","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":3},"id":37,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":4},"id":15,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.6.2","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedAndTotalCRIDs(_startTime,
        _endTime,  _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,
        _isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","transformations":[],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":4},"id":16,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^ImpactedCRIDsCount$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer,_isARM)\r\n|
        project LocationId,ImpactedCRIDsCount","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","transformations":[],"type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":15},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedAndTotalSubscriptionsARM(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total Subscriptions","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":15},"id":18,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedSubsByCustomerARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        ImpactedSubsCount,Customer_TPIDDisplayName","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subs by Customers (Top 20 ordered by S500, Impacted Subs Count))","type":"piechart"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"left","cellOptions":{"type":"auto"},"filterable":true,"inspect":true},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Is
        S500 Customer"},"properties":[{"id":"custom.width","value":166}]},{"matcher":{"id":"byName","options":"Customer"},"properties":[{"id":"custom.width","value":306}]},{"matcher":{"id":"byName","options":"Impacted
        Subscriptions Count"},"properties":[{"id":"custom.width","value":240}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":26},"id":19,"options":{"cellHeight":"sm","footer":{"countRows":false,"enablePagination":false,"fields":[],"reducer":["sum"],"show":false},"showHeader":true,"sortBy":[{"desc":true,"displayName":"Impacted
        Subscriptions Count"}]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"\r\n\r\nlet
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedSubscriptionsARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project
        Customer=Customer_TPIDDisplayName,[''Is S500 Customer'']=IsS500Customer,[''Impacted
        Subs Count'']=ImpactedSubsCount,[''Impacted Subscriptions'']=ImpactedSubs\r\n|
        order by [''Is S500 Customer''] desc,[''Impacted Subs Count''] asc;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions (Default ordered by S500, Impacted Subs Count)","type":"table"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[{"matcher":{"id":"byName","options":"Location
        Id"},"properties":[{"id":"custom.width","value":168}]},{"matcher":{"id":"byName","options":"Impacted
        CRIDs Count"},"properties":[{"id":"custom.width","value":202}]}]},"gridPos":{"h":10,"w":24,"x":0,"y":36},"id":40,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true,"sortBy":[]},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetImpactedCRIDsByRegion(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _isARM)\r\n|
        project [''Location Id'']=LocationId, [''Impacted CRIDs Count'']=ImpactedCRIDsCount,
        [''Impacted CRIDs'']=ImpactedCRIDs\r\n| take 100","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Location","type":"table"}],"title":"Customer Impact","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":4},"id":38,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":5},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"9.5.8","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region, _customer)
        \r\n| summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":21,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _customer = $Customer;\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nGetSLITimeSeriesData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region, _customer,
        _isARM)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"}],"title":"SLI Signals
        (Percentage based)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":5},"id":33,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":0,"y":6},"id":35,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":9,"w":12,"x":12,"y":6},"id":34,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":10,"w":24,"x":0,"y":15},"id":36,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"multi","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _granularity = \"$Granularity\";\r\nlet _region
        = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =
        \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region,_customer)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","transformations":[],"type":"timeseries"}],"title":"SLI Signals
        (Latency)","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":6},"id":39,"panels":[{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineStyle":{"fill":"solid"},"lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":7},"id":25,"options":{"legend":{"calcs":["sum"],"displayMode":"table","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":7},"id":26,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"}],"title":"Deployments and Changes","type":"row"},{"collapsed":true,"gridPos":{"h":1,"w":24,"x":0,"y":7},"id":8,"panels":[{"datasource":{"type":"datasource","uid":"grafana"},"description":"","gridPos":{"h":2,"w":24,"x":0,"y":8},"id":27,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":10},"id":32,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = $Customer;\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet _endTime
        = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _granularity = \"$Granularity\";\r\nlet _sloId
        = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLIBasedErrorBudget(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| project EndTimeUtc,
        SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":13},"id":28,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetRemainingErrorBudget(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer)\r\n| summarize
        RemainingErrorBudget = avg(RemainingErrorBudget)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":17},"id":29,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":21},"id":30,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _customer = \"$Customer\";\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _customer, _burnrate)\r\n|
        summarize burnrate = avg(burnrate)","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"title":"Error Budget","type":"row"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"auto":false,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"15m","value":"15m"},"description":"Granularity","hide":0,"label":"Granularity","name":"Granularity","options":[{"selected":false,"text":"5m","value":"5m"},{"selected":true,"text":"15m","value":"15m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"}],"query":"5m,15m,1h,6h,12h","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"},{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","description":"","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"Slo
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","hide":0,"includeAll":true,"label":"Slo
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"current":{"selected":false,"text":"False","value":"False"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","description":"Internal parameter for defining if Service
        is having ARM based CRID or not","hide":2,"includeAll":false,"label":"IsArm","multi":false,"name":"IsArm","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"\";//Temporary setting this always empty, so we don''t need to wait SLO
        Group query\r\nIsArmBasedCrid(_serviceTreeId, _sloId, _sloGroup)\r\n| project
        strcat(isArmString)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"\"","current":{"selected":false,"text":"All","value":"$__all"},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","hide":0,"includeAll":true,"label":"Customer","multi":false,"name":"Customer","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"from":{"property":{"name":"LocationMap","type":"string"},"type":"property"},"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.5.0","query":"let
        _isARM =strcat(toscalar(tobool(\"$IsArm\")));\r\nlet _startTime =\"${__from:date:iso}\";\r\nlet
        _endTime = \"${__to:date:iso}\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId =\"$SloId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet _region =\"$Region\";\r\nGetServiceCustomers(_startTime,
        _endTime,_serviceTreeId, _sloId, _sloGroup, _region,_isARM)","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"browser","title":"SLI
        Insights / DRI / Customer views","uid":"sli-insights-geneva-customer-views","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '60264'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-WA4nca3knHEweX+rPGILwg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:27 GMT
      grafana-trace-id:
      - 7a07cff557f970188a3577dc37d8a237
      mise-correlation-id:
      - a5c98195-92bd-4d67-81be-fc73eb2b7111
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504468.122.28.10555|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/sli-insights-geneva-overview
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"SLIInsightsOverview.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"__elements":{},"__inputs":[],"__requires":[{"id":"grafana","name":"Grafana","type":"grafana","version":"9.5.13"},{"id":"grafana-azure-data-explorer-datasource","name":"Azure
        Data Explorer Datasource","type":"datasource","version":"4.9.0"},{"id":"table","name":"Table","type":"panel","version":""},{"id":"timeseries","name":"Time
        series","type":"panel","version":""}],"annotations":{"list":[{"builtIn":1,"datasource":{"type":"grafana","uid":"--
        Grafana --"},"enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"description":"","editable":true,"fiscalYearStartMonth":0,"graphTooltip":0,"id":21,"links":[{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"SLI
        Insights - DRI Customer Overview","tooltip":"Open Sli Insights / DRI / Customer
        Overview Dashboard","type":"link","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views"},{"asDropdown":false,"icon":"external
        link","includeVars":false,"keepTime":false,"tags":[],"targetBlank":true,"title":"Questions
        or Concerns","tooltip":"Email us","type":"link","url":"mailto:genevamonitoringux@microsoft.com?subject=Sli
        Insights in Grafana"}],"liveNow":false,"panels":[{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":2},"id":1,"panels":[],"title":"Overview","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":3},"id":5,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Overview section helps to understand Service health through SLI data for DRI
        scenarios. This SLI data is coming through Streaming in near real time with
        the goal of \u003c 10 minutes latency. Impacted indicates the value is below
        the SLO defined in YAML.\n\u003ca href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\"
        style=\"font-size:16px; margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn
        more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":0,"y":5},"id":6,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet total_regions=
        GetTotalImpactedRegions_AggData(_startTime, _endTime, _serviceTreeId, _sloId,
        _sloGroup, _region)\r\n| extend\r\n       value=iff((impacted!=0 and total!=0),(todouble(impacted)/todouble(total))*100,todouble(0)),\r\n      subvalue=strcat(tolong(impacted),
        \"/\", tolong(total));\r\ntotal_regions\r\n| project value,subvalue;\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Regions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":5,"y":5},"id":7,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet teams = cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').TeamServiceTreeMapping\r\n|
        extend ServiceTree = tostring(todynamic(MappedServiceTreeEntities)[0].ServiceTreeEntityId)\r\n|
        where ServiceTree == _serviceTreeId\r\n| project TeamId;\r\nlet activeicms=cluster(''https://icmclusterlb.kustomfa.windows.net'').database(''IcmDataWarehouse'').IncidentsSnapshotV2\r\n|
        where OwningTeamId in (teams)\r\n| where ImpactStartDate between (todatetime(_startTime)
        .. todatetime(_endTime)) or CreateDate between (todatetime(_startTime) ..
        todatetime(_endTime))\r\n| where IsNoise==false and Severity \u003c 3\r\n|
        summarize ActiveIcms =countif(Status =~ ''Active''),TotalICMs =count()\r\n|
        extend id=5,value =iff((ActiveIcms!=0 and TotalICMs!=0),(todouble(ActiveIcms)/todouble(TotalICMs))*100,todouble(0)),subvalue=strcat(tolong(ActiveIcms),\"/\",tolong(TotalICMs));\r\nactiveicms\r\n|
        project value,subvalue;","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Incidents(\u003c=sev2)","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Active
        / Total","value":"% Active"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":4,"x":10,"y":5},"id":10,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _granularity = \"$Interval\";\r\nlet
        _region = \"$Region\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet
        impactedbytotalcrids=GetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,_granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs =
        sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs)\r\n| extend id=3,value=iff((ImpactedCRIDs!=0
        and TotalCRIDs!=0),(todouble(ImpactedCRIDs)/todouble(TotalCRIDs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedCRIDs,1),\"/\",SummarizeNumber(TotalCRIDs,1));\r\nimpactedbytotalcrids\r\n|
        project value,subvalue;\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":14,"y":5},"id":9,"options":{"colorMode":"value","graphMode":"none","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet impactedbytotalsubs=GetImpactedAndTotalSubscriptionCountARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n|extend id=2,value=iff((ImpactedSubs!=0
        and TotalSubs!=0),(todouble(ImpactedSubs)/todouble(TotalSubs))*100,todouble(0)),subvalue=strcat(SummarizeNumber(ImpactedSubs,1),\"/\",SummarizeNumber(TotalSubs,1));\r\nimpactedbytotalsubs\r\n|
        project value,subvalue\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        Subscriptions","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"subvalue":"Impacted
        / Total","value":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":4,"w":5,"x":19,"y":5},"id":8,"options":{"colorMode":"value","graphMode":"area","justifyMode":"center","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":false},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet totals500customers=GetTotalS500CustomersImpactedARM(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region,'''')\r\n| extend  val=iff((value!=0
        and total!=0),(todouble(value)/todouble(total))*100,todouble(0)), subvalue=strcat(tolong(value),\"/\",tolong(total));\r\ntotals500customers\r\n|
        project val,subvalue;\r\n\r\n\r\n\r\n  ","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"S500
        Customers","transformations":[{"id":"organize","options":{"excludeByName":{},"indexByName":{},"renameByName":{"A-series":"Impacted
        / Total","subvalue":"Impacted / Total","time":"%","val":"% Impacted"}}}],"type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"thresholds":{"mode":"percentage","steps":[{"color":"text","value":null}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":9},"id":11,"options":{"basemap":{"config":{},"name":"Layer
        0","type":"default"},"controls":{"mouseWheelZoom":false,"showAttribution":true,"showDebug":false,"showMeasure":false,"showScale":false,"showZoom":true},"layers":[{"config":{"showLegend":true,"style":{"color":{"field":"Attainment","fixed":"dark-green"},"opacity":0.4,"rotation":{"fixed":0,"max":360,"min":-360,"mode":"mod"},"size":{"field":"TotalCrids","fixed":5,"max":15,"min":2},"symbol":{"fixed":"img/icons/marker/circle.svg","mode":"fixed"},"textConfig":{"fontSize":12,"offsetX":0,"offsetY":0,"textAlign":"center","textBaseline":"middle"}}},"filterData":{"id":"byRefId","options":"A"},"location":{"mode":"auto"},"name":"CRIDs","tooltip":true,"type":"markers"}],"tooltip":{"mode":"details"},"view":{"allLayers":true,"id":"coords","lat":15.961329,"lon":-16.875,"zoom":1}},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| summarize
        Attainment = todecimal(avg(attainment)), TotalCrids = sum(TotalCount) by LocationId\r\n|
        join kind=leftouter  ( cluster(''https://genevaslidatafollower.westcentralus.kusto.windows.net'').database(''slihelper'').LocationMap\r\n|
        project Code, Latitude, Longitude, DisplayName )\r\n on $left.LocationId ==
        $right.Code\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment","type":"geomap"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"continuous-RdYlGr"},"custom":{"fillOpacity":70,"hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineWidth":0,"spanNulls":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"light-blue","value":null}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":9},"id":12,"options":{"alignValue":"center","legend":{"displayMode":"list","placement":"bottom","showLegend":false},"mergeValues":true,"rowHeight":0.9,"showValue":"always","tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _slo = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nlet _region = \"$Region\";\r\nGetCustomerAttainment_AggData(_startTime,
        _endTime,_granularity,_serviceTreeId,_slo,_sloGroup,_region)\r\n| project
        LocationId,attainment,EndTimeUtc \r\n| evaluate pivot(LocationId,avg(attainment))\r\n\r\n\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Customer
        Attainment by Region ","type":"state-timeline"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":13,"w":24,"x":0,"y":20},"id":13,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLOsAttainment_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLOs
        Attainment (Against configured SLO target)","transformations":[{"id":"renameByRegex","options":{"regex":"([attainment]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"log":2,"type":"log"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"}]}},"overrides":[]},"gridPos":{"h":11,"w":12,"x":0,"y":33},"id":14,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetImpactedAndTotalCRIDs_AggData(_startTime, _endTime,  _granularity,
        _serviceTreeId,  _sloId, _sloGroup, _region)\r\n| summarize ImpactedCRIDs
        = sum(ImpactedCRIDs), TotalCRIDs = sum(TotalCRIDs) by EndTimeUtc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        vs Total CRIDs","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"mappings":[],"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":12,"x":12,"y":33},"id":15,"options":{"displayLabels":["percent"],"legend":{"displayMode":"table","placement":"right","showLegend":true,"values":["value"]},"pieType":"pie","reduceOptions":{"calcs":["lastNotNull"],"fields":"/^impacted$/","values":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetImpactedCRIDsByRegion_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region)\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Impacted
        CRIDs by Region","type":"piechart"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":44},"id":29,"panels":[],"title":"SLI
        Signals (Percentage based)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"none"},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":45},"id":17,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _region = \"$Region\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetSLITimeSeriesData_AggData(_startTime, _endTime, _granularity,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        (Average)","transformations":[{"id":"renameByRegex","options":{"regex":"([SuccessRate]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":11,"w":24,"x":0,"y":56},"id":16,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"pluginVersion":"10.1.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIByRegion_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId,  _sloId, _sloGroup, _region) \r\n|
        summarize avg(SuccessRate) by LocationId,EndTimeUtc\r\n| order by EndTimeUtc
        asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"SLIs
        By Region","transformations":[{"id":"renameByRegex","options":{"regex":"(.*)
        (.*)","renamePattern":"$2"}}],"type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":67},"id":4,"panels":[],"title":"SLI
        Signals (Latency)","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":68},"id":18,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P50\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P50","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"locale"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":68},"id":19,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetAverageLatencyPercentiles_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        project EndTimeUtc, SloName, P99\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Average
        Latency P99","type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"text","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"displayName":"Ingestion/Latency/T120000ms(Avg)","mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]},"unit":"percent"},"overrides":[]},"gridPos":{"h":12,"w":24,"x":0,"y":78},"id":20,"options":{"legend":{"calcs":["mean"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _region = \"$Region\";\r\nlet _serviceTreeId
        = \"$ServiceTreeId\";\r\nlet _sloId = \"$SloId\";\r\nlet _sloGroup = \"$SloGroup\";\r\nGetLatencyPercentages_AggData(_startTime,_endTime,_granularity,_serviceTreeId,_sloId,_sloGroup,_region)\r\n|
        order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Latency
        Percentage","type":"timeseries"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":90},"id":30,"panels":[],"title":"Deployments
        and Changes","type":"row"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":91},"id":21,"options":{"legend":{"calcs":["sum"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        compareStandardLocation = (loc1:string, loc2:string) { \r\n    tolower(replace_string(loc1,\"
        \",\"\")) == tolower(replace_string(loc2,\" \",\"\"))\r\n};\r\nlet serviceId
        = toscalar (GetAllMetadata(_endTime)\r\n| where serviceTreeId == _serviceTreeId\r\n|
        project serviceTreeId\r\n| take 1);\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == serviceId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or compareStandardLocation(LocationId,
        _region)\r\n| summarize Count=count() by bin(TimeStamp, 5m), LocationId\r\n|
        order by TimeStamp asc\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Deployment
        Changes (source: FCM)","transformations":[{"id":"renameByRegex","options":{"regex":"([Count]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"custom":{"align":"auto","cellOptions":{"type":"auto"},"inspect":false},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":91},"id":22,"options":{"cellHeight":"sm","footer":{"countRows":false,"fields":"","reducer":["sum"],"show":false},"showHeader":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\ncluster(''FCMDataro'').database(''FCMKustoStore'').materialized_view(''ChangeEventV2MaterializedView'',10m)\r\n|
        where ServiceId == _serviceTreeId\r\n| where TimeStamp  between (todatetime(_startTime)
        .. todatetime(_endTime))\r\n| where SourceSystem in(\"expressv2\",\"adorelease\")\r\n|
        where DeploymentTargetType == \"region\"\r\n| where isempty( _region) or LocationId
        =~ _region\r\n| project TimeStamp, LocationId, ChangeTitle, ChangeDescription,
        ChangeState, ChangeType\r\n| order by TimeStamp desc\r\n| limit 500;","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Deployment
        Changes (source: FCM)","type":"table"},{"collapsed":false,"gridPos":{"h":1,"w":24,"x":0,"y":101},"id":2,"panels":[],"title":"Error
        Budget","type":"row"},{"datasource":{"type":"datasource","uid":"grafana"},"gridPos":{"h":2,"w":24,"x":0,"y":102},"id":23,"options":{"code":{"language":"plaintext","showLineNumbers":false,"showMiniMap":false},"content":"This
        Error Budget calculation uses actual error count vs total requests hence represents
        magnitude of the failures (bad events) impact. This kind of calculation gives
        more weightage to customers with high volume of data which sometimes overshadow
        customers with very low volume. It often represents the magnitude of impact.\n\u003ca
        href=\"https://eng.ms/docs/products/geneva/slos-slis/sli_insights\" style=\"font-size:16px;
        margin-bottom:0px; margin-top:0px;\" target=\"_blank\"\u003e\nLearn more\n\u003c/a\u003e","mode":"html"},"pluginVersion":"10.2.1","type":"text"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"description":"Remaining
        Error Budget timeseries represents remaining error budget over the selected
        time period. It starts with 100% budget and continue to deduct consumed budget
        at each data point.","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisBorderShow":false,"axisCenteredZero":false,"axisColorMode":"series","axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"insertNulls":false,"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":15,"w":18,"x":0,"y":104},"id":28,"options":{"legend":{"calcs":["last"],"displayMode":"list","placement":"bottom","showLegend":true},"tooltip":{"mode":"single","sort":"none"}},"targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _granularity = \"$Interval\";\r\nlet _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\",
        \"\");\r\nlet _sloGroup = \"$SloGroup\";\r\nGetSLIBasedErrorBudget_AggData(_startTime,
        _endTime, _granularity, _serviceTreeId, _sloId, _sloGroup, _region)\r\n| project
        EndTimeUtc, SloName, BudgetRemaining\r\n| order by EndTimeUtc asc","querySource":"raw","queryType":"KQL","rawMode":true,"refId":"A","resultFormat":"time_series"}],"title":"Error
        Budget","transformations":[{"id":"renameByRegex","options":{"regex":"([BudgetRemaining]+[
        ])(.*)","renamePattern":"$2"}}],"type":"timeseries"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":107},"id":24,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nGetRemainingErrorBudget_AggData(_startTime, _endTime,
        _serviceTreeId, _sloId, _sloGroup, _region)\r\n| summarize RemainingErrorBudget
        = avg(RemainingErrorBudget)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Remaining
        Error Budget","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":111},"id":25,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"/.*/","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"1h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId, _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Fast
        Burn Rate ( Last 1 hr)","type":"stat"},{"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green"},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":5,"w":6,"x":18,"y":115},"id":26,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":true},"textMode":"auto","wideLayout":true},"pluginVersion":"10.2.1","targets":[{"OpenAI":false,"database":"slihelper","datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"query":"let
        _startTime =\"${__from:date:iso}\";\r\nlet _endTime = \"${__to:date:iso}\";\r\nlet
        _region = \"$Region\";\r\nlet _serviceTreeId = \"$ServiceTreeId\";\r\nlet
        _sloId = replace_string(\"$SloId\", \"\u003cunset\u003e\", \"\");\r\nlet _sloGroup
        = \"$SloGroup\";\r\nlet _burnrate = \"5h\";\r\nGetErrorBurnRate_AggData(_startTime,
        _endTime, _serviceTreeId,  _sloId, _sloGroup, _region, _burnrate)\r\n| summarize
        burnrate = avg(burnrate)","rawMode":true,"refId":"A","resultFormat":"table"}],"title":"Slow
        Burn Rate ( Last 5 hrs)","type":"stat"}],"refresh":"","schemaVersion":38,"tags":[],"templating":{"list":[{"current":{},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","hide":0,"includeAll":false,"label":"Service
        Name","multi":false,"name":"ServiceTreeId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"GetAllMetadata()\r\n|
        distinct serviceTreeId, serviceName\r\n| project strcat(serviceName, \":\",
        serviceTreeId)\r\n| order by Column1\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Group","multi":true,"name":"SloGroup","options":[],"query":{"OpenAI":false,"database":"slihelper","expression":{"groupBy":{"expressions":[],"type":"and"},"reduce":{"expressions":[],"type":"and"},"where":{"expressions":[],"type":"and"}},"pluginVersion":"4.7.0","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nGetAllMetadata()\r\n| where serviceTreeId
        ==_serviceTreeId\r\n| distinct groupName\r\n| order by groupName\r\n\r\n\r\n\r\n","querySource":"raw","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","hide":0,"includeAll":true,"label":"SLO
        Name","multi":true,"name":"SloId","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloGroup =\"$SloGroup\";\r\nlet
        sloGroup = parse_json(strcat(\"[\", _sloGroup , \"]\"));\r\nGetAllMetadata()\r\n|
        where serviceTreeId == _serviceTreeId \r\n| where isnull(sloGroup) or array_length(sloGroup)
        \u003c 1 or groupName in (sloGroup)\r\n| project strcat(sloName,\":\",sloId)\r\n\r\n\r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"/(?\u003ctext\u003e.*).*:(?\u003cvalue\u003e.*)/","skipUrlSync":false,"sort":1,"type":"query"},{"allValue":"\"
        \"","current":{"selected":true,"text":["All"],"value":["$__all"]},"datasource":{"type":"grafana-azure-data-explorer-datasource","uid":"2bf5f4cb-b112-4c36-8ed5-22a2b478d58f"},"definition":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","hide":0,"includeAll":true,"label":"Region","multi":true,"name":"Region","options":[],"query":{"OpenAI":false,"database":"slihelper","query":"let
        _serviceTreeId = \"$ServiceTreeId\";\r\nlet _sloId =\"$SloId\";\r\nlet _sloGroup
        =\"$SloGroup\";\r\nGetServiceSloRegions(_serviceTreeId, _sloId, _sloGroup)\r\n|
        order by LocationId asc \r\n\r\n \r\n","queryType":"KQL","rawMode":true,"resultFormat":"table"},"refresh":1,"regex":"","skipUrlSync":false,"sort":0,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"5m","current":{"selected":false,"text":"auto","value":"$__auto_interval_Interval"},"hide":2,"name":"Interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_Interval"},{"selected":false,"text":"5m","value":"5m"},{"selected":false,"text":"15m","value":"15m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"5m,15m,30m,1h,6h,12h,1d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"SLI
        Insights / Overview","uid":"sli-insights-geneva-overview","version":1,"weekStart":""}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '47495'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ls1Vuj7EFh65DeBugrJACQ';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:27 GMT
      grafana-trace-id:
      - d79f2bad8ec04ad7473e5b8ec9499167
      mise-correlation-id:
      - d9ba4d81-3364-4321-9039-00434224f45b
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504468.397.28.205459|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:56Z","updated":"2024-10-21T09:53:56Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":1,"hasAcl":false,"isFolder":false,"folderId":0,"folderUid":"","folderTitle":"General","folderUrl":"","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":39,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVd","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '724'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-Q5THQpkrJH15wNGLt1djLg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:27 GMT
      grafana-trace-id:
      - 2402c9a6792322ca9416ad37ef9530a5
      mise-correlation-id:
      - 108a585b-b372-4bac-b080-f1bd83708c78
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504468.616.27.188513|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVd
  response:
    body:
      string: '{"id":33,"message":"Dashboard Test Dashboard deleted","title":"Test
        Dashboard"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '79'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-AgCwsFN8+zpVI3tY+bAnjg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:27 GMT
      grafana-trace-id:
      - ea6c297c402a4625e3b324dc7378f632
      mise-correlation-id:
      - c211f562-80c7-4a8d-af08-388527b7213c
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504468.877.27.533016|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVd/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-10-21T09:53:56Z", "updated":
      "2024-10-21T09:53:56Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 1, "hasAcl": false, "isFolder": false, "folderId": 0, "folderUid":
      "", "folderTitle": "General", "folderUrl": "", "provisioned": false, "provisionedExternalId":
      "", "annotationsPermissions": {"dashboard": {"canAdd": true, "canEdit": true,
      "canDelete": true}, "organization": {"canAdd": true, "canEdit": true, "canDelete":
      true}}}, "dashboard": {"panels": [], "title": "Test Dashboard", "uid": "mg2OAlTVd",
      "version": 1}, "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '803'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"","id":36,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVd","url":"/d/mg2OAlTVd/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '133'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-86n8g9qsYrpqjMpAFAxB0w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:28 GMT
      grafana-trace-id:
      - f841ff587e13608ec58d7dc0e96e5c79
      mise-correlation-id:
      - 8d4527ea-868d-4205-bb7b-1fbf30d02079
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504469.213.28.218512|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:41Z","updated":"2024-10-21T09:53:54Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":37,"panels":[],"title":"Test
        Dashboard","uid":"mg2OAlTVa","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '783'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-eKAIlH8gbaokOxSU96BqTw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:28 GMT
      grafana-trace-id:
      - 09d7a890eea31c15a4fd49820c1f56e5
      mise-correlation-id:
      - b3ab0ffc-6531-41b1-a455-b608616936dd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504469.585.29.863726|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: DELETE
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVa
  response:
    body:
      string: '{"message":"Dashboard not found","traceID":"394c00a523d3fbfb1c1d48bc1476b082"}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '78'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-ZUeCDX40OczhsJ+ulFfz4Q';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:28 GMT
      grafana-trace-id:
      - 394c00a523d3fbfb1c1d48bc1476b082
      mise-correlation-id:
      - 09c2175c-2fc6-4608-89d4-752129b02795
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504469.825.27.529648|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 404
      message: Not Found
- request:
    body: '{"meta": {"type": "db", "canSave": true, "canEdit": true, "canAdmin": true,
      "canStar": true, "canDelete": true, "slug": "test-dashboard", "url": "/d/mg2OAlTVa/test-dashboard",
      "expires": "0001-01-01T00:00:00Z", "created": "2024-10-21T09:53:41Z", "updated":
      "2024-10-21T09:53:54Z", "updatedBy": "example@example.com", "createdBy": "example@example.com",
      "version": 2, "hasAcl": false, "isFolder": false, "folderId": 36, "folderUid":
      "ae1j483j9xuyod", "folderTitle": "Test Folder", "folderUrl": "/dashboards/f/ae1j483j9xuyod/test-folder",
      "provisioned": false, "provisionedExternalId": "", "annotationsPermissions":
      {"dashboard": {"canAdd": true, "canEdit": true, "canDelete": true}, "organization":
      {"canAdd": true, "canEdit": true, "canDelete": true}}}, "dashboard": {"panels":
      [], "title": "Test Dashboard", "uid": "mg2OAlTVa", "version": 2}, "folderUid":
      "ae1j483j9xuyod", "overwrite": true}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '893'
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: POST
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/dashboards/db
  response:
    body:
      string: '{"folderUid":"ae1j483j9xuyod","id":37,"slug":"test-dashboard","status":"success","uid":"mg2OAlTVa","url":"/d/mg2OAlTVa/test-dashboard","version":1}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '147'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-TyeE0ADOY/UE6LIj4ng4Mw';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:29 GMT
      grafana-trace-id:
      - ad7a4743b516700a138236ab3e034e48
      mise-correlation-id:
      - c03ecbd4-06c1-4ae4-8120-176d12c80209
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504470.109.30.252057|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/mg2OAlTVc
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"test-dashboard2","url":"/d/mg2OAlTVc/test-dashboard2","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:53:42Z","updated":"2024-10-21T09:53:55Z","updatedBy":"example@example.com","createdBy":"example@example.com","version":2,"hasAcl":false,"isFolder":false,"folderId":36,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/test-folder","provisioned":false,"provisionedExternalId":"","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"id":38,"panels":[],"title":"Test
        Dashboard2","uid":"mg2OAlTVc","version":2}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '786'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-YYhN4WYH1G1Hz8iplptY6w';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:29 GMT
      grafana-trace-id:
      - 4f25f043d4d19108cf6ead25e313ea31
      mise-correlation-id:
      - 4011c579-5998-4f05-b887-cad3a3d7cf0a
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504470.377.29.481562|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com/api/dashboards/uid/duj3tR77k
  response:
    body:
      string: '{"meta":{"type":"db","canSave":true,"canEdit":true,"canAdmin":true,"canStar":true,"canDelete":true,"slug":"warmpathqos","url":"/d/duj3tR77k/warmpathqos","expires":"0001-01-01T00:00:00Z","created":"2024-10-21T09:48:34Z","updated":"2024-10-21T09:48:34Z","updatedBy":"Anonymous","createdBy":"Anonymous","version":1,"hasAcl":false,"isFolder":false,"folderId":14,"folderUid":"fe1j3sc7xgirkb","folderTitle":"Geneva","folderUrl":"/dashboards/f/fe1j3sc7xgirkb/geneva","provisioned":true,"provisionedExternalId":"WarmPathQoS.json","annotationsPermissions":{"dashboard":{"canAdd":true,"canEdit":true,"canDelete":true},"organization":{"canAdd":true,"canEdit":true,"canDelete":true}}},"dashboard":{"annotations":{"list":[{"builtIn":1,"datasource":"--
        Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations
        \u0026 Alerts","type":"dashboard"}]},"editable":true,"gnetId":null,"graphTooltip":0,"id":20,"links":[],"panels":[{"datasource":null,"gridPos":{"h":3,"w":24,"x":0,"y":0},"id":2,"options":{"content":"To
        know more check \u003cbr\u003e\n\u003ca href=\"https://eng.ms/docs/products/geneva/logs/howtoguides/qos/overview\"\u003eWarmPath
        QoS Metrics Overview\u003c/a\u003e","mode":"html"},"pluginVersion":"8.0.6","title":"Geneva
        WarmPath Quick Links","type":"text"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"green","mode":"thresholds"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":0,"y":3},"id":4,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0)\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":5,"w":12,"x":12,"y":3},"id":14,"options":{"colorMode":"value","graphMode":"none","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"value_and_name"},"pluginVersion":"8.0.6","targets":[{"account":"$account","backends":[],"customSeriesNaming":"Total/1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")\n|
        project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by 2h\n| project LatencyMs=LatencyMs/1000","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency (Seconds)","type":"stat"},{"datasource":"Geneva Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"decimals":1,"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":8},"id":10,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Latency / 1000","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs,0)/1000.0 \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Latency Trend (Seconds)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"dtdurations"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":8},"id":12,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Latency","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"LatencyMs\").preaggregate(\"Total\")
        \n| project LatencyMs=replacenulls(LatencyMs, 0) \n| zoom LatencyMs=avg(LatencyMs)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Latency Trend (Seconds)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"short"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":16},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Ingestion
        Throughput (MB/s)","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps,0) \n| zoom ThroughoutMBps=avg(ThroughputMBps)
        by $interval","refId":"Ingestion Throughput","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Warm
        Path Ingestion Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"never","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]}},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":16},"id":13,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"ThroughputMBps\").preaggregate(\"Total\")
        \n| project ThroughputMBps=replacenulls(ThroughputMBps, 0)\n| zoom ThroughputMBps=avg(ThroughputMBps)
        by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","transformations":[],"type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"yellow","mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":24},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"Total\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=sum(EventReceivedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":false}],"title":"Data
        Ingested into Warm Path (PerDay)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"purple","mode":"fixed"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":-1,"drawStyle":"bars","fillOpacity":50,"gradientMode":"opacity","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":24},"id":11,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"Cosmos
        Upload Throughput","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"CosmosUpload\").samplingTypes(\"EventProcessedBytes\").preaggregate(\"Total\")
        | project EventProcessedBytes=replacenulls(EventProcessedBytes, 0) | zoom
        EventProcessedBytes=sum(EventProcessedBytes) by $interval","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Cosmos
        Upload Throughput Trend (MB/s)","type":"timeseries"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":0,"y":32},"id":16,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineIngestion\").samplingTypes(\"EventReceivedBytes\").preaggregate(\"EventNS\")
        \n| project EventReceivedBytes=replacenulls(EventReceivedBytes, 0) \n| zoom
        EventReceivedBytes=avg(EventReceivedBytes) by $interval \n| top 40 by avg(EventReceivedBytes)
        desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Data
        Ingested into Warm Path (PerDay /PerNamesapce)","type":"piechart"},{"datasource":"Geneva
        Datasource","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"hideFrom":{"legend":false,"tooltip":false,"viz":false}},"decimals":2,"mappings":[],"unit":"decbytes"},"overrides":[]},"gridPos":{"h":8,"w":12,"x":12,"y":32},"id":17,"options":{"legend":{"displayMode":"list","placement":"bottom"},"pieType":"donut","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"tooltip":{"mode":"single"}},"targets":[{"account":"$account","backends":[],"customSeriesNaming":"{MdsEndpoint}","dimension":"","metric":"","metricsQueryType":"query","namespace":"WarmPathQoS","queryText":"metric(\"PipelineErrors\").samplingTypes(\"Count\").preaggregate(\"ErrorCategory+ErrorType\")
        \n| project Count=replacenulls(Count, 0) \n| zoom Count=avg(Count) by $interval
        \n| top 40 by avg(Count) desc","refId":"A","samplingType":"","service":"metrics","useBackends":false,"useCustomSeriesNaming":true}],"title":"Pipeline
        Errors","type":"piechart"}],"refresh":false,"schemaVersion":30,"style":"dark","tags":[],"templating":{"list":[{"allValue":null,"current":{},"datasource":"Geneva
        Datasource","definition":"accounts()","description":"The Geneva metrics account
        name","error":null,"hide":0,"includeAll":false,"label":"Account","multi":false,"name":"account","options":[],"query":"accounts()","refresh":1,"regex":"","skipUrlSync":false,"sort":1,"type":"query"},{"auto":true,"auto_count":30,"auto_min":"10s","current":{"selected":false,"text":"auto","value":"$__auto_interval_interval"},"description":null,"error":null,"hide":0,"label":"Interval","name":"interval","options":[{"selected":true,"text":"auto","value":"$__auto_interval_interval"},{"selected":false,"text":"1m","value":"1m"},{"selected":false,"text":"10m","value":"10m"},{"selected":false,"text":"30m","value":"30m"},{"selected":false,"text":"1h","value":"1h"},{"selected":false,"text":"2h","value":"2h"},{"selected":false,"text":"3h","value":"3h"},{"selected":false,"text":"6h","value":"6h"},{"selected":false,"text":"12h","value":"12h"},{"selected":false,"text":"1d","value":"1d"},{"selected":false,"text":"2d","value":"2d"},{"selected":false,"text":"3d","value":"3d"},{"selected":false,"text":"7d","value":"7d"},{"selected":false,"text":"14d","value":"14d"},{"selected":false,"text":"30d","value":"30d"}],"query":"1m,10m,30m,1h,2h,3h,6h,12h,1d,2d,3d,7d,14d,30d","queryValue":"","refresh":2,"skipUrlSync":false,"type":"interval"}]},"time":{"from":"now-7d","to":"now"},"timepicker":{},"timezone":"","title":"WarmPathQoS","uid":"duj3tR77k","version":1}}'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '14894'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-RR4sGTR5qNZIOGqRL1ejGg';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:29 GMT
      grafana-trace-id:
      - 31f3f65e6361ada69620d10499c83574
      mise-correlation-id:
      - 22645356-614d-4091-ae88-8ed3a8753882
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504470.643.29.72526|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=1
  response:
    body:
      string: '[{"id":26,"uid":"OSBzdgnnz","title":"Agent QoS","uri":"db/agent-qos","url":"/d/OSBzdgnnz/agent-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":15,"uid":"54KhiZ7nz","title":"AKS
        Linux Sample Application","uri":"db/aks-linux-sample-application","url":"/d/54KhiZ7nz/aks-linux-sample-application","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":19,"uid":"6uRDjTNnz","title":"App
        Detail","uri":"db/app-detail","url":"/d/6uRDjTNnz/app-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":2,"uid":"dyzn5SK7z","title":"Azure
        / Alert Consumption","uri":"db/azure-alert-consumption","url":"/d/dyzn5SK7z/azure-alert-consumption","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":9,"uid":"Yo38mcvnz","title":"Azure
        / Insights / Applications","uri":"db/azure-insights-applications","url":"/d/Yo38mcvnz/azure-insights-applications","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":4,"uid":"AppInsightsAvTestGeoMap","title":"Azure
        / Insights / Applications Test Availability Geo Map","uri":"db/d2135581-8cad-57d7-bf00-c40961be901d","url":"/d/AppInsightsAvTestGeoMap/d2135581-8cad-57d7-bf00-c40961be901d","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":10,"uid":"INH9berMk","title":"Azure
        / Insights / Cosmos DB","uri":"db/azure-insights-cosmos-db","url":"/d/INH9berMk/azure-insights-cosmos-db","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":6,"uid":"8UDB1s3Gk","title":"Azure
        / Insights / Data Explorer Clusters","uri":"db/azure-insights-data-explorer-clusters","url":"/d/8UDB1s3Gk/azure-insights-data-explorer-clusters","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":7,"uid":"tQZAMYrMk","title":"Azure
        / Insights / Key Vaults","uri":"db/azure-insights-key-vaults","url":"/d/tQZAMYrMk/azure-insights-key-vaults","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":8,"uid":"3n2E8CrGk","title":"Azure
        / Insights / Storage Accounts","uri":"db/azure-insights-storage-accounts","url":"/d/3n2E8CrGk/azure-insights-storage-accounts","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":3,"uid":"AzVmInsightsByRG","title":"Azure
        / Insights / Virtual Machines by Resource Group","uri":"db/azure-insights-virtual-machines-by-resource-group","url":"/d/AzVmInsightsByRG/azure-insights-virtual-machines-by-resource-group","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":11,"uid":"AzVmInsightsByWS","title":"Azure
        / Insights / Virtual Machines by Workspace","uri":"db/azure-insights-virtual-machines-by-workspace","url":"/d/AzVmInsightsByWS/azure-insights-virtual-machines-by-workspace","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":5,"uid":"Mtwt2BV7k","title":"Azure
        / Resources Overview","uri":"db/azure-resources-overview","url":"/d/Mtwt2BV7k/azure-resources-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":1,"folderUid":"ee1j401ncao00e","folderTitle":"Azure
        Monitor","folderUrl":"/dashboards/f/ee1j401ncao00e/Azure Monitor","sortMeta":0},{"id":16,"uid":"xLERdASnz","title":"Cluster
        Detail","uri":"db/cluster-detail","url":"/d/xLERdASnz/cluster-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":13,"uid":"defenderForCloudActiveAlerts","title":"Defender
        for Cloud / Active Alerts","uri":"db/defender-for-cloud-active-alerts","url":"/d/defenderForCloudActiveAlerts/defender-for-cloud-active-alerts","slug":"","type":"dash-db","tags":["Alerts","Defender
        for Cloud"],"isStarred":false,"folderId":12,"folderUid":"fe1j402xef9j4d","folderTitle":"Microsoft
        Defender for Cloud","folderUrl":"/dashboards/f/fe1j402xef9j4d/Microsoft Defender
        for Cloud","sortMeta":0},{"id":29,"uid":"c0613871-ebb0-4a2d-b071-f51a851f375d","title":"Full
        Stack AKS Monitoring","uri":"db/full-stack-aks-monitoring","url":"/d/c0613871-ebb0-4a2d-b071-f51a851f375d/full-stack-aks-monitoring","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":28,"folderUid":"de1j403tv3rb4f","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j403tv3rb4f/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":20,"uid":"QTVw7iK7z","title":"Geneva
        Health","uri":"db/geneva-health","url":"/d/QTVw7iK7z/geneva-health","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":27,"uid":"icm-geneva-canned-dashboard","title":"IcM
        Canned Dashboard","uri":"db/icm-canned-dashboard","url":"/d/icm-geneva-canned-dashboard/icm-canned-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":21,"uid":"sVKyjvpnz","title":"Incoming
        Service QoS","uri":"db/incoming-service-qos","url":"/d/sVKyjvpnz/incoming-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":30,"uid":"kubernetesApiserverDashboard","title":"Kubernetes
        / API Server","uri":"db/kubernetes-api-server","url":"/d/kubernetesApiserverDashboard/kubernetes-api-server","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j403tv3rb4f","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j403tv3rb4f/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":31,"uid":"kubernetesEtcdDashboard","title":"Kubernetes
        / ETCD","uri":"db/kubernetes-etcd","url":"/d/kubernetesEtcdDashboard/kubernetes-etcd","slug":"","type":"dash-db","tags":["kubernetes-mixin"],"isStarred":false,"folderId":28,"folderUid":"de1j403tv3rb4f","folderTitle":"Azure
        Kubernetes Service Monitoring","folderUrl":"/dashboards/f/de1j403tv3rb4f/Azure
        Kubernetes Service Monitoring","sortMeta":0},{"id":17,"uid":"_sKhXTH7z","title":"Node
        Detail","uri":"db/node-detail","url":"/d/_sKhXTH7z/node-detail","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":22,"uid":"6naEwcp7z","title":"Outgoing
        Service QoS","uri":"db/outgoing-service-qos","url":"/d/6naEwcp7z/outgoing-service-qos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":23,"uid":"GIgvhSV7z","title":"Service
        Fabric Application Overview","uri":"db/service-fabric-application-overview","url":"/d/GIgvhSV7z/service-fabric-application-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":24,"uid":"sli-insights-geneva-customer-views","title":"SLI
        Insights / DRI / Customer views","uri":"db/sli-insights-dri-customer-views","url":"/d/sli-insights-geneva-customer-views/sli-insights-dri-customer-views","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":18,"uid":"sli-insights-geneva-overview","title":"SLI
        Insights / Overview","uri":"db/sli-insights-overview","url":"/d/sli-insights-geneva-overview/sli-insights-overview","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0},{"id":37,"uid":"mg2OAlTVa","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVa/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":32,"folderUid":"ae1j483j9xuyod","folderTitle":"Test
        Folder","folderUrl":"/dashboards/f/ae1j483j9xuyod/Test Folder","sortMeta":0},{"id":36,"uid":"mg2OAlTVd","title":"Test
        Dashboard","uri":"db/test-dashboard","url":"/d/mg2OAlTVd/test-dashboard","slug":"","type":"dash-db","tags":[],"isStarred":false,"sortMeta":0},{"id":25,"uid":"duj3tR77k","title":"WarmPathQoS","uri":"db/warmpathqos","url":"/d/duj3tR77k/warmpathqos","slug":"","type":"dash-db","tags":[],"isStarred":false,"folderId":14,"folderUid":"ae1j40330p1j4f","folderTitle":"Geneva","folderUrl":"/dashboards/f/ae1j40330p1j4f/Geneva","sortMeta":0}]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '10208'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-x1G4vObs3Wll4pduu2q9oA';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:30 GMT
      grafana-trace-id:
      - ff8723c85986234464ecca7839d224f5
      mise-correlation-id:
      - b4879700-a222-4d8f-90c2-4b24699d2f43
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504471.232.29.452638|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      content-type:
      - application/json
    method: GET
    uri: https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com/api/search?type=dash-db&limit=5000&page=2
  response:
    body:
      string: '[]'
    headers:
      cache-control:
      - no-store
      connection:
      - keep-alive
      content-length:
      - '2'
      content-security-policy:
      - script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' 'nonce-vdQOGd1jGSObDxA28VU6+A';object-src
        'none';font-src 'self' fonts.gstatic.com;style-src 'self' 'unsafe-inline'
        blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com dc.services.visualstudio.com;manifest-src
        'self';media-src 'none';form-action 'self';
      content-type:
      - application/json
      date:
      - Mon, 21 Oct 2024 09:54:30 GMT
      grafana-trace-id:
      - c5a03b779772ac5d1a4161ce8d053443
      mise-correlation-id:
      - c8def80a-485e-4c6f-b268-dd2a660c7dfd
      request-context:
      - appId=cid-v1:23ed4edd-8c1c-433f-a3a0-87361d034c4c
      set-cookie:
      - INGRESSCOOKIE=1729504471.456.30.237302|536a49a9056dcf5427f82e0e17c1daf3; Path=/;
        Secure; HttpOnly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","name":"clitestamgbackup000002","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:46:35.559306Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:46:35.559306Z"},"identity":{"principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000002-hnhqguf7ffenhue9.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1120'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:31 GMT
      etag:
      - '"1c000a2a-0000-0800-0000-6716238c0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 44BCFC6320594A088CA808D41D78800B Ref B: CO6AA3150220021 Ref C: 2024-10-21T09:54:31Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:32 GMT
      etag:
      - '"06001cda-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 6868C8E57FB34F249CC1C7611D2313A0 Ref B: CO6AA3150220047 Ref C: 2024-10-21T09:54:31Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012726224030&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sYX8c3gYllYWXVXlZyaa2-dCvSTyPA1Svfi5L6ofM6CRrFCYBel3sXEZHlAp1gpe2BtxvvcxpgBvwgk8-GgtNMOCbp6-yZs-UBUgO8r9HqU_LXJcJo_iP-CJlZrFD-KSLt16wOILRclS8aTjbspe9sKYByo6OlSgf_2B486PCwu5T8YCizt7NPQqKnoN4xSNyW7x6R6G1m7PPAzMt5gsASqUkwm9UdzIosCyPNC9WteJzgvAtf03R4r5nnundCp9YeDBmvECX_76AbI8jvGdprX1IB1-GTDgMRQsIzgPi2usoi6n6mfNyZw4Okrm2Ol1-plsuv8vp1s0-hNXsUVVPw&h=4stpg66mPE5p1K7bLXaTEwDgKDYgtthVOflxUb_vhQc
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:54:31 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012726224030&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=sYX8c3gYllYWXVXlZyaa2-dCvSTyPA1Svfi5L6ofM6CRrFCYBel3sXEZHlAp1gpe2BtxvvcxpgBvwgk8-GgtNMOCbp6-yZs-UBUgO8r9HqU_LXJcJo_iP-CJlZrFD-KSLt16wOILRclS8aTjbspe9sKYByo6OlSgf_2B486PCwu5T8YCizt7NPQqKnoN4xSNyW7x6R6G1m7PPAzMt5gsASqUkwm9UdzIosCyPNC9WteJzgvAtf03R4r5nnundCp9YeDBmvECX_76AbI8jvGdprX1IB1-GTDgMRQsIzgPi2usoi6n6mfNyZw4Okrm2Ol1-plsuv8vp1s0-hNXsUVVPw&h=4stpg66mPE5p1K7bLXaTEwDgKDYgtthVOflxUb_vhQc
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: F3F56CF0E63D4A74AF398B308A265C53 Ref B: CO6AA3150219017 Ref C: 2024-10-21T09:54:32Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013030634175&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=rZEJs140dTz-HKBhQTFZqHHd6fmtt4G16YFnTUMbLQDzUUkQDC8s4OT59_I6Ksao4LDqqtbCVlVutvY4mOOQMyOw-opbxJQcmtQRXKNqstZi_qY8nW-sY7pn1rTN1sYVhRQZIUkdesL7ligKLGbw2OksMG88U06Y_pRmxgVaTV01FJIHagLaD1qAwAXUrhI09C_ph2q1jJm-IBNQDPjFlOX2oo5vm3MIlCnwi59qzqKO5Uv9TF976XJS7B7h_nOE2Km6vHvXsNJ96pp4HmSVqcmsfGWuQQKHj_Zqe2e-JGv-Or4Y7RMrfOv5QgWexQh59RfYTxsfAaWi4ZS16eIhmg&h=AWgtbLMAcwKqtbT72No7eZkDI9eDCjx-8E9L5I9faVg
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:55:02 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013030790445&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=g5xvioyw4wmwByD_2aenaOWa03WOnOLs2Q4QRql3toDZItGAFZzIgL9amWw-BO3hcgC2mF_Pu7uqVrwzLZ0iPMz1j70t3wkjg4GY_VTg1hST49PhTk4B3gYceAjXXBMD0bXWFQmYlsPFC2LNJzO8cqm6U1i1rcYI6Zfb9kHEi0sIFNmc8lN-BXIyaMwQ2Rw7uYoNm8MYQXvDEyryyMtlPg0-RzwF7g_RS7muuldZgjDhYMkr9TT9ssn9q7GPUBzioMbxYC1Lr_Q_Fon6WVsYBGI_eAwT03frpXw4VZpM0HPT8GXsFU1m1JpBUhr22HGAyh1P7RIbRYrciDCUOM99AQ&h=1lRszY3EYDgYrsYM3dbUavWfehOVOglW8QUs_nCBQY0
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: F9224CC578324A96BD3A23BEC7D53772 Ref B: CO6AA3150219017 Ref C: 2024-10-21T09:55:02Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013334371253&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=MLWShPX3OtukTQKP8-yfppzKONx1T-kzFH5mfBCZKFhOckyWh0OIWW5h0AOdjiUbluGvXMBoF9Mt5YQ5xhz6VMJ78vJlIj-T_dIa2FHBxumuNbw125PnpXSFPwcGfnFHyypSXIuezOl0833YB7RJ6l8yW_QkCsx-VoJHW2f_yzjV8J8pIag2ixC1Ha1pRO4EolqJ57EhcmPdf6k7AaOsb0ocebMr-nFnI5W0dAOcEUMTciGBf_wW4FiJv1qS1kCPoRDyKEqpvqcmZUwRt09IGXPM62IUPk60wV2o9X1mn0dGz8CWuKNAiZ5j5gONpdge-raZsB7pRWJgG7pfF5bR6Q&h=1ojNbBu2jZwld0Che9tilEtKCIhfDbwVUl5o7plDtFU
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:55:32 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013334371253&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=MLWShPX3OtukTQKP8-yfppzKONx1T-kzFH5mfBCZKFhOckyWh0OIWW5h0AOdjiUbluGvXMBoF9Mt5YQ5xhz6VMJ78vJlIj-T_dIa2FHBxumuNbw125PnpXSFPwcGfnFHyypSXIuezOl0833YB7RJ6l8yW_QkCsx-VoJHW2f_yzjV8J8pIag2ixC1Ha1pRO4EolqJ57EhcmPdf6k7AaOsb0ocebMr-nFnI5W0dAOcEUMTciGBf_wW4FiJv1qS1kCPoRDyKEqpvqcmZUwRt09IGXPM62IUPk60wV2o9X1mn0dGz8CWuKNAiZ5j5gONpdge-raZsB7pRWJgG7pfF5bR6Q&h=1ojNbBu2jZwld0Che9tilEtKCIhfDbwVUl5o7plDtFU
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: A4D622A09ECC474D94F64ABB788C8CA9 Ref B: CO6AA3150219037 Ref C: 2024-10-21T09:55:33Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013638506951&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=MQXzA6hIQBR5AXSBLjnFvTzyidfqt8-1vHMsJX8CC2dpV3YQOTTdvmNi4aCm_OOASvVpABQz2-4OSGp5oG0XB9U_9-mdwyU_YgZEBshEFnx9YSukzUlBf-GWU__iUdB-Om2_bQwBnitfqYDVlU2d-vuG5s2HqYWlzESvqKyQ3yhHXDE__wN-1_3pakQGvIFWNlNCD1IVfgaeCNYokxDhVIOtM9ob9MRkOhajLDGvHqbPBQC3__NBqUub54RmOlghSF6j8foseXwYwFb8FQ-jIQAa_7muK6dfkDnzyc1rfMBVCfcmziUhqEYSe5DWNZTerUzbtv5XeBDjdHWs_v8LgA&h=AqTCLfDpyvqaxJNmCMGIUpUiV2420VvHQ9ucmInugb4
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:56:03 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013638506951&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=MQXzA6hIQBR5AXSBLjnFvTzyidfqt8-1vHMsJX8CC2dpV3YQOTTdvmNi4aCm_OOASvVpABQz2-4OSGp5oG0XB9U_9-mdwyU_YgZEBshEFnx9YSukzUlBf-GWU__iUdB-Om2_bQwBnitfqYDVlU2d-vuG5s2HqYWlzESvqKyQ3yhHXDE__wN-1_3pakQGvIFWNlNCD1IVfgaeCNYokxDhVIOtM9ob9MRkOhajLDGvHqbPBQC3__NBqUub54RmOlghSF6j8foseXwYwFb8FQ-jIQAa_7muK6dfkDnzyc1rfMBVCfcmziUhqEYSe5DWNZTerUzbtv5XeBDjdHWs_v8LgA&h=AqTCLfDpyvqaxJNmCMGIUpUiV2420VvHQ9ucmInugb4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 685AFA8753DE4D52AE0E8E8C9C1B3FCF Ref B: CO6AA3150219053 Ref C: 2024-10-21T09:56:03Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013941863897&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=4xeL9UYiYGWxuP_oClqDHfykQGTkfr1Pc92F1hoaGkafTUhzzVgbctg9rLO3Tmn_5MyQdA8AZe_Ym-T1tkT1vwm9bzqrOI1EZ_2k3q2C3MqjHz1MeQwl14qLNnJVJtf2n3syEAkN0y8I_9AwevqYKtqBk6hCCXqFiaPQz7Bu_9zr9rocEPB5gqSH0l_1y627J-9NaEJMQk72CTZiQBcb7-_6QTcFQpwsmgDFhOqq-HIb6qkyFoQHUIRicrqTaGFaXKa74zo9cbmrfXys6KCuNep7OWHdqOalDqWPVpastPAkfnSZmgbEBYW__5Io4TbNe5PAUcrhtCL53y18K0TSJQ&h=SP5X7MvBPdyO7NMTMP3bs-HI9zI_ixJ29nmOTISIFJQ
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:56:33 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651013942020467&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=Te2pGBKCJXRpsvWcdBPIoFUSHU7s_USXZodUQQn0bcpO4DzxMD_j5SWH-OX_zcJ7JbqkfRF8kliEWvnSKYiT_ITKB-8c4ENOfCye_1f1uqxDlF6RcG8Sfr8NeBuziNEa0Nj9TLvBENYMORexDKiHGrtRi1rwOryOEn6FdskxK0dJDyTnKzNoYWQDZaSXt5EOpGw54S8J0xBRQB0_I1CdlemNL0mqx6eXGAUQ1vCh9oMW6gvwIvmSnh80FC7jlPwjdDiFgRlzEo9wrMCdClW9Vlu4zFNIYYoRrbprju6XTlzAkoTV7spEQgbmi3luBNEpAPcnbtVZs6Y7btggU3dIpA&h=yM4iJZ8niNfdoKmT_xvKEkfYTK08iWF8I7p5aBAeyMU
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 9A06BA974FF74A07A4BFE35635D34DB3 Ref B: CO6AA3150219009 Ref C: 2024-10-21T09:56:34Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651014247870959&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=yMQD-yvJApVk0v42mNB126lcqWr-7P75tNz_6FSf6KARyCSnnSTQQWr67LpcVYtxa0pP8Vg6IvbNK7lDVZ5da7V4kwHfb9CYT5UATjOLak9qGUxJBYoc-5vlbdGKkxU4vhZvZ1w-ZFI8AUNfswIb-zBQNZyHrXg_Piefs0hL_4rgVZx382J1ZvHBct4ODD9kuu2bdJEx8VBImXtU23s7lhS_EPSz8uRNAr-Ww5dJ1vI7qb7k2GT7SZneGlb7j1-6JvnKZOCJX58uA44vQPF_L0X3ic87S9gxXd1F_wY6kHG-Tjarai2wGls1SnthxLXARFpzg0oDg5qkQxOjECLV_Q&h=ar118A6Ogcm9Dp0E469jNKutu302raS2q8sh5E_DWZo
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:57:03 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651014247870959&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=yMQD-yvJApVk0v42mNB126lcqWr-7P75tNz_6FSf6KARyCSnnSTQQWr67LpcVYtxa0pP8Vg6IvbNK7lDVZ5da7V4kwHfb9CYT5UATjOLak9qGUxJBYoc-5vlbdGKkxU4vhZvZ1w-ZFI8AUNfswIb-zBQNZyHrXg_Piefs0hL_4rgVZx382J1ZvHBct4ODD9kuu2bdJEx8VBImXtU23s7lhS_EPSz8uRNAr-Ww5dJ1vI7qb7k2GT7SZneGlb7j1-6JvnKZOCJX58uA44vQPF_L0X3ic87S9gxXd1F_wY6kHG-Tjarai2wGls1SnthxLXARFpzg0oDg5qkQxOjECLV_Q&h=ar118A6Ogcm9Dp0E469jNKutu302raS2q8sh5E_DWZo
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: B6541EF517B34972AD286A183D61F603 Ref B: CO6AA3150219039 Ref C: 2024-10-21T09:57:04Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651014551950999&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=UTJGyp9gpNe48bLStosoESf-qYS0GFI6fVSRRqNu4Ky7B9Gshh0j8KRqiEFJ3KNwjF88tppEIaihKPkEU5zdYyTvNtZo2SOPXT4D37eEQjiY0P6L9ATY1x6SxcGuIwvbyoVp19p_dk9OHMKmrSy-V34YBCtaeTt4yxXzVB1ToQP3b6irlgBB7pmdB75i5QNFHewIZZuk7HD_Zy3wKUhP6S81GzZoYqLyjc7YZbElHCyaut5d2Yj92iNpc6r9gOTmHC3WHRY3FLMkSGybsYupZJv2eCTdQ85n6kjmSTDs2WgQp3jWaOKW-iHNBQftd_CEok8B8fEOjCLGCgjyOFs62w&h=2eYJm10SDSPm8gvKIeidFaw_gqNMaR-Lapjw4oUBDcE
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:57:34 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651014551950999&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=UTJGyp9gpNe48bLStosoESf-qYS0GFI6fVSRRqNu4Ky7B9Gshh0j8KRqiEFJ3KNwjF88tppEIaihKPkEU5zdYyTvNtZo2SOPXT4D37eEQjiY0P6L9ATY1x6SxcGuIwvbyoVp19p_dk9OHMKmrSy-V34YBCtaeTt4yxXzVB1ToQP3b6irlgBB7pmdB75i5QNFHewIZZuk7HD_Zy3wKUhP6S81GzZoYqLyjc7YZbElHCyaut5d2Yj92iNpc6r9gOTmHC3WHRY3FLMkSGybsYupZJv2eCTdQ85n6kjmSTDs2WgQp3jWaOKW-iHNBQftd_CEok8B8fEOjCLGCgjyOFs62w&h=2eYJm10SDSPm8gvKIeidFaw_gqNMaR-Lapjw4oUBDcE
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: DB6898BA6C2948779B4F080CA9B1F548 Ref B: CO6AA3150219051 Ref C: 2024-10-21T09:57:35Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651014856752616&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=mLgqPD0AJrXhBfB7yBM3G_DAGYQmCPPor2C3IP12U75TnjK4GxE5I3-gv2j8cnhb93UueBIvxuNakSQAbyPayuc75WTskcUWw1bRe0OdPo9uSmQmectIaybWGMQoZYXEI_KkyFqDP377gQ2yJqO_AJDbarU2cVUseUErBGlpIQnA6Jp2E4iN821ikFE1bZONNsMEfO9GMkks2z55mI55iFr7OkgWetCzzjHa79JuTiRAmDo5UJfp-EQxE7fpwxHyL6cLjWYzJ4Me3OBOnKVWH3dNhSkxL9hKgOMZzoAb0BGM6NI2JOyOEBd_82ySk2H_sAy4JZzTOLnFyuY8gMXwew&h=tHFxesAQKcBzhqaLdp1a9JUInBk6zNjq0iZnpz-gSVU
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:58:04 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651014857377628&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=nR5nv31JDZR0mXg7CDY4pKqLQz_hOHRhvAh-WPcMmHtPNHb-6iPdEeBE-RydCrTqtURJ52h1QSCYxMZ3R_M2lfD2c495gXaDUMOMtM8db93V_U3sq8aXMQ_djgUQizgEm4Rmwv-lt3fK8mGEzRaqvEApRhq0_O9Teq-ZPxBUlF5G-vqqnLVbHIWiH3cyHxARRPfOrbLsKZpdq7hqcVjiUS49W49v5K1oXtcFpmfcg3yJvVztxrEzrrnkUd7m8wi1QSOSsVKe_uPtbPYkV92McprXmJbYzxEMUhPXTPJX3C5KlddMqg41I-MlkiwO1KAH3Onht0BqeNWxjbTsmnzoxA&h=SJTS61NM2gB0oAlf132KnnYQLRDy1zm0QEm6e8KgBq8
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 3C14344D7E5F46B9BF299D37056BE8C4 Ref B: CO6AA3150220027 Ref C: 2024-10-21T09:58:05Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651015162086179&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=3Emz_gBhpI1HRRKSOwp-T5158KPxBy1XxabwZV59IBwxir3XJap6XB7LaQa6GHbc4U3l0Dtm3360Td5N__AEm8xCN5AwAzHZs78zNJCGfu_GxnUHr8hqWUHIPnI1Aj78FvrXv7HEwKfVnIlhUWQJn0JeQBKeaFOmBsxvux8jXtXUWIgnJs_TfkOwHMfhR2a2VSASfWoB2yemvc4E_klBqiiO2Hpg6dziyai6aeYBccvOVjjbJTh0aPSmdIzuRfaoVKEQQYGI-UJXSaiqatl_q0ZYjeXNfHlSuJQjRf_2OmBUk1a3eYSGw0DzSAFeWnEmospbvii8actR-uEaK_k7_w&h=gadjtZbSffv0YqK3Tm_Vuz17XYFbVdkbEZnmGLHlEQ4
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:58:36 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651015162086179&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=3Emz_gBhpI1HRRKSOwp-T5158KPxBy1XxabwZV59IBwxir3XJap6XB7LaQa6GHbc4U3l0Dtm3360Td5N__AEm8xCN5AwAzHZs78zNJCGfu_GxnUHr8hqWUHIPnI1Aj78FvrXv7HEwKfVnIlhUWQJn0JeQBKeaFOmBsxvux8jXtXUWIgnJs_TfkOwHMfhR2a2VSASfWoB2yemvc4E_klBqiiO2Hpg6dziyai6aeYBccvOVjjbJTh0aPSmdIzuRfaoVKEQQYGI-UJXSaiqatl_q0ZYjeXNfHlSuJQjRf_2OmBUk1a3eYSGw0DzSAFeWnEmospbvii8actR-uEaK_k7_w&h=gadjtZbSffv0YqK3Tm_Vuz17XYFbVdkbEZnmGLHlEQ4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 8183538986A24F809670F32781B9C5CC Ref B: CO6AA3150220023 Ref C: 2024-10-21T09:58:36Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651015466840526&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=oL4uztIoOJjkB93-NceHGsiOj6KSIALOFXmJX2AvnFw295SFrf_DK6gOFHVGq2zBYxBSfGR5tQ5WaQmAufJo0Ces0-cxbOjW0ly0JK8SLevhKloi-eb7eSXVvVRgxZUatmgh7-6IiSN4uAgjmvumbIv-rZmJhii8Ge4FJaiM51Fl8bPAjIlZAWmoqimLZumKqp0_Ubzs_5rKlEgrdD0-ZQWJfX_QlLSYY2-9nkQJmqObFjUsMzqIHfx1UWfsFkqi16AxKsudQczZL-bAKKz9cEZ0zI2cK7KQsRtOPHlVJWGo4jTEVNbKgpGKuyIzLn0mn3rX3gDQh9_SAOO31xx1lg&h=ZxbBOD7eKQZ30TSCyCTVvuDZy0wj5b9K9vo6Q1ewxQ4
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:59:06 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651015466996843&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=TUyDs4qkuetnMBvo6kFeMey7cTCCgTWOVaddCHj0RdJptkvJqgsBi_vGGWpUmD-8gTaECUnpAKIBRNMBjg6Fcp_ILe-sO1apxz3nM0OJbl9wPdLGegh0PvzlSmgVkDpn4xecRg3FxubdEkXQG2e_NGUu1rPd6e89-O8wfRJ_LgZz11B90PUwRvSqFsp4Cqj4abZV1uf4MvN8g8RDx-HxiIDiDvVD6qqTyGEn4x7LzxUONLNBm8Z5AO44iag-qKNMQudImVmqU6X6lT8DiOK8c5xFhc-KS1pVjznneZ_0TO8aA3d7k9JNqb9fPGc9wio-3OAPGi55064AMJPf65Paaw&h=WVHX7X4Nw3ttuyugckzM0wf5vjDQo8kS_lEJPHPIE1o
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E8784A7A0BB349E887540FDD0EBE0B87 Ref B: CO6AA3150219033 Ref C: 2024-10-21T09:59:06Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651015770345540&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Mm5_rRRYlemcXmCrAlYI0sJHqdXU68T8QQXVbAFIhqLTSmhQhqrmHL2n9VfWv9g6pYetisH2nyDzUcGV8AsOqDe0Mur1mqhBGqNpdRw9K0gK2thiI2E6VWIznbdEudgT713K7CjVnjbxybCswQzbcYaVzjdf_9eKiR4lm3lS6KQx10qwtbQSGeQZP_uUrEZgzt6a33G1b6gT9I0IiETBAEJDjFYCxUp0T3V-hpMEUto2Gabl6Ui5nsVoJfhh4idZUwpzT00nK5JHU2uD2JaQB5tebFxs8W-qkGRuk0v4cLbgy7icNyHxkHx8YB1vwTALnVstUYmR4g2QGAIDlTEpVg&h=D1fs6Icx3zPl0LWKBOvlunWD4kax808nFahiMAFU3Nc
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 09:59:36 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651015770345540&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Mm5_rRRYlemcXmCrAlYI0sJHqdXU68T8QQXVbAFIhqLTSmhQhqrmHL2n9VfWv9g6pYetisH2nyDzUcGV8AsOqDe0Mur1mqhBGqNpdRw9K0gK2thiI2E6VWIznbdEudgT713K7CjVnjbxybCswQzbcYaVzjdf_9eKiR4lm3lS6KQx10qwtbQSGeQZP_uUrEZgzt6a33G1b6gT9I0IiETBAEJDjFYCxUp0T3V-hpMEUto2Gabl6Ui5nsVoJfhh4idZUwpzT00nK5JHU2uD2JaQB5tebFxs8W-qkGRuk0v4cLbgy7icNyHxkHx8YB1vwTALnVstUYmR4g2QGAIDlTEpVg&h=D1fs6Icx3zPl0LWKBOvlunWD4kax808nFahiMAFU3Nc
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 843DC60FB9414C2B855BAB1392B7A6D5 Ref B: CO6AA3150218031 Ref C: 2024-10-21T09:59:36Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651016073032498&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=RXqdPeV9wnzDcHQwTckoarqAQVnOXkYSN47YaXdBXYr06tAynVtkRYA7gIRge2eQ6O3xqhbKCzLJdiO3ujnNNWnpt3bF8EEfimeemLBP6Fhs5JZTjr9HZqQ1Sf4ERnUwZmL4wnkTP3KFsc404_xwYon_p8ShtotrShgkkGsFcZscI-Jr3jyItUf5dfa48l93zNs4AYqFZb3wQvm3DcUoWjY2SZHk0kTTF0Lnqa1r6CATTPY5gQKup5SoUtQKR1ajF8p-X0ncq_M99czS8pJraXEm7W2iGPA6xY-iEWojSbEm5fax7ls9sOaU1wcyv8eawOwKY4Lmki4tW7WMAXHYhA&h=6xBl7pIU-DgxRFmAgTHwpawWvPn_56tVMA_y1nQBTYY
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:00:07 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651016073188733&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=NTk00OH4mbxvoJQaMmDPEmu1h6__LiyC3ZiZhSMjJVDLd3DsS_05SF4Z0nodjyJ8LfjM46SjPlWf9mCj_-Ro_6qIHqrHDbrrrvD2ylrrqmkhCR-KxoEGtBelC2UsU78ve3y9zY84RwH6Decu2IN9AZ91qiOqQJY3N7R2_bXjiIR_iWGYW8_JwnYtjjVDOTtt9xi73Ll-o8r1Kggr7TqezXLmGJc1yTsMbBssB_JDdjkrTffWu7xdX1kOpWwRmOIDTabMFZ4hCzGl1zeU8FLHPtzkYTJfRricMvcTVSxuRmHzKasXjNuF4RjNNZgyycMcZkF5fytUu5e3_6czNUPd2A&h=7J-hh6dYAuOeH6sfWiuXj9Zad4h4Qs6V6XhsHRAOPzs
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 6E37D26DE90044F4ADAD1DFCDFB10C3F Ref B: CO6AA3150220027 Ref C: 2024-10-21T10:00:07Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Deleting","startTime":"2024-10-21T09:54:32.0572361Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651016376957476&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=PSPOtOD9WGlTsaIQFR5-hnJqCKU5DxJSV1fkD3zVn8DpXV74zGDUx4lnXLsnULI2QjtDKYflBIGvo7EWR1aiW0FjhMGSGfR43rb0fa2ANvjON8ZtEOlD-sHbdGW9R03OWIGQxJ4RHu_JWkaM878pNo1D2Odl0he_yvldsp6Mk_gdM4vCcbCzKgiOgxpkMVM_M48fV-XTs2BwVd-KtBr5xMBlG10xdgHPPyFFXrG0w8rKWH1CU_uhIsYqkXRWup7iLQ58R0ZHx_hoz86VyEdyOhvVGfC5jbBmM9-r9LoB0PcBoLg0VNsXxjebmcTqfzRtSI0AZmlHodJ_gnfN_YAJNw&h=TqPxLYbnQ_R35JUKAmwwKu_k2kMDXuKMXASp8X8BNkE
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:00:37 GMT
      etag:
      - '"0500b351-0000-0600-0000-671624d80000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651016376957476&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=PSPOtOD9WGlTsaIQFR5-hnJqCKU5DxJSV1fkD3zVn8DpXV74zGDUx4lnXLsnULI2QjtDKYflBIGvo7EWR1aiW0FjhMGSGfR43rb0fa2ANvjON8ZtEOlD-sHbdGW9R03OWIGQxJ4RHu_JWkaM878pNo1D2Odl0he_yvldsp6Mk_gdM4vCcbCzKgiOgxpkMVM_M48fV-XTs2BwVd-KtBr5xMBlG10xdgHPPyFFXrG0w8rKWH1CU_uhIsYqkXRWup7iLQ58R0ZHx_hoz86VyEdyOhvVGfC5jbBmM9-r9LoB0PcBoLg0VNsXxjebmcTqfzRtSI0AZmlHodJ_gnfN_YAJNw&h=TqPxLYbnQ_R35JUKAmwwKu_k2kMDXuKMXASp8X8BNkE
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: BA8DC5B992044A14B45F57FFEB9963A0 Ref B: CO6AA3150220047 Ref C: 2024-10-21T10:00:37Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0?api-version=2023-09-01&t=638651012722202861&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=TDbpOUDxjQ9KZYNxJijGWptfA4ot5u1C0zuhYLcAK-hKCEyCUjKlgkYyXavJ3PrbSFs_NW5T7RDTLPGh2hr0J7Gc4K_v3LXUUICpZfrSFMKbB9aWR6levg2HSjQ6MIYg-RyhruJ4Oen5JFiii2CXod_s6vBfuL83Atagl9zfU40QxHTTFn_8mKedvAbYkuIiputqVXxtpOhfWi7Q2Kjb-CZAIrKWGxUNSb9i4wd_U0lDafttRzZerXQqzw6ifJoUmmL1HbKXrakmO2n1duyeHfKkf9sKlGvELDoHbZBNp27HfnNwnNvcz506o5FrVzP18Ascajo7DLUOJVYsK5OF7Q&h=LU0SF2col01J2JOCs6YGsyeojAtjm3cdYQhj0seSjlM
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","name":"7703479e-1f19-4a14-b151-e4008f978825*523A1D096BC1D703AC2BD1E45C2B0B00D60711FB3A2B982B1F7C7F83977858F0","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000002","status":"Succeeded","startTime":"2024-10-21T09:54:32.0572361Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '538'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:07 GMT
      etag:
      - '"05008452-0000-0600-0000-671626600000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 1833CA7AFA5E48EBB65DEFCCCB7E7637 Ref B: CO6AA3150219019 Ref C: 2024-10-21T10:01:08Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'c4e842c7-8d1e-4c6e-a2bc-29210126c085'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:49:13.9274144Z","updatedOn":"2024-10-21T09:49:13.9274144Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:08 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 67E74DF18E9046D4AEA84915C4CADCF5 Ref B: CO6AA3150219025 Ref C: 2024-10-21T10:01:08Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"c4e842c7-8d1e-4c6e-a2bc-29210126c085","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:49:13.9274144Z","updatedOn":"2024-10-21T10:01:09.0809258Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000002","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000002"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:10 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: B0729244B9FA44028C3E81250DCE55CB Ref B: CO6AA3150218023 Ref C: 2024-10-21T10:01:08Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: '{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","name":"clitestamgbackup000003","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-21T09:49:17.3971887Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-21T09:49:17.3971887Z"},"identity":{"principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackup000003-dmekg2hfhugfcudt.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '1122'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:11 GMT
      etag:
      - '"1c00113f-0000-0800-0000-6716240f0000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 913384D787CD40DDA54574E5C45B5186 Ref B: CO6AA3150218045 Ref C: 2024-10-21T10:01:11Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003?api-version=2023-09-01
  response:
    body:
      string: 'null'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
      cache-control:
      - no-cache
      content-length:
      - '4'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:12 GMT
      etag:
      - '"0600d6da-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-providerhub-traffic:
      - 'True'
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 77C40E858BE04782A33297CB36A228B8 Ref B: CO6AA3150219011 Ref C: 2024-10-21T10:01:11Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016732463867&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=V6y6sTTvzfnfEuihg94_XJ-yz-uJ_IK91vBNIQVBmjuQ9mDrR1lXifNznDDaU7YIGCypjUCpgvL1hPtEqZZzLX6RVQBWWCfyLsN6_Fit7sy3WOxOrD5nDIfZJNU4UuKKAIhHvn0OKGx_-bI_PvN9ZMKlb2dYg-JtWzUE-rakd4SaKOmR4RNbHw-gBXSsqCmMvuZFl9C-NkVvHb1FsEHP_tJYC_finiHi9GdZcBQxPxl5s7I6S4dB_UKcltCanHT_HodlOW-pocgJIlEBWc4MciahZpci_7vgPkhGucgc09IsZVm5yM6daLMW56jz8SFh1NfIxugXlOjWzifl9tDYcg&h=jMomP9Oa5kqnUFzXojHuw3FT8e0P86gJc8lXZ7SP_GA
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:12 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016732463867&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=V6y6sTTvzfnfEuihg94_XJ-yz-uJ_IK91vBNIQVBmjuQ9mDrR1lXifNznDDaU7YIGCypjUCpgvL1hPtEqZZzLX6RVQBWWCfyLsN6_Fit7sy3WOxOrD5nDIfZJNU4UuKKAIhHvn0OKGx_-bI_PvN9ZMKlb2dYg-JtWzUE-rakd4SaKOmR4RNbHw-gBXSsqCmMvuZFl9C-NkVvHb1FsEHP_tJYC_finiHi9GdZcBQxPxl5s7I6S4dB_UKcltCanHT_HodlOW-pocgJIlEBWc4MciahZpci_7vgPkhGucgc09IsZVm5yM6daLMW56jz8SFh1NfIxugXlOjWzifl9tDYcg&h=jMomP9Oa5kqnUFzXojHuw3FT8e0P86gJc8lXZ7SP_GA
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 68B707B94F7A4EBAA7658E417B244408 Ref B: CO6AA3150218031 Ref C: 2024-10-21T10:01:13Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017036266767&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=Lvl-cMckTj0bK5iYP-lJkho2741O8RLuulM-5XOQfl5igQj82XCRyLHorKk7WnlHli2Cy7SLrl5pFDBTig_SRuAKbpJ7PnSa3yyiBp48nkX2feieSCto6qUhS-pGIVBBhciGAqAkra-6ooKa8jZfHs9tIsk70lXxw5AS2jc1J6octUxKjQydwZ-seqa3SPZNaRa5SVXAcsWtIVpsKd-kTnSYGnTsghG0gQ_yLDzpRI7V9Vyja4rf6Orl0oFrOuT5enTg374KyyVIQE1O5vJnbnXeRTxeFnXWQYpS1GY9fKxTiFPi_k2O9cq56FQ2PNfC0JExLKuwL5925tKvC37olg&h=nEVXUdxzh7UJVxgmUNMySRA5FNThTPug-NEk2y4zfZA
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:01:43 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017036423067&c=MIIHhzCCBm-gAwIBAgITHgVxvH65_BmPrKxDIgAABXG8fjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDYwHhcNMjQwOTI1MTkzNzA4WhcNMjUwMzI0MTkzNzA4WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlHcl7gn1b6aLS1hLftgvWE8n-Z9liLRsNGgjYfyY_1N6TVDEHJTtctREIaCRDPEC-hePKBe7OS45JIAD6cl5AGU_dQlGd-3bBZeVfAPJFUnC910pwhDca2OXlf4LyB1KSofXaA4xDB6G7cHXRld_URCnol2LHQEGox0vBzaPz30AUB0ZhAatZgqhXy5qnroV3zbEZC3m4qLDSnG8QNEnw8Wv5GpYH_MxK9mgDPwoIObeDBnjtQonKzvItZ8jXwF-wEmcVAnhr6Dvq3rWdBY9616kXvQ7E3eEvGqMn9W_NZTAqlaanfaACfITkIJZkgsSoJGw5USCMC-vzAb1Ms0j0CAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CTDJQS0lJTlRDQTAyLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA2LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQkwyUEtJSU5UQ0EwMi5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNi5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JMMlBLSUlOVENBMDIuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3J0MB0GA1UdDgQWBBTELag1gS_F07Xj1us9l4ySYrHYYjAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDYuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBTxRmjG8cPwKy19i2rhsvm-NfzRQTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBABJx3Gb3LtjBZ4x70SioNIk8ap3qwt2DMEu9dXEhi28jFB87BBsTCkNeuhGlLzHm7Ykx6xpUjJp4F2_qmJKrQjDH4U0VYT_yc8Ow5mxrFJcewgTXzwmwqXOodok5WWOUVP4Mmdp_O_3je1dVgw4TrdrypIZImBn2jVDrXQ79fFXTR-Td0XMOtWPDwreoMRagD769QW4hlGtVaZCqOAzyomfSc8PhDzKhllbZQrmP-UgiLU14SDsxwq6AHG413ClcJIDGfEsEKwlUyIIAKHDwSdbO41Zs7ZQG5k_eBlGTkr-5Zye8vT7OeGf1_mGZSme6otyTUL_3-6gJ282qCPXoflc&s=SP4DdcoaHgIAJSKpp6TJVK7zNeduAoXODmkHnIRQHK17ZAqfGiJQKdxxGfuOAnfcDj4A-Ti-3kSTwsADKtNxQKo0g89CHO2veNKRUkVH7hxQuGN75m1nuWzEWGDKybMJbEUCf9DtVIMzpXhgY0yHrARAMeMZB-62QlHvsjGWM8FFRsUw98ROsqOOZsL2pBdu6tWLDRU6LXZRXORYHfQv9CLmOS_4htZHdH1mYX4kCju2KvFPfwc_UirzSyiuvq0qJaZKhJ0QFm2TDEuJA6dSi2MlkzJCAMeGhRREjV8V8X5YNcdKrzw0ZzSiCMjxfM-kTynCJCl_4TRB8nBLJITChA&h=8Dejut2-_Bkx0qJ51w-TULRytpQ0MY4ImrOE6gTX5LA
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 64683165E22F43068FCD08C5951FC615 Ref B: CO6AA3150219033 Ref C: 2024-10-21T10:01:43Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017340793169&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6aQAfwHUvNYBd8az_Tv1RHtitwTviHRS-nJvKX2OKnKNOByiBYPnzIcre6IYJaamG8Kn8tmv6psLqWVn6vS8JGGIalzDMB9A41ExtMjdLzzfJj-tyq-0BaCoOmHZOsJPUqJX0aj-YU8ElVoacA3bWj6JpAWIyC7jENDgNHz6bpa8gpRbK4piK-WhE_5CH3LV_1mqxWcB8Uo-L7zjo6Of7eBKy8_fDDbQ4hc7rBkI5pZowso8TLsnD7Tp1vh80ZAQ9Y-StKAHGx7shTFN5WEdeas5REPQg7gGRaGhD34pdKNedwtQ1Y2rbrxESQaeRNuQ-0PXWk87REI0igjAzh93cA&h=NbqzN56hz_dceVK8Hvt-lUPbNwqpLBhBmMDfxCjwz2g
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:02:13 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017340793169&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6aQAfwHUvNYBd8az_Tv1RHtitwTviHRS-nJvKX2OKnKNOByiBYPnzIcre6IYJaamG8Kn8tmv6psLqWVn6vS8JGGIalzDMB9A41ExtMjdLzzfJj-tyq-0BaCoOmHZOsJPUqJX0aj-YU8ElVoacA3bWj6JpAWIyC7jENDgNHz6bpa8gpRbK4piK-WhE_5CH3LV_1mqxWcB8Uo-L7zjo6Of7eBKy8_fDDbQ4hc7rBkI5pZowso8TLsnD7Tp1vh80ZAQ9Y-StKAHGx7shTFN5WEdeas5REPQg7gGRaGhD34pdKNedwtQ1Y2rbrxESQaeRNuQ-0PXWk87REI0igjAzh93cA&h=NbqzN56hz_dceVK8Hvt-lUPbNwqpLBhBmMDfxCjwz2g
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2FC9EABF31EF45D8A7333514FFAAC2B7 Ref B: CO6AA3150217051 Ref C: 2024-10-21T10:02:13Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017644587598&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=dOIO79ipVCSmBo7031SVsv09F0CdhOOElCi7KiQjFhJBlEVoNUBlLPqa-K-jIuep9gDPhR3g2ekXqgcSBOFFy9DBfhZlgftHhKfj5HJak4fe1NFwLkyKBEuOMidBP1s3XNZvUdEY0qkhQiCElxUfEiv-e1BLCEcANvY61k2hplm91KhtfGo1u1ypinAOcdlLfEUFmK0V6V9RdR6XO_PIDI-KjFhYlk1ItOCbmQ1A62ddiGa7Hbj1HZdAhaBMALtLRfgGFYf8uzRCFgHZ4R72NKQCKQKJeVT2jSzxBnB0Xpc0tQqnKfEDYBnalzQWup-IAbscCvFB8TzJ4qhNVfA0ww&h=pzyU_drTXNbZEgVGM6hSTwrzGt2o6GEjGxa9sbn-Qds
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:02:44 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017644743858&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=3GMcJU8VXGzbU7LJ-WiJfbGCUYWIJxGbFgFKxCQ8PNV-b1awrav8-JY-l22P7Gg6nRp_eEwR1NesX3KaNtQk6795KFfwC1StQ6PNp90QnG3Q4PqIqiUSxxVVenJjfQGBCHH-gOG7W-ALsrXa954_QG-wkHxYKnqhDFeVPLNF8uhFAM1ZxDnO9YOZ9p9hyc4x_WGi0gVgjoKwYdKY6NmuCLpDYB8oc-p7TS4uR0MROkTQAYyWFutDngEZgGfTd7ZaboPD4ufS4pBLE8vGsgY43OFCW1WfjS047fLQJq3u_ZgljIB7dyto0fg9TDpwUih5a-Ziw_LtqtYiXoAKJvL8-Q&h=QO0OHmLe9taasVwjTEGvUJFXzfkNrPdecEOmgtXY4nI
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 43AEFA87936B41DB91F471FA6E1AB07F Ref B: CO6AA3150218023 Ref C: 2024-10-21T10:02:44Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017948478756&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=6sF5OGOUeOL8dEMa4Eh37k1EPEgKd0y1Rw64sKyRypwi5BKZ4tLio4MuBUq6ssFYjXABkOsoHZEsXWx_X9X1JU31jetAfwT-B3I1-TvDlSBs4XIe-T3abMDU4RADxhH2uN2IcoOmvoTgB2qsi1lsGWZzQzYBmnL-jjPKc8MKJr1MO2dKu1enn2fOY8AwlrIKmaMNIkJt74piPXfGOpwP7Q6-2AKrHbxcWeGEHYxyp2lrW6IO7-8cctfh08BWCS_SUABOWL-lMmKwyKFGzeJTVtpzzCj422Ob43sz9KHnklID3ydBoWUttRmr4n9h16NDbMmirPx6y9Sa1UDsaATVHw&h=6V4owboFv_zbEZCZg5EDtaOVY7t-6P6Ll-q4A1Pixr4
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:03:14 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651017948791429&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=agdLzdvIGJyE9FA2YoJmuwbY_CCcpNPRzTJvL02cSOkU3GCJFyHaQsaHSQCz0BNIYyXZJALOybrBi9KSxgGHc9ftccq2Jaup8TooYA6RGKrdHNVBWmG1o6-0n4qehgxVnqpaSI7dacdkKDzwtnW56sUJlxMBxJ3_XNHQXGLm1Cl_nEH49qnzHN6LJkMPBKyDgdzlPJAdZmQqvKAqW2BWuRxKz2Bo0pFKCoo8RYjkEp7g_Dmn8mrBvcBhG-PPF_W3RT-Mz5jTClUl9hD5FvZxJKUFwSU5DF5yweVcMcx21ROkp3NlKfgvE2a7tKAueP8-Wu2tkFDQWZvw2JDjiUdMwg&h=VL9rjvkJX5DqhrpIZYPtK4iVxqfN_3AotOlxH5vLj8I
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 91728E46521344EB8EF455B44F45EC17 Ref B: CO6AA3150217035 Ref C: 2024-10-21T10:03:14Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651018253012164&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=NhakmrTmtqXtPLbMbs_tUkslkpb0jm5agUkLxtYl8WDalr94g-y_fIW7FzDl_q49fz_FfGAaaSARK7zNSZPzPYNmV-9mRSu2yz7DCfG19Quq4qpxkmMeceLssfvE8EPXGreMF_hPW9Ow7Yvpn0YI2HFzKkYnftmBKWHUix1vFUx1uDAQOMEaYOg_j4DdkK2agA1G7kBVFq2MoptWiCjtHRGPdERHRTU3ho8Dw0LfDzYy73AKTjb_gN2obCJR0-l3gUNlBd9b-hT2rbF3GZQSVzj_JzTbaOSDN0zsjzo7DSAWqbySkZd6p3nnTc5S_KlFuqVlbMs1zVSfja9SniyWDw&h=IROA7gHxs-2ISMni9433C5-quFC7TcXQO91qDwEgwRA
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:03:44 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651018253012164&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=NhakmrTmtqXtPLbMbs_tUkslkpb0jm5agUkLxtYl8WDalr94g-y_fIW7FzDl_q49fz_FfGAaaSARK7zNSZPzPYNmV-9mRSu2yz7DCfG19Quq4qpxkmMeceLssfvE8EPXGreMF_hPW9Ow7Yvpn0YI2HFzKkYnftmBKWHUix1vFUx1uDAQOMEaYOg_j4DdkK2agA1G7kBVFq2MoptWiCjtHRGPdERHRTU3ho8Dw0LfDzYy73AKTjb_gN2obCJR0-l3gUNlBd9b-hT2rbF3GZQSVzj_JzTbaOSDN0zsjzo7DSAWqbySkZd6p3nnTc5S_KlFuqVlbMs1zVSfja9SniyWDw&h=IROA7gHxs-2ISMni9433C5-quFC7TcXQO91qDwEgwRA
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 8E7E00F574C943CEAABC2BAB63E05FDF Ref B: CO6AA3150220037 Ref C: 2024-10-21T10:03:45Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651018556638274&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=oMVHMUpdB42EZqCy7wlI1fUjlleiRf6PPZIas7OBXhvywLb7Q62w8gryM7XPxEqBJUyiaeAsyyODnkdVxPwo7CI8fVOcNryILIxwEQCMtYsqv9vn41lhEqn5NAWpi14aYI-Tv207JTq9suUd4_NjlgvnSuZDuGlPeIj_EuYz0B_hx7sHWGkECz4RR1nnsPOf4ko9_n-RvPGjjmBPWGXISff7r7QccVdvqI4XHiL_5mdboRLzfSOWWnbgO2-82wh0F8gGTLGeTXDYJ-xgDngzXyDNultz3jk11_rDdrhLJRT_RWLQSXglXm4_zojwvP2jGZL0FbhqWAfCG-XQ-0q4JQ&h=31k-fLgSDmDCZHj2TUrSdH-jZouJAmFpHhXOzzd8ji4
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:04:15 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651018556794549&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=YJMAvorDN-cXVYMf7r3fHZS3JWJp89WYdpjilFjgPSYZ9bkMAB4y1bP7JdPluCoIZOvA9U9dzcCVr2suJL-Y24AQZZ7rRJ286r8fsi3h8ejMRyVu5LDdrjFxQyY5Hv4DJJLfZyGRJqhcbojGd6avToOt6-Q2liRkpia_oUdHYbCZyBa2NhFlhY4exI0EFP0uqvlEQK_RFvWdRtYHAD3-Xt1vGvo2THy6M3wM3DYji8lwD9MYQ2oShawL5lgGdw7voEYvFnWwbbA85YvedpzVfa_Ox3ohNppyYQzin7EX8ZTruBimS-L-2BN0rfZuaSJqxioSsTvMja_VQ0bC5gojAQ&h=N35Bud5b7-GkySxlpI-mJfxKXbzBTNyl99QBjpeqBok
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 83E3495573CA47A8A6EC2EE153D97473 Ref B: CO6AA3150217049 Ref C: 2024-10-21T10:04:15Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651018862926694&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=dc01nZHP1R5CmeNBsvzUfJ_FpgxlmJ6lIqoR2DUsG13d0uWFBqX5SMQ8yxKODTKjuqsh-YW3YK_fX0gRoSe0vwuNLM1SmlW2j7xqTDk_UeUBCjqHXpSN_wbEXjgPYVIdAIIeAGxK6zJSOhnQFcXl79mFQ90dp7kjYmOPXGEaSgrY4_oyLcP8t_v2Q07nY6_snyimTiYThliJEFIwSom41bpHOYs-C-ypo-4EtOiR3gqTChrUIcpasMDkAtMbrbYRfylSoPghL8tJJXQEBmWH5gZfvUzXGTQABY6kRSHo6vkfll7rwaU3n9uirD9KHaPALCSo84WVnEB7QwBWfdNgFQ&h=qlaG1V28tZs7pgdGeqOGeXMAFKxwjbnG4atO6w94HBc
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:04:45 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651018863082953&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=ktPfB9R_4dXW1FWihqII68vLUq1gZw2ZKaBOpJvir3zO2XujhJ0lrVo6_E3RKEnhSuhSC-lNyigGU-bqTNkju7BEvctaU2nJSGj3b5rA42LJal6ieu2HH0Y1oE6BIAw4_9DA8t_PvnhdfgdhBXCkhKhLBt5-jwwYa-zkZtehhHYh3W_z2bpXrKZj3uGIjWxMKbPTkSGEsLUimMOmdD6IpKQgV96cd5myhPuQqp9TBwK7TKOBi9PAcibqRHOqIl2Cp3Ys6f2_ya5iMDYK61wk6LgBxYjFJiqVGkz9bJVgrvO-euirS9tfMyeiRolyjYPaisE4IiV3PuBpLeYLOA_E1w&h=183SOmYu4rhXHsXJhQ7zev6zX1Oruasl0TeizqZ1WkI
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 2A9C137FE67340A6992B0DDB3505C15B Ref B: CO6AA3150217037 Ref C: 2024-10-21T10:04:46Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651019165981420&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=UOBTDP-R5bo2N7OwhJqxmgvq8FEMbB0iJuW5gHMR0CF8eZQ69Zs7cEwnjIh1dVb0MQ14lsletqUiDtagY0el2yRDILgbQH2tB9CvHUme7CGWpIGBXURlnLJu4wNyV5TyMc94yqcyO0203WZrQBm31IoJstdHBZFF-_HSB1aIF59bioY92s-ZfmRtB_GpBgj1-tCI8RnBQzC78yXRx-_w3-cD6D1nHNtwzs_dCYrgxhtb1N0iE5KgNiCwYsYTkmrcy_t18-fFtHnRghW5u6DDM_OkI7XqybS558DtRufq1w1r1X1Yuj0wjoKHVK7XIO40io9xp82KArs3vrVtqgorfA&h=LBjmI6tL6OL7xkxvnIRmJuQ1VmecapRzFmONgxPozgg
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:05:16 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651019165981420&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=UOBTDP-R5bo2N7OwhJqxmgvq8FEMbB0iJuW5gHMR0CF8eZQ69Zs7cEwnjIh1dVb0MQ14lsletqUiDtagY0el2yRDILgbQH2tB9CvHUme7CGWpIGBXURlnLJu4wNyV5TyMc94yqcyO0203WZrQBm31IoJstdHBZFF-_HSB1aIF59bioY92s-ZfmRtB_GpBgj1-tCI8RnBQzC78yXRx-_w3-cD6D1nHNtwzs_dCYrgxhtb1N0iE5KgNiCwYsYTkmrcy_t18-fFtHnRghW5u6DDM_OkI7XqybS558DtRufq1w1r1X1Yuj0wjoKHVK7XIO40io9xp82KArs3vrVtqgorfA&h=LBjmI6tL6OL7xkxvnIRmJuQ1VmecapRzFmONgxPozgg
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: A6A0BE69799A4C579B664BA823E1521E Ref B: CO6AA3150217047 Ref C: 2024-10-21T10:05:16Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651019469378983&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=cm-jcGEqE1qHQ2GoTvXB4tMUDI_FUtpUalL33yoFf4L6n-N147f0eA7leoPk1Cx8cESz7ue00_fFLJtuJqSLUKmo4dKjZtTidXm-0KiUR9TcfyBjDNUqVmnq0A0aVoaPXkxl6s1VMcwxqHfWiCzOm7lqkml-9JZxqx_UzDcLJrpvRb2mgfkniV_8GCChtrZxe4Ow2ba1AVWFInVmDwDqwtpMnkMQkUqpUeAODoCTPesSuJHS1XDvTNB0pUHKmxwY2aSgbKPgVcn7eWEzQlQgY66wSVhANgAbD4fy2X4Vrm7UPPH4sa6kEhmgzUSY2ZpOJ4xY_ti183NDh27AM7zLjw&h=30_O9lshDzo8ef-9ZCa4o3DVtUYd_-7QuBKpYuQXVbI
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:05:46 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651019469535233&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=gbTr1DhX1LMeBYZ78zLI2DoIdCZfRy_vVilwZ12ajO4MCJuEJK3bcIOPNT2kMctE-B8DY8AzF-Zgw6C5t9b68TNefnxyDe1YXy5JOYkxCuz6zGfPvxbVM4cWyCFZPGmLLBVXX5tYTtGeyXulOVn8LsLn1odAGyhY4uSF3UDW1C6metgAJ3aI4uxgBnCbgKrh1Jxj-g-YPUGK8mS-mkC---U_ypEBAfASzhXK5as64Mjor456kNB3-_fSr24LLAMSsi1r_INkFFhjSaPXLv4IJEpM5Z7HflxdGUY8dUiQ8x8l5PAVgB1SAG2tsdGZQeP6QYSitQ2PWWG-Spl8UB5abg&h=BH5TemAxQCMmzSNLL-J63RMPJiCFeIsx2nNdqzsNYTE
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: ED9A2FAD775F4AE3952560D795DA8AA6 Ref B: CO6AA3150217047 Ref C: 2024-10-21T10:05:46Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Deleting","startTime":"2024-10-21T10:01:12.8164195Z"}'
    headers:
      azure-asyncoperation:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651019774086084&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=wR_P07kbqAuAWIagVjbRt7J734utB9x-a1ckYk69WeZazdld1Rh5__v00c-ZQ8y6Ni109F3nAZ493DAV0ZqA535z_POSUn0wW7SVAmKsQ0zNIQWzTohj3qqFT7dHFfQGEaxJaW-z088fMi9cSR-KhKBDFtESaXPnZZzeB6Rns81U3GAUcdFaFzzotNKyIeqyIf1xD1O5O6v1aAgHiH1suqNDfb3vqPadvCgoX_GUdu_ZMgREd0SMY2lsR2F2gfqylDEOzZZAlsjRM45ga_MR88WJr_lVsDy_QLKIAF3eoWRYpwy6YyG5OR7MQ-Gi7UfoIzKVWcP3zsaJr3lj5gO4LA&h=jmKHGxef5jayCSK2mBzDFrvtBlE9lwaohZty9rmPai4
      cache-control:
      - no-cache
      content-length:
      - '519'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:06:17 GMT
      etag:
      - '"05008752-0000-0600-0000-671626680000"'
      expires:
      - '-1'
      location:
      - https://management.azure.com/providers/Microsoft.Dashboard/locations/westcentralus/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651019774086084&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=wR_P07kbqAuAWIagVjbRt7J734utB9x-a1ckYk69WeZazdld1Rh5__v00c-ZQ8y6Ni109F3nAZ493DAV0ZqA535z_POSUn0wW7SVAmKsQ0zNIQWzTohj3qqFT7dHFfQGEaxJaW-z088fMi9cSR-KhKBDFtESaXPnZZzeB6Rns81U3GAUcdFaFzzotNKyIeqyIf1xD1O5O6v1aAgHiH1suqNDfb3vqPadvCgoX_GUdu_ZMgREd0SMY2lsR2F2gfqylDEOzZZAlsjRM45ga_MR88WJr_lVsDy_QLKIAF3eoWRYpwy6YyG5OR7MQ-Gi7UfoIzKVWcP3zsaJr3lj5gO4LA&h=jmKHGxef5jayCSK2mBzDFrvtBlE9lwaohZty9rmPai4
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: D6691321F30946A3B5BC2962A02360BB Ref B: CO6AA3150220053 Ref C: 2024-10-21T10:06:17Z'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46?api-version=2023-09-01&t=638651016729471593&c=MIIHpTCCBo2gAwIBAgITOgM6dTLGpzYZpvPtgQAEAzp1MjANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjQwNjI2MDEzMjIxWhcNMjUwNjIxMDEzMjIxWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPPPKY5bDN03KptFFhiyLIyn86BlrXYFIZWYXA-hY7_WbLyWN0IxcLIUBW_I-9u-YsXOHk9WPMlUYHIFPgHW7A3FsSGfl9dd6YGapKoSSw0NkTpNXM58R54BBgLp7AhiWzK15D9T-XELNSU4Wq9sEeA5T24kazcgS2MUkzELH0I9dwu7g0dwJIuIJkoJjEzg1b1Q3Ie5HKHHNbjottJn7Q5LBS-9QtQyruuwaNTgSJpCoi4PBKVIOTBYL_Nv1wecmKmfWcT0mnhQE9zjhJTbcoN9hKSvAMqsDHtxWUFZosiw3JKIY0zb59CrVGSuOhfN3qaarwN9EAlXLqc4ZyKpsTkCAwEAAaOCBJIwggSOMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRk_38CqdKjPVylWUR4uuqhbFGeHTAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwEwDAYKKwYBBAGCN3sEATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAFsx7FtYAzSo98T5ydNFa0ukjPZ6XCQc9zo7ldqy235P_zJAUkaNgCU4EGOzbZJDoMa8mAfhyukL_0GfPeApUaY2e44ZOzoYAkeEuDiwcs-9zoQ1fCyXhn0pCumGFXRilX9KjAPaYTzDvQMEllTy_ZViwTahuKaGtFVamZguBPdaeYC_0oybtTVNQCs8hGnffhNZOMASB-5pFs35MNxsDWTVIQksDee419jqpsbWLkh6rnanILO1O_ihwb-WpvRQByQ5NGpG1-z0MQ6nRpr9wWxUi-DsrVsD38NTMIPc2uei4Ivf6qnGRvOOj0fmsciWuTTEXMaD-5a81mGlzhZc09Q&s=d8JFRrsqd1lL_ejiex1-D58MrdE4A57sGvfRqzYtMRp6yT7MgEb9YAFP25653xrAWyCBUU7VESbwWUI61wB8YlVou8i0WfvypkemBvyQl8IsRinHu546-Y4bX24yFjBf-gl8ojGNU5_8AmaRRTsPol4L23HoSyhXn6ObfG3ILcO38oZeFMsXwEX8LAcrcP7hGYzxbQoL2bjKXLxrU269qgzuNJY1dTz9b3FvzJYN_-UX7WWzc8JPONqXolkfWylRpY_luWaEv5jvwGA_xpNLXbkN-iRvjbApMXqIj1vWrI50p7YHhpAdmJOUmGPtvPLU-xqb7RYzbWLQSIrLU1pe6Q&h=upwfzugNIcJsFfJTVno2aeIinMD-Fq4uH4osX66FBYc
  response:
    body:
      string: '{"id":"/providers/Microsoft.Dashboard/locations/WESTCENTRALUS/operationStatuses/14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","name":"14f49640-6f2a-40f8-85e0-e6e3cd55fc79*F4A3A9398A3189C7FC300CBD202C58DE1BFC465757D07738D334AD4617FCFC46","resourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amg000001/providers/Microsoft.Dashboard/grafana/clitestamgbackup000003","status":"Succeeded","startTime":"2024-10-21T10:01:12.8164195Z","properties":null}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '538'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:06:47 GMT
      etag:
      - '"9b007592-0000-0700-0000-671627b20000"'
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: 5ACC700031704E48B2D7EBD350980910 Ref B: CO6AA3150217035 Ref C: 2024-10-21T10:06:47Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId%20eq%20'045088f0-e62b-41f5-a1c9-7a12b44f570c'
  response:
    body:
      string: '{"value":[{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:51:24.9677229Z","updatedOn":"2024-10-21T09:51:24.9677229Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '869'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:06:47 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 07AB6FEA1F2C45F18323DF0A8A8840DF Ref B: CO6AA3150218039 Ref C: 2024-10-21T10:06:48Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana delete
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --yes
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004?api-version=2022-04-01
  response:
    body:
      string: '{"properties":{"roleDefinitionId":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05","principalId":"045088f0-e62b-41f5-a1c9-7a12b44f570c","principalType":"ServicePrincipal","scope":"/subscriptions/00000000-0000-0000-0000-000000000000","condition":null,"conditionVersion":null,"createdOn":"2024-10-21T09:51:24.9677229Z","updatedOn":"2024-10-21T10:06:48.5709302Z","createdBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","updatedBy":"953fd163-96b2-4789-8a83-9cfe693dd8d5","delegatedManagedIdentityResourceId":null,"description":null},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/88888888-0000-0000-0000-000000000004","type":"Microsoft.Authorization/roleAssignments","name":"88888888-0000-0000-0000-000000000004"}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '857'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:06:49 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      set-cookie:
      - x-ms-gateway-slice=Production; path=/; secure; samesite=none; httponly
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '799'
      x-ms-ratelimit-remaining-subscription-global-deletes:
      - '11999'
      x-msedge-ref:
      - 'Ref A: 4A566303D56D4571B0AB7112CA1D0289 Ref B: CO6AA3150219053 Ref C: 2024-10-21T10:06:48Z'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - grafana list
      Connection:
      - keep-alive
      User-Agent:
      - AZURECLI/2.65.0 azsdk-python-core/1.31.0 Python/3.8.10 (Windows-10-10.0.26100-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Dashboard/grafana?api-version=2023-09-01
  response:
    body:
      string: '{"value":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgj2gvppoalgfaxpafmkyk7qoxgubnzhti4jij5ernwwhkzyt5h5dz7riqr45h7wl/providers/Microsoft.Dashboard/grafana/clitestbackup","name":"clitestbackup","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-18T04:19:24.1324865Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:49:39.1311084Z"},"identity":{"principalId":"12826562-be7a-40a8-bb8c-8cafcdf3b096","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestbackup-gzccd3f9abdcese4.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgj2gvppoalgfaxpafmkyk7qoxgubnzhti4jij5ernwwhkzyt5h5dz7riqr45h7wl/providers/Microsoft.Dashboard/grafana/clitestbackup2","name":"clitestbackup2","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-18T04:24:06.1205753Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:48:35.7577341Z"},"identity":{"principalId":"ddc1b197-af08-46fa-b011-288088e0fe9a","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestbackup2-ekfbc4c4ekfec9f7.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amge6bdhbsxhkizkmk43l2azyfo7q4gksu4nnwaswrai4rd6px2qpiukibpan6pwr7/providers/Microsoft.Dashboard/grafana/clitestamgsvcacct7ixop3","name":"clitestamgsvcacct7ixop3","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-01T23:02:00.8760036Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:47:26.3887224Z"},"identity":{"principalId":"ccdfa56d-9dd0-4c4f-93b6-fca21a04a4cf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacct7ixop3-edgvgyeddcgvbcfv.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnv6yivbeealkglu3yqvbrqzbwhz2otvejv2dg2ccgk7umed2cvesauqyp5aqihg/providers/Microsoft.Dashboard/grafana/clitestamgbackupewnvswl","name":"clitestamgbackupewnvswl","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T04:35:34.7525135Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:47:30.4534227Z"},"identity":{"principalId":"f27fa747-c40a-4d28-a135-27ed52022b3f","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackupewnvswl-fwe4ehayded9g5bh.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgnv6yivbeealkglu3yqvbrqzbwhz2otvejv2dg2ccgk7umed2cvesauqyp5aqihg/providers/Microsoft.Dashboard/grafana/clitestamgbackupmg2uoml","name":"clitestamgbackupmg2uoml","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T04:38:16.2013451Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:47:33.6019566Z"},"identity":{"principalId":"7647d10d-8707-4e80-854a-0aa860b345da","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgbackupmg2uoml-akhgebdzgqdugtff.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgsv5g6p7zxqgkjlbo72aj74bwqmjgiffgln4ruqopvwvxzonno6aipwr5si5echs/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctg64ptv","name":"clitestamgsvcacctg64ptv","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-04T05:20:53.7781253Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:46:25.2353953Z"},"identity":{"principalId":"88599c24-a779-4839-a6f2-70315755e1bf","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacctg64ptv-fddkggenapdhage0.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgfkt5whmi6amop2w4gmudi43l3p6xzf4vikxgsvbu34x433r6gvnejgsx3igyx5t/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctq335hh","name":"clitestamgsvcacctq335hh","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-07T22:44:15.1741136Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:49:39.1540901Z"},"identity":{"principalId":"bd67b976-e219-4c8a-b86f-142576c8cbd6","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacctq335hh-aye2acc0h5dnhhat.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/cli_test_amgil4gmtwhedenq6gclxyytdufekgx66dqh3hzzvvbvnr2qsevom64szqi6z57wrv/providers/Microsoft.Dashboard/grafana/clitestamgsvcacctrqpmqu","name":"clitestamgsvcacctrqpmqu","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westcentralus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-08-10T00:26:40.0238772Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-17T22:51:23.1405421Z"},"identity":{"principalId":"b377cb57-6d8f-467b-a494-7e0a84456051","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://clitestamgsvcacctrqpmqu-cdawdqardqergje3.wcus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/weu-pe-amg-test","name":"weu-pe-amg-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"westeurope","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-23T13:44:35.0549296Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-23T23:44:21.8809774Z"},"identity":{"principalId":"2daed4df-080b-4fdf-9bf2-d79d8c61a323","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://weu-pe-amg-test-a3dncdhgdveff5fn.weu.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Disabled","privateEndpointConnections":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/weu-pe-amg-test/privateEndpointConnections/weu-test-pe","properties":{"privateEndpoint":{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Network/privateEndpoints/weu-test-pe"},"privateLinkServiceConnectionState":{"status":"Approved","description":"Auto-Approved"},"provisioningState":"Succeeded","groupIds":["grafana"]}}],"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-g10-upgrade-test","name":"azcli-g10-upgrade-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-20T22:09:18.3852512Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T07:56:51.0191235Z"},"identity":{"principalId":"6cfbef2a-f419-4483-b689-a5343ccb189b","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://azcli-g10-upgrade-test-arfthweuh5e6bxcb.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Enabled","outboundIPs":["13.90.103.154","40.121.255.60"],"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Dashboard/grafana/private-amg-test","name":"private-amg-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-03-20T06:53:36.9615663Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T07:21:18.8409793Z"},"identity":{"principalId":"4a80d00d-88f7-44db-a0a1-8c21e1583b83","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"grafanaVersion":"10.4.7","endpoint":"https://private-amg-test-htgag0hfe6cdhabm.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Disabled","privateEndpointConnections":[{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Dashboard/grafana/private-amg-test/privateEndpointConnections/private-amg-test-endpoint","properties":{"privateEndpoint":{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/private-amg-test-rg/providers/Microsoft.Network/privateEndpoints/private-amg-test-endpoint"},"privateLinkServiceConnectionState":{"status":"Approved","description":"Auto-Approved"},"provisioningState":"Succeeded","groupIds":["grafana"]}}],"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10","provisioningState":"Succeeded"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/amg-data-link-repro","name":"amg-data-link-repro","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-03-29T20:00:35.9442226Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-12T02:05:28.4772589Z"},"identity":{"principalId":"f67a012c-6eb5-459c-bf60-7e19266b3f39","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://amg-data-link-repro-hqe4audnhebda6cq.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Enabled","outboundIPs":["40.71.173.211","13.92.195.189"],"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[{"azureMonitorWorkspaceResourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/az-test/providers/microsoft.monitor/accounts/az-mac-02052023"}]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"instana-datasource":{"pluginId":"instana-datasource"},"sni-thruk-datasource":{"pluginId":"sni-thruk-datasource"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/library-panel-sync-test","name":"library-panel-sync-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-15T23:45:04.5141055Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T06:01:54.4518359Z"},"identity":{"principalId":"1d9e49f5-2c11-452d-b1c0-2dd914e63cb3","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://library-panel-sync-test-hjahf6gcfyb7d4ez.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-backup-test","name":"azcli-backup-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-05-28T21:57:35.8421227Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T05:28:04.851063Z"},"identity":{"principalId":"cea30572-cd9a-401a-9c8f-6f3504d0030c","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-backup-test-epfnh3eug4g3czb5.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/alanzhang-eus-240606","name":"alanzhang-eus-240606","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-06-06T21:11:18.5196647Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T05:25:56.8909807Z"},"identity":{"principalId":"b5de2d86-50a5-4fb1-b8f3-cf3bfb5117c7","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://alanzhang-eus-240606-csaea7g7efgjama4.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"magnesium-wordcloud-panel":{"pluginId":"magnesium-wordcloud-panel"},"alexanderzobnin-zabbix-app":{"pluginId":"alexanderzobnin-zabbix-app"},"briangann-gauge-panel":{"pluginId":"briangann-gauge-panel"},"isovalent-hubbleprocessancestry-panel":{"pluginId":"isovalent-hubbleprocessancestry-panel"},"grafana-xyzchart-panel":{"pluginId":"grafana-xyzchart-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-pip2-test","name":"azcli-pip2-test","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-06-07T01:28:59.47761Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T05:27:03.3804856Z"},"identity":{"principalId":"aa621030-7ba4-49ca-90be-e867bfbea5c5","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-pip2-test-g5hearbpbkgpg3fs.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/azcli-test-rg/providers/Microsoft.Dashboard/grafana/aaz-test-amg","name":"aaz-test-amg","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-31T23:26:29.7399342Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-16T20:46:34.4837716Z"},"identity":{"type":"None"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://aaz-test-amg-ebguaqhpbwd9cgdr.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","privateEndpointConnections":null,"autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","outboundIPs":null,"grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"enterpriseConfigurations":null,"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"grafana-athena-datasource":{"pluginId":"grafana-athena-datasource"},"grafana-opensearch-datasource":{"pluginId":"grafana-opensearch-datasource"},"briangann-datatable-panel":{"pluginId":"briangann-datatable-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/azcli-test-rg/providers/Microsoft.Dashboard/grafana/aaz-sku-test-amg","name":"aaz-sku-test-amg","type":"microsoft.dashboard/grafana","sku":{"name":"Essential"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-07-31T23:34:01.0602941Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-20T03:52:53.64761Z"},"identity":{"principalId":"2c0a9014-afb2-4326-88c4-6fadf1eb8fc5","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://aaz-sku-test-amg-g7c4bvb7bxbchaf2.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/alanzhang-eus-241004","name":"alanzhang-eus-241004","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-10-04T23:00:02.5750276Z","lastModifiedBy":"example@example.com","lastModifiedByType":"User","lastModifiedAt":"2024-10-04T23:00:02.5750276Z"},"identity":{"principalId":"f551afc3-0b14-4003-89db-3fab04bca539","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://alanzhang-eus-241004-dtdeh9cjfxajd5er.eus.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/Microsoft.Dashboard/grafana/azcli-restore-test-2","name":"azcli-restore-test-2","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus2","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-22T22:46:17.9549073Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-23T23:44:33.3871763Z"},"identity":{"principalId":"0fe6d58b-7ee1-4937-ada4-e017555d8b3b","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-restore-test-2-bcbfa3bfd2gpaxdz.eus2.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[{"azureMonitorWorkspaceResourceId":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/az-test/providers/microsoft.monitor/accounts/az-mac-02052023"}]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaPlugins":{"grafana-redshift-datasource":{"pluginId":"grafana-redshift-datasource"},"grafana-astradb-datasource":{"pluginId":"grafana-astradb-datasource"},"volkovlabs-echarts-panel":{"pluginId":"volkovlabs-echarts-panel"}},"grafanaMajorVersion":"10"}},{"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/abz-test-rg-brazil/providers/Microsoft.Dashboard/grafana/azcli-restore-test-3","name":"azcli-restore-test-3","type":"microsoft.dashboard/grafana","sku":{"name":"Standard"},"location":"eastus2","tags":{},"systemData":{"createdBy":"example@example.com","createdByType":"User","createdAt":"2024-02-22T22:57:37.7954112Z","lastModifiedBy":"ce34e7e5-485f-4d76-964f-b3d2b16d1e4f","lastModifiedByType":"Application","lastModifiedAt":"2024-09-23T23:45:43.2296983Z"},"identity":{"principalId":"058eb720-b993-4ced-a359-c84388424c10","tenantId":"72f988bf-86f1-41af-91ab-2d7cd011db47","type":"SystemAssigned"},"properties":{"provisioningState":"Succeeded","grafanaVersion":"10.4.7","endpoint":"https://azcli-restore-test-3-f0gcbvhfdddxe7fb.eus2.grafana.azure.com","zoneRedundancy":"Disabled","publicNetworkAccess":"Enabled","autoGeneratedDomainNameLabelScope":"TenantReuse","apiKey":"Disabled","deterministicOutboundIP":"Disabled","grafanaIntegrations":{"azureMonitorWorkspaceIntegrations":[]},"grafanaConfigurations":{"smtp":{"enabled":false}},"grafanaMajorVersion":"10"}}]}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '26617'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 21 Oct 2024 10:06:50 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-original-request-ids:
      - 982cf66b-2ae4-43c6-99e9-e29e703f68a8
      - 5527665f-5482-4a88-8d80-9a5f15f0aae8
      - 376463c0-75a4-4ed0-ab90-3a4b4b2ba048
      - d6606d56-83c0-491d-a072-7dec0c0a34c9
      x-ms-ratelimit-remaining-subscription-global-reads:
      - '16499'
      x-msedge-ref:
      - 'Ref A: 5C53F1CFEE494D0CBCFA9CDDCA0DD41E Ref B: CO6AA3150220031 Ref C: 2024-10-21T10:06:50Z'
    status:
      code: 200
      message: OK
version: 1
