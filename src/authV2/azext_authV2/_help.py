# coding=utf-8
# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

from knack.help_files import helps  # pylint: disable=unused-import

helps['webapp auth'] = """
type: group
short-summary: Manage webapp authentication and authorization in the v2 format.
"""

helps['webapp auth show'] = """
type: command
short-summary: Show the authentication settings for the webapp in the v2 format.
examples:
  - name: Show the authentication settings for the webapp. (autogenerated)
    text: az webapp auth show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

helps['webapp auth update'] = """
type: command
short-summary: Update the authentication settings for the webapp in the v2 format.
examples:
  - name: Update the client ID of the AAD provider already configured
    text: >
        az webapp auth update  -g myResourceGroup -n myUniqueApp --set identityProviders.azureActiveDirectory.registration.clientId=ecbacb08-df8b-450d-82b3-3fced03f2b27
  - name: Pin the runtime version of the app to 1.4.7
    text: >
        az webapp auth update -g myResourceGroup -n myUniqueApp --runtime-version 1.4.7
  - name: Configure the app with file based authentication by setting the config file path
    text: >
        az webapp auth update -g myResourceGroup -n myUniqueApp --config-file-path auth.json
  - name: Configure the app to allow unauthenticated requests to hit the app.
    text: >
        az webapp auth update -g myResourceGroup -n myUniqueApp --unauthenticated-client-action AllowAnonymous
  - name: Configure the app to redirect unauthenticated requests to the Facebook provider
    text: >
        az webapp auth update -g myResourceGroup -n myUniqueApp --redirect-provider Facebook
  - name: Configure the app to listen to the forward headers X-FORWARDED-HOST and X-FORWARDED-PROTO
    text: >
        az webapp auth update -g myResourceGroup -n myUniqueApp --proxy-convention Standard
"""

helps['webapp auth set'] = """
type: command
short-summary: Sets the authentication settings for the webapp in the v2 format, overwriting any existing settings.
examples:
  - name: Set the json saved in file auth.json as the auth settings for the web app, overwriting any existing settings.
    text: >
        az webapp auth set -g myResourceGroup -n myUniqueApp --body @auth.json
"""

helps['webapp auth config-version show'] = """
type: command
short-summary: Show the configuration version of the authentication settings for the webapp.
examples:
  - name: Show the configuration version of the authentication settings for the webapp (autogenerated)
    text: >
        az webapp auth config-version show --name MyWebApp --resource-group MyResourceGroup
"""

helps['webapp auth config-version revert'] = """
type: command
short-summary: Reverts the configuration version of the authentication settings for the webapp from v2 to v1 (classic).
examples:
  - name: Revert the configuration version of the authentication settings for the webapp from v2 to v1 (classic) (autogenerated)
    text: >
        az webapp auth config-version revert --name MyWebApp --resource-group MyResourceGroup
"""

helps['webapp auth config-version upgrade'] = """
type: command
short-summary: Upgrades the configuration version of the authentication settings for the webapp from v1 (classic) to v2.
examples:
  - name: Upgrades the configuration version of the authentication settings for the webapp from v1 (classic) to v2 (autogenerated)
    text: >
        az webapp auth config-version upgrade --name MyWebApp --resource-group MyResourceGroup
"""

helps['webapp auth-classic'] = """
type: group
short-summary: Manage webapp authentication and authorization in the classic format.
"""

helps['webapp auth-classic show'] = """
type: command
short-summary: Show the authentification settings for the webapp in the classic format.
examples:
  - name: Show the authentification settings for the webapp. (autogenerated)
    text: az webapp auth show --name MyWebApp --resource-group MyResourceGroup
    crafted: true
"""

helps['webapp auth-classic update'] = """
type: command
short-summary: Update the authentication settings for the webapp in the classic format.
examples:
  - name: Enable AAD by enabling authentication and setting AAD-associated parameters. Default provider is set to AAD. Must have created a AAD service principal beforehand.
    text: >
        az webapp auth update  -g myResourceGroup -n myUniqueApp --enabled true \\
          --action LoginWithAzureActiveDirectory \\
          --aad-allowed-token-audiences https://webapp_name.azurewebsites.net/.auth/login/aad/callback \\
          --aad-client-id ecbacb08-df8b-450d-82b3-3fced03f2b27 --aad-client-secret very_secret_password \\
          --aad-token-issuer-url https://sts.windows.net/54826b22-38d6-4fb2-bad9-b7983a3e9c5a/
  - name: Allow Facebook authentication by setting FB-associated parameters and turning on public-profile and email scopes; allow anonymous users
    text: >
        az webapp auth update -g myResourceGroup -n myUniqueApp --action AllowAnonymous \\
          --facebook-app-id my_fb_id --facebook-app-secret my_fb_secret \\
          --facebook-oauth-scopes public_profile email
"""
