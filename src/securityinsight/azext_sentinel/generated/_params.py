# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from knack.arguments import CLIArgumentType
from azure.cli.core.commands.parameters import (
    get_enum_type,
    resource_group_name_type
)


def load_arguments(self, _):

    with self.argument_context('sentinel alert-rule list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')

    with self.argument_context('sentinel alert-rule show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('rule_id', help='Alert rule ID')
        c.argument('action_id', help='Action ID')

    with self.argument_context('sentinel alert-rule create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('rule_id', help='Alert rule ID')
        c.argument('action_id', help='Action ID')
        c.argument('etag', help='Etag of the azure resource')
        c.argument('logic_app_resource_id', help='Logic App Resource Id, providers/Microsoft.Logic/workflows/{WorkflowI'
                   'D}.')
        c.argument('trigger_uri', help='Logic App Callback URL for this specific workflow.')
        c.argument('kind', arg_type=get_enum_type(['Scheduled', 'MicrosoftSecurityIncidentCreation', 'Fusion']), help=
                   'The kind of the alert rule')

    with self.argument_context('sentinel alert-rule delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('rule_id', help='Alert rule ID')
        c.argument('action_id', help='Action ID')

    with self.argument_context('sentinel action list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('rule_id', help='Alert rule ID')

    with self.argument_context('sentinel data-connector list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')

    with self.argument_context('sentinel data-connector show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('data_connector_id', help='Connector ID')

    with self.argument_context('sentinel data-connector create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('data_connector_id', help='Connector ID')
        c.argument('etag', help='Etag of the azure resource')
        c.argument('kind', arg_type=get_enum_type(['AzureActiveDirectory', 'AzureSecurityCenter', 'MicrosoftCloudAppSec'
                   'urity', 'ThreatIntelligence', 'Office365', 'AmazonWebServicesCloudTrail', 'AzureAdvancedThreatProte'
                   'ction', 'MicrosoftDefenderAdvancedThreatProtection']), help='The kind of the data connector')

    with self.argument_context('sentinel data-connector update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('data_connector_id', help='Connector ID')
        c.argument('etag', help='Etag of the azure resource')
        c.argument('kind', arg_type=get_enum_type(['AzureActiveDirectory', 'AzureSecurityCenter', 'MicrosoftCloudAppSec'
                   'urity', 'ThreatIntelligence', 'Office365', 'AmazonWebServicesCloudTrail', 'AzureAdvancedThreatProte'
                   'ction', 'MicrosoftDefenderAdvancedThreatProtection']), help='The kind of the data connector')

    with self.argument_context('sentinel data-connector delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('workspace_name', help='The name of the workspace.')
        c.argument('data_connector_id', help='Connector ID')
