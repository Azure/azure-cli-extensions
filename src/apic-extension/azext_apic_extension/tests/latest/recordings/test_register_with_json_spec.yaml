interactions:
- request:
    body: '{"properties": {"contacts": [{"email": "apiteam@swagger.io"}], "description":
      "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
      can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
      In the third iteration of the pet store, we''ve switched to the design first
      approach!\nYou can now help us improve the API whether it''s by making changes
      to the definition itself or to the code.\nThat way, with time, we can improve
      the API in general, and expose some of the new features in OAS3.\n\nSome useful
      links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n-
      [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
      "kind": "rest", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"},
      "summary": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
      can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
      In the third iteration of the pet store, we''ve", "title": "swagger-petstore---openapi-3.0"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api register
      Connection:
      - keep-alive
      Content-Length:
      - '1144'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -s -l
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30?api-version=2024-03-01
  response:
    body:
      string: '{"type":"Microsoft.ApiCenter/services/workspaces/apis","properties":{"title":"swagger-petstore---openapi-3.0","summary":"This
        is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
        can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
        In the third iteration of the pet store, we''ve","description":"This is a
        sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find
        out more about\nSwagger at [http://swagger.io](http://swagger.io). In the
        third iteration of the pet store, we''ve switched to the design first approach!\nYou
        can now help us improve the API whether it''s by making changes to the definition
        itself or to the code.\nThat way, with time, we can improve the API in general,
        and expose some of the new features in OAS3.\n\nSome useful links:\n- [The
        Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n-
        [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)","kind":"rest","license":{"name":"Apache
        2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"externalDocumentation":[],"contacts":[{"email":"apiteam@swagger.io"}],"customProperties":{}},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30","name":"swaggerpetstore-openapi30","systemData":{"createdAt":"2024-05-08T09:06:18.4695316Z","lastModifiedAt":"2024-05-08T09:06:18.4695303Z"}}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '1561'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:18 GMT
      etag:
      - d9036669-0000-0100-0000-663b408a0000
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: 9D537846C08D4E178D95BFB0FFC8A3F9 Ref B: MAA201060514047 Ref C: 2024-05-08T09:06:16Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"lifecycleStage": "design", "title": "1-0-19"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api register
      Connection:
      - keep-alive
      Content-Length:
      - '63'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -s -l
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19?api-version=2024-03-01
  response:
    body:
      string: '{"type":"Microsoft.ApiCenter/services/workspaces/apis/versions","properties":{"title":"1-0-19","lifecycleStage":"design"},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19","name":"1-0-19","systemData":{"createdAt":"2024-05-08T09:06:21.1301365Z","lastModifiedAt":"2024-05-08T09:06:21.1301349Z"}}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '449'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:20 GMT
      etag:
      - a6050b02-0000-0100-0000-663b408d0000
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: 6D53DC791F2B4F40B0989118898D106D Ref B: MAA201060513027 Ref C: 2024-05-08T09:06:19Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: '{"properties": {"description": "This is a sample Pet Store Server based
      on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
      In the third iteration of the pet store, we''ve switched to the design first
      approach!\nYou can now help us improve the API whether it''s by making changes
      to the definition itself or to the code.\nThat way, with time, we can improve
      the API in general, and expose some of the new features in OAS3.\n\nSome useful
      links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n-
      [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
      "title": "openapi"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api register
      Connection:
      - keep-alive
      Content-Length:
      - '749'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -s -l
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19/definitions/openapi?api-version=2024-03-01
  response:
    body:
      string: '{"type":"Microsoft.ApiCenter/services/workspaces/apis/versions/definitions","properties":{"title":"openapi","description":"This
        is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
        can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
        In the third iteration of the pet store, we''ve switched to the design first
        approach!\nYou can now help us improve the API whether it''s by making changes
        to the definition itself or to the code.\nThat way, with time, we can improve
        the API in general, and expose some of the new features in OAS3.\n\nSome useful
        links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n-
        [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)"},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19/definitions/openapi","name":"openapi","systemData":{"createdAt":"2024-05-08T09:06:24.0718796Z","lastModifiedAt":"2024-05-08T09:06:24.0718789Z"}}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '1168'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:24 GMT
      etag:
      - 7e048b2a-0000-0100-0000-663b40900000
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: CC89692E462A4BDD807D743B37FE6514 Ref B: MAA201060514039 Ref C: 2024-05-08T09:06:22Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: '{"format": "inline", "specification": {"name": "openapi", "version": "3-0-2"},
      "value": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\":
      \"Swagger Petstore - OpenAPI 3.0\",\n        \"description\": \"This is a sample
      Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more
      about\\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration
      of the pet store, we''ve switched to the design first approach!\\nYou can now
      help us improve the API whether it''s by making changes to the definition itself
      or to the code.\\nThat way, with time, we can improve the API in general, and
      expose some of the new features in OAS3.\\n\\nSome useful links:\\n- [The Pet
      Store repository](https://github.com/swagger-api/swagger-petstore)\\n- [The
      source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\n        \"termsOfService\":
      \"http://swagger.io/terms/\",\n        \"contact\": {\n            \"email\":
      \"apiteam@swagger.io\"\n        },\n        \"license\": {\n            \"name\":
      \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\":
      \"1.0.19\"\n    },\n    \"externalDocs\": {\n        \"description\": \"Find
      out more about Swagger\",\n        \"url\": \"http://swagger.io\"\n    },\n    \"servers\":
      [\n        {\n            \"url\": \"/api/v3\"\n        }\n    ],\n    \"tags\":
      [\n        {\n            \"name\": \"pet\",\n            \"description\": \"Everything
      about your Pets\",\n            \"externalDocs\": {\n                \"description\":
      \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\":
      \"store\",\n            \"description\": \"Access to Petstore orders\",\n            \"externalDocs\":
      {\n                \"description\": \"Find out more about our store\",\n                \"url\":
      \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\":
      \"user\",\n            \"description\": \"Operations about user\"\n        }\n    ],\n    \"paths\":
      {\n        \"/pet\": {\n            \"put\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Update an existing pet\",\n                \"description\": \"Update an existing
      pet by Id\",\n                \"operationId\": \"updatePet\",\n                \"requestBody\":
      {\n                    \"description\": \"Update an existent pet in the store\",\n                    \"content\":
      {\n                        \"application/json\": {\n                            \"schema\":
      {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"required\":
      true\n                },\n                \"responses\": {\n                    \"200\":
      {\n                        \"description\": \"Successful operation\",\n                        \"content\":
      {\n                            \"application/xml\": {\n                                \"schema\":
      {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\":
      {\n                        \"description\": \"Pet not found\"\n                    },\n                    \"405\":
      {\n                        \"description\": \"Validation exception\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            },\n            \"post\":
      {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Add a new pet to the store\",\n                \"description\": \"Add a new
      pet to the store\",\n                \"operationId\": \"addPet\",\n                \"requestBody\":
      {\n                    \"description\": \"Create a new pet in the store\",\n                    \"content\":
      {\n                        \"application/json\": {\n                            \"schema\":
      {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"required\":
      true\n                },\n                \"responses\": {\n                    \"200\":
      {\n                        \"description\": \"Successful operation\",\n                        \"content\":
      {\n                            \"application/xml\": {\n                                \"schema\":
      {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    },\n                    \"405\":
      {\n                        \"description\": \"Invalid input\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/findByStatus\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Finds Pets by status\",\n                \"description\": \"Multiple status
      values can be provided with comma separated strings\",\n                \"operationId\":
      \"findPetsByStatus\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"status\",\n                        \"in\": \"query\",\n                        \"description\":
      \"Status values that need to be considered for filter\",\n                        \"required\":
      false,\n                        \"explode\": true,\n                        \"schema\":
      {\n                            \"type\": \"string\",\n                            \"default\":
      \"available\",\n                            \"enum\": [\n                                \"available\",\n                                \"pending\",\n                                \"sold\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"type\":
      \"array\",\n                                    \"items\": {\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"type\":
      \"array\",\n                                    \"items\": {\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid status value\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/findByTags\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Finds Pets by tags\",\n                \"description\": \"Multiple tags can
      be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n                \"operationId\":
      \"findPetsByTags\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"tags\",\n                        \"in\": \"query\",\n                        \"description\":
      \"Tags to filter by\",\n                        \"required\": false,\n                        \"explode\":
      true,\n                        \"schema\": {\n                            \"type\":
      \"array\",\n                            \"items\": {\n                                \"type\":
      \"string\"\n                            }\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"type\":
      \"array\",\n                                    \"items\": {\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"type\":
      \"array\",\n                                    \"items\": {\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid tag value\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/{petId}\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Find pet by ID\",\n                \"description\": \"Returns a single pet\",\n                \"operationId\":
      \"getPetById\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"petId\",\n                        \"in\": \"path\",\n                        \"description\":
      \"ID of pet to return\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"integer\",\n                            \"format\":
      \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\":
      {\n                        \"description\": \"Pet not found\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"api_key\": []\n                    },\n                    {\n                        \"petstore_auth\":
      [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            },\n            \"post\":
      {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Updates a pet in the store with form data\",\n                \"description\":
      \"\",\n                \"operationId\": \"updatePetWithForm\",\n                \"parameters\":
      [\n                    {\n                        \"name\": \"petId\",\n                        \"in\":
      \"path\",\n                        \"description\": \"ID of pet that needs to
      be updated\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"integer\",\n                            \"format\":
      \"int64\"\n                        }\n                    },\n                    {\n                        \"name\":
      \"name\",\n                        \"in\": \"query\",\n                        \"description\":
      \"Name of pet that needs to be updated\",\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\":
      \"status\",\n                        \"in\": \"query\",\n                        \"description\":
      \"Status of pet that needs to be updated\",\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"405\": {\n                        \"description\":
      \"Invalid input\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            },\n            \"delete\":
      {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"Deletes a pet\",\n                \"description\": \"\",\n                \"operationId\":
      \"deletePet\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"api_key\",\n                        \"in\": \"header\",\n                        \"description\":
      \"\",\n                        \"required\": false,\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\":
      \"petId\",\n                        \"in\": \"path\",\n                        \"description\":
      \"Pet id to delete\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"integer\",\n                            \"format\":
      \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"400\": {\n                        \"description\":
      \"Invalid pet value\"\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/{petId}/uploadImage\":
      {\n            \"post\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
      \"uploads an image\",\n                \"description\": \"\",\n                \"operationId\":
      \"uploadFile\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"petId\",\n                        \"in\": \"path\",\n                        \"description\":
      \"ID of pet to update\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"integer\",\n                            \"format\":
      \"int64\"\n                        }\n                    },\n                    {\n                        \"name\":
      \"additionalMetadata\",\n                        \"in\": \"query\",\n                        \"description\":
      \"Additional Metadata\",\n                        \"required\": false,\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\":
      {\n                    \"content\": {\n                        \"application/octet-stream\":
      {\n                            \"schema\": {\n                                \"type\":
      \"string\",\n                                \"format\": \"binary\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/ApiResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/store/inventory\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
      \"Returns pet inventories by status\",\n                \"description\": \"Returns
      a map of status codes to quantities\",\n                \"operationId\": \"getInventory\",\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"type\":
      \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\":
      \"integer\",\n                                        \"format\": \"int32\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\":
      [\n                    {\n                        \"api_key\": []\n                    }\n                ]\n            }\n        },\n        \"/store/order\":
      {\n            \"post\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
      \"Place an order for a pet\",\n                \"description\": \"Place a new
      order in the store\",\n                \"operationId\": \"placeOrder\",\n                \"requestBody\":
      {\n                    \"content\": {\n                        \"application/json\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Order\"\n                            }\n                        },\n                        \"application/xml\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Order\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/Order\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Order\"\n                                }\n                            }\n                        }\n                    },\n                    \"405\":
      {\n                        \"description\": \"Invalid input\"\n                    }\n                }\n            }\n        },\n        \"/store/order/{orderId}\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
      \"Find purchase order by ID\",\n                \"description\": \"For valid
      response try integer IDs with value <= 5 or > 10. Other values will generate
      exceptions.\",\n                \"operationId\": \"getOrderById\",\n                \"parameters\":
      [\n                    {\n                        \"name\": \"orderId\",\n                        \"in\":
      \"path\",\n                        \"description\": \"ID of order that needs
      to be fetched\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"integer\",\n                            \"format\":
      \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Order\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/Order\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\":
      {\n                        \"description\": \"Order not found\"\n                    }\n                }\n            },\n            \"delete\":
      {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
      \"Delete purchase order by ID\",\n                \"description\": \"For valid
      response try integer IDs with value < 1000. Anything above 1000 or nonintegers
      will generate API errors\",\n                \"operationId\": \"deleteOrder\",\n                \"parameters\":
      [\n                    {\n                        \"name\": \"orderId\",\n                        \"in\":
      \"path\",\n                        \"description\": \"ID of the order that needs
      to be deleted\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"integer\",\n                            \"format\":
      \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"400\": {\n                        \"description\":
      \"Invalid ID supplied\"\n                    },\n                    \"404\":
      {\n                        \"description\": \"Order not found\"\n                    }\n                }\n            }\n        },\n        \"/user\":
      {\n            \"post\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Create user\",\n                \"description\": \"This can only be done by
      the logged in user.\",\n                \"operationId\": \"createUser\",\n                \"requestBody\":
      {\n                    \"description\": \"Created user object\",\n                    \"content\":
      {\n                        \"application/json\": {\n                            \"schema\":
      {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/xml\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/User\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
      {\n                    \"default\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/user/createWithList\":
      {\n            \"post\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Creates list of users with given input array\",\n                \"description\":
      \"Creates list of users with given input array\",\n                \"operationId\":
      \"createUsersWithListInput\",\n                \"requestBody\": {\n                    \"content\":
      {\n                        \"application/json\": {\n                            \"schema\":
      {\n                                \"type\": \"array\",\n                                \"items\":
      {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"Successful operation\",\n                        \"content\": {\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"default\":
      {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/user/login\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Logs user into the system\",\n                \"description\": \"\",\n                \"operationId\":
      \"loginUser\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"username\",\n                        \"in\": \"query\",\n                        \"description\":
      \"The user name for login\",\n                        \"required\": false,\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\":
      \"password\",\n                        \"in\": \"query\",\n                        \"description\":
      \"The password for login in clear text\",\n                        \"required\":
      false,\n                        \"schema\": {\n                            \"type\":
      \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"headers\": {\n                            \"X-Rate-Limit\":
      {\n                                \"description\": \"calls per hour allowed
      by the user\",\n                                \"schema\": {\n                                    \"type\":
      \"integer\",\n                                    \"format\": \"int32\"\n                                }\n                            },\n                            \"X-Expires-After\":
      {\n                                \"description\": \"date in UTC when token
      expires\",\n                                \"schema\": {\n                                    \"type\":
      \"string\",\n                                    \"format\": \"date-time\"\n                                }\n                            }\n                        },\n                        \"content\":
      {\n                            \"application/xml\": {\n                                \"schema\":
      {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"type\":
      \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid username/password supplied\"\n                    }\n                }\n            }\n        },\n        \"/user/logout\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Logs out current logged in user session\",\n                \"description\":
      \"\",\n                \"operationId\": \"logoutUser\",\n                \"parameters\":
      [],\n                \"responses\": {\n                    \"default\": {\n                        \"description\":
      \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/user/{username}\":
      {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Get user by user name\",\n                \"description\": \"\",\n                \"operationId\":
      \"getUserByName\",\n                \"parameters\": [\n                    {\n                        \"name\":
      \"username\",\n                        \"in\": \"path\",\n                        \"description\":
      \"The name that needs to be fetched. Use user1 for testing. \",\n                        \"required\":
      true,\n                        \"schema\": {\n                            \"type\":
      \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"200\": {\n                        \"description\":
      \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/json\":
      {\n                                \"schema\": {\n                                    \"$ref\":
      \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
      {\n                        \"description\": \"Invalid username supplied\"\n                    },\n                    \"404\":
      {\n                        \"description\": \"User not found\"\n                    }\n                }\n            },\n            \"put\":
      {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Update user\",\n                \"description\": \"This can only be done by
      the logged in user.\",\n                \"operationId\": \"updateUser\",\n                \"parameters\":
      [\n                    {\n                        \"name\": \"username\",\n                        \"in\":
      \"path\",\n                        \"description\": \"name that needs to be
      updated\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\":
      {\n                    \"description\": \"Update an existent user in the store\",\n                    \"content\":
      {\n                        \"application/json\": {\n                            \"schema\":
      {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/xml\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
      {\n                            \"schema\": {\n                                \"$ref\":
      \"#/components/schemas/User\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
      {\n                    \"default\": {\n                        \"description\":
      \"successful operation\"\n                    }\n                }\n            },\n            \"delete\":
      {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
      \"Delete user\",\n                \"description\": \"This can only be done by
      the logged in user.\",\n                \"operationId\": \"deleteUser\",\n                \"parameters\":
      [\n                    {\n                        \"name\": \"username\",\n                        \"in\":
      \"path\",\n                        \"description\": \"The name that needs to
      be deleted\",\n                        \"required\": true,\n                        \"schema\":
      {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
      {\n                    \"400\": {\n                        \"description\":
      \"Invalid username supplied\"\n                    },\n                    \"404\":
      {\n                        \"description\": \"User not found\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\":
      {\n        \"schemas\": {\n            \"Order\": {\n                \"type\":
      \"object\",\n                \"properties\": {\n                    \"id\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\",\n                        \"example\": 10\n                    },\n                    \"petId\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\",\n                        \"example\": 198772\n                    },\n                    \"quantity\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int32\",\n                        \"example\": 7\n                    },\n                    \"shipDate\":
      {\n                        \"type\": \"string\",\n                        \"format\":
      \"date-time\"\n                    },\n                    \"status\": {\n                        \"type\":
      \"string\",\n                        \"description\": \"Order Status\",\n                        \"example\":
      \"approved\",\n                        \"enum\": [\n                            \"placed\",\n                            \"approved\",\n                            \"delivered\"\n                        ]\n                    },\n                    \"complete\":
      {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"order\"\n                }\n            },\n            \"Customer\":
      {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\",\n                        \"example\": 100000\n                    },\n                    \"username\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"fehguy\"\n                    },\n                    \"address\": {\n                        \"type\":
      \"array\",\n                        \"xml\": {\n                            \"name\":
      \"addresses\",\n                            \"wrapped\": true\n                        },\n                        \"items\":
      {\n                            \"$ref\": \"#/components/schemas/Address\"\n                        }\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"customer\"\n                }\n            },\n            \"Address\":
      {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"street\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"437 Lytton\"\n                    },\n                    \"city\": {\n                        \"type\":
      \"string\",\n                        \"example\": \"Palo Alto\"\n                    },\n                    \"state\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"CA\"\n                    },\n                    \"zip\": {\n                        \"type\":
      \"string\",\n                        \"example\": \"94301\"\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"address\"\n                }\n            },\n            \"Category\":
      {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\",\n                        \"example\": 1\n                    },\n                    \"name\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"Dogs\"\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"category\"\n                }\n            },\n            \"User\":
      {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\",\n                        \"example\": 10\n                    },\n                    \"username\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"theUser\"\n                    },\n                    \"firstName\": {\n                        \"type\":
      \"string\",\n                        \"example\": \"John\"\n                    },\n                    \"lastName\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"James\"\n                    },\n                    \"email\": {\n                        \"type\":
      \"string\",\n                        \"example\": \"john@email.com\"\n                    },\n                    \"password\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"12345\"\n                    },\n                    \"phone\": {\n                        \"type\":
      \"string\",\n                        \"example\": \"12345\"\n                    },\n                    \"userStatus\":
      {\n                        \"type\": \"integer\",\n                        \"description\":
      \"User Status\",\n                        \"format\": \"int32\",\n                        \"example\":
      1\n                    }\n                },\n                \"xml\": {\n                    \"name\":
      \"user\"\n                }\n            },\n            \"Tag\": {\n                \"type\":
      \"object\",\n                \"properties\": {\n                    \"id\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\"\n                    },\n                    \"name\": {\n                        \"type\":
      \"string\"\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"tag\"\n                }\n            },\n            \"Pet\":
      {\n                \"required\": [\n                    \"name\",\n                    \"photoUrls\"\n                ],\n                \"type\":
      \"object\",\n                \"properties\": {\n                    \"id\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int64\",\n                        \"example\": 10\n                    },\n                    \"name\":
      {\n                        \"type\": \"string\",\n                        \"example\":
      \"doggie\"\n                    },\n                    \"category\": {\n                        \"$ref\":
      \"#/components/schemas/Category\"\n                    },\n                    \"photoUrls\":
      {\n                        \"type\": \"array\",\n                        \"xml\":
      {\n                            \"wrapped\": true\n                        },\n                        \"items\":
      {\n                            \"type\": \"string\",\n                            \"xml\":
      {\n                                \"name\": \"photoUrl\"\n                            }\n                        }\n                    },\n                    \"tags\":
      {\n                        \"type\": \"array\",\n                        \"xml\":
      {\n                            \"wrapped\": true\n                        },\n                        \"items\":
      {\n                            \"$ref\": \"#/components/schemas/Tag\"\n                        }\n                    },\n                    \"status\":
      {\n                        \"type\": \"string\",\n                        \"description\":
      \"pet status in the store\",\n                        \"enum\": [\n                            \"available\",\n                            \"pending\",\n                            \"sold\"\n                        ]\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"pet\"\n                }\n            },\n            \"ApiResponse\":
      {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"code\":
      {\n                        \"type\": \"integer\",\n                        \"format\":
      \"int32\"\n                    },\n                    \"type\": {\n                        \"type\":
      \"string\"\n                    },\n                    \"message\": {\n                        \"type\":
      \"string\"\n                    }\n                },\n                \"xml\":
      {\n                    \"name\": \"##default\"\n                }\n            }\n        },\n        \"requestBodies\":
      {\n            \"Pet\": {\n                \"description\": \"Pet object that
      needs to be added to the store\",\n                \"content\": {\n                    \"application/json\":
      {\n                        \"schema\": {\n                            \"$ref\":
      \"#/components/schemas/Pet\"\n                        }\n                    },\n                    \"application/xml\":
      {\n                        \"schema\": {\n                            \"$ref\":
      \"#/components/schemas/Pet\"\n                        }\n                    }\n                }\n            },\n            \"UserArray\":
      {\n                \"description\": \"List of user object\",\n                \"content\":
      {\n                    \"application/json\": {\n                        \"schema\":
      {\n                            \"type\": \"array\",\n                            \"items\":
      {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"securitySchemes\":
      {\n            \"petstore_auth\": {\n                \"type\": \"oauth2\",\n                \"flows\":
      {\n                    \"implicit\": {\n                        \"authorizationUrl\":
      \"https://petstore3.swagger.io/oauth/authorize\",\n                        \"scopes\":
      {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\":
      \"read your pets\"\n                        }\n                    }\n                }\n            },\n            \"api_key\":
      {\n                \"type\": \"apiKey\",\n                \"name\": \"api_key\",\n                \"in\":
      \"header\"\n            }\n        }\n    }\n}"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api register
      Connection:
      - keep-alive
      Content-Length:
      - '47822'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -s -l
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19/definitions/openapi/importSpecification?api-version=2024-03-01
  response:
    body:
      string: ''
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '0'
      date:
      - Wed, 08 May 2024 09:06:26 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: 6BF3FEEBF89F49F991EFB3CEA6D67CD2 Ref B: MAA201060514033 Ref C: 2024-05-08T09:06:25Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api show
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -s --api-id
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30?api-version=2024-03-01
  response:
    body:
      string: '{"type":"Microsoft.ApiCenter/services/workspaces/apis","properties":{"title":"swagger-petstore---openapi-3.0","summary":"This
        is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
        can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
        In the third iteration of the pet store, we''ve","description":"This is a
        sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find
        out more about\nSwagger at [http://swagger.io](http://swagger.io). In the
        third iteration of the pet store, we''ve switched to the design first approach!\nYou
        can now help us improve the API whether it''s by making changes to the definition
        itself or to the code.\nThat way, with time, we can improve the API in general,
        and expose some of the new features in OAS3.\n\nSome useful links:\n- [The
        Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n-
        [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)","kind":"rest","lifecycleStage":"design","license":{"name":"Apache
        2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"externalDocumentation":[],"contacts":[{"email":"apiteam@swagger.io"}],"customProperties":{}},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30","name":"swaggerpetstore-openapi30","systemData":{"createdAt":"2024-05-08T09:06:18.4695316Z","lastModifiedAt":"2024-05-08T09:06:18.4695303Z"}}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '1587'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:29 GMT
      etag:
      - d9038c69-0000-0100-0000-663b408d0000
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: FC386287292F4A44AE4ADA1BA7D50E66 Ref B: MAA201060515017 Ref C: 2024-05-08T09:06:28Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api version show
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -s --api-id --version-id
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19?api-version=2024-03-01
  response:
    body:
      string: '{"type":"Microsoft.ApiCenter/services/workspaces/apis/versions","properties":{"title":"1-0-19","lifecycleStage":"design"},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19","name":"1-0-19","systemData":{"createdAt":"2024-05-08T09:06:21.1301365Z","lastModifiedAt":"2024-05-08T09:06:21.1301349Z"}}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '449'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:31 GMT
      etag:
      - a6050b02-0000-0100-0000-663b408d0000
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: F8BAF52F0CAB4D878F051DAC62FBB0CD Ref B: MAA201060516017 Ref C: 2024-05-08T09:06:30Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api definition show
      Connection:
      - keep-alive
      ParameterSetName:
      - -g -s --api-id --version-id --definition-id
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19/definitions/openapi?api-version=2024-03-01
  response:
    body:
      string: '{"type":"Microsoft.ApiCenter/services/workspaces/apis/versions/definitions","properties":{"title":"openapi","description":"This
        is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
        can find out more about\nSwagger at [http://swagger.io](http://swagger.io).
        In the third iteration of the pet store, we''ve switched to the design first
        approach!\nYou can now help us improve the API whether it''s by making changes
        to the definition itself or to the code.\nThat way, with time, we can improve
        the API in general, and expose some of the new features in OAS3.\n\nSome useful
        links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n-
        [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)","specification":{"name":"openapi","version":"3-0-2"}},"id":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19/definitions/openapi","name":"openapi","systemData":{"createdAt":"2024-05-08T09:06:24.0718796Z","lastModifiedAt":"2024-05-08T09:06:27.1757838Z"}}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '1221'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:33 GMT
      etag:
      - 7e04232b-0000-0100-0000-663b40930000
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-msedge-ref:
      - 'Ref A: E14722B8C2924505B65A82CDEBBED11F Ref B: MAA201060513029 Ref C: 2024-05-08T09:06:33Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api definition export-specification
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -s --api-id --version-id --definition-id --file-name
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.10.11 (Windows-10-10.0.22631-SP0)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/swaggerpetstore-openapi30/versions/1-0-19/definitions/openapi/exportSpecification?api-version=2024-03-01
  response:
    body:
      string: '{"format":"inline","value":"{\n    \"openapi\": \"3.0.2\",\n    \"info\":
        {\n        \"title\": \"Swagger Petstore - OpenAPI 3.0\",\n        \"description\":
        \"This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
        can find out more about\\nSwagger at [http://swagger.io](http://swagger.io).
        In the third iteration of the pet store, we''ve switched to the design first
        approach!\\nYou can now help us improve the API whether it''s by making changes
        to the definition itself or to the code.\\nThat way, with time, we can improve
        the API in general, and expose some of the new features in OAS3.\\n\\nSome
        useful links:\\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\\n-
        [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\n        \"termsOfService\":
        \"http://swagger.io/terms/\",\n        \"contact\": {\n            \"email\":
        \"apiteam@swagger.io\"\n        },\n        \"license\": {\n            \"name\":
        \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\":
        \"1.0.19\"\n    },\n    \"externalDocs\": {\n        \"description\": \"Find
        out more about Swagger\",\n        \"url\": \"http://swagger.io\"\n    },\n    \"servers\":
        [\n        {\n            \"url\": \"/api/v3\"\n        }\n    ],\n    \"tags\":
        [\n        {\n            \"name\": \"pet\",\n            \"description\":
        \"Everything about your Pets\",\n            \"externalDocs\": {\n                \"description\":
        \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\":
        \"store\",\n            \"description\": \"Access to Petstore orders\",\n            \"externalDocs\":
        {\n                \"description\": \"Find out more about our store\",\n                \"url\":
        \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\":
        \"user\",\n            \"description\": \"Operations about user\"\n        }\n    ],\n    \"paths\":
        {\n        \"/pet\": {\n            \"put\": {\n                \"tags\":
        [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Update an existing pet\",\n                \"description\": \"Update an
        existing pet by Id\",\n                \"operationId\": \"updatePet\",\n                \"requestBody\":
        {\n                    \"description\": \"Update an existent pet in the store\",\n                    \"content\":
        {\n                        \"application/json\": {\n                            \"schema\":
        {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"required\":
        true\n                },\n                \"responses\": {\n                    \"200\":
        {\n                        \"description\": \"Successful operation\",\n                        \"content\":
        {\n                            \"application/xml\": {\n                                \"schema\":
        {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\":
        {\n                        \"description\": \"Pet not found\"\n                    },\n                    \"405\":
        {\n                        \"description\": \"Validation exception\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            },\n            \"post\":
        {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Add a new pet to the store\",\n                \"description\": \"Add a
        new pet to the store\",\n                \"operationId\": \"addPet\",\n                \"requestBody\":
        {\n                    \"description\": \"Create a new pet in the store\",\n                    \"content\":
        {\n                        \"application/json\": {\n                            \"schema\":
        {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"required\":
        true\n                },\n                \"responses\": {\n                    \"200\":
        {\n                        \"description\": \"Successful operation\",\n                        \"content\":
        {\n                            \"application/xml\": {\n                                \"schema\":
        {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    },\n                    \"405\":
        {\n                        \"description\": \"Invalid input\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/findByStatus\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Finds Pets by status\",\n                \"description\": \"Multiple status
        values can be provided with comma separated strings\",\n                \"operationId\":
        \"findPetsByStatus\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"status\",\n                        \"in\": \"query\",\n                        \"description\":
        \"Status values that need to be considered for filter\",\n                        \"required\":
        false,\n                        \"explode\": true,\n                        \"schema\":
        {\n                            \"type\": \"string\",\n                            \"default\":
        \"available\",\n                            \"enum\": [\n                                \"available\",\n                                \"pending\",\n                                \"sold\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"type\":
        \"array\",\n                                    \"items\": {\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"type\":
        \"array\",\n                                    \"items\": {\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid status value\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/findByTags\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Finds Pets by tags\",\n                \"description\": \"Multiple tags
        can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n                \"operationId\":
        \"findPetsByTags\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"tags\",\n                        \"in\": \"query\",\n                        \"description\":
        \"Tags to filter by\",\n                        \"required\": false,\n                        \"explode\":
        true,\n                        \"schema\": {\n                            \"type\":
        \"array\",\n                            \"items\": {\n                                \"type\":
        \"string\"\n                            }\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"type\":
        \"array\",\n                                    \"items\": {\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"type\":
        \"array\",\n                                    \"items\": {\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid tag value\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/{petId}\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Find pet by ID\",\n                \"description\": \"Returns a single pet\",\n                \"operationId\":
        \"getPetById\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"petId\",\n                        \"in\": \"path\",\n                        \"description\":
        \"ID of pet to return\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"integer\",\n                            \"format\":
        \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\":
        {\n                        \"description\": \"Pet not found\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"api_key\": []\n                    },\n                    {\n                        \"petstore_auth\":
        [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            },\n            \"post\":
        {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Updates a pet in the store with form data\",\n                \"description\":
        \"\",\n                \"operationId\": \"updatePetWithForm\",\n                \"parameters\":
        [\n                    {\n                        \"name\": \"petId\",\n                        \"in\":
        \"path\",\n                        \"description\": \"ID of pet that needs
        to be updated\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"integer\",\n                            \"format\":
        \"int64\"\n                        }\n                    },\n                    {\n                        \"name\":
        \"name\",\n                        \"in\": \"query\",\n                        \"description\":
        \"Name of pet that needs to be updated\",\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\":
        \"status\",\n                        \"in\": \"query\",\n                        \"description\":
        \"Status of pet that needs to be updated\",\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"405\": {\n                        \"description\":
        \"Invalid input\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            },\n            \"delete\":
        {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"Deletes a pet\",\n                \"description\": \"\",\n                \"operationId\":
        \"deletePet\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"api_key\",\n                        \"in\": \"header\",\n                        \"description\":
        \"\",\n                        \"required\": false,\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\":
        \"petId\",\n                        \"in\": \"path\",\n                        \"description\":
        \"Pet id to delete\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"integer\",\n                            \"format\":
        \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"400\": {\n                        \"description\":
        \"Invalid pet value\"\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/pet/{petId}/uploadImage\":
        {\n            \"post\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\":
        \"uploads an image\",\n                \"description\": \"\",\n                \"operationId\":
        \"uploadFile\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"petId\",\n                        \"in\": \"path\",\n                        \"description\":
        \"ID of pet to update\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"integer\",\n                            \"format\":
        \"int64\"\n                        }\n                    },\n                    {\n                        \"name\":
        \"additionalMetadata\",\n                        \"in\": \"query\",\n                        \"description\":
        \"Additional Metadata\",\n                        \"required\": false,\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\":
        {\n                    \"content\": {\n                        \"application/octet-stream\":
        {\n                            \"schema\": {\n                                \"type\":
        \"string\",\n                                \"format\": \"binary\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/ApiResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/store/inventory\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
        \"Returns pet inventories by status\",\n                \"description\": \"Returns
        a map of status codes to quantities\",\n                \"operationId\": \"getInventory\",\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"type\":
        \"object\",\n                                    \"additionalProperties\":
        {\n                                        \"type\": \"integer\",\n                                        \"format\":
        \"int32\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\":
        [\n                    {\n                        \"api_key\": []\n                    }\n                ]\n            }\n        },\n        \"/store/order\":
        {\n            \"post\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
        \"Place an order for a pet\",\n                \"description\": \"Place a
        new order in the store\",\n                \"operationId\": \"placeOrder\",\n                \"requestBody\":
        {\n                    \"content\": {\n                        \"application/json\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Order\"\n                            }\n                        },\n                        \"application/xml\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Order\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/Order\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Order\"\n                                }\n                            }\n                        }\n                    },\n                    \"405\":
        {\n                        \"description\": \"Invalid input\"\n                    }\n                }\n            }\n        },\n        \"/store/order/{orderId}\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
        \"Find purchase order by ID\",\n                \"description\": \"For valid
        response try integer IDs with value <= 5 or > 10. Other values will generate
        exceptions.\",\n                \"operationId\": \"getOrderById\",\n                \"parameters\":
        [\n                    {\n                        \"name\": \"orderId\",\n                        \"in\":
        \"path\",\n                        \"description\": \"ID of order that needs
        to be fetched\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"integer\",\n                            \"format\":
        \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Order\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/Order\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\":
        {\n                        \"description\": \"Order not found\"\n                    }\n                }\n            },\n            \"delete\":
        {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\":
        \"Delete purchase order by ID\",\n                \"description\": \"For valid
        response try integer IDs with value < 1000. Anything above 1000 or nonintegers
        will generate API errors\",\n                \"operationId\": \"deleteOrder\",\n                \"parameters\":
        [\n                    {\n                        \"name\": \"orderId\",\n                        \"in\":
        \"path\",\n                        \"description\": \"ID of the order that
        needs to be deleted\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"integer\",\n                            \"format\":
        \"int64\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"400\": {\n                        \"description\":
        \"Invalid ID supplied\"\n                    },\n                    \"404\":
        {\n                        \"description\": \"Order not found\"\n                    }\n                }\n            }\n        },\n        \"/user\":
        {\n            \"post\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Create user\",\n                \"description\": \"This can only be done
        by the logged in user.\",\n                \"operationId\": \"createUser\",\n                \"requestBody\":
        {\n                    \"description\": \"Created user object\",\n                    \"content\":
        {\n                        \"application/json\": {\n                            \"schema\":
        {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/xml\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/User\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
        {\n                    \"default\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/user/createWithList\":
        {\n            \"post\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Creates list of users with given input array\",\n                \"description\":
        \"Creates list of users with given input array\",\n                \"operationId\":
        \"createUsersWithListInput\",\n                \"requestBody\": {\n                    \"content\":
        {\n                        \"application/json\": {\n                            \"schema\":
        {\n                                \"type\": \"array\",\n                                \"items\":
        {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"Successful operation\",\n                        \"content\": {\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"default\":
        {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/user/login\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Logs user into the system\",\n                \"description\": \"\",\n                \"operationId\":
        \"loginUser\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"username\",\n                        \"in\": \"query\",\n                        \"description\":
        \"The user name for login\",\n                        \"required\": false,\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\":
        \"password\",\n                        \"in\": \"query\",\n                        \"description\":
        \"The password for login in clear text\",\n                        \"required\":
        false,\n                        \"schema\": {\n                            \"type\":
        \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"headers\": {\n                            \"X-Rate-Limit\":
        {\n                                \"description\": \"calls per hour allowed
        by the user\",\n                                \"schema\": {\n                                    \"type\":
        \"integer\",\n                                    \"format\": \"int32\"\n                                }\n                            },\n                            \"X-Expires-After\":
        {\n                                \"description\": \"date in UTC when token
        expires\",\n                                \"schema\": {\n                                    \"type\":
        \"string\",\n                                    \"format\": \"date-time\"\n                                }\n                            }\n                        },\n                        \"content\":
        {\n                            \"application/xml\": {\n                                \"schema\":
        {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"type\":
        \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid username/password supplied\"\n                    }\n                }\n            }\n        },\n        \"/user/logout\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Logs out current logged in user session\",\n                \"description\":
        \"\",\n                \"operationId\": \"logoutUser\",\n                \"parameters\":
        [],\n                \"responses\": {\n                    \"default\": {\n                        \"description\":
        \"successful operation\"\n                    }\n                }\n            }\n        },\n        \"/user/{username}\":
        {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Get user by user name\",\n                \"description\": \"\",\n                \"operationId\":
        \"getUserByName\",\n                \"parameters\": [\n                    {\n                        \"name\":
        \"username\",\n                        \"in\": \"path\",\n                        \"description\":
        \"The name that needs to be fetched. Use user1 for testing. \",\n                        \"required\":
        true,\n                        \"schema\": {\n                            \"type\":
        \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"200\": {\n                        \"description\":
        \"successful operation\",\n                        \"content\": {\n                            \"application/xml\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/json\":
        {\n                                \"schema\": {\n                                    \"$ref\":
        \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\":
        {\n                        \"description\": \"Invalid username supplied\"\n                    },\n                    \"404\":
        {\n                        \"description\": \"User not found\"\n                    }\n                }\n            },\n            \"put\":
        {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Update user\",\n                \"description\": \"This can only be done
        by the logged in user.\",\n                \"operationId\": \"updateUser\",\n                \"parameters\":
        [\n                    {\n                        \"name\": \"username\",\n                        \"in\":
        \"path\",\n                        \"description\": \"name that needs to be
        updated\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\":
        {\n                    \"description\": \"Update an existent user in the store\",\n                    \"content\":
        {\n                        \"application/json\": {\n                            \"schema\":
        {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/xml\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/User\"\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\":
        {\n                            \"schema\": {\n                                \"$ref\":
        \"#/components/schemas/User\"\n                            }\n                        }\n                    }\n                },\n                \"responses\":
        {\n                    \"default\": {\n                        \"description\":
        \"successful operation\"\n                    }\n                }\n            },\n            \"delete\":
        {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\":
        \"Delete user\",\n                \"description\": \"This can only be done
        by the logged in user.\",\n                \"operationId\": \"deleteUser\",\n                \"parameters\":
        [\n                    {\n                        \"name\": \"username\",\n                        \"in\":
        \"path\",\n                        \"description\": \"The name that needs
        to be deleted\",\n                        \"required\": true,\n                        \"schema\":
        {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\":
        {\n                    \"400\": {\n                        \"description\":
        \"Invalid username supplied\"\n                    },\n                    \"404\":
        {\n                        \"description\": \"User not found\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\":
        {\n        \"schemas\": {\n            \"Order\": {\n                \"type\":
        \"object\",\n                \"properties\": {\n                    \"id\":
        {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\",\n                        \"example\": 10\n                    },\n                    \"petId\":
        {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\",\n                        \"example\": 198772\n                    },\n                    \"quantity\":
        {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int32\",\n                        \"example\": 7\n                    },\n                    \"shipDate\":
        {\n                        \"type\": \"string\",\n                        \"format\":
        \"date-time\"\n                    },\n                    \"status\": {\n                        \"type\":
        \"string\",\n                        \"description\": \"Order Status\",\n                        \"example\":
        \"approved\",\n                        \"enum\": [\n                            \"placed\",\n                            \"approved\",\n                            \"delivered\"\n                        ]\n                    },\n                    \"complete\":
        {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"order\"\n                }\n            },\n            \"Customer\":
        {\n                \"type\": \"object\",\n                \"properties\":
        {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\",\n                        \"example\": 100000\n                    },\n                    \"username\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"fehguy\"\n                    },\n                    \"address\": {\n                        \"type\":
        \"array\",\n                        \"xml\": {\n                            \"name\":
        \"addresses\",\n                            \"wrapped\": true\n                        },\n                        \"items\":
        {\n                            \"$ref\": \"#/components/schemas/Address\"\n                        }\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"customer\"\n                }\n            },\n            \"Address\":
        {\n                \"type\": \"object\",\n                \"properties\":
        {\n                    \"street\": {\n                        \"type\": \"string\",\n                        \"example\":
        \"437 Lytton\"\n                    },\n                    \"city\": {\n                        \"type\":
        \"string\",\n                        \"example\": \"Palo Alto\"\n                    },\n                    \"state\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"CA\"\n                    },\n                    \"zip\": {\n                        \"type\":
        \"string\",\n                        \"example\": \"94301\"\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"address\"\n                }\n            },\n            \"Category\":
        {\n                \"type\": \"object\",\n                \"properties\":
        {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\",\n                        \"example\": 1\n                    },\n                    \"name\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"Dogs\"\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"category\"\n                }\n            },\n            \"User\":
        {\n                \"type\": \"object\",\n                \"properties\":
        {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\",\n                        \"example\": 10\n                    },\n                    \"username\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"theUser\"\n                    },\n                    \"firstName\": {\n                        \"type\":
        \"string\",\n                        \"example\": \"John\"\n                    },\n                    \"lastName\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"James\"\n                    },\n                    \"email\": {\n                        \"type\":
        \"string\",\n                        \"example\": \"john@email.com\"\n                    },\n                    \"password\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"12345\"\n                    },\n                    \"phone\": {\n                        \"type\":
        \"string\",\n                        \"example\": \"12345\"\n                    },\n                    \"userStatus\":
        {\n                        \"type\": \"integer\",\n                        \"description\":
        \"User Status\",\n                        \"format\": \"int32\",\n                        \"example\":
        1\n                    }\n                },\n                \"xml\": {\n                    \"name\":
        \"user\"\n                }\n            },\n            \"Tag\": {\n                \"type\":
        \"object\",\n                \"properties\": {\n                    \"id\":
        {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\"\n                    },\n                    \"name\": {\n                        \"type\":
        \"string\"\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"tag\"\n                }\n            },\n            \"Pet\":
        {\n                \"required\": [\n                    \"name\",\n                    \"photoUrls\"\n                ],\n                \"type\":
        \"object\",\n                \"properties\": {\n                    \"id\":
        {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int64\",\n                        \"example\": 10\n                    },\n                    \"name\":
        {\n                        \"type\": \"string\",\n                        \"example\":
        \"doggie\"\n                    },\n                    \"category\": {\n                        \"$ref\":
        \"#/components/schemas/Category\"\n                    },\n                    \"photoUrls\":
        {\n                        \"type\": \"array\",\n                        \"xml\":
        {\n                            \"wrapped\": true\n                        },\n                        \"items\":
        {\n                            \"type\": \"string\",\n                            \"xml\":
        {\n                                \"name\": \"photoUrl\"\n                            }\n                        }\n                    },\n                    \"tags\":
        {\n                        \"type\": \"array\",\n                        \"xml\":
        {\n                            \"wrapped\": true\n                        },\n                        \"items\":
        {\n                            \"$ref\": \"#/components/schemas/Tag\"\n                        }\n                    },\n                    \"status\":
        {\n                        \"type\": \"string\",\n                        \"description\":
        \"pet status in the store\",\n                        \"enum\": [\n                            \"available\",\n                            \"pending\",\n                            \"sold\"\n                        ]\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"pet\"\n                }\n            },\n            \"ApiResponse\":
        {\n                \"type\": \"object\",\n                \"properties\":
        {\n                    \"code\": {\n                        \"type\": \"integer\",\n                        \"format\":
        \"int32\"\n                    },\n                    \"type\": {\n                        \"type\":
        \"string\"\n                    },\n                    \"message\": {\n                        \"type\":
        \"string\"\n                    }\n                },\n                \"xml\":
        {\n                    \"name\": \"##default\"\n                }\n            }\n        },\n        \"requestBodies\":
        {\n            \"Pet\": {\n                \"description\": \"Pet object that
        needs to be added to the store\",\n                \"content\": {\n                    \"application/json\":
        {\n                        \"schema\": {\n                            \"$ref\":
        \"#/components/schemas/Pet\"\n                        }\n                    },\n                    \"application/xml\":
        {\n                        \"schema\": {\n                            \"$ref\":
        \"#/components/schemas/Pet\"\n                        }\n                    }\n                }\n            },\n            \"UserArray\":
        {\n                \"description\": \"List of user object\",\n                \"content\":
        {\n                    \"application/json\": {\n                        \"schema\":
        {\n                            \"type\": \"array\",\n                            \"items\":
        {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"securitySchemes\":
        {\n            \"petstore_auth\": {\n                \"type\": \"oauth2\",\n                \"flows\":
        {\n                    \"implicit\": {\n                        \"authorizationUrl\":
        \"https://petstore3.swagger.io/oauth/authorize\",\n                        \"scopes\":
        {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\":
        \"read your pets\"\n                        }\n                    }\n                }\n            },\n            \"api_key\":
        {\n                \"type\": \"apiKey\",\n                \"name\": \"api_key\",\n                \"in\":
        \"header\"\n            }\n        }\n    }\n}"}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '47761'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 08 May 2024 09:06:36 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
      x-msedge-ref:
      - 'Ref A: 46A9627CBBE6409E8F52AB91C2200402 Ref B: MAA201060515025 Ref C: 2024-05-08T09:06:35Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
version: 1
