interactions:
- request:
    body: '{"format": "inline", "specification": {"name": "openapi", "version": "3.0.0"},
      "value": "{\r\n    \"openapi\": \"3.0.2\",\r\n    \"info\": {\r\n        \"title\":
      \"Swagger Petstore - OpenAPI 3.0\",\r\n        \"description\": \"This is a
      sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find
      out more about\\nSwagger at [http://swagger.io](http://swagger.io). In the third
      iteration of the pet store, we''ve switched to the design first approach!\\nYou
      can now help us improve the API whether it''s by making changes to the definition
      itself or to the code.\\nThat way, with time, we can improve the API in general,
      and expose some of the new features in OAS3.\\n\\nSome useful links:\\n- [The
      Pet Store repository](https://github.com/swagger-api/swagger-petstore)\\n- [The
      source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\r\n        \"termsOfService\":
      \"http://swagger.io/terms/\",\r\n        \"contact\": {\r\n            \"email\":
      \"apiteam@swagger.io\"\r\n        },\r\n        \"license\": {\r\n            \"name\":
      \"Apache 2.0\",\r\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\r\n        },\r\n        \"version\":
      \"1.0.19\"\r\n    },\r\n    \"externalDocs\": {\r\n        \"description\":
      \"Find out more about Swagger\",\r\n        \"url\": \"http://swagger.io\"\r\n    },\r\n    \"servers\":
      [\r\n        {\r\n            \"url\": \"/api/v3\"\r\n        }\r\n    ],\r\n    \"tags\":
      [\r\n        {\r\n            \"name\": \"pet\",\r\n            \"description\":
      \"Everything about your Pets\",\r\n            \"externalDocs\": {\r\n                \"description\":
      \"Find out more\",\r\n                \"url\": \"http://swagger.io\"\r\n            }\r\n        },\r\n        {\r\n            \"name\":
      \"store\",\r\n            \"description\": \"Access to Petstore orders\",\r\n            \"externalDocs\":
      {\r\n                \"description\": \"Find out more about our store\",\r\n                \"url\":
      \"http://swagger.io\"\r\n            }\r\n        },\r\n        {\r\n            \"name\":
      \"user\",\r\n            \"description\": \"Operations about user\"\r\n        }\r\n    ],\r\n    \"paths\":
      {\r\n        \"/pet\": {\r\n            \"put\": {\r\n                \"tags\":
      [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Update an existing pet\",\r\n                \"description\": \"Update an
      existing pet by Id\",\r\n                \"operationId\": \"updatePet\",\r\n                \"requestBody\":
      {\r\n                    \"description\": \"Update an existent pet in the store\",\r\n                    \"content\":
      {\r\n                        \"application/json\": {\r\n                            \"schema\":
      {\r\n                                \"$ref\": \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Pet\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"required\":
      true\r\n                },\r\n                \"responses\": {\r\n                    \"200\":
      {\r\n                        \"description\": \"Successful operation\",\r\n                        \"content\":
      {\r\n                            \"application/xml\": {\r\n                                \"schema\":
      {\r\n                                    \"$ref\": \"#/components/schemas/Pet\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
      {\r\n                        \"description\": \"Pet not found\"\r\n                    },\r\n                    \"405\":
      {\r\n                        \"description\": \"Validation exception\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"post\":
      {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Add a new pet to the store\",\r\n                \"description\": \"Add a
      new pet to the store\",\r\n                \"operationId\": \"addPet\",\r\n                \"requestBody\":
      {\r\n                    \"description\": \"Create a new pet in the store\",\r\n                    \"content\":
      {\r\n                        \"application/json\": {\r\n                            \"schema\":
      {\r\n                                \"$ref\": \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Pet\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"required\":
      true\r\n                },\r\n                \"responses\": {\r\n                    \"200\":
      {\r\n                        \"description\": \"Successful operation\",\r\n                        \"content\":
      {\r\n                            \"application/xml\": {\r\n                                \"schema\":
      {\r\n                                    \"$ref\": \"#/components/schemas/Pet\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"405\":
      {\r\n                        \"description\": \"Invalid input\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/findByStatus\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Finds Pets by status\",\r\n                \"description\": \"Multiple status
      values can be provided with comma separated strings\",\r\n                \"operationId\":
      \"findPetsByStatus\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"status\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"Status values that need to be considered for filter\",\r\n                        \"required\":
      false,\r\n                        \"explode\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\",\r\n                            \"default\":
      \"available\",\r\n                            \"enum\": [\r\n                                \"available\",\r\n                                \"pending\",\r\n                                \"sold\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"type\":
      \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"type\":
      \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid status value\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/findByTags\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Finds Pets by tags\",\r\n                \"description\": \"Multiple tags
      can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\r\n                \"operationId\":
      \"findPetsByTags\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"tags\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"Tags to filter by\",\r\n                        \"required\": false,\r\n                        \"explode\":
      true,\r\n                        \"schema\": {\r\n                            \"type\":
      \"array\",\r\n                            \"items\": {\r\n                                \"type\":
      \"string\"\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"type\":
      \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"type\":
      \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid tag value\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/{petId}\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Find pet by ID\",\r\n                \"description\": \"Returns a single pet\",\r\n                \"operationId\":
      \"getPetById\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"petId\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
      \"ID of pet to return\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
      \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Pet\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
      {\r\n                        \"description\": \"Pet not found\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"api_key\": []\r\n                    },\r\n                    {\r\n                        \"petstore_auth\":
      [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"post\":
      {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Updates a pet in the store with form data\",\r\n                \"description\":
      \"\",\r\n                \"operationId\": \"updatePetWithForm\",\r\n                \"parameters\":
      [\r\n                    {\r\n                        \"name\": \"petId\",\r\n                        \"in\":
      \"path\",\r\n                        \"description\": \"ID of pet that needs
      to be updated\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
      \"int64\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
      \"name\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"Name of pet that needs to be updated\",\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
      \"status\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"Status of pet that needs to be updated\",\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"405\": {\r\n                        \"description\":
      \"Invalid input\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"delete\":
      {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"Deletes a pet\",\r\n                \"description\": \"\",\r\n                \"operationId\":
      \"deletePet\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"api_key\",\r\n                        \"in\": \"header\",\r\n                        \"description\":
      \"\",\r\n                        \"required\": false,\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
      \"petId\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
      \"Pet id to delete\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
      \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"400\": {\r\n                        \"description\":
      \"Invalid pet value\"\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/{petId}/uploadImage\":
      {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
      \"uploads an image\",\r\n                \"description\": \"\",\r\n                \"operationId\":
      \"uploadFile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"petId\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
      \"ID of pet to update\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
      \"int64\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
      \"additionalMetadata\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"Additional Metadata\",\r\n                        \"required\": false,\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"requestBody\":
      {\r\n                    \"content\": {\r\n                        \"application/octet-stream\":
      {\r\n                            \"schema\": {\r\n                                \"type\":
      \"string\",\r\n                                \"format\": \"binary\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/ApiResponse\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/store/inventory\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
      \"Returns pet inventories by status\",\r\n                \"description\": \"Returns
      a map of status codes to quantities\",\r\n                \"operationId\": \"getInventory\",\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"type\":
      \"object\",\r\n                                    \"additionalProperties\":
      {\r\n                                        \"type\": \"integer\",\r\n                                        \"format\":
      \"int32\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"security\":
      [\r\n                    {\r\n                        \"api_key\": []\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/store/order\":
      {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
      \"Place an order for a pet\",\r\n                \"description\": \"Place a
      new order in the store\",\r\n                \"operationId\": \"placeOrder\",\r\n                \"requestBody\":
      {\r\n                    \"content\": {\r\n                        \"application/json\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Order\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Order\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/Order\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Order\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"405\":
      {\r\n                        \"description\": \"Invalid input\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/store/order/{orderId}\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
      \"Find purchase order by ID\",\r\n                \"description\": \"For valid
      response try integer IDs with value <= 5 or > 10. Other values will generate
      exceptions.\",\r\n                \"operationId\": \"getOrderById\",\r\n                \"parameters\":
      [\r\n                    {\r\n                        \"name\": \"orderId\",\r\n                        \"in\":
      \"path\",\r\n                        \"description\": \"ID of order that needs
      to be fetched\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
      \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Order\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/Order\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
      {\r\n                        \"description\": \"Order not found\"\r\n                    }\r\n                }\r\n            },\r\n            \"delete\":
      {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
      \"Delete purchase order by ID\",\r\n                \"description\": \"For valid
      response try integer IDs with value < 1000. Anything above 1000 or nonintegers
      will generate API errors\",\r\n                \"operationId\": \"deleteOrder\",\r\n                \"parameters\":
      [\r\n                    {\r\n                        \"name\": \"orderId\",\r\n                        \"in\":
      \"path\",\r\n                        \"description\": \"ID of the order that
      needs to be deleted\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
      \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"400\": {\r\n                        \"description\":
      \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
      {\r\n                        \"description\": \"Order not found\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user\":
      {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Create user\",\r\n                \"description\": \"This can only be done
      by the logged in user.\",\r\n                \"operationId\": \"createUser\",\r\n                \"requestBody\":
      {\r\n                    \"description\": \"Created user object\",\r\n                    \"content\":
      {\r\n                        \"application/json\": {\r\n                            \"schema\":
      {\r\n                                \"$ref\": \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/User\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
      {\r\n                    \"default\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/User\"\r\n                                }\r\n                            },\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/createWithList\":
      {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Creates list of users with given input array\",\r\n                \"description\":
      \"Creates list of users with given input array\",\r\n                \"operationId\":
      \"createUsersWithListInput\",\r\n                \"requestBody\": {\r\n                    \"content\":
      {\r\n                        \"application/json\": {\r\n                            \"schema\":
      {\r\n                                \"type\": \"array\",\r\n                                \"items\":
      {\r\n                                    \"$ref\": \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"Successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/User\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"default\":
      {\r\n                        \"description\": \"successful operation\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/login\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Logs user into the system\",\r\n                \"description\": \"\",\r\n                \"operationId\":
      \"loginUser\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"username\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"The user name for login\",\r\n                        \"required\": false,\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
      \"password\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
      \"The password for login in clear text\",\r\n                        \"required\":
      false,\r\n                        \"schema\": {\r\n                            \"type\":
      \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"headers\": {\r\n                            \"X-Rate-Limit\":
      {\r\n                                \"description\": \"calls per hour allowed
      by the user\",\r\n                                \"schema\": {\r\n                                    \"type\":
      \"integer\",\r\n                                    \"format\": \"int32\"\r\n                                }\r\n                            },\r\n                            \"X-Expires-After\":
      {\r\n                                \"description\": \"date in UTC when token
      expires\",\r\n                                \"schema\": {\r\n                                    \"type\":
      \"string\",\r\n                                    \"format\": \"date-time\"\r\n                                }\r\n                            }\r\n                        },\r\n                        \"content\":
      {\r\n                            \"application/xml\": {\r\n                                \"schema\":
      {\r\n                                    \"type\": \"string\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"type\":
      \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid username/password supplied\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/logout\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Logs out current logged in user session\",\r\n                \"description\":
      \"\",\r\n                \"operationId\": \"logoutUser\",\r\n                \"parameters\":
      [],\r\n                \"responses\": {\r\n                    \"default\":
      {\r\n                        \"description\": \"successful operation\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/{username}\":
      {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Get user by user name\",\r\n                \"description\": \"\",\r\n                \"operationId\":
      \"getUserByName\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
      \"username\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
      \"The name that needs to be fetched. Use user1 for testing. \",\r\n                        \"required\":
      true,\r\n                        \"schema\": {\r\n                            \"type\":
      \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"200\": {\r\n                        \"description\":
      \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/User\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
      {\r\n                                \"schema\": {\r\n                                    \"$ref\":
      \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
      {\r\n                        \"description\": \"Invalid username supplied\"\r\n                    },\r\n                    \"404\":
      {\r\n                        \"description\": \"User not found\"\r\n                    }\r\n                }\r\n            },\r\n            \"put\":
      {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Update user\",\r\n                \"description\": \"This can only be done
      by the logged in user.\",\r\n                \"operationId\": \"updateUser\",\r\n                \"parameters\":
      [\r\n                    {\r\n                        \"name\": \"username\",\r\n                        \"in\":
      \"path\",\r\n                        \"description\": \"name that needs to be
      updated\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"requestBody\":
      {\r\n                    \"description\": \"Update an existent user in the store\",\r\n                    \"content\":
      {\r\n                        \"application/json\": {\r\n                            \"schema\":
      {\r\n                                \"$ref\": \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
      {\r\n                            \"schema\": {\r\n                                \"$ref\":
      \"#/components/schemas/User\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
      {\r\n                    \"default\": {\r\n                        \"description\":
      \"successful operation\"\r\n                    }\r\n                }\r\n            },\r\n            \"delete\":
      {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
      \"Delete user\",\r\n                \"description\": \"This can only be done
      by the logged in user.\",\r\n                \"operationId\": \"deleteUser\",\r\n                \"parameters\":
      [\r\n                    {\r\n                        \"name\": \"username\",\r\n                        \"in\":
      \"path\",\r\n                        \"description\": \"The name that needs
      to be deleted\",\r\n                        \"required\": true,\r\n                        \"schema\":
      {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
      {\r\n                    \"400\": {\r\n                        \"description\":
      \"Invalid username supplied\"\r\n                    },\r\n                    \"404\":
      {\r\n                        \"description\": \"User not found\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"components\":
      {\r\n        \"schemas\": {\r\n            \"Order\": {\r\n                \"type\":
      \"object\",\r\n                \"properties\": {\r\n                    \"id\":
      {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\",\r\n                        \"example\": 10\r\n                    },\r\n                    \"petId\":
      {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\",\r\n                        \"example\": 198772\r\n                    },\r\n                    \"quantity\":
      {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int32\",\r\n                        \"example\": 7\r\n                    },\r\n                    \"shipDate\":
      {\r\n                        \"type\": \"string\",\r\n                        \"format\":
      \"date-time\"\r\n                    },\r\n                    \"status\": {\r\n                        \"type\":
      \"string\",\r\n                        \"description\": \"Order Status\",\r\n                        \"example\":
      \"approved\",\r\n                        \"enum\": [\r\n                            \"placed\",\r\n                            \"approved\",\r\n                            \"delivered\"\r\n                        ]\r\n                    },\r\n                    \"complete\":
      {\r\n                        \"type\": \"boolean\"\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"order\"\r\n                }\r\n            },\r\n            \"Customer\":
      {\r\n                \"type\": \"object\",\r\n                \"properties\":
      {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\",\r\n                        \"example\": 100000\r\n                    },\r\n                    \"username\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"fehguy\"\r\n                    },\r\n                    \"address\": {\r\n                        \"type\":
      \"array\",\r\n                        \"xml\": {\r\n                            \"name\":
      \"addresses\",\r\n                            \"wrapped\": true\r\n                        },\r\n                        \"items\":
      {\r\n                            \"$ref\": \"#/components/schemas/Address\"\r\n                        }\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"customer\"\r\n                }\r\n            },\r\n            \"Address\":
      {\r\n                \"type\": \"object\",\r\n                \"properties\":
      {\r\n                    \"street\": {\r\n                        \"type\":
      \"string\",\r\n                        \"example\": \"437 Lytton\"\r\n                    },\r\n                    \"city\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"Palo Alto\"\r\n                    },\r\n                    \"state\": {\r\n                        \"type\":
      \"string\",\r\n                        \"example\": \"CA\"\r\n                    },\r\n                    \"zip\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"94301\"\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"address\"\r\n                }\r\n            },\r\n            \"Category\":
      {\r\n                \"type\": \"object\",\r\n                \"properties\":
      {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\",\r\n                        \"example\": 1\r\n                    },\r\n                    \"name\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"Dogs\"\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"category\"\r\n                }\r\n            },\r\n            \"User\":
      {\r\n                \"type\": \"object\",\r\n                \"properties\":
      {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\",\r\n                        \"example\": 10\r\n                    },\r\n                    \"username\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"theUser\"\r\n                    },\r\n                    \"firstName\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"John\"\r\n                    },\r\n                    \"lastName\": {\r\n                        \"type\":
      \"string\",\r\n                        \"example\": \"James\"\r\n                    },\r\n                    \"email\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"john@email.com\"\r\n                    },\r\n                    \"password\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"12345\"\r\n                    },\r\n                    \"phone\": {\r\n                        \"type\":
      \"string\",\r\n                        \"example\": \"12345\"\r\n                    },\r\n                    \"userStatus\":
      {\r\n                        \"type\": \"integer\",\r\n                        \"description\":
      \"User Status\",\r\n                        \"format\": \"int32\",\r\n                        \"example\":
      1\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"user\"\r\n                }\r\n            },\r\n            \"Tag\":
      {\r\n                \"type\": \"object\",\r\n                \"properties\":
      {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\"\r\n                    },\r\n                    \"name\": {\r\n                        \"type\":
      \"string\"\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"tag\"\r\n                }\r\n            },\r\n            \"Pet\":
      {\r\n                \"required\": [\r\n                    \"name\",\r\n                    \"photoUrls\"\r\n                ],\r\n                \"type\":
      \"object\",\r\n                \"properties\": {\r\n                    \"id\":
      {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int64\",\r\n                        \"example\": 10\r\n                    },\r\n                    \"name\":
      {\r\n                        \"type\": \"string\",\r\n                        \"example\":
      \"doggie\"\r\n                    },\r\n                    \"category\": {\r\n                        \"$ref\":
      \"#/components/schemas/Category\"\r\n                    },\r\n                    \"photoUrls\":
      {\r\n                        \"type\": \"array\",\r\n                        \"xml\":
      {\r\n                            \"wrapped\": true\r\n                        },\r\n                        \"items\":
      {\r\n                            \"type\": \"string\",\r\n                            \"xml\":
      {\r\n                                \"name\": \"photoUrl\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"tags\":
      {\r\n                        \"type\": \"array\",\r\n                        \"xml\":
      {\r\n                            \"wrapped\": true\r\n                        },\r\n                        \"items\":
      {\r\n                            \"$ref\": \"#/components/schemas/Tag\"\r\n                        }\r\n                    },\r\n                    \"status\":
      {\r\n                        \"type\": \"string\",\r\n                        \"description\":
      \"pet status in the store\",\r\n                        \"enum\": [\r\n                            \"available\",\r\n                            \"pending\",\r\n                            \"sold\"\r\n                        ]\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"pet\"\r\n                }\r\n            },\r\n            \"ApiResponse\":
      {\r\n                \"type\": \"object\",\r\n                \"properties\":
      {\r\n                    \"code\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
      \"int32\"\r\n                    },\r\n                    \"type\": {\r\n                        \"type\":
      \"string\"\r\n                    },\r\n                    \"message\": {\r\n                        \"type\":
      \"string\"\r\n                    }\r\n                },\r\n                \"xml\":
      {\r\n                    \"name\": \"##default\"\r\n                }\r\n            }\r\n        },\r\n        \"requestBodies\":
      {\r\n            \"Pet\": {\r\n                \"description\": \"Pet object
      that needs to be added to the store\",\r\n                \"content\": {\r\n                    \"application/json\":
      {\r\n                        \"schema\": {\r\n                            \"$ref\":
      \"#/components/schemas/Pet\"\r\n                        }\r\n                    },\r\n                    \"application/xml\":
      {\r\n                        \"schema\": {\r\n                            \"$ref\":
      \"#/components/schemas/Pet\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"UserArray\":
      {\r\n                \"description\": \"List of user object\",\r\n                \"content\":
      {\r\n                    \"application/json\": {\r\n                        \"schema\":
      {\r\n                            \"type\": \"array\",\r\n                            \"items\":
      {\r\n                                \"$ref\": \"#/components/schemas/User\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"securitySchemes\":
      {\r\n            \"petstore_auth\": {\r\n                \"type\": \"oauth2\",\r\n                \"flows\":
      {\r\n                    \"implicit\": {\r\n                        \"authorizationUrl\":
      \"https://petstore3.swagger.io/oauth/authorize\",\r\n                        \"scopes\":
      {\r\n                            \"write:pets\": \"modify pets in your account\",\r\n                            \"read:pets\":
      \"read your pets\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"api_key\":
      {\r\n                \"type\": \"apiKey\",\r\n                \"name\": \"api_key\",\r\n                \"in\":
      \"header\"\r\n            }\r\n        }\r\n    }\r\n}"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api definition import-specification
      Connection:
      - keep-alive
      Content-Length:
      - '50270'
      Content-Type:
      - application/json
      ParameterSetName:
      - -g -n --api-id --version-id --definition-id --format --specification --value
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.11.9 (Windows-10-10.0.19045-SP0)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/clitest000003/versions/clitest000004/definitions/clitest000005/importSpecification?api-version=2024-03-01
  response:
    body:
      string: ''
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '0'
      date:
      - Mon, 17 Jun 2024 06:03:47 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '2999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '199'
      x-msedge-ref:
      - 'Ref A: 8C455F59E642464EB085D46A4B534E82 Ref B: MAA201060513035 Ref C: 2024-06-17T06:03:45Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      CommandName:
      - apic api definition export-specification
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      ParameterSetName:
      - -g -n --api-id --version-id --definition-id --file-name
      User-Agent:
      - AZURECLI/2.58.0 azsdk-python-core/1.28.0 Python/3.11.9 (Windows-10-10.0.19045-SP0)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/clirg000001/providers/Microsoft.ApiCenter/services/clitest000002/workspaces/default/apis/clitest000003/versions/clitest000004/definitions/clitest000005/exportSpecification?api-version=2024-03-01
  response:
    body:
      string: '{"format":"inline","value":"{\r\n    \"openapi\": \"3.0.2\",\r\n    \"info\":
        {\r\n        \"title\": \"Swagger Petstore - OpenAPI 3.0\",\r\n        \"description\":
        \"This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You
        can find out more about\\nSwagger at [http://swagger.io](http://swagger.io).
        In the third iteration of the pet store, we''ve switched to the design first
        approach!\\nYou can now help us improve the API whether it''s by making changes
        to the definition itself or to the code.\\nThat way, with time, we can improve
        the API in general, and expose some of the new features in OAS3.\\n\\nSome
        useful links:\\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\\n-
        [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\r\n        \"termsOfService\":
        \"http://swagger.io/terms/\",\r\n        \"contact\": {\r\n            \"email\":
        \"apiteam@swagger.io\"\r\n        },\r\n        \"license\": {\r\n            \"name\":
        \"Apache 2.0\",\r\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\r\n        },\r\n        \"version\":
        \"1.0.19\"\r\n    },\r\n    \"externalDocs\": {\r\n        \"description\":
        \"Find out more about Swagger\",\r\n        \"url\": \"http://swagger.io\"\r\n    },\r\n    \"servers\":
        [\r\n        {\r\n            \"url\": \"/api/v3\"\r\n        }\r\n    ],\r\n    \"tags\":
        [\r\n        {\r\n            \"name\": \"pet\",\r\n            \"description\":
        \"Everything about your Pets\",\r\n            \"externalDocs\": {\r\n                \"description\":
        \"Find out more\",\r\n                \"url\": \"http://swagger.io\"\r\n            }\r\n        },\r\n        {\r\n            \"name\":
        \"store\",\r\n            \"description\": \"Access to Petstore orders\",\r\n            \"externalDocs\":
        {\r\n                \"description\": \"Find out more about our store\",\r\n                \"url\":
        \"http://swagger.io\"\r\n            }\r\n        },\r\n        {\r\n            \"name\":
        \"user\",\r\n            \"description\": \"Operations about user\"\r\n        }\r\n    ],\r\n    \"paths\":
        {\r\n        \"/pet\": {\r\n            \"put\": {\r\n                \"tags\":
        [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Update an existing pet\",\r\n                \"description\": \"Update an
        existing pet by Id\",\r\n                \"operationId\": \"updatePet\",\r\n                \"requestBody\":
        {\r\n                    \"description\": \"Update an existent pet in the
        store\",\r\n                    \"content\": {\r\n                        \"application/json\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Pet\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"required\":
        true\r\n                },\r\n                \"responses\": {\r\n                    \"200\":
        {\r\n                        \"description\": \"Successful operation\",\r\n                        \"content\":
        {\r\n                            \"application/xml\": {\r\n                                \"schema\":
        {\r\n                                    \"$ref\": \"#/components/schemas/Pet\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
        {\r\n                        \"description\": \"Pet not found\"\r\n                    },\r\n                    \"405\":
        {\r\n                        \"description\": \"Validation exception\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"post\":
        {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Add a new pet to the store\",\r\n                \"description\": \"Add
        a new pet to the store\",\r\n                \"operationId\": \"addPet\",\r\n                \"requestBody\":
        {\r\n                    \"description\": \"Create a new pet in the store\",\r\n                    \"content\":
        {\r\n                        \"application/json\": {\r\n                            \"schema\":
        {\r\n                                \"$ref\": \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Pet\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Pet\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"required\":
        true\r\n                },\r\n                \"responses\": {\r\n                    \"200\":
        {\r\n                        \"description\": \"Successful operation\",\r\n                        \"content\":
        {\r\n                            \"application/xml\": {\r\n                                \"schema\":
        {\r\n                                    \"$ref\": \"#/components/schemas/Pet\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"405\":
        {\r\n                        \"description\": \"Invalid input\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/findByStatus\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Finds Pets by status\",\r\n                \"description\": \"Multiple status
        values can be provided with comma separated strings\",\r\n                \"operationId\":
        \"findPetsByStatus\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
        \"status\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"Status values that need to be considered for filter\",\r\n                        \"required\":
        false,\r\n                        \"explode\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\",\r\n                            \"default\":
        \"available\",\r\n                            \"enum\": [\r\n                                \"available\",\r\n                                \"pending\",\r\n                                \"sold\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"type\":
        \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"type\":
        \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid status value\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/findByTags\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Finds Pets by tags\",\r\n                \"description\": \"Multiple tags
        can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\r\n                \"operationId\":
        \"findPetsByTags\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
        \"tags\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"Tags to filter by\",\r\n                        \"required\": false,\r\n                        \"explode\":
        true,\r\n                        \"schema\": {\r\n                            \"type\":
        \"array\",\r\n                            \"items\": {\r\n                                \"type\":
        \"string\"\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"type\":
        \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"type\":
        \"array\",\r\n                                    \"items\": {\r\n                                        \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid tag value\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/{petId}\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Find pet by ID\",\r\n                \"description\": \"Returns a single
        pet\",\r\n                \"operationId\": \"getPetById\",\r\n                \"parameters\":
        [\r\n                    {\r\n                        \"name\": \"petId\",\r\n                        \"in\":
        \"path\",\r\n                        \"description\": \"ID of pet to return\",\r\n                        \"required\":
        true,\r\n                        \"schema\": {\r\n                            \"type\":
        \"integer\",\r\n                            \"format\": \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Pet\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
        {\r\n                        \"description\": \"Pet not found\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"api_key\": []\r\n                    },\r\n                    {\r\n                        \"petstore_auth\":
        [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"post\":
        {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Updates a pet in the store with form data\",\r\n                \"description\":
        \"\",\r\n                \"operationId\": \"updatePetWithForm\",\r\n                \"parameters\":
        [\r\n                    {\r\n                        \"name\": \"petId\",\r\n                        \"in\":
        \"path\",\r\n                        \"description\": \"ID of pet that needs
        to be updated\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
        \"int64\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
        \"name\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"Name of pet that needs to be updated\",\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
        \"status\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"Status of pet that needs to be updated\",\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"405\": {\r\n                        \"description\":
        \"Invalid input\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"delete\":
        {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"Deletes a pet\",\r\n                \"description\": \"\",\r\n                \"operationId\":
        \"deletePet\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
        \"api_key\",\r\n                        \"in\": \"header\",\r\n                        \"description\":
        \"\",\r\n                        \"required\": false,\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
        \"petId\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
        \"Pet id to delete\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
        \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"400\": {\r\n                        \"description\":
        \"Invalid pet value\"\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/pet/{petId}/uploadImage\":
        {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"pet\"\r\n                ],\r\n                \"summary\":
        \"uploads an image\",\r\n                \"description\": \"\",\r\n                \"operationId\":
        \"uploadFile\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
        \"petId\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
        \"ID of pet to update\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
        \"int64\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
        \"additionalMetadata\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"Additional Metadata\",\r\n                        \"required\": false,\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"requestBody\":
        {\r\n                    \"content\": {\r\n                        \"application/octet-stream\":
        {\r\n                            \"schema\": {\r\n                                \"type\":
        \"string\",\r\n                                \"format\": \"binary\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/ApiResponse\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"petstore_auth\": [\r\n                            \"write:pets\",\r\n                            \"read:pets\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/store/inventory\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
        \"Returns pet inventories by status\",\r\n                \"description\":
        \"Returns a map of status codes to quantities\",\r\n                \"operationId\":
        \"getInventory\",\r\n                \"responses\": {\r\n                    \"200\":
        {\r\n                        \"description\": \"successful operation\",\r\n                        \"content\":
        {\r\n                            \"application/json\": {\r\n                                \"schema\":
        {\r\n                                    \"type\": \"object\",\r\n                                    \"additionalProperties\":
        {\r\n                                        \"type\": \"integer\",\r\n                                        \"format\":
        \"int32\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"security\":
        [\r\n                    {\r\n                        \"api_key\": []\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"/store/order\":
        {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
        \"Place an order for a pet\",\r\n                \"description\": \"Place
        a new order in the store\",\r\n                \"operationId\": \"placeOrder\",\r\n                \"requestBody\":
        {\r\n                    \"content\": {\r\n                        \"application/json\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Order\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Order\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/Order\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Order\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"405\":
        {\r\n                        \"description\": \"Invalid input\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/store/order/{orderId}\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
        \"Find purchase order by ID\",\r\n                \"description\": \"For valid
        response try integer IDs with value <= 5 or > 10. Other values will generate
        exceptions.\",\r\n                \"operationId\": \"getOrderById\",\r\n                \"parameters\":
        [\r\n                    {\r\n                        \"name\": \"orderId\",\r\n                        \"in\":
        \"path\",\r\n                        \"description\": \"ID of order that needs
        to be fetched\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
        \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Order\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/Order\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
        {\r\n                        \"description\": \"Order not found\"\r\n                    }\r\n                }\r\n            },\r\n            \"delete\":
        {\r\n                \"tags\": [\r\n                    \"store\"\r\n                ],\r\n                \"summary\":
        \"Delete purchase order by ID\",\r\n                \"description\": \"For
        valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers
        will generate API errors\",\r\n                \"operationId\": \"deleteOrder\",\r\n                \"parameters\":
        [\r\n                    {\r\n                        \"name\": \"orderId\",\r\n                        \"in\":
        \"path\",\r\n                        \"description\": \"ID of the order that
        needs to be deleted\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"integer\",\r\n                            \"format\":
        \"int64\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"400\": {\r\n                        \"description\":
        \"Invalid ID supplied\"\r\n                    },\r\n                    \"404\":
        {\r\n                        \"description\": \"Order not found\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user\":
        {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Create user\",\r\n                \"description\": \"This can only be done
        by the logged in user.\",\r\n                \"operationId\": \"createUser\",\r\n                \"requestBody\":
        {\r\n                    \"description\": \"Created user object\",\r\n                    \"content\":
        {\r\n                        \"application/json\": {\r\n                            \"schema\":
        {\r\n                                \"$ref\": \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/User\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
        {\r\n                    \"default\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/User\"\r\n                                }\r\n                            },\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/createWithList\":
        {\r\n            \"post\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Creates list of users with given input array\",\r\n                \"description\":
        \"Creates list of users with given input array\",\r\n                \"operationId\":
        \"createUsersWithListInput\",\r\n                \"requestBody\": {\r\n                    \"content\":
        {\r\n                        \"application/json\": {\r\n                            \"schema\":
        {\r\n                                \"type\": \"array\",\r\n                                \"items\":
        {\r\n                                    \"$ref\": \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"Successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/User\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"default\":
        {\r\n                        \"description\": \"successful operation\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/login\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Logs user into the system\",\r\n                \"description\": \"\",\r\n                \"operationId\":
        \"loginUser\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
        \"username\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"The user name for login\",\r\n                        \"required\": false,\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"name\":
        \"password\",\r\n                        \"in\": \"query\",\r\n                        \"description\":
        \"The password for login in clear text\",\r\n                        \"required\":
        false,\r\n                        \"schema\": {\r\n                            \"type\":
        \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"headers\": {\r\n                            \"X-Rate-Limit\":
        {\r\n                                \"description\": \"calls per hour allowed
        by the user\",\r\n                                \"schema\": {\r\n                                    \"type\":
        \"integer\",\r\n                                    \"format\": \"int32\"\r\n                                }\r\n                            },\r\n                            \"X-Expires-After\":
        {\r\n                                \"description\": \"date in UTC when token
        expires\",\r\n                                \"schema\": {\r\n                                    \"type\":
        \"string\",\r\n                                    \"format\": \"date-time\"\r\n                                }\r\n                            }\r\n                        },\r\n                        \"content\":
        {\r\n                            \"application/xml\": {\r\n                                \"schema\":
        {\r\n                                    \"type\": \"string\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"type\":
        \"string\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid username/password
        supplied\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/logout\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Logs out current logged in user session\",\r\n                \"description\":
        \"\",\r\n                \"operationId\": \"logoutUser\",\r\n                \"parameters\":
        [],\r\n                \"responses\": {\r\n                    \"default\":
        {\r\n                        \"description\": \"successful operation\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/user/{username}\":
        {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Get user by user name\",\r\n                \"description\": \"\",\r\n                \"operationId\":
        \"getUserByName\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\":
        \"username\",\r\n                        \"in\": \"path\",\r\n                        \"description\":
        \"The name that needs to be fetched. Use user1 for testing. \",\r\n                        \"required\":
        true,\r\n                        \"schema\": {\r\n                            \"type\":
        \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"200\": {\r\n                        \"description\":
        \"successful operation\",\r\n                        \"content\": {\r\n                            \"application/xml\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/User\"\r\n                                }\r\n                            },\r\n                            \"application/json\":
        {\r\n                                \"schema\": {\r\n                                    \"$ref\":
        \"#/components/schemas/User\"\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\":
        {\r\n                        \"description\": \"Invalid username supplied\"\r\n                    },\r\n                    \"404\":
        {\r\n                        \"description\": \"User not found\"\r\n                    }\r\n                }\r\n            },\r\n            \"put\":
        {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Update user\",\r\n                \"description\": \"This can only be done
        by the logged in user.\",\r\n                \"operationId\": \"updateUser\",\r\n                \"parameters\":
        [\r\n                    {\r\n                        \"name\": \"username\",\r\n                        \"in\":
        \"path\",\r\n                        \"description\": \"name that needs to
        be updated\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"requestBody\":
        {\r\n                    \"description\": \"Update an existent user in the
        store\",\r\n                    \"content\": {\r\n                        \"application/json\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/xml\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/User\"\r\n                            }\r\n                        },\r\n                        \"application/x-www-form-urlencoded\":
        {\r\n                            \"schema\": {\r\n                                \"$ref\":
        \"#/components/schemas/User\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\":
        {\r\n                    \"default\": {\r\n                        \"description\":
        \"successful operation\"\r\n                    }\r\n                }\r\n            },\r\n            \"delete\":
        {\r\n                \"tags\": [\r\n                    \"user\"\r\n                ],\r\n                \"summary\":
        \"Delete user\",\r\n                \"description\": \"This can only be done
        by the logged in user.\",\r\n                \"operationId\": \"deleteUser\",\r\n                \"parameters\":
        [\r\n                    {\r\n                        \"name\": \"username\",\r\n                        \"in\":
        \"path\",\r\n                        \"description\": \"The name that needs
        to be deleted\",\r\n                        \"required\": true,\r\n                        \"schema\":
        {\r\n                            \"type\": \"string\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\":
        {\r\n                    \"400\": {\r\n                        \"description\":
        \"Invalid username supplied\"\r\n                    },\r\n                    \"404\":
        {\r\n                        \"description\": \"User not found\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"components\":
        {\r\n        \"schemas\": {\r\n            \"Order\": {\r\n                \"type\":
        \"object\",\r\n                \"properties\": {\r\n                    \"id\":
        {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\",\r\n                        \"example\": 10\r\n                    },\r\n                    \"petId\":
        {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\",\r\n                        \"example\": 198772\r\n                    },\r\n                    \"quantity\":
        {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int32\",\r\n                        \"example\": 7\r\n                    },\r\n                    \"shipDate\":
        {\r\n                        \"type\": \"string\",\r\n                        \"format\":
        \"date-time\"\r\n                    },\r\n                    \"status\":
        {\r\n                        \"type\": \"string\",\r\n                        \"description\":
        \"Order Status\",\r\n                        \"example\": \"approved\",\r\n                        \"enum\":
        [\r\n                            \"placed\",\r\n                            \"approved\",\r\n                            \"delivered\"\r\n                        ]\r\n                    },\r\n                    \"complete\":
        {\r\n                        \"type\": \"boolean\"\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"order\"\r\n                }\r\n            },\r\n            \"Customer\":
        {\r\n                \"type\": \"object\",\r\n                \"properties\":
        {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\",\r\n                        \"example\": 100000\r\n                    },\r\n                    \"username\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"fehguy\"\r\n                    },\r\n                    \"address\": {\r\n                        \"type\":
        \"array\",\r\n                        \"xml\": {\r\n                            \"name\":
        \"addresses\",\r\n                            \"wrapped\": true\r\n                        },\r\n                        \"items\":
        {\r\n                            \"$ref\": \"#/components/schemas/Address\"\r\n                        }\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"customer\"\r\n                }\r\n            },\r\n            \"Address\":
        {\r\n                \"type\": \"object\",\r\n                \"properties\":
        {\r\n                    \"street\": {\r\n                        \"type\":
        \"string\",\r\n                        \"example\": \"437 Lytton\"\r\n                    },\r\n                    \"city\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"Palo Alto\"\r\n                    },\r\n                    \"state\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"CA\"\r\n                    },\r\n                    \"zip\": {\r\n                        \"type\":
        \"string\",\r\n                        \"example\": \"94301\"\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"address\"\r\n                }\r\n            },\r\n            \"Category\":
        {\r\n                \"type\": \"object\",\r\n                \"properties\":
        {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\",\r\n                        \"example\": 1\r\n                    },\r\n                    \"name\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"Dogs\"\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"category\"\r\n                }\r\n            },\r\n            \"User\":
        {\r\n                \"type\": \"object\",\r\n                \"properties\":
        {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\",\r\n                        \"example\": 10\r\n                    },\r\n                    \"username\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"theUser\"\r\n                    },\r\n                    \"firstName\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"John\"\r\n                    },\r\n                    \"lastName\": {\r\n                        \"type\":
        \"string\",\r\n                        \"example\": \"James\"\r\n                    },\r\n                    \"email\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"john@email.com\"\r\n                    },\r\n                    \"password\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"12345\"\r\n                    },\r\n                    \"phone\": {\r\n                        \"type\":
        \"string\",\r\n                        \"example\": \"12345\"\r\n                    },\r\n                    \"userStatus\":
        {\r\n                        \"type\": \"integer\",\r\n                        \"description\":
        \"User Status\",\r\n                        \"format\": \"int32\",\r\n                        \"example\":
        1\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"user\"\r\n                }\r\n            },\r\n            \"Tag\":
        {\r\n                \"type\": \"object\",\r\n                \"properties\":
        {\r\n                    \"id\": {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\"\r\n                    },\r\n                    \"name\": {\r\n                        \"type\":
        \"string\"\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"tag\"\r\n                }\r\n            },\r\n            \"Pet\":
        {\r\n                \"required\": [\r\n                    \"name\",\r\n                    \"photoUrls\"\r\n                ],\r\n                \"type\":
        \"object\",\r\n                \"properties\": {\r\n                    \"id\":
        {\r\n                        \"type\": \"integer\",\r\n                        \"format\":
        \"int64\",\r\n                        \"example\": 10\r\n                    },\r\n                    \"name\":
        {\r\n                        \"type\": \"string\",\r\n                        \"example\":
        \"doggie\"\r\n                    },\r\n                    \"category\":
        {\r\n                        \"$ref\": \"#/components/schemas/Category\"\r\n                    },\r\n                    \"photoUrls\":
        {\r\n                        \"type\": \"array\",\r\n                        \"xml\":
        {\r\n                            \"wrapped\": true\r\n                        },\r\n                        \"items\":
        {\r\n                            \"type\": \"string\",\r\n                            \"xml\":
        {\r\n                                \"name\": \"photoUrl\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"tags\":
        {\r\n                        \"type\": \"array\",\r\n                        \"xml\":
        {\r\n                            \"wrapped\": true\r\n                        },\r\n                        \"items\":
        {\r\n                            \"$ref\": \"#/components/schemas/Tag\"\r\n                        }\r\n                    },\r\n                    \"status\":
        {\r\n                        \"type\": \"string\",\r\n                        \"description\":
        \"pet status in the store\",\r\n                        \"enum\": [\r\n                            \"available\",\r\n                            \"pending\",\r\n                            \"sold\"\r\n                        ]\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"pet\"\r\n                }\r\n            },\r\n            \"ApiResponse\":
        {\r\n                \"type\": \"object\",\r\n                \"properties\":
        {\r\n                    \"code\": {\r\n                        \"type\":
        \"integer\",\r\n                        \"format\": \"int32\"\r\n                    },\r\n                    \"type\":
        {\r\n                        \"type\": \"string\"\r\n                    },\r\n                    \"message\":
        {\r\n                        \"type\": \"string\"\r\n                    }\r\n                },\r\n                \"xml\":
        {\r\n                    \"name\": \"##default\"\r\n                }\r\n            }\r\n        },\r\n        \"requestBodies\":
        {\r\n            \"Pet\": {\r\n                \"description\": \"Pet object
        that needs to be added to the store\",\r\n                \"content\": {\r\n                    \"application/json\":
        {\r\n                        \"schema\": {\r\n                            \"$ref\":
        \"#/components/schemas/Pet\"\r\n                        }\r\n                    },\r\n                    \"application/xml\":
        {\r\n                        \"schema\": {\r\n                            \"$ref\":
        \"#/components/schemas/Pet\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"UserArray\":
        {\r\n                \"description\": \"List of user object\",\r\n                \"content\":
        {\r\n                    \"application/json\": {\r\n                        \"schema\":
        {\r\n                            \"type\": \"array\",\r\n                            \"items\":
        {\r\n                                \"$ref\": \"#/components/schemas/User\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"securitySchemes\":
        {\r\n            \"petstore_auth\": {\r\n                \"type\": \"oauth2\",\r\n                \"flows\":
        {\r\n                    \"implicit\": {\r\n                        \"authorizationUrl\":
        \"https://petstore3.swagger.io/oauth/authorize\",\r\n                        \"scopes\":
        {\r\n                            \"write:pets\": \"modify pets in your account\",\r\n                            \"read:pets\":
        \"read your pets\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"api_key\":
        {\r\n                \"type\": \"apiKey\",\r\n                \"name\": \"api_key\",\r\n                \"in\":
        \"header\"\r\n            }\r\n        }\r\n    }\r\n}"}'
    headers:
      api-supported-versions:
      - 2023-07-01-preview, 2024-03-01, 2024-03-15-preview
      cache-control:
      - no-cache
      content-length:
      - '50209'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 17 Jun 2024 06:03:54 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      vary:
      - Accept-Encoding
      x-cache:
      - CONFIG_NOCACHE
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-global-writes:
      - '2999'
      x-ms-ratelimit-remaining-subscription-writes:
      - '199'
      x-msedge-ref:
      - 'Ref A: E5D02F568CEB486C8CC38BC870356031 Ref B: MAA201060516021 Ref C: 2024-06-17T06:03:49Z'
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
version: 1
