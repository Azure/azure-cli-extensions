# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Environments/put/EnvironmentsCreate
@try_manual
def step_environment_gen1_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights environment gen1 create '
             '--name "{myEnvironment}" '
             '--location "West US" '
             '--data-retention-time "P31D" '
             '--partition-key-properties name="DeviceId1" type="String" '
             '--sku name="S1" capacity=1 '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/get/EnvironmentsByResourceGroup
@try_manual
def step_environment_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights environment list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/get/EnvironmentsBySubscription
@try_manual
def step_environment_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights environment list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Environments/get/EnvironmentsGet
@try_manual
def step_environment_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights environment show '
             '--name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/patch/EnvironmentsUpdate
@try_manual
def step_environment_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights environment update '
             '--name "{myEnvironment}" '
             '--tags someTag="someTagValue" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/put/AccessPoliciesCreate
@try_manual
def step_access_policy_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights access-policy create '
             '--name "{myAccessPolicy}" '
             '--environment-name "{myEnvironment}" '
             '--description "some description" '
             '--principal-object-id "aGuid" '
             '--roles "Reader" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/get/AccessPoliciesByEnvironment
@try_manual
def step_access_policy_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights access-policy list '
             '--environment-name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/get/AccessPoliciesGet
@try_manual
def step_access_policy_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights access-policy show '
             '--name "{myAccessPolicy}" '
             '--environment-name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/patch/AccessPoliciesUpdate
@try_manual
def step_access_policy_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights access-policy update '
             '--name "{myAccessPolicy}" '
             '--roles "Reader" '
             '--roles "Contributor" '
             '--environment-name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/delete/AccessPoliciesDelete
@try_manual
def step_access_policy_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights access-policy delete -y '
             '--name "{myAccessPolicy}" '
             '--environment-name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EventSources/put/CreateEventHubEventSource
@try_manual
def step_event_source_microsoft__event_hub_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights event-source microsoft.-event-hub create '
             '--environment-name "{myEnvironment}" '
             '--name "{myEventSource}" '
             '--location "West US" '
             '--consumer-group-name "cgn" '
             '--event-hub-name "ehn" '
             '--event-source-resource-id "somePathInArm" '
             '--key-name "managementKey" '
             '--service-bus-namespace "sbn" '
             '--shared-access-key "someSecretvalue" '
             '--timestamp-property-name "someTimestampProperty" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EventSources/get/GetEventHubEventSource
@try_manual
def step_event_source_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights event-source show '
             '--environment-name "{myEnvironment}" '
             '--name "{myEventSource}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EventSources/get/ListEventSourcesByEnvironment
@try_manual
def step_event_source_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights event-source list '
             '--environment-name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EventSources/patch/UpdateEventSource
@try_manual
def step_event_source_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights event-source update '
             '--environment-name "{myEnvironment}" '
             '--name "{myEventSource}" '
             '--tags someKey="someValue" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EventSources/delete/DeleteEventSource
@try_manual
def step_event_source_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights event-source delete -y '
             '--environment-name "{myEnvironment}" '
             '--name "{myEventSource}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ReferenceDataSets/put/ReferenceDataSetsCreate
@try_manual
def step_reference_data_set_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights reference-data-set create '
             '--environment-name "{myEnvironment}" '
             '--location "West US" '
             '--key-properties name="DeviceId1" type="String" '
             '--key-properties name="DeviceFloor" type="Double" '
             '--name "{myReferenceDataSet}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ReferenceDataSets/get/ReferenceDataSetsGet
@try_manual
def step_reference_data_set_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights reference-data-set show '
             '--environment-name "{myEnvironment}" '
             '--name "{myReferenceDataSet}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ReferenceDataSets/get/ReferenceDataSetsListByEnvironment
@try_manual
def step_reference_data_set_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights reference-data-set list '
             '--environment-name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ReferenceDataSets/patch/ReferenceDataSetsUpdate
@try_manual
def step_reference_data_set_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights reference-data-set update '
             '--environment-name "{myEnvironment}" '
             '--name "{myReferenceDataSet}" '
             '--tags someKey="someValue" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ReferenceDataSets/delete/ReferenceDataSetsDelete
@try_manual
def step_reference_data_set_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights reference-data-set delete -y '
             '--environment-name "{myEnvironment}" '
             '--name "{myReferenceDataSet}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/delete/EnvironmentsDelete
@try_manual
def step_environment_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az timeseriesinsights environment delete -y '
             '--name "{myEnvironment}" '
             '--resource-group "{rg}"',
             checks=checks)

