# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /AccessPolicies/put/AccessPoliciesCreate
@try_manual
def step__accesspolicies_put_accesspoliciescreate(test, rg):
    test.cmd('az timeseriesinsights access-policy create '
             '--name "{myAccessPolicy}" '
             '--environment-name "env1" '
             '--description "some description" '
             '--principal-object-id "aGuid" '
             '--roles "Reader" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("name", "{myAccessPolicy}", case_sensitive=False),
                 test.check("description", "some description", case_sensitive=False),
                 test.check("principalObjectId", "aGuid", case_sensitive=False),
             ])


# EXAMPLE: /AccessPolicies/get/AccessPoliciesByEnvironment
@try_manual
def step__accesspolicies_get(test, rg):
    test.cmd('az timeseriesinsights access-policy list '
             '--environment-name "env1" '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /AccessPolicies/get/AccessPoliciesGet
@try_manual
def step__accesspolicies_get_accesspoliciesget(test, rg):
    test.cmd('az timeseriesinsights access-policy show '
             '--name "{myAccessPolicy}" '
             '--environment-name "env1" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("name", "{myAccessPolicy}", case_sensitive=False),
                 test.check("description", "some description", case_sensitive=False),
                 test.check("principalObjectId", "aGuid", case_sensitive=False),
             ])


# EXAMPLE: /AccessPolicies/patch/AccessPoliciesUpdate
@try_manual
def step__accesspolicies_patch_accesspoliciesupdate(test, rg):
    test.cmd('az timeseriesinsights access-policy update '
             '--name "{myAccessPolicy}" '
             '--roles "Reader" '
             '--roles "Contributor" '
             '--environment-name "env1" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("name", "{myAccessPolicy}", case_sensitive=False),
                 test.check("description", "some description", case_sensitive=False),
                 test.check("principalObjectId", "aGuid", case_sensitive=False),
             ])


# EXAMPLE: /AccessPolicies/delete/AccessPoliciesDelete
@try_manual
def step__accesspolicies_delete_accesspoliciesdelete(test, rg):
    test.cmd('az timeseriesinsights access-policy delete -y '
             '--name "{myAccessPolicy}" '
             '--environment-name "env1" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /ReferenceDataSets/put/ReferenceDataSetsCreate
@try_manual
def step__referencedatasets_put(test, rg):
    test.cmd('az timeseriesinsights reference-data-set create '
             '--environment-name "env1" '
             '--location "West US" '
             '--key-properties name="DeviceId1" type="String" '
             '--key-properties name="DeviceFloor" type="Double" '
             '--name "{myReferenceDataSet}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "West US", case_sensitive=False),
                 test.check("name", "{myReferenceDataSet}", case_sensitive=False),
             ])


# EXAMPLE: /ReferenceDataSets/get/ReferenceDataSetsGet
@try_manual
def step__referencedatasets_get_referencedatasetsget(test, rg):
    test.cmd('az timeseriesinsights reference-data-set show '
             '--environment-name "env1" '
             '--name "{myReferenceDataSet}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "West US", case_sensitive=False),
                 test.check("name", "{myReferenceDataSet}", case_sensitive=False),
             ])


# EXAMPLE: /ReferenceDataSets/get/ReferenceDataSetsListByEnvironment
@try_manual
def step__referencedatasets_get(test, rg):
    test.cmd('az timeseriesinsights reference-data-set list '
             '--environment-name "env1" '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /ReferenceDataSets/patch/ReferenceDataSetsUpdate
@try_manual
def step__referencedatasets_patch(test, rg):
    test.cmd('az timeseriesinsights reference-data-set update '
             '--environment-name "env1" '
             '--name "{myReferenceDataSet}" '
             '--tags someKey="someValue" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "West US", case_sensitive=False),
                 test.check("name", "{myReferenceDataSet}", case_sensitive=False),
                 test.check("tags.someKey", "someValue", case_sensitive=False),
             ])


# EXAMPLE: /ReferenceDataSets/delete/ReferenceDataSetsDelete
@try_manual
def step__referencedatasets_delete(test, rg):
    test.cmd('az timeseriesinsights reference-data-set delete -y '
             '--environment-name "env1" '
             '--name "{myReferenceDataSet}" '
             '--resource-group "{rg}"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test, rg):
    pass


# Testcase
@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__accesspolicies_put_accesspoliciescreate(test, rg)
    step__accesspolicies_get(test, rg)
    step__accesspolicies_get_accesspoliciesget(test, rg)
    step__accesspolicies_patch_accesspoliciesupdate(test, rg)
    step__accesspolicies_delete_accesspoliciesdelete(test, rg)
    step__referencedatasets_put(test, rg)
    step__referencedatasets_get_referencedatasetsget(test, rg)
    step__referencedatasets_get(test, rg)
    step__referencedatasets_patch(test, rg)
    step__referencedatasets_delete(test, rg)
    cleanup(test, rg)


@try_manual
class TimeSeriesInsightsClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitesttimeseriesinsights_rg1'[:7], key='rg', parameter_name='rg')
    def test_timeseriesinsights(self, rg):

        self.kwargs.update({
            'myReferenceDataSet': 'rds1',
            'myAccessPolicy': 'ap1',
        })

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()
