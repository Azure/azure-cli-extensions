# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    tags_type,
    get_enum_type,
    resource_group_name_type,
    get_location_type
)
from azure.cli.core.commands.validators import get_default_location_from_resource_group
from azext_timeseriesinsights.action import AddKeyProperties


def load_arguments(self, _):

    with self.argument_context('timeseriesinsights reference-data-set list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.')

    with self.argument_context('timeseriesinsights reference-data-set show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.', id_part='name')
        c.argument('reference_data_set_name', options_list=['--name', '-n', '--reference-data-set-name'], type=str,
                   help='The name of the Time Series Insights reference data set associated with the specified '
                   'environment.', id_part='child_name_1')

    with self.argument_context('timeseriesinsights reference-data-set create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.')
        c.argument('reference_data_set_name', options_list=['--name', '-n', '--reference-data-set-name'], type=str,
                   help='Name of the reference data set.')
        c.argument('location', arg_type=get_location_type(self.cli_ctx),
                   validator=get_default_location_from_resource_group)
        c.argument('tags', tags_type)
        c.argument('key_properties', action=AddKeyProperties, nargs='+', help='The list of key properties for the '
                   'reference data set.')
        c.argument('data_string_comparison_behavior', arg_type=get_enum_type(['Ordinal', 'OrdinalIgnoreCase']), help=''
                   'The reference data set key comparison behavior can be set using this property. By default, the '
                   'value is \'Ordinal\' - which means case sensitive key comparison will be performed while joining '
                   'reference data with events or while adding new reference data. When \'OrdinalIgnoreCase\' is set, '
                   'case insensitive comparison will be used.')

    with self.argument_context('timeseriesinsights reference-data-set update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.', id_part='name')
        c.argument('reference_data_set_name', options_list=['--name', '-n', '--reference-data-set-name'], type=str,
                   help='The name of the Time Series Insights reference data set associated with the specified '
                   'environment.', id_part='child_name_1')
        c.argument('tags', tags_type)

    with self.argument_context('timeseriesinsights reference-data-set delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.', id_part='name')
        c.argument('reference_data_set_name', options_list=['--name', '-n', '--reference-data-set-name'], type=str,
                   help='The name of the Time Series Insights reference data set associated with the specified '
                   'environment.', id_part='child_name_1')

    with self.argument_context('timeseriesinsights access-policy list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.')

    with self.argument_context('timeseriesinsights access-policy show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.', id_part='name')
        c.argument('access_policy_name', options_list=['--name', '-n', '--access-policy-name'], type=str, help='The '
                   'name of the Time Series Insights access policy associated with the specified environment.',
                   id_part='child_name_1')

    with self.argument_context('timeseriesinsights access-policy create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.')
        c.argument('access_policy_name', options_list=['--name', '-n', '--access-policy-name'], type=str, help='Name '
                   'of the access policy.')
        c.argument('principal_object_id', type=str, help='The objectId of the principal in Azure Active Directory.')
        c.argument('description', type=str, help='An description of the access policy.')
        c.argument('roles', nargs='*', help='The list of roles the principal is assigned on the environment.')

    with self.argument_context('timeseriesinsights access-policy update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.', id_part='name')
        c.argument('access_policy_name', options_list=['--name', '-n', '--access-policy-name'], type=str, help='The '
                   'name of the Time Series Insights access policy associated with the specified environment.',
                   id_part='child_name_1')
        c.argument('description', type=str, help='An description of the access policy.')
        c.argument('roles', nargs='*', help='The list of roles the principal is assigned on the environment.')

    with self.argument_context('timeseriesinsights access-policy delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('environment_name', type=str, help='The name of the Time Series Insights environment associated '
                   'with the specified resource group.', id_part='name')
        c.argument('access_policy_name', options_list=['--name', '-n', '--access-policy-name'], type=str, help='The '
                   'name of the Time Series Insights access policy associated with the specified environment.',
                   id_part='child_name_1')
