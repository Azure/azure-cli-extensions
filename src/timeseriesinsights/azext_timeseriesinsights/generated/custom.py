# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from azure.cli.core.util import sdk_no_wait


def timeseriesinsights_environment_list(client,
                                        resource_group_name=None):
    if resource_group_name:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list_by_subscription()


def timeseriesinsights_environment_show(client,
                                        resource_group_name,
                                        environment_name,
                                        expand=None):
    return client.get(resource_group_name=resource_group_name,
                      environment_name=environment_name,
                      expand=expand)


def timeseriesinsights_environment_gen1_create(client,
                                               resource_group_name,
                                               environment_name,
                                               location,
                                               sku,
                                               data_retention_time,
                                               tags=None,
                                               storage_limit_exceeded_behavior=None,
                                               partition_key_properties=None,
                                               no_wait=False):
    parameters = {}
    parameters['location'] = location
    parameters['tags'] = tags
    parameters['kind'] = 'Gen1'
    parameters['sku'] = sku
    parameters['data_retention_time'] = data_retention_time
    parameters['storage_limit_exceeded_behavior'] = storage_limit_exceeded_behavior
    parameters['partition_key_properties'] = partition_key_properties
    return sdk_no_wait(no_wait,
                       client.create_or_update,
                       resource_group_name=resource_group_name,
                       environment_name=environment_name,
                       parameters=parameters)


def timeseriesinsights_environment_gen2_create(client,
                                               resource_group_name,
                                               environment_name,
                                               location,
                                               sku,
                                               time_series_id_properties,
                                               storage_configuration,
                                               tags=None,
                                               warm_store_configuration=None,
                                               no_wait=False):
    parameters = {}
    parameters['location'] = location
    parameters['tags'] = tags
    parameters['kind'] = 'Gen2'
    parameters['sku'] = sku
    parameters['time_series_id_properties'] = time_series_id_properties
    parameters['storage_configuration'] = storage_configuration
    parameters['warm_store_configuration'] = warm_store_configuration
    return sdk_no_wait(no_wait,
                       client.create_or_update,
                       resource_group_name=resource_group_name,
                       environment_name=environment_name,
                       parameters=parameters)


def timeseriesinsights_environment_update(client,
                                          resource_group_name,
                                          environment_name,
                                          tags=None,
                                          no_wait=False):
    environment_update_parameters = {}
    environment_update_parameters['tags'] = tags
    return sdk_no_wait(no_wait,
                       client.update,
                       resource_group_name=resource_group_name,
                       environment_name=environment_name,
                       environment_update_parameters=environment_update_parameters)


def timeseriesinsights_environment_delete(client,
                                          resource_group_name,
                                          environment_name):
    return client.delete(resource_group_name=resource_group_name,
                         environment_name=environment_name)


def timeseriesinsights_event_source_list(client,
                                         resource_group_name,
                                         environment_name):
    return client.list_by_environment(resource_group_name=resource_group_name,
                                      environment_name=environment_name)


def timeseriesinsights_event_source_show(client,
                                         resource_group_name,
                                         environment_name,
                                         event_source_name):
    return client.get(resource_group_name=resource_group_name,
                      environment_name=environment_name,
                      event_source_name=event_source_name)


def timeseriesinsights_event_source_microsoft._event_hub_create(client,
                                                                resource_group_name,
                                                                environment_name,
                                                                event_source_name,
                                                                location,
                                                                event_source_resource_id,
                                                                service_bus_namespace,
                                                                event_hub_name,
                                                                consumer_group_name,
                                                                key_name,
                                                                shared_access_key,
                                                                tags=None,
                                                                local_timestamp=None,
                                                                timestamp_property_name=None):
    parameters = {}
    parameters['location'] = location
    parameters['tags'] = tags
    parameters['kind'] = 'MicrosoftEventHub'
    parameters['local_timestamp'] = local_timestamp
    parameters['timestamp_property_name'] = timestamp_property_name
    parameters['event_source_resource_id'] = event_source_resource_id
    parameters['service_bus_namespace'] = service_bus_namespace
    parameters['event_hub_name'] = event_hub_name
    parameters['consumer_group_name'] = consumer_group_name
    parameters['key_name'] = key_name
    parameters['shared_access_key'] = shared_access_key
    return client.create_or_update(resource_group_name=resource_group_name,
                                   environment_name=environment_name,
                                   event_source_name=event_source_name,
                                   parameters=parameters)


def timeseriesinsights_event_source_microsoft._io_t_hub_create(client,
                                                               resource_group_name,
                                                               environment_name,
                                                               event_source_name,
                                                               location,
                                                               event_source_resource_id,
                                                               iot_hub_name,
                                                               consumer_group_name,
                                                               key_name,
                                                               shared_access_key,
                                                               tags=None,
                                                               local_timestamp=None,
                                                               timestamp_property_name=None):
    parameters = {}
    parameters['location'] = location
    parameters['tags'] = tags
    parameters['kind'] = 'MicrosoftIoTHub'
    parameters['local_timestamp'] = local_timestamp
    parameters['timestamp_property_name'] = timestamp_property_name
    parameters['event_source_resource_id'] = event_source_resource_id
    parameters['iot_hub_name'] = iot_hub_name
    parameters['consumer_group_name'] = consumer_group_name
    parameters['key_name'] = key_name
    parameters['shared_access_key'] = shared_access_key
    return client.create_or_update(resource_group_name=resource_group_name,
                                   environment_name=environment_name,
                                   event_source_name=event_source_name,
                                   parameters=parameters)


def timeseriesinsights_event_source_update(client,
                                           resource_group_name,
                                           environment_name,
                                           event_source_name,
                                           tags=None):
    event_source_update_parameters = {}
    event_source_update_parameters['tags'] = tags
    return client.update(resource_group_name=resource_group_name,
                         environment_name=environment_name,
                         event_source_name=event_source_name,
                         event_source_update_parameters=event_source_update_parameters)


def timeseriesinsights_event_source_delete(client,
                                           resource_group_name,
                                           environment_name,
                                           event_source_name):
    return client.delete(resource_group_name=resource_group_name,
                         environment_name=environment_name,
                         event_source_name=event_source_name)


def timeseriesinsights_reference_data_set_list(client,
                                               resource_group_name,
                                               environment_name):
    return client.list_by_environment(resource_group_name=resource_group_name,
                                      environment_name=environment_name)


def timeseriesinsights_reference_data_set_show(client,
                                               resource_group_name,
                                               environment_name,
                                               reference_data_set_name):
    return client.get(resource_group_name=resource_group_name,
                      environment_name=environment_name,
                      reference_data_set_name=reference_data_set_name)


def timeseriesinsights_reference_data_set_create(client,
                                                 resource_group_name,
                                                 environment_name,
                                                 reference_data_set_name,
                                                 location,
                                                 key_properties,
                                                 tags=None,
                                                 data_string_comparison_behavior=None):
    parameters = {}
    parameters['location'] = location
    parameters['tags'] = tags
    parameters['key_properties'] = key_properties
    parameters['data_string_comparison_behavior'] = data_string_comparison_behavior
    return client.create_or_update(resource_group_name=resource_group_name,
                                   environment_name=environment_name,
                                   reference_data_set_name=reference_data_set_name,
                                   parameters=parameters)


def timeseriesinsights_reference_data_set_update(client,
                                                 resource_group_name,
                                                 environment_name,
                                                 reference_data_set_name,
                                                 tags=None):
    reference_data_set_update_parameters = {}
    reference_data_set_update_parameters['tags'] = tags
    return client.update(resource_group_name=resource_group_name,
                         environment_name=environment_name,
                         reference_data_set_name=reference_data_set_name,
                         reference_data_set_update_parameters=reference_data_set_update_parameters)


def timeseriesinsights_reference_data_set_delete(client,
                                                 resource_group_name,
                                                 environment_name,
                                                 reference_data_set_name):
    return client.delete(resource_group_name=resource_group_name,
                         environment_name=environment_name,
                         reference_data_set_name=reference_data_set_name)


def timeseriesinsights_access_policy_list(client,
                                          resource_group_name,
                                          environment_name):
    return client.list_by_environment(resource_group_name=resource_group_name,
                                      environment_name=environment_name)


def timeseriesinsights_access_policy_show(client,
                                          resource_group_name,
                                          environment_name,
                                          access_policy_name):
    return client.get(resource_group_name=resource_group_name,
                      environment_name=environment_name,
                      access_policy_name=access_policy_name)


def timeseriesinsights_access_policy_create(client,
                                            resource_group_name,
                                            environment_name,
                                            access_policy_name,
                                            principal_object_id=None,
                                            description=None,
                                            roles=None):
    parameters = {}
    parameters['principal_object_id'] = principal_object_id
    parameters['description'] = description
    parameters['roles'] = roles
    return client.create_or_update(resource_group_name=resource_group_name,
                                   environment_name=environment_name,
                                   access_policy_name=access_policy_name,
                                   parameters=parameters)


def timeseriesinsights_access_policy_update(client,
                                            resource_group_name,
                                            environment_name,
                                            access_policy_name,
                                            description=None,
                                            roles=None):
    access_policy_update_parameters = {}
    access_policy_update_parameters['description'] = description
    access_policy_update_parameters['roles'] = roles
    return client.update(resource_group_name=resource_group_name,
                         environment_name=environment_name,
                         access_policy_name=access_policy_name,
                         access_policy_update_parameters=access_policy_update_parameters)


def timeseriesinsights_access_policy_delete(client,
                                            resource_group_name,
                                            environment_name,
                                            access_policy_name):
    return client.delete(resource_group_name=resource_group_name,
                         environment_name=environment_name,
                         access_policy_name=access_policy_name)
