# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


# pylint: disable=protected-access

# pylint: disable=no-self-use

# pylint: disable=consider-using-f-string

# pylint: disable=raise-missing-from

import argparse
from collections import defaultdict
from knack.util import CLIError


# Adding new input type for target connection details
# As having type as AddSourceSqlConnection overwrites one of the parameters
class AddTargetSqlConnection(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        action = self.get_action(values, option_string)
        namespace.target_sql_connection = action

    def get_action(self, values, option_string):
        try:
            properties = defaultdict(list)
            for (k, v) in (x.split('=', 1) for x in values):
                properties[k].append(v)
            properties = dict(properties)
        except ValueError:
            raise CLIError('usage error: {} [KEY=VALUE ...]'.format(option_string))
        d = {}
        for k in properties:
            kl = k.lower()
            v = properties[k]

            if kl == 'data-source':
                d['data_source'] = v[0]

            elif kl == 'authentication':
                d['authentication'] = v[0]

            elif kl == 'user-name':
                d['user_name'] = v[0]

            elif kl == 'password':
                d['password'] = v[0]

            elif kl == 'encrypt-connection':
                d['encrypt_connection'] = v[0]

            elif kl == 'trust-server-certificate':
                d['trust_server_certificate'] = v[0]

            else:
                raise CLIError(
                    'Unsupported Key {} is provided for parameter target-sql-connection. All possible keys are:'
                    ' data-source, authentication, user-name, password, encrypt-connection, trust-server-certificate'
                    .format(k)
                )

        return d
