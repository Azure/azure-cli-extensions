# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test):
    pass


# EXAMPLE: /Entities/post/GetEntities
@try_manual
def step__entities_post_getentities(test):
    test.cmd('az managementgroup entity list',
             checks=[])


# EXAMPLE: /HierarchySettings/put/GetGroupSettings
@try_manual
def step__hierarchysettings_put_getgroupsettings(test):
    test.cmd('az managementgroup hierarchy-setting create '
             '--default-management-group "/providers/Microsoft.Management/managementGroups/DefaultGroup" '
             '--require-authorization-for-group-creation true '
             '--group-id "root"',
             checks=[])


# EXAMPLE: /HierarchySettings/get/GetGroupSettings
@try_manual
def step__hierarchysettings_get_getgroupsettings(test):
    test.cmd('az managementgroup hierarchy-setting show '
             '--group-id "root"',
             checks=[])


# EXAMPLE: /HierarchySettings/get/ListGroupSettings
@try_manual
def step__hierarchysettings_get_listgroupsettings(test):
    test.cmd('az managementgroup hierarchy-setting list '
             '--group-id "root"',
             checks=[])


# EXAMPLE: /HierarchySettings/patch/GetGroupSettings
@try_manual
def step__hierarchysettings_patch_getgroupsettings(test):
    test.cmd('az managementgroup hierarchy-setting update '
             '--default-management-group "/providers/Microsoft.Management/managementGroups/DefaultGroup" '
             '--require-authorization-for-group-creation true '
             '--group-id "root"',
             checks=[])


# EXAMPLE: /HierarchySettings/delete/GetGroupSettings
@try_manual
def step__hierarchysettings_delete_getgroupsettings(test):
    test.cmd('az managementgroup hierarchy-setting delete -y '
             '--group-id "root"',
             checks=[])


# EXAMPLE: /managementgroup /post/StartTenantBackfill
@try_manual
def step__managementgroup__post_starttenantbackfill(test):
    test.cmd('az managementgroup  start-tenant-backfill',
             checks=[])


# EXAMPLE: /managementgroup /post/TenantBackfillStatus
@try_manual
def step__managementgroup__post_tenantbackfillstatus(test):
    test.cmd('az managementgroup  tenant-backfill-status',
             checks=[])


# EXAMPLE: /ManagementGroups/put/PutManagementGroup
@try_manual
def step__managementgroups_put_putmanagementgroup(test):
    test.cmd('az managementgroup management-group create '
             '--cache-control "no-cache" '
             '--display-name "ChildGroup" '
             '--group-id "ChildGroup"',
             checks=[])


# EXAMPLE: /ManagementGroups/get/GetDescendants
@try_manual
def step__managementgroups_get_getdescendants(test):
    test.cmd('az managementgroup management-group get-descendant '
             '--group-id "20000000-0000-0000-0000-000000000000"',
             checks=[])


# EXAMPLE: /ManagementGroups/get/GetManagementGroup
@try_manual
def step__managementgroups_get_getmanagementgroup(test):
    test.cmd('az managementgroup management-group show '
             '--cache-control "no-cache" '
             '--group-id "20000000-0001-0000-0000-000000000000"',
             checks=[])


# EXAMPLE: /ManagementGroups/get/GetManagementGroupsWithExpandAndRecurse
@try_manual
def step__managementgroups_get(test):
    test.cmd('az managementgroup management-group show '
             '--expand "children" '
             '--recurse true '
             '--cache-control "no-cache" '
             '--group-id "20000000-0001-0000-0000-000000000000"',
             checks=[])


# EXAMPLE: /ManagementGroups/get/GetManagementGroupWithExpand
@try_manual
def step__managementgroups_get2(test):
    test.cmd('az managementgroup management-group show '
             '--expand "children" '
             '--cache-control "no-cache" '
             '--group-id "20000000-0001-0000-0000-000000000000"',
             checks=[])


# EXAMPLE: /ManagementGroups/get/ListManagementGroups
@try_manual
def step__managementgroups_get_listmanagementgroups(test):
    test.cmd('az managementgroup management-group list '
             '--cache-control "no-cache"',
             checks=[])


# EXAMPLE: /ManagementGroups/patch/PatchManagementGroup
@try_manual
def step__managementgroups_patch_patchmanagementgroup(test):
    test.cmd('az managementgroup management-group update '
             '--cache-control "no-cache" '
             '--group-id "ChildGroup" '
             '--display-name "AlternateDisplayName" '
             '--parent-group-id "/providers/Microsoft.Management/managementGroups/AlternateRootGroup"',
             checks=[])


# EXAMPLE: /ManagementGroups/delete/DeleteManagementGroup
@try_manual
def step__managementgroups_delete(test):
    test.cmd('az managementgroup management-group delete -y '
             '--cache-control "no-cache" '
             '--group-id "GroupToDelete"',
             checks=[])


# EXAMPLE: /ManagementGroupSubscriptions/put/AddSubscriptionToManagementGroup
@try_manual
def step__managementgroupsubscriptions_put(test):
    test.cmd('az managementgroup management-group-subscription create '
             '--cache-control "no-cache" '
             '--group-id "Group" '
             '--subscription-id "728bcbe4-8d56-4510-86c2-4921b8beefbc"',
             checks=[])


# EXAMPLE: /ManagementGroupSubscriptions/get/GetAllSubscriptionsFromManagementGroup
@try_manual
def step__managementgroupsubscriptions_get(test):
    test.cmd('az managementgroup management-group-subscription get-subscription-under-management-group '
             '--group-id "Group"',
             checks=[])


# EXAMPLE: /ManagementGroupSubscriptions/get/GetSubscriptionFromManagementGroup
@try_manual
def step__managementgroupsubscriptions_get2(test):
    test.cmd('az managementgroup management-group-subscription get-subscription '
             '--cache-control "no-cache" '
             '--group-id "Group" '
             '--subscription-id "728bcbe4-8d56-4510-86c2-4921b8beefbc"',
             checks=[])


# EXAMPLE: /ManagementGroupSubscriptions/delete/DeleteSubscriptionFromManagementGroup
@try_manual
def step__managementgroupsubscriptions_delete(test):
    test.cmd('az managementgroup management-group-subscription delete -y '
             '--cache-control "no-cache" '
             '--group-id "Group" '
             '--subscription-id "728bcbe4-8d56-4510-86c2-4921b8beefbc"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test):
    pass


# Testcase
@try_manual
def call_scenario(test):
    setup(test)
    step__entities_post_getentities(test)
    step__hierarchysettings_put_getgroupsettings(test)
    step__hierarchysettings_get_getgroupsettings(test)
    step__hierarchysettings_get_listgroupsettings(test)
    step__hierarchysettings_patch_getgroupsettings(test)
    step__hierarchysettings_delete_getgroupsettings(test)
    step__managementgroup__post_starttenantbackfill(test)
    step__managementgroup__post_tenantbackfillstatus(test)
    step__managementgroups_put_putmanagementgroup(test)
    step__managementgroups_get_getdescendants(test)
    step__managementgroups_get_getmanagementgroup(test)
    step__managementgroups_get(test)
    step__managementgroups_get2(test)
    step__managementgroups_get_listmanagementgroups(test)
    step__managementgroups_patch_patchmanagementgroup(test)
    step__managementgroups_delete(test)
    step__managementgroupsubscriptions_put(test)
    step__managementgroupsubscriptions_get(test)
    step__managementgroupsubscriptions_get2(test)
    step__managementgroupsubscriptions_delete(test)
    cleanup(test)


@try_manual
class ManagementGroupsAPIScenarioTest(ScenarioTest):

    def test_managementgroup(self):

        call_scenario(self)
        calc_coverage(__file__)
        raise_if()
