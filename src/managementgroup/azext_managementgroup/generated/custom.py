# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from azure.cli.core.util import sdk_no_wait


def managementgroup_management_group_list(client,
                                          cache_control=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.list(cache_control=cache_control)


def managementgroup_management_group_show(client,
                                          group_id,
                                          expand=None,
                                          recurse=None,
                                          filter_=None,
                                          cache_control=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.get(group_id=group_id,
                      expand=expand,
                      recurse=recurse,
                      filter=filter_,
                      cache_control=cache_control)


def managementgroup_management_group_create(client,
                                            group_id,
                                            cache_control=None,
                                            name=None,
                                            display_name=None,
                                            details_parent_id=None,
                                            no_wait=False):
    if cache_control is None:
        cache_control = "no-cache"
    return sdk_no_wait(no_wait,
                       client.begin_create_or_update,
                       group_id=group_id,
                       cache_control=cache_control,
                       name=name,
                       display_name=display_name,
                       id=details_parent_id)


def managementgroup_management_group_update(client,
                                            group_id,
                                            cache_control=None,
                                            display_name=None,
                                            parent_group_id=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.update(group_id=group_id,
                         cache_control=cache_control,
                         display_name=display_name,
                         parent_group_id=parent_group_id)


def managementgroup_management_group_delete(client,
                                            group_id,
                                            cache_control=None,
                                            no_wait=False):
    if cache_control is None:
        cache_control = "no-cache"
    return sdk_no_wait(no_wait,
                       client.begin_delete,
                       group_id=group_id,
                       cache_control=cache_control)


def managementgroup_management_group_get_descendant(client,
                                                    group_id):
    return client.get_descendant(group_id=group_id)


def managementgroup_management_group_subscription_create(client,
                                                         group_id,
                                                         subscription_id,
                                                         cache_control=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.create(group_id=group_id,
                         subscription_id=subscription_id,
                         cache_control=cache_control)


def managementgroup_management_group_subscription_delete(client,
                                                         group_id,
                                                         subscription_id,
                                                         cache_control=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.delete(group_id=group_id,
                         subscription_id=subscription_id,
                         cache_control=cache_control)


def managementgroup_management_group_subscription_get_subscription(client,
                                                                   group_id,
                                                                   subscription_id,
                                                                   cache_control=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.get_subscription(group_id=group_id,
                                   subscription_id=subscription_id,
                                   cache_control=cache_control)


def managementgroup_management_group_subscription_get_subscription_under_management_group(client,
                                                                                          group_id):
    return client.get_subscription_under_management_group(group_id=group_id)


def managementgroup_hierarchy_setting_list(client,
                                           group_id):
    return client.list(group_id=group_id)


def managementgroup_hierarchy_setting_show(client,
                                           group_id):
    return client.get(group_id=group_id)


def managementgroup_hierarchy_setting_create(client,
                                             group_id,
                                             require_authorization_for_group_creation=None,
                                             default_management_group=None):
    return client.create_or_update(group_id=group_id,
                                   require_authorization_for_group_creation=require_authorization_for_group_creation,
                                   default_management_group=default_management_group)


def managementgroup_hierarchy_setting_update(client,
                                             group_id,
                                             require_authorization_for_group_creation=None,
                                             default_management_group=None):
    return client.update(group_id=group_id,
                         require_authorization_for_group_creation=require_authorization_for_group_creation,
                         default_management_group=default_management_group)


def managementgroup_hierarchy_setting_delete(client,
                                             group_id):
    return client.delete(group_id=group_id)


def managementgroup__start_tenant_backfill(client):
    return client.start_tenant_backfill()


def managementgroup__tenant_backfill_status(client):
    return client.tenant_backfill_status()


def managementgroup_entity_list(client,
                                select=None,
                                search=None,
                                filter_=None,
                                view=None,
                                group_name=None,
                                cache_control=None):
    if cache_control is None:
        cache_control = "no-cache"
    return client.list(select=select,
                       search=search,
                       filter=filter_,
                       view=view,
                       group_name=group_name,
                       cache_control=cache_control)
