# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.testsdk import *


class ArizeAiScenario(ScenarioTest):
    @ResourceGroupPreparer(name_prefix='cli_test_arize_ai', location="eastus")
    def test_arize_ai(self, resource_group):
        self.kwargs.update({
            'name': 'Arize-test-cli-instance-1',
            'location': 'eastus',
            'marketplace_subscription_id': 'fc35d936-3b89-41f8-8110-a24b56826c37',
            'publisher_id': 'arizeai1657829589668',
            'offer_id': 'arize-liftr-0',
            'plan_id': 'liftr-test-0',
            'plan_name': 'Liftr Test 0',
            'term_unit': 'P1M',
            'term_id': 'gmz7xq9ge3py',
            'user_first_name': 'Swati',
            'user_last_name': 'Aggarwal',
            'user_email': 'aggarwalsw@microsoft.com',
            'user_upn': 'aggarwalsw@microsoft.com',
            'resource_group': 'QM_clitest_qumulo2_eastus',
            'description': 'Test-Description'
        })

        # Create ArizeAi Organization
        self.cmd('az arize-ai observability-eval organization create --resource-group {resource_group} --organizationname {name} --location {location} '
                 '--marketplace \'{{"subscription-id": "{marketplace_subscription_id}", '
                 '"offer-details": {{"publisher-id": "{publisher_id}", "offer-id": "{offer_id}", "plan-id": "{plan_id}", "plan-name": "{plan_name}", "term-unit": "{term_unit}", "term-id": "{term_id}"}}}}\' '
                 '--user \'{{"first-name": "{user_first_name}", "last-name": "{user_last_name}", "email-address": "{user_email}", "upn": "{user_upn}"}}\' '
                 '--partner-properties \'{{"description": "{description}"}}\' ',
                 checks=[
                     self.check('name', '{name}'),
                 ])

        # List ArizeAi Organizations
        self.cmd('az arize-ai observability-eval organization list --resource-group {resource_group}',
                 checks=[])

        # Show ArizeAi Organization
        self.cmd('az arize-ai observability-eval organization show --resource-group {resource_group} --organizationname {name}',
                 checks=[
                     self.check('name', '{name}'),
                 ])
        
        self.cmd('az arize-ai observability-eval organization delete --resource-group {resource_group} --organizationname {name}',
                 checks=[])

