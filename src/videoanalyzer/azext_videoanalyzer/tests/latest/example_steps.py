# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /AccessPolicies/put/Register access policy entity.
@try_manual
def step_access_policy_create(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer access-policy create '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--authentication "{{\\"@type\\":\\"#Microsoft.VideoAnalyzer.JwtAuthentication\\",\\"audiences\\":[\\"audi'
             'ence1\\"],\\"claims\\":[{{\\"name\\":\\"claimname1\\",\\"value\\":\\"claimvalue1\\"}},{{\\"name\\":\\"cla'
             'imname2\\",\\"value\\":\\"claimvalue2\\"}}],\\"issuers\\":[\\"issuer1\\",\\"issuer2\\"],\\"keys\\":[{{\\"'
             '@type\\":\\"#Microsoft.VideoAnalyzer.RsaTokenKey\\",\\"alg\\":\\"RS256\\",\\"e\\":\\"ZLFzZTY0IQ==\\",\\"k'
             'id\\":\\"123\\",\\"n\\":\\"YmFzZTY0IQ==\\"}},{{\\"@type\\":\\"#Microsoft.VideoAnalyzer.EccTokenKey\\",\\"'
             'alg\\":\\"ES256\\",\\"kid\\":\\"124\\",\\"x\\":\\"XX==\\",\\"y\\":\\"YY==\\"}}]}}" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/get/Gets an access policy entity.
@try_manual
def step_access_policy_show(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer access-policy show '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/get/Lists access policy entities.
@try_manual
def step_access_policy_list(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer access-policy list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/patch/Update access policy entity.
@try_manual
def step_access_policy_update(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer access-policy update '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--authentication "{{\\"@type\\":\\"#Microsoft.VideoAnalyzer.JwtAuthentication\\",\\"keys\\":[{{\\"@type\\'
             '":\\"#Microsoft.VideoAnalyzer.RsaTokenKey\\",\\"alg\\":\\"RS256\\",\\"e\\":\\"ZLFzZTY0IQ==\\",\\"kid\\":'
             '\\"123\\",\\"n\\":\\"YmFzZTY0IQ==\\"}},{{\\"@type\\":\\"#Microsoft.VideoAnalyzer.EccTokenKey\\",\\"alg\\"'
             ':\\"Updated\\",\\"kid\\":\\"124\\",\\"x\\":\\"XX==\\",\\"y\\":\\"YY==\\"}}]}}" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/delete/Deletes an access policy entity.
@try_manual
def step_access_policy_delete(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer access-policy delete -y '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /EdgeModules/put/Registers an edge module.
@try_manual
def step_edge_module_create(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edge-module create '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /EdgeModules/get/Gets edge module registration.
@try_manual
def step_edge_module_show(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edge-module show '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /EdgeModules/get/Lists the registered edge modules.
@try_manual
def step_edge_module_list(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edge-module list '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /EdgeModules/post/Generate the Provisioning token for an edge module registration.
@try_manual
def step_edge_module_list_provisioning_token(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edge-module list-provisioning-token '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--expiration-date "3021-01-23T11:04:49.0526841-08:00" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /EdgeModules/delete/Deletes an edge module registration.
@try_manual
def step_edge_module_delete(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edge-module delete -y '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/put/Create a Video Analyzer account
@try_manual
def step_video_analyzer_create(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer create '
             '--account-name "contosotv" '
             '--video-analyzer-identity-type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/pr'
             'oviders/Microsoft.ManagedIdentity/userAssignedIdentities/id1\\":{{}},\\"/subscriptions/00000000-0000-0000'
             '-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id2\\":{{'
             '}},\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedId'
             'entity/userAssignedIdentities/id3\\":{{}}}}" '
             '--location "South Central US" '
             '--type "SystemKey" '
             '--storage-accounts id="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Storage'
             '/storageAccounts/{sa}" user-assigned-identity="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/pro'
             'viders/Microsoft.ManagedIdentity/userAssignedIdentities/id2" '
             '--tags tag1="value1" tag2="value2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/get/Get a Video Analyzer account by name
@try_manual
def step_video_analyzer_show(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer show '
             '--account-name "contosotv" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/get/List all Video Analyzer accounts
@try_manual
def step_video_analyzer_list(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/get/List all Video Analyzer accounts by subscription
@try_manual
def step_video_analyzer_list2(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer list '
             '-g ""',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/patch/Update a Video Analyzer accounts
@try_manual
def step_video_analyzer_update(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer update '
             '--account-name "contosotv" '
             '--tags key1="value3" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/post/Synchronizes Storage Account Keys
@try_manual
def step_video_analyzer_sync_storage_key(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer sync-storage-key '
             '--account-name "contosotv" '
             '--id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Storage/storageAccounts/{s'
             'a_2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/delete/Delete a Video Analyzer account
@try_manual
def step_video_analyzer_delete(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video-analyzer delete -y '
             '--account-name "contosotv" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Videos/put/Register video entity.
@try_manual
def step_video_create(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video create '
             '--account-name "testaccount2" '
             '--description "Sample Description 1" '
             '--title "Sample Title 1" '
             '--resource-group "{rg_3}" '
             '--name "{myVideo}"',
             checks=checks)


# EXAMPLE: /Videos/get/Gets a video entity.
@try_manual
def step_video_show(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video show '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}" '
             '--name "{myVideo}"',
             checks=checks)


# EXAMPLE: /Videos/get/Lists video entities.
@try_manual
def step_video_list(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}"',
             checks=checks)


# EXAMPLE: /Videos/patch/Update video entity.
@try_manual
def step_video_update(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video update '
             '--account-name "testaccount2" '
             '--description "Parking Lot East Entrance" '
             '--resource-group "{rg_3}" '
             '--name "{myVideo}"',
             checks=checks)


# EXAMPLE: /Videos/post/Generate a streaming token for media endpoint authorization.
@try_manual
def step_video_list_streaming_token(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video list-streaming-token '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}" '
             '--name "{myVideo2}"',
             checks=checks)


# EXAMPLE: /Videos/delete/Deletes a video entity.
@try_manual
def step_video_delete(test, rg_2, rg, rg_3, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video delete -y '
             '--account-name "testaccount2" '
             '--resource-group "{rg_3}" '
             '--name "{myVideo}"',
             checks=checks)

