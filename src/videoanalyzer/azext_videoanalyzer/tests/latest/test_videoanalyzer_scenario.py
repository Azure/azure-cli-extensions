# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import StorageAccountPreparer
from .example_steps import step_access_policy_create
from .example_steps import step_access_policy_show
from .example_steps import step_access_policy_list
from .example_steps import step_access_policy_update
from .example_steps import step_access_policy_delete
from .example_steps import step_edge_module_create
from .example_steps import step_edge_module_show
from .example_steps import step_edge_module_list
from .example_steps import step_edge_module_list_provisioning_token
from .example_steps import step_edge_module_delete
from .example_steps import step_video_analyzer_create
from .example_steps import step_video_analyzer_show
from .example_steps import step_video_analyzer_list
from .example_steps import step_video_analyzer_list2
from .example_steps import step_video_analyzer_update
from .example_steps import step_video_analyzer_sync_storage_key
from .example_steps import step_video_analyzer_delete
from .example_steps import step_video_create
from .example_steps import step_video_show
from .example_steps import step_video_list
from .example_steps import step_video_update
from .example_steps import step_video_list_streaming_token
from .example_steps import step_video_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg_2, rg, rg_3):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg_2, rg, rg_3):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg_2, rg, rg_3):
    setup_scenario(test, rg_2, rg, rg_3)
    step_access_policy_create(test, rg_2, rg, rg_3, checks=[
        test.check("name", "{myAccessPolicy}", case_sensitive=False),
    ])
    step_access_policy_show(test, rg_2, rg, rg_3, checks=[
        test.check("name", "{myAccessPolicy}", case_sensitive=False),
    ])
    step_access_policy_list(test, rg_2, rg, rg_3, checks=[])
    step_access_policy_update(test, rg_2, rg, rg_3, checks=[
        test.check("name", "{myAccessPolicy}", case_sensitive=False),
    ])
    step_access_policy_delete(test, rg_2, rg, rg_3, checks=[])
    step_edge_module_create(test, rg_2, rg, rg_3, checks=[
        test.check("name", "{myEdgeModule}", case_sensitive=False),
    ])
    step_edge_module_show(test, rg_2, rg, rg_3, checks=[
        test.check("name", "{myEdgeModule}", case_sensitive=False),
    ])
    step_edge_module_list(test, rg_2, rg, rg_3, checks=[
        test.check('length(@)', 1),
    ])
    step_edge_module_list_provisioning_token(test, rg_2, rg, rg_3, checks=[])
    step_edge_module_delete(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_create(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_show(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_list(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_list2(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_update(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_sync_storage_key(test, rg_2, rg, rg_3, checks=[])
    step_video_analyzer_delete(test, rg_2, rg, rg_3, checks=[])
    step_video_create(test, rg_2, rg, rg_3, checks=[
        test.check("description", "Sample Description 1", case_sensitive=False),
        test.check("title", "Sample Title 1", case_sensitive=False),
        test.check("name", "{myVideo}", case_sensitive=False),
    ])
    step_video_show(test, rg_2, rg, rg_3, checks=[
        test.check("description", "Sample Description 1", case_sensitive=False),
        test.check("title", "Sample Title 1", case_sensitive=False),
        test.check("name", "{myVideo}", case_sensitive=False),
    ])
    step_video_list(test, rg_2, rg, rg_3, checks=[])
    step_video_update(test, rg_2, rg, rg_3, checks=[
        test.check("title", "Sample Title 1", case_sensitive=False),
        test.check("name", "{myVideo}", case_sensitive=False),
    ])
    step_video_list_streaming_token(test, rg_2, rg, rg_3, checks=[])
    step_video_delete(test, rg_2, rg, rg_3, checks=[])
    cleanup_scenario(test, rg_2, rg, rg_3)


# Test class for Scenario
@try_manual
class VideoanalyzerScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(VideoanalyzerScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myEdgeModule': 'edgeModule1',
            'myVideo': 'video1',
            'myVideo2': 'video3',
            'myAccessPolicy': 'accessPolicyName1',
        })


    @ResourceGroupPreparer(name_prefix='clitestvideoanalyzer_rg'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestvideoanalyzer_contoso'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestvideoanalyzer_testrg'[:7], key='rg_3', parameter_name='rg_3')
    @StorageAccountPreparer(name_prefix='clitestvideoanalyzer_storage1'[:7], key='sa',
                            resource_group_parameter_name='rg_2')
    @StorageAccountPreparer(name_prefix='clitestvideoanalyzer_contosotvstore'[:7], key='sa_2',
                            resource_group_parameter_name='rg')
    def test_videoanalyzer_Scenario(self, rg_2, rg, rg_3):
        call_scenario(self, rg_2, rg, rg_3)
        calc_coverage(__file__)
        raise_if()

