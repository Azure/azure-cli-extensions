# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_backup_policy_create
from .example_steps import step_backup_policy_show
from .example_steps import step_backup_policy_list
from .example_steps import step_backup_instance_create
from .example_steps import step_backup_instance_list
from .example_steps import step_backup_instance_adhoc_backup
from .example_steps import step_backup_instance_restore_trigger
from .example_steps import step_backup_instance_restore_trigger2
from .example_steps import step_backup_instance_restore_trigger3
from .example_steps import step_backup_instance_validate_for_backup
from .example_steps import step_backup_instance_validate_for_restore
from .example_steps import step_backup_policy_delete
from .example_steps import step_backup_vault_create
from .example_steps import step_backup_vault_create2
from .example_steps import step_backup_vault_show
from .example_steps import step_backup_vault_show2
from .example_steps import step_backup_vault_update
from .example_steps import step_backup_instance_show
from .example_steps import step_backup_instance_delete
from .example_steps import step_backup_vault_delete
from .example_steps import step_job_show
from .example_steps import step_job_list
from .example_steps import step_recovery_point_show
from .example_steps import step_recovery_point_list
from .example_steps import step_restorable_time_range_find
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test):
    setup_scenario(test)
    step_backup_policy_create(test, checks=[
        test.check("name", "{myBackupPolicy}", case_sensitive=False),
    ])
    step_backup_policy_show(test, checks=[
        test.check("name", "{myBackupPolicy}", case_sensitive=False),
    ])
    step_backup_policy_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_backup_instance_create(test, checks=[
        test.check("friendlyName", "harshitbi2", case_sensitive=False),
        test.check("objectType", "BackupInstance", case_sensitive=False),
        test.check("policyInfo.policyId", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.D"
                   "ataProtection/Backupvaults/{myBackupVault}/backupPolicies/{myBackupPolicy2}",
                   case_sensitive=False),
        test.check("policyInfo.policyParameters.dataStoreParametersList[0].dataStoreType", "OperationalStore",
                   case_sensitive=False),
        test.check("policyInfo.policyParameters.dataStoreParametersList[0].objectType",
                   "AzureOperationalStoreParameters", case_sensitive=False),
        test.check("policyInfo.policyParameters.dataStoreParametersList[0].resourceGroupId",
                   "/subscriptions/{subscription_id}/resourceGroups/{rg_3}", case_sensitive=False),
    ])
    step_backup_instance_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_backup_instance_adhoc_backup(test, checks=[])
    step_backup_instance_restore_trigger(test, checks=[])
    step_backup_instance_restore_trigger2(test, checks=[])
    step_backup_instance_restore_trigger3(test, checks=[])
    step_backup_instance_validate_for_backup(test, checks=[])
    step_backup_instance_validate_for_restore(test, checks=[])
    step_backup_policy_delete(test, checks=[])
    step_backup_vault_create(test, checks=[])
    step_backup_vault_create2(test, checks=[])
    step_backup_vault_show(test, checks=[])
    step_backup_vault_show2(test, checks=[])
    step_backup_vault_update(test, checks=[])
    step_backup_instance_show(test, checks=[])
    step_backup_instance_delete(test, checks=[])
    step_backup_vault_delete(test, checks=[])
    step_job_show(test, checks=[])
    step_job_list(test, checks=[])
    step_recovery_point_show(test, checks=[])
    step_recovery_point_list(test, checks=[])
    step_restorable_time_range_find(test, checks=[])
    cleanup_scenario(test)


# Test class for Scenario
@try_manual
class DataprotectionScenarioTest(ScenarioTest):
    def __init__(self, *args, **kwargs):
        super(DataprotectionScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myBackupVault': 'PratikPrivatePreviewVault1',
            'myBackupPolicy2': 'PratikPolicy1',
            'myBackupPolicy': 'OSSDBPolicy',
            'myBackupInstance': 'testInstance1',
            'myBackupInstance2': 'zblobbackuptestsa58',
        })

    @ResourceGroupPreparer(name_prefix='clitestdataprotection_viveksipgtest'[:7], key='rg_3', parameter_name='rg_3')
    @ResourceGroupPreparer(name_prefix='clitestdataprotection_000pikumar'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestdataprotection_SampleResourceGroup'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestdataprotection_BugBash1'[:7], key='rg_4', parameter_name='rg_4')
    @ResourceGroupPreparer(name_prefix='clitestdataprotection_Blob-Backup'[:7], key='rg_5', parameter_name='rg_5')
    def test_dataprotection_Scenario(self, rg_3, rg_2, rg, rg_4, rg_5):
        call_scenario(self)
        calc_coverage(__file__)
        raise_if()
