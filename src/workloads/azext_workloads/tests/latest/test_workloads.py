# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

import os

from azure.cli.testsdk import *

TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


class WorkloadsScenario(ScenarioTest):
    def test_workloads_svi(self):
        self.kwargs.update({
            'name': self.create_random_name('cli_test_workloads', 20),
            'configuration': os.path.join(TEST_DIR, 'create_infra_distributed_non_ha_config.json')
        })

        self.cmd('workloads svi create -g CLI-testing -n {name} --environment NonProd --sap-product s4hana --configuration {configuration}', checks=[
            self.check('name', '{name}'),
            self.check('resourceGroup', 'CLI-testing'),
            self.check('sapProduct', 'S4HANA'),
            self.check('environment', 'Prod'),
            self.check('provisioningState', 'Succeeded'),
            self.check('configuration.configurationType', 'DeploymentWithOSConfig'),
            self.check('configuration.infrastructureConfiguration.deploymentType', 'ThreeTier')
        ])
        self.cmd('workloads svi update -g CLI-testing -n {name} --tags {{tag:test,tag2:test2}}', checks=[
            self.check('name', '{name}'),
            self.check('resourceGroup', 'CLI-testing'),
            self.check('sapProduct', 'S4HANA'),
            self.check('environment', 'Prod'),
            self.check('provisioningState', 'Succeeded'),
            self.check('configuration.configurationType', 'DeploymentWithOSConfig'),
            self.check('configuration.infrastructureConfiguration.deploymentType', 'ThreeTier'),
            self.check('tags.tag', 'test'),
            self.check('tags.tag2', 'test2')
        ])
        self.cmd('workloads svi show -g CLI-testing -n {name}', checks=[
            self.check('name', '{name}'),
            self.check('resourceGroup', 'CLI-testing'),
            self.check('sapProduct', 'S4HANA'),
            self.check('environment', 'Prod'),
            self.check('provisioningState', 'Succeeded'),
            self.check('configuration.configurationType', 'DeploymentWithOSConfig'),
            self.check('configuration.infrastructureConfiguration.deploymentType', 'ThreeTier'),
            self.check('tags.tag', 'test'),
            self.check('tags.tag2', 'test2')
        ])
        self.cmd('workloads svi list -g CLI-testing', checks=[
            self.check('[0].name', '{name}'),
            self.check('[0].resourceGroup', 'CLI-testing'),
            self.check('[0].sapProduct', 'S4HANA'),
            self.check('[0].environment', 'Prod'),
            self.check('[0].provisioningState', 'Succeeded'),
            self.check('[0].configuration.configurationType', 'DeploymentWithOSConfig'),
            self.check('[0].configuration.infrastructureConfiguration.deploymentType', 'ThreeTier'),
            self.check('[0].tags.tag', 'test'),
            self.check('[0].tags.tag2', 'test2')
        ])
        self.cmd('workloads sap-availability-zone-detail --app-location "northeurope" --database-type "HANA" '
                 '--sap-product "S4HANA" --location "northe  urope"')

        self.cmd('workloads svi delete -g CLI-testing -n {name} -y')
