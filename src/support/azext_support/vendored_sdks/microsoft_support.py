# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.operations import Operations
from .operations.services_operations import ServicesOperations
from .operations.problem_classifications_operations import ProblemClassificationsOperations
from .operations.support_tickets_operations import SupportTicketsOperations
from .operations.communications_operations import CommunicationsOperations
from . import models


class MicrosoftSupportConfiguration(AzureConfiguration):
    """Configuration for MicrosoftSupport
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: Azure subscription id
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if subscription_id is None:
            raise ValueError("Parameter 'subscription_id' must not be None.")
        if not base_url:
            base_url = 'https://management.azure.com'

        super(MicrosoftSupportConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-mgmt-support/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.credentials = credentials
        self.subscription_id = subscription_id


class MicrosoftSupport(SDKClient):
    """Microsoft Azure Support Resource Provider.

    :ivar config: Configuration for client.
    :vartype config: MicrosoftSupportConfiguration

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.support.operations.Operations
    :ivar services: Services operations
    :vartype services: azure.mgmt.support.operations.ServicesOperations
    :ivar problem_classifications: ProblemClassifications operations
    :vartype problem_classifications: azure.mgmt.support.operations.ProblemClassificationsOperations
    :ivar support_tickets: SupportTickets operations
    :vartype support_tickets: azure.mgmt.support.operations.SupportTicketsOperations
    :ivar communications: Communications operations
    :vartype communications: azure.mgmt.support.operations.CommunicationsOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: Azure subscription id
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = MicrosoftSupportConfiguration(credentials, subscription_id, base_url)
        super(MicrosoftSupport, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2020-04-01'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
        self.services = ServicesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.problem_classifications = ProblemClassificationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.support_tickets = SupportTicketsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.communications = CommunicationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
