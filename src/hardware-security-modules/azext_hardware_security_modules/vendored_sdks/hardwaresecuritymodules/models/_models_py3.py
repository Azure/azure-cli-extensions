# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Dict, List, Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class ApiEntityReference(msrest.serialization.Model):
    """The API entity reference.

    :param id: The ARM resource id in the form of
     /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
    :type id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        **kwargs
    ):
        super(ApiEntityReference, self).__init__(**kwargs)
        self.id = id


class Resource(msrest.serialization.Model):
    """Dedicated HSM resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The Azure Resource Manager resource ID for the dedicated HSM.
    :vartype id: str
    :ivar name: The name of the dedicated HSM.
    :vartype name: str
    :ivar type: The resource type of the dedicated HSM.
    :vartype type: str
    :param location: Required. The supported Azure location where the dedicated HSM should be
     created.
    :type location: str
    :param sku: SKU details.
    :type sku: ~azure.mgmt.hardwaresecuritymodules.models.Sku
    :param zones: The Dedicated Hsm zones.
    :type zones: list[str]
    :param tags: A set of tags. Resource tags.
    :type tags: dict[str, str]
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'sku': {'key': 'sku', 'type': 'Sku'},
        'zones': {'key': 'zones', 'type': '[str]'},
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        *,
        location: str,
        sku: Optional["Sku"] = None,
        zones: Optional[List[str]] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        super(Resource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.location = location
        self.sku = sku
        self.zones = zones
        self.tags = tags


class DedicatedHsm(Resource):
    """Resource information with extended details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The Azure Resource Manager resource ID for the dedicated HSM.
    :vartype id: str
    :ivar name: The name of the dedicated HSM.
    :vartype name: str
    :ivar type: The resource type of the dedicated HSM.
    :vartype type: str
    :param location: Required. The supported Azure location where the dedicated HSM should be
     created.
    :type location: str
    :param sku: SKU details.
    :type sku: ~azure.mgmt.hardwaresecuritymodules.models.Sku
    :param zones: The Dedicated Hsm zones.
    :type zones: list[str]
    :param tags: A set of tags. Resource tags.
    :type tags: dict[str, str]
    :param stamp_id: This field will be used when RP does not support Availability zones.
    :type stamp_id: str
    :ivar status_message: Resource Status Message.
    :vartype status_message: str
    :ivar provisioning_state: Provisioning state. Possible values include: "Succeeded",
     "Provisioning", "Allocating", "Connecting", "Failed", "CheckingQuota", "Deleting".
    :vartype provisioning_state: str or ~azure.mgmt.hardwaresecuritymodules.models.JsonWebKeyType
    :param subnet: Specifies the identifier of the subnet.
    :type subnet: ~azure.mgmt.hardwaresecuritymodules.models.ApiEntityReference
    :param network_interfaces: Specifies the list of resource Ids for the network interfaces
     associated with the dedicated HSM.
    :type network_interfaces: list[~azure.mgmt.hardwaresecuritymodules.models.NetworkInterface]
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'status_message': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'sku': {'key': 'sku', 'type': 'Sku'},
        'zones': {'key': 'zones', 'type': '[str]'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'stamp_id': {'key': 'properties.stampId', 'type': 'str'},
        'status_message': {'key': 'properties.statusMessage', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'subnet': {'key': 'properties.networkProfile.subnet', 'type': 'ApiEntityReference'},
        'network_interfaces': {'key': 'properties.networkProfile.networkInterfaces', 'type': '[NetworkInterface]'},
    }

    def __init__(
        self,
        *,
        location: str,
        sku: Optional["Sku"] = None,
        zones: Optional[List[str]] = None,
        tags: Optional[Dict[str, str]] = None,
        stamp_id: Optional[str] = None,
        subnet: Optional["ApiEntityReference"] = None,
        network_interfaces: Optional[List["NetworkInterface"]] = None,
        **kwargs
    ):
        super(DedicatedHsm, self).__init__(location=location, sku=sku, zones=zones, tags=tags, **kwargs)
        self.stamp_id = stamp_id
        self.status_message = None
        self.provisioning_state = None
        self.subnet = subnet
        self.network_interfaces = network_interfaces


class DedicatedHsmError(msrest.serialization.Model):
    """The error exception.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar error: The key vault server error.
    :vartype error: ~azure.mgmt.hardwaresecuritymodules.models.Error
    """

    _validation = {
        'error': {'readonly': True},
    }

    _attribute_map = {
        'error': {'key': 'error', 'type': 'Error'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(DedicatedHsmError, self).__init__(**kwargs)
        self.error = None


class DedicatedHsmListResult(msrest.serialization.Model):
    """List of dedicated HSMs.

    :param value: The list of dedicated HSMs.
    :type value: list[~azure.mgmt.hardwaresecuritymodules.models.DedicatedHsm]
    :param next_link: The URL to get the next set of dedicated hsms.
    :type next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[DedicatedHsm]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["DedicatedHsm"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        super(DedicatedHsmListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DedicatedHsmPatchParameters(msrest.serialization.Model):
    """Patchable properties of the dedicated HSM.

    :param tags: A set of tags. Resource tags.
    :type tags: dict[str, str]
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        super(DedicatedHsmPatchParameters, self).__init__(**kwargs)
        self.tags = tags


class Error(msrest.serialization.Model):
    """The key vault server error.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar inner_error: The key vault server error.
    :vartype inner_error: ~azure.mgmt.hardwaresecuritymodules.models.Error
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'inner_error': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'inner_error': {'key': 'innererror', 'type': 'Error'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Error, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.inner_error = None


class NetworkInterface(msrest.serialization.Model):
    """The network interface definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The ARM resource id in the form of
     /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
    :vartype id: str
    :param private_ip_address: Private Ip address of the interface.
    :type private_ip_address: str
    """

    _validation = {
        'id': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'private_ip_address': {'key': 'privateIpAddress', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        private_ip_address: Optional[str] = None,
        **kwargs
    ):
        super(NetworkInterface, self).__init__(**kwargs)
        self.id = None
        self.private_ip_address = private_ip_address


class ResourceListResult(msrest.serialization.Model):
    """List of dedicated HSM resources.

    :param value: The list of dedicated HSM resources.
    :type value: list[~azure.mgmt.hardwaresecuritymodules.models.Resource]
    :param next_link: The URL to get the next set of dedicated HSM resources.
    :type next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Resource]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Resource"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        super(ResourceListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class Sku(msrest.serialization.Model):
    """Sku.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: SKU of the dedicated HSM. Default value: "SafeNet Luna Network HSM A790".
    :vartype name: str
    """

    _validation = {
        'name': {'constant': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
    }

    name = "SafeNet Luna Network HSM A790"

    def __init__(
        self,
        **kwargs
    ):
        super(Sku, self).__init__(**kwargs)
