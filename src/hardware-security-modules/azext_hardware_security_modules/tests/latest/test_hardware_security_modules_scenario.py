# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from knack.testsdk import JMESPathCheck

from .preparers import VirtualNetworkPreparer
from .preparers import SubnetPreparer
from .example_steps import step_dedicated_hsm_create
from .example_steps import step_dedicated_hsm_create2
from .example_steps import step_dedicated_hsm_create3
from .example_steps import step_dedicated_hsm_show
from .example_steps import step_dedicated_hsm_show2
from .example_steps import step_dedicated_hsm_show3
from .example_steps import step_dedicated_hsm_list
from .example_steps import step_dedicated_hsm_list2
from .example_steps import step_dedicated_hsm_list3
from .example_steps import step_dedicated_hsm_list4
from .example_steps import step_dedicated_hsm_list5
from .example_steps import step_dedicated_hsm_update
from .example_steps import step_dedicated_hsm_update2
from .example_steps import step_dedicated_hsm_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)

TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


class Hardware_security_modulesScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cli_test_databricks')
    def test_hardware_security_modules(self, resource_group):
        subscription_id = self.get_subscription_id()
        self.kwargs.update({
            'workspace_name': 'my-test-workspace',
            'custom_workspace_name': 'my-custom-workspace',
            'managed_resource_group': 'custom-managed-rg'
        })
        self.cmd('az dedicated-hsm create '
                 '--name "hsm1" '
                 '--location "westus" '
                 '--network-profile-network-interfaces private-ip-address="10.0.2.21" '
                 '--subnet id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetworks/vn/subnets/hsm" '
                 '--stamp-id "stamp1" '
                 '--sku name="SafeNet Luna Network HSM A790" '
                 '--tags Dept="hsm" Environment="dogfood" '
                 '--resource-group "{rg}"',
                 checks=[JMESPathCheck('name', 'hsm1')])
        self.cmd('az dedicated-hsm show '
                 '--name "hsm1" '
                 '--resource-group "{rg}"',
                 checks=[JMESPathCheck('name', 'hsm1')])
        self.cmd('az dedicated-hsm list '
                 '--resource-group "{rg}"',
                 checks=[JMESPathCheck('[0].name', 'hsm1')])
        self.cmd('az dedicated-hsm update '
                 '--name "hsm1" '
                 '--tags Dept="hsm" Environment="dogfood" Slice="A" '
                 '--resource-group "{rg}"',
                 checks=[JMESPathCheck('tags.Slice', "A")])
        self.cmd('az dedicated-hsm delete '
                 '--name "hsm1" '
                 '--resource-group "{rg}" '
                 '-y',
                 checks=[])
