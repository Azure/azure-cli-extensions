# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /DedicatedHsm/put/Create a new or update an existing dedicated HSM
@try_manual
def step_dedicated_hsm_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az hardware-security-modules dedicated-hsm create '
             '--name "hsm1" '
             '--location "westus" '
             '--network-interfaces private-ip-address="1.0.0.1" '
             '--subnet id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetw'
             'orks/{vn}/subnets/default" '
             '--stamp-id "{vn}" '
             '--tags Dept="hsm" Environment="dogfood" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DedicatedHsm/get/Get a dedicated HSM
@try_manual
def step_dedicated_hsm_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az hardware-security-modules dedicated-hsm show '
             '--name "hsm1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DedicatedHsm/get/List dedicated HSM devices in a resource group
@try_manual
def step_dedicated_hsm_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az hardware-security-modules dedicated-hsm list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DedicatedHsm/get/List dedicated HSM devices in a subscription
@try_manual
def step_dedicated_hsm_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az hardware-security-modules dedicated-hsm list '
             '-g ""',
             checks=checks)


# EXAMPLE: /DedicatedHsm/patch/Update an existing dedicated HSM
@try_manual
def step_dedicated_hsm_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az hardware-security-modules dedicated-hsm update '
             '--name "hsm1" '
             '--tags Dept="hsm" Environment="dogfood" Slice="A" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DedicatedHsm/delete/Delete a dedicated HSM
@try_manual
def step_dedicated_hsm_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az hardware-security-modules dedicated-hsm delete -y '
             '--name "hsm1" '
             '--resource-group "{rg}"',
             checks=checks)

