# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['migrate project'] = """
    type: group
    short-summary: migrate project
"""

helps['migrate project list'] = """
    type: command
    short-summary: "Get all the projects in the resource group. And Get all the projects in the subscription."
    examples:
      - name: Projects_List
        text: |-
               az migrate project list --resource-group "abgoyal-westEurope"
      - name: Projects_List
        text: |-
               az migrate project list
"""

helps['migrate project show'] = """
    type: command
    short-summary: "Get the project with the specified name."
    examples:
      - name: Projects_Get
        text: |-
               az migrate project show --name "abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate project create'] = """
    type: command
    short-summary: "Create a project with specified name. If a project already exists, update it."
    parameters:
      - name: --properties
        short-summary: "Properties of the project."
        long-summary: |
            Usage: --properties assessment-solution-id=XX project-status=XX customer-workspace-id=XX \
customer-workspace-location=XX

            assessment-solution-id: Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
            project-status: Assessment project status.
            customer-workspace-id: The ARM id of service map workspace created by customer.
            customer-workspace-location: Location of service map workspace created by customer.
    examples:
      - name: Projects_Create
        text: |-
               az migrate project create --e-tag "" --location "West Europe" --properties \
assessment-solution-id="/subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourcegroups/abgoyal-westeurope/providers\
/microsoft.migrate/migrateprojects/abgoyalweselfhost/Solutions/Servers-Assessment-ServerAssessment" \
customer-workspace-id=null customer-workspace-location=null project-status="Active" --tags "{}" --name \
"abGoyalProject2" --resource-group "abgoyal-westEurope"
"""

helps['migrate project update'] = """
    type: command
    short-summary: "Update a project with specified name. Supports partial updates, for example only tags can be \
provided."
    parameters:
      - name: --properties
        short-summary: "Properties of the project."
        long-summary: |
            Usage: --properties assessment-solution-id=XX project-status=XX customer-workspace-id=XX \
customer-workspace-location=XX

            assessment-solution-id: Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.
            project-status: Assessment project status.
            customer-workspace-id: The ARM id of service map workspace created by customer.
            customer-workspace-location: Location of service map workspace created by customer.
    examples:
      - name: Projects_Update
        text: |-
               az migrate project update --e-tag "" --location "West Europe" --properties \
assessment-solution-id="/subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourcegroups/abgoyal-westeurope/providers\
/microsoft.migrate/migrateprojects/abgoyalweselfhost/Solutions/Servers-Assessment-ServerAssessment" \
customer-workspace-id=null customer-workspace-location=null project-status="Active" --tags "{}" --name \
"abGoyalProject2" --resource-group "abgoyal-westEurope"
"""

helps['migrate project delete'] = """
    type: command
    short-summary: "Delete the project. Deleting non-existent project is a no-operation."
    examples:
      - name: Projects_Delete
        text: |-
               az migrate project delete --name "abGoyalProject2" --resource-group "abgoyal-westEurope"
"""

helps['migrate project assessment-option'] = """
    type: command
    short-summary: "Get all available options for the properties of an assessment on a project."
    examples:
      - name: AssessmentOptions_Get
        text: |-
               az migrate project assessment-option --assessment-options-name "default" --name \
"abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate project assessment-option-list'] = """
    type: command
    short-summary: "Gets list of all available options for the properties of an assessment on a project."
    examples:
      - name: AssessmentOptions_Get
        text: |-
               az migrate project assessment-option-list --name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate machine'] = """
    type: group
    short-summary: migrate machine
"""

helps['migrate machine list'] = """
    type: command
    short-summary: "Get data of all the machines available in the project. Returns a json array of objects of type \
'machine' defined in Models section."
    examples:
      - name: Machines_ListByProject
        text: |-
               az migrate machine list --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate machine show'] = """
    type: command
    short-summary: "Get the machine with the specified name. Returns a json object of type 'machine' defined in Models \
section."
    examples:
      - name: Machines_Get
        text: |-
               az migrate machine show --name "269ef295-a38d-4f8f-9779-77ce79088311" --project-name \
"abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate group'] = """
    type: group
    short-summary: migrate group
"""

helps['migrate group list'] = """
    type: command
    short-summary: "Get all groups created in the project. Returns a json array of objects of type 'group' as \
specified in the Models section."
    examples:
      - name: Groups_ListByProject
        text: |-
               az migrate group list --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate group show'] = """
    type: command
    short-summary: "Get information related to a specific group in the project. Returns a json object of type 'group' \
as specified in the models section."
    examples:
      - name: Groups_Get
        text: |-
               az migrate group show --name "Test1" --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate group create'] = """
    type: command
    short-summary: "Create a new group by sending a json object of type 'group' as given in Models section as part of \
the Request Body. The group name in a project is unique.  This operation is Idempotent."
    examples:
      - name: Groups_Create
        text: |-
               az migrate group create --e-tag "\\"1e000c2c-0000-0d00-0000-5cdaa4190000\\"" --name "Group2" \
--project-name "abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate group delete'] = """
    type: command
    short-summary: "Delete the group from the project. The machines remain in the project. Deleting a non-existent \
group results in a no-operation.  A group is an aggregation mechanism for machines in a project. Therefore, deleting \
group does not delete machines in it."
    examples:
      - name: Groups_Delete
        text: |-
               az migrate group delete --name "Test1" --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate group update-machine'] = """
    type: command
    short-summary: "Update machines in group by adding or removing machines."
    parameters:
      - name: --properties
        short-summary: "Properties of the group."
        long-summary: |
            Usage: --properties operation-type=XX machines=XX

            operation-type: Whether to add or remove the machines.
            machines: List of machine names that are part of this group.
    examples:
      - name: Groups_UpdateMachines
        text: |-
               az migrate group update-machine --e-tag "\\"1e000c2c-0000-0d00-0000-5cdaa4190000\\"" --properties \
machines="/subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourceGroups/abgoyal-westeurope/providers/Microsoft.Mig\
rate/assessmentprojects/abgoyalWEselfhostb72bproject/machines/amansing_vm1" operation-type="Add" --name "Group2" \
--project-name "abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate assessment'] = """
    type: group
    short-summary: migrate assessment
"""

helps['migrate assessment list'] = """
    type: command
    short-summary: "Get all assessments created for the specified group.  Returns a json array of objects of type \
'assessment' as specified in Models section. And Get all assessments created in the project.  Returns a json array of \
objects of type 'assessment' as specified in Models section."
    examples:
      - name: Assessments_ListByGroup
        text: |-
               az migrate assessment list --group-name "Test1" --project-name "abgoyalWEselfhostb72bproject" \
--resource-group "abgoyal-westEurope"
      - name: Assessments_ListByProject
        text: |-
               az migrate assessment list --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate assessment show'] = """
    type: command
    short-summary: "Get an existing assessment with the specified name. Returns a json object of type 'assessment' as \
specified in Models section."
    examples:
      - name: Assessments_Get
        text: |-
               az migrate assessment show --name "assessment_5_9_2019_16_22_14" --group-name "Test1" --project-name \
"abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate assessment create'] = """
    type: command
    short-summary: "Create a new assessment with the given name and the specified settings. Since name of an \
assessment in a project is a unique identifier, if an assessment with the name provided already exists, then the \
existing assessment is updated.  Any PUT operation, resulting in either create or update on an assessment, will cause \
the assessment to go in a \\"InProgress\\" state. This will be indicated by the field 'computationState' on the \
Assessment object. During this time no other PUT operation will be allowed on that assessment object, nor will a \
Delete operation. Once the computation for the assessment is complete, the field 'computationState' will be updated to \
'Ready', and then other PUT or DELETE operations can happen on the assessment.  When assessment is under computation, \
any PUT will lead to a 400 - Bad Request error."
    parameters:
      - name: --vm-uptime
        short-summary: "Specify the duration for which the VMs are up in the on-premises environment."
        long-summary: |
            Usage: --vm-uptime days-per-month=XX hours-per-day=XX

            days-per-month: Number of days in a month for VM uptime.
            hours-per-day: Number of hours per day for VM uptime.
    examples:
      - name: Assessments_Create
        text: |-
               az migrate assessment create --e-tag "\\"1e000c2c-0000-0d00-0000-5cdaa4190000\\"" --azure-disk-type \
"StandardOrPremium" --azure-hybrid-use-benefit "Yes" --azure-location "NorthEurope" --azure-offer-code "MSAZR0003P" \
--azure-pricing-tier "Standard" --azure-storage-redundancy "LocallyRedundant" --azure-vm-families "Dv2_series" \
--azure-vm-families "F_series" --azure-vm-families "Dv3_series" --azure-vm-families "DS_series" --azure-vm-families \
"DSv2_series" --azure-vm-families "Fs_series" --azure-vm-families "Dsv3_series" --azure-vm-families "Ev3_series" \
--azure-vm-families "Esv3_series" --azure-vm-families "D_series" --azure-vm-families "M_series" --azure-vm-families \
"Fsv2_series" --azure-vm-families "H_series" --currency "USD" --discount-percentage 100 --percentile "Percentile95" \
--reserved-instance "RI3Year" --scaling-factor 1 --sizing-criterion "PerformanceBased" --stage "InProgress" \
--time-range "Day" --vm-uptime days-per-month=31 hours-per-day=24 --name "assessment_5_14_2019_16_48_47" --group-name \
"Group2" --project-name "abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate assessment delete'] = """
    type: command
    short-summary: "Delete an assessment from the project. The machines remain in the assessment. Deleting a \
non-existent assessment results in a no-operation.  When an assessment is under computation, as indicated by the \
'computationState' field, it cannot be deleted. Any such attempt will return a 400 - Bad Request."
    examples:
      - name: Assessments_Delete
        text: |-
               az migrate assessment delete --name "assessment_5_9_2019_16_22_14" --group-name "Test1" --project-name \
"abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate assessment get-report-download-url'] = """
    type: command
    short-summary: "Get the URL for downloading the assessment in a report format."
    examples:
      - name: Assessments_GetReportDownloadUrl
        text: |-
               az migrate assessment get-report-download-url --name "assessment_5_9_2019_16_22_14" --group-name \
"Test1" --project-name "abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate assessed-machine'] = """
    type: group
    short-summary: migrate assessed-machine
"""

helps['migrate assessed-machine list'] = """
    type: command
    short-summary: "Get list of machines that assessed as part of the specified assessment. Returns a json array of \
objects of type 'assessedMachine' as specified in the Models section.  Whenever an assessment is created or updated, \
it goes under computation. During this phase, the 'status' field of Assessment object reports 'Computing'. During the \
period when the assessment is under computation, the list of assessed machines is empty and no assessed machines are \
returned by this call."
    examples:
      - name: AssessedMachines_ListByAssessment
        text: |-
               az migrate assessed-machine list --assessment-name "assessment_5_9_2019_16_22_14" --group-name "Test1" \
--project-name "abgoyalWEselfhostb72bproject" --resource-group "abgoyal-westEurope"
"""

helps['migrate assessed-machine show'] = """
    type: command
    short-summary: "Get an assessed machine with its size & cost estimate that was evaluated in the specified \
assessment."
    examples:
      - name: AssessedMachines_Get
        text: |-
               az migrate assessed-machine show --name "f57fe432-3bd2-486a-a83a-6f4d99f1a952" --assessment-name \
"assessment_5_9_2019_16_22_14" --group-name "Test1" --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate hyper-v-collector'] = """
    type: group
    short-summary: migrate hyper-v-collector
"""

helps['migrate hyper-v-collector list'] = """
    type: command
    short-summary: "Get a list of Hyper-V collector."
    examples:
      - name: HyperVCollectors_ListByProject
        text: |-
               az migrate hyper-v-collector list --project-name "migrateprojectce73project" --resource-group \
"contosoithyperv"
"""

helps['migrate hyper-v-collector show'] = """
    type: command
    short-summary: "Get a Hyper-V collector."
    examples:
      - name: HyperVCollectors_Get
        text: |-
               az migrate hyper-v-collector show --name "migrateprojectce73collector" --project-name \
"migrateprojectce73project" --resource-group "contosoithyperv"
"""

helps['migrate hyper-v-collector create'] = """
    type: command
    short-summary: "Create or Update Hyper-V collector."
    parameters:
      - name: --agent-properties-spn-details
        long-summary: |
            Usage: --agent-properties-spn-details authority=XX application-id=XX audience=XX object-id=XX tenant-id=XX

            authority: AAD Authority URL which was used to request the token for the service principal.
            application-id: Application/client Id for the service principal with which the on-premise management/data \
plane components would communicate with our Azure services.
            audience: Intended audience for the service principal.
            object-id: Object Id of the service principal with which the on-premise management/data plane components \
would communicate with our Azure services.
            tenant-id: Tenant Id for the service principal with which the on-premise management/data plane components \
would communicate with our Azure services.
    examples:
      - name: HyperVCollectors_Create
        text: |-
               az migrate hyper-v-collector create --e-tag "\\"00000981-0000-0300-0000-5d74cd5f0000\\"" \
--agent-properties-spn-details application-id="827f1053-44dc-439f-b832-05416dcce12b" audience="https://72f988bf-86f1-41\
af-91ab-2d7cd011db47/migrateprojectce73agentauthaadapp" authority="https://login.windows.net/72f988bf-86f1-41af-91ab-2d\
7cd011db47" object-id="be75098e-c0fc-4ac4-98c7-282ebbcf8370" tenant-id="72f988bf-86f1-41af-91ab-2d7cd011db47" \
--discovery-site-id "/subscriptions/8c3c936a-c09b-4de3-830b-3f5f244d72e9/resourceGroups/ContosoITHyperV/providers/Micro\
soft.OffAzure/HyperVSites/migrateprojectce73site" --name "migrateprojectce73collector" --project-name \
"migrateprojectce73project" --resource-group "contosoithyperv"
"""

helps['migrate hyper-v-collector delete'] = """
    type: command
    short-summary: "Delete a Hyper-V collector from the project."
    examples:
      - name: HyperVCollectors_Delete
        text: |-
               az migrate hyper-v-collector delete --name "migrateprojectce73collector" --project-name \
"migrateprojectce73project" --resource-group "contosoithyperv"
"""

helps['migrate v-mware-collector'] = """
    type: group
    short-summary: migrate v-mware-collector
"""

helps['migrate v-mware-collector list'] = """
    type: command
    short-summary: "Get a list of VMware collector."
    examples:
      - name: VMwareCollectors_ListByProject
        text: |-
               az migrate v-mware-collector list --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope"
"""

helps['migrate v-mware-collector show'] = """
    type: command
    short-summary: "Get a VMware collector."
    examples:
      - name: VMwareCollectors_Get
        text: |-
               az migrate v-mware-collector show --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope" --name "PortalvCenterbc2fcollector"
"""

helps['migrate v-mware-collector create'] = """
    type: command
    short-summary: "Create or Update VMware collector."
    parameters:
      - name: --agent-properties-spn-details
        long-summary: |
            Usage: --agent-properties-spn-details authority=XX application-id=XX audience=XX object-id=XX tenant-id=XX

            authority: AAD Authority URL which was used to request the token for the service principal.
            application-id: Application/client Id for the service principal with which the on-premise management/data \
plane components would communicate with our Azure services.
            audience: Intended audience for the service principal.
            object-id: Object Id of the service principal with which the on-premise management/data plane components \
would communicate with our Azure services.
            tenant-id: Tenant Id for the service principal with which the on-premise management/data plane components \
would communicate with our Azure services.
    examples:
      - name: VMwareCollectors_Create
        text: |-
               az migrate v-mware-collector create --e-tag "\\"01003d32-0000-0d00-0000-5d74d2e50000\\"" \
--agent-properties-spn-details application-id="fc717575-8173-4b21-92a5-658b655e613e" audience="https://72f988bf-86f1-41\
af-91ab-2d7cd011db47/PortalvCenterbc2fagentauthaadapp" authority="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7\
cd011db47" object-id="29d94f38-db94-4980-aec0-0cfd55ab1cd0" tenant-id="72f988bf-86f1-41af-91ab-2d7cd011db47" \
--discovery-site-id "/subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourceGroups/abgoyal-westEurope/providers/Mi\
crosoft.OffAzure/VMwareSites/PortalvCenterbc2fsite" --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope" --name "PortalvCenterbc2fcollector"
"""

helps['migrate v-mware-collector delete'] = """
    type: command
    short-summary: "Delete a VMware collector from the project."
    examples:
      - name: VMwareCollectors_Delete
        text: |-
               az migrate v-mware-collector delete --project-name "abgoyalWEselfhostb72bproject" --resource-group \
"abgoyal-westEurope" --name "PortalvCenterbc2fcollector"
"""
