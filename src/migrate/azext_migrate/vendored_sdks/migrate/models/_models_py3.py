# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import List, Optional, Union

import msrest.serialization

from ._azure_migrate_v2_enums import *


class AssessedDisk(msrest.serialization.Model):
    """A disk assessed for an assessment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the assessed disk.
    :vartype name: str
    :ivar display_name: User friendly name of the assessed disk.
    :vartype display_name: str
    :ivar gigabytes_provisioned: Gigabytes of storage provisioned for this disk.
    :vartype gigabytes_provisioned: float
    :ivar megabytes_per_second_of_read: Disk throughput in MegaBytes per second.
    :vartype megabytes_per_second_of_read: float
    :ivar megabytes_per_second_of_write: Disk throughput in MegaBytes per second.
    :vartype megabytes_per_second_of_write: float
    :ivar number_of_read_operations_per_second: Number of read operations per second for the disk.
    :vartype number_of_read_operations_per_second: float
    :ivar number_of_write_operations_per_second: Number of read and write operations per second for
     the disk.
    :vartype number_of_write_operations_per_second: float
    :ivar monthly_storage_cost: Estimated aggregate storage cost for a 31-day month for this disk.
    :vartype monthly_storage_cost: float
    :ivar recommended_disk_type: Storage type selected for this disk. Possible values include:
     "Unknown", "Standard", "Premium", "StandardSSD", "StandardOrPremium".
    :vartype recommended_disk_type: str or ~azure_migrate_v2.models.AzureDiskType
    :ivar recommended_disk_size: Recommended Azure size for the disk, given utilization data and
     preferences set on Assessment. Possible values include: "Unknown", "Standard_S4",
     "Standard_S6", "Standard_S10", "Standard_S15", "Standard_S20", "Standard_S30", "Standard_S40",
     "Standard_S50", "Premium_P4", "Premium_P6", "Premium_P10", "Premium_P15", "Premium_P20",
     "Premium_P30", "Premium_P40", "Premium_P50", "Standard_S60", "Standard_S70", "Standard_S80",
     "Premium_P60", "Premium_P70", "Premium_P80", "StandardSSD_E10", "StandardSSD_E15",
     "StandardSSD_E20", "StandardSSD_E30", "StandardSSD_E40", "StandardSSD_E50", "StandardSSD_E60",
     "StandardSSD_E70", "StandardSSD_E80", "StandardSSD_E4", "StandardSSD_E6".
    :vartype recommended_disk_size: str or ~azure_migrate_v2.models.AzureDiskSize
    :ivar gigabytes_for_recommended_disk_size: Gigabytes of storage provided by the recommended
     Azure disk size.
    :vartype gigabytes_for_recommended_disk_size: int
    :ivar suitability: Whether this disk is suitable for Azure. Possible values include: "Unknown",
     "NotSuitable", "Suitable", "ConditionallySuitable", "ReadinessUnknown".
    :vartype suitability: str or ~azure_migrate_v2.models.CloudSuitability
    :ivar suitability_explanation: If disk is not suitable to be migrated, this explains the
     reasons and mitigation steps. Possible values include: "Unknown", "NotApplicable",
     "DiskSizeGreaterThanSupported", "NoSuitableDiskSizeForIops", "NoSuitableDiskSizeForThroughput",
     "NoDiskSizeFoundInSelectedLocation", "NoDiskSizeFoundForSelectedRedundancy",
     "InternalErrorOccurredForDiskEvaluation", "NoEaPriceFoundForDiskSize".
    :vartype suitability_explanation: str or
     ~azure_migrate_v2.models.AzureDiskSuitabilityExplanation
    :ivar suitability_detail: If disk is suitable to be migrate but some conditions/checks were not
     considered while calculating suitability, this explains the details. Possible values include:
     "None", "NumberOfReadOperationsPerSecondMissing", "NumberOfWriteOperationsPerSecondMissing",
     "MegabytesPerSecondOfReadMissing", "MegabytesPerSecondOfWriteMissing",
     "DiskGigabytesConsumedMissing", "DiskGigabytesProvisionedMissing",
     "NumberOfReadOperationsPerSecondOutOfRange", "NumberOfWriteOperationsPerSecondOutOfRange",
     "MegabytesPerSecondOfReadOutOfRange", "MegabytesPerSecondOfWriteOutOfRange",
     "DiskGigabytesConsumedOutOfRange", "DiskGigabytesProvisionedOutOfRange".
    :vartype suitability_detail: str or ~azure_migrate_v2.models.AzureDiskSuitabilityDetail
    """

    _validation = {
        'name': {'readonly': True},
        'display_name': {'readonly': True},
        'gigabytes_provisioned': {'readonly': True},
        'megabytes_per_second_of_read': {'readonly': True},
        'megabytes_per_second_of_write': {'readonly': True},
        'number_of_read_operations_per_second': {'readonly': True},
        'number_of_write_operations_per_second': {'readonly': True},
        'monthly_storage_cost': {'readonly': True},
        'recommended_disk_type': {'readonly': True},
        'recommended_disk_size': {'readonly': True},
        'gigabytes_for_recommended_disk_size': {'readonly': True},
        'suitability': {'readonly': True},
        'suitability_explanation': {'readonly': True},
        'suitability_detail': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'gigabytes_provisioned': {'key': 'gigabytesProvisioned', 'type': 'float'},
        'megabytes_per_second_of_read': {'key': 'megabytesPerSecondOfRead', 'type': 'float'},
        'megabytes_per_second_of_write': {'key': 'megabytesPerSecondOfWrite', 'type': 'float'},
        'number_of_read_operations_per_second': {'key': 'numberOfReadOperationsPerSecond', 'type': 'float'},
        'number_of_write_operations_per_second': {'key': 'numberOfWriteOperationsPerSecond', 'type': 'float'},
        'monthly_storage_cost': {'key': 'monthlyStorageCost', 'type': 'float'},
        'recommended_disk_type': {'key': 'recommendedDiskType', 'type': 'str'},
        'recommended_disk_size': {'key': 'recommendedDiskSize', 'type': 'str'},
        'gigabytes_for_recommended_disk_size': {'key': 'gigabytesForRecommendedDiskSize', 'type': 'int'},
        'suitability': {'key': 'suitability', 'type': 'str'},
        'suitability_explanation': {'key': 'suitabilityExplanation', 'type': 'str'},
        'suitability_detail': {'key': 'suitabilityDetail', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(AssessedDisk, self).__init__(**kwargs)
        self.name = None
        self.display_name = None
        self.gigabytes_provisioned = None
        self.megabytes_per_second_of_read = None
        self.megabytes_per_second_of_write = None
        self.number_of_read_operations_per_second = None
        self.number_of_write_operations_per_second = None
        self.monthly_storage_cost = None
        self.recommended_disk_type = None
        self.recommended_disk_size = None
        self.gigabytes_for_recommended_disk_size = None
        self.suitability = None
        self.suitability_explanation = None
        self.suitability_detail = None


class AssessedMachine(msrest.serialization.Model):
    """A machine evaluated as part of an assessment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Path reference to this assessed machine.
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}.
    :vartype id: str
    :ivar name: Name of the machine.
    :vartype name: str
    :param e_tag: For optimistic concurrency control.
    :type e_tag: str
    :ivar type: Type of the object =
     [Microsoft.Migrate/assessmentProjects/groups/assessments/assessedMachines].
    :vartype type: str
    :param properties: Properties of an assessed machine.
    :type properties: ~azure_migrate_v2.models.AssessedMachineProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'AssessedMachineProperties'},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        properties: Optional["AssessedMachineProperties"] = None,
        **kwargs
    ):
        super(AssessedMachine, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.e_tag = e_tag
        self.type = None
        self.properties = properties


class AssessedMachineProperties(msrest.serialization.Model):
    """Properties of an assessed machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar boot_type: Boot type of the machine. Possible values include: "Unknown", "EFI", "BIOS".
    :vartype boot_type: str or ~azure_migrate_v2.models.MachineBootType
    :ivar datacenter_machine_arm_id: ARM ID of the discovered machine.
    :vartype datacenter_machine_arm_id: str
    :ivar datacenter_management_server_arm_id: ARM ID of the discovered datacenter.
    :vartype datacenter_management_server_arm_id: str
    :ivar datacenter_management_server_name: Name of the server hosting the datacenter management
     solution.
    :vartype datacenter_management_server_name: str
    :ivar description: Description of the machine.
    :vartype description: str
    :ivar display_name: User readable name of the machine as defined by the user in their private
     datacenter.
    :vartype display_name: str
    :ivar megabytes_of_memory: Memory in Megabytes.
    :vartype megabytes_of_memory: float
    :ivar number_of_cores: Processor count.
    :vartype number_of_cores: int
    :ivar operating_system_type: Operating System type of the machine.
    :vartype operating_system_type: str
    :ivar operating_system_name: Operating System name of the machine.
    :vartype operating_system_name: str
    :ivar operating_system_version: Operating System version of the machine.
    :vartype operating_system_version: str
    :ivar monthly_bandwidth_cost: Monthly network cost estimate for the network adapters that are
     attached to this machine as a group, for a 31-day month.
    :vartype monthly_bandwidth_cost: float
    :ivar monthly_storage_cost: Monthly storage cost estimate for the disks that are attached to
     this machine as a group, for a 31-day month.
    :vartype monthly_storage_cost: float
    :ivar monthly_premium_storage_cost: Monthly premium storage cost estimate for the disks that
     are attached to this machine as a group, for a 31-day month.
    :vartype monthly_premium_storage_cost: float
    :ivar monthly_standard_ssd_storage_cost: Monthly standard SSD storage cost estimate for the
     disks that are attached to this machine as a group, for a 31-day month.
    :vartype monthly_standard_ssd_storage_cost: float
    :ivar confidence_rating_in_percentage: Confidence rating of assessed machine.
    :vartype confidence_rating_in_percentage: float
    :ivar disks: Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk
     object.
    :vartype disks: dict[str, ~azure_migrate_v2.models.AssessedDisk]
    :ivar network_adapters: Dictionary of network adapters attached to the machine. Key is name of
     the adapter. Value is a network adapter object.
    :vartype network_adapters: dict[str, ~azure_migrate_v2.models.AssessedNetworkAdapter]
    :ivar recommended_size: Recommended Azure size for this machine. Possible values include:
     "Unknown", "Basic_A0", "Basic_A1", "Basic_A2", "Basic_A3", "Basic_A4", "Standard_A0",
     "Standard_A1", "Standard_A2", "Standard_A3", "Standard_A4", "Standard_A5", "Standard_A6",
     "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11", "Standard_A1_v2",
     "Standard_A2_v2", "Standard_A4_v2", "Standard_A8_v2", "Standard_A2m_v2", "Standard_A4m_v2",
     "Standard_A8m_v2", "Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4", "Standard_D11",
     "Standard_D12", "Standard_D13", "Standard_D14", "Standard_D1_v2", "Standard_D2_v2",
     "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2", "Standard_D11_v2", "Standard_D12_v2",
     "Standard_D13_v2", "Standard_D14_v2", "Standard_D15_v2", "Standard_DS1", "Standard_DS2",
     "Standard_DS3", "Standard_DS4", "Standard_DS11", "Standard_DS12", "Standard_DS13",
     "Standard_DS14", "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2",
     "Standard_DS5_v2", "Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2",
     "Standard_DS14_v2", "Standard_DS15_v2", "Standard_F1", "Standard_F2", "Standard_F4",
     "Standard_F8", "Standard_F16", "Standard_F1s", "Standard_F2s", "Standard_F4s", "Standard_F8s",
     "Standard_F16s", "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
     "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5", "Standard_H8",
     "Standard_H16", "Standard_H8m", "Standard_H16m", "Standard_H16r", "Standard_H16mr",
     "Standard_L4s", "Standard_L8s", "Standard_L16s", "Standard_L32s", "Standard_D2s_v3",
     "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3",
     "Standard_D64s_v3", "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3",
     "Standard_D32_v3", "Standard_D64_v3", "Standard_F2s_v2", "Standard_F4s_v2", "Standard_F8s_v2",
     "Standard_F16s_v2", "Standard_F32s_v2", "Standard_F64s_v2", "Standard_F72s_v2",
     "Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3",
     "Standard_E64_v3", "Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3",
     "Standard_E32s_v3", "Standard_E64s_v3", "Standard_M64s", "Standard_M64ms", "Standard_M128s",
     "Standard_M128ms".
    :vartype recommended_size: str or ~azure_migrate_v2.models.AzureVmSize
    :ivar number_of_cores_for_recommended_size: Number of CPU cores in the Recommended Azure VM
     Size.
    :vartype number_of_cores_for_recommended_size: int
    :ivar megabytes_of_memory_for_recommended_size: Megabytes of memory in the Recommended Azure VM
     Size.
    :vartype megabytes_of_memory_for_recommended_size: float
    :ivar monthly_compute_cost_for_recommended_size: Compute Cost for a 31-day month, if the
     machine is migrated to Azure with the Recommended Size.
    :vartype monthly_compute_cost_for_recommended_size: float
    :ivar percentage_cores_utilization: Utilization percentage of the processor core as observed in
     the private data center, in the Time Range selected on Assessment, reported as the Percentile
     value based on the percentile number selected in assessment.
    :vartype percentage_cores_utilization: float
    :ivar percentage_memory_utilization: Utilization percentage of the memory as observed in the
     private data center, in the Time Range selected on Assessment, reported as the Percentile value
     based on the percentile number selected in assessment.
    :vartype percentage_memory_utilization: float
    :ivar suitability: Whether machine is suitable for migration to Azure. Possible values include:
     "Unknown", "NotSuitable", "Suitable", "ConditionallySuitable", "ReadinessUnknown".
    :vartype suitability: str or ~azure_migrate_v2.models.CloudSuitability
    :ivar suitability_explanation: If machine is not ready to be migrated, this explains the
     reasons and mitigation steps. Possible values include: "Unknown", "NotApplicable",
     "GuestOperatingSystemArchitectureNotSupported", "GuestOperatingSystemNotSupported",
     "BootTypeNotSupported", "MoreDisksThanSupported", "NoSuitableVmSizeFound",
     "OneOrMoreDisksNotSuitable", "OneOrMoreAdaptersNotSuitable",
     "InternalErrorOccurredDuringComputeEvaluation", "InternalErrorOccurredDuringStorageEvaluation",
     "InternalErrorOccurredDuringNetworkEvaluation", "NoVmSizeSupportsStoragePerformance",
     "NoVmSizeSupportsNetworkPerformance", "NoVmSizeForSelectedPricingTier",
     "NoVmSizeForSelectedAzureLocation", "CheckRedHatLinuxVersion", "CheckOpenSuseLinuxVersion",
     "CheckWindowsServer2008R2Version", "CheckCentOsVersion", "CheckDebianLinuxVersion",
     "CheckSuseLinuxVersion", "CheckOracleLinuxVersion", "CheckUbuntuLinuxVersion",
     "CheckCoreOsLinuxVersion", "WindowsServerVersionConditionallySupported",
     "NoGuestOperatingSystemConditionallySupported", "WindowsClientVersionsConditionallySupported",
     "BootTypeUnknown", "GuestOperatingSystemUnknown", "WindowsServerVersionsSupportedWithCaveat",
     "WindowsOSNoLongerUnderMSSupport", "EndorsedWithConditionsLinuxDistributions",
     "UnendorsedLinuxDistributions", "NoVmSizeForStandardPricingTier",
     "NoVmSizeForBasicPricingTier".
    :vartype suitability_explanation: str or ~azure_migrate_v2.models.AzureVmSuitabilityExplanation
    :ivar suitability_detail: If machine is not suitable for cloud, this explains the reasons.
     Possible values include: "None", "RecommendedSizeHasLessNetworkAdapters",
     "CannotReportComputeCost", "CannotReportStorageCost", "CannotReportBandwidthCosts",
     "PercentageOfCoresUtilizedMissing", "PercentageOfMemoryUtilizedMissing",
     "PercentageOfCoresUtilizedOutOfRange", "PercentageOfMemoryUtilizedOutOfRange".
    :vartype suitability_detail: str or ~azure_migrate_v2.models.AzureVmSuitabilityDetail
    :ivar created_timestamp: Time when this machine was created. Date-Time represented in ISO-8601
     format.
    :vartype created_timestamp: ~datetime.datetime
    :ivar updated_timestamp: Time when this machine was last updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: ~datetime.datetime
    """

    _validation = {
        'boot_type': {'readonly': True},
        'datacenter_machine_arm_id': {'readonly': True},
        'datacenter_management_server_arm_id': {'readonly': True},
        'datacenter_management_server_name': {'readonly': True},
        'description': {'readonly': True},
        'display_name': {'readonly': True},
        'megabytes_of_memory': {'readonly': True},
        'number_of_cores': {'readonly': True},
        'operating_system_type': {'readonly': True},
        'operating_system_name': {'readonly': True},
        'operating_system_version': {'readonly': True},
        'monthly_bandwidth_cost': {'readonly': True},
        'monthly_storage_cost': {'readonly': True},
        'monthly_premium_storage_cost': {'readonly': True},
        'monthly_standard_ssd_storage_cost': {'readonly': True},
        'confidence_rating_in_percentage': {'readonly': True},
        'disks': {'readonly': True},
        'network_adapters': {'readonly': True},
        'recommended_size': {'readonly': True},
        'number_of_cores_for_recommended_size': {'readonly': True},
        'megabytes_of_memory_for_recommended_size': {'readonly': True},
        'monthly_compute_cost_for_recommended_size': {'readonly': True},
        'percentage_cores_utilization': {'readonly': True},
        'percentage_memory_utilization': {'readonly': True},
        'suitability': {'readonly': True},
        'suitability_explanation': {'readonly': True},
        'suitability_detail': {'readonly': True},
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
    }

    _attribute_map = {
        'boot_type': {'key': 'bootType', 'type': 'str'},
        'datacenter_machine_arm_id': {'key': 'datacenterMachineArmId', 'type': 'str'},
        'datacenter_management_server_arm_id': {'key': 'datacenterManagementServerArmId', 'type': 'str'},
        'datacenter_management_server_name': {'key': 'datacenterManagementServerName', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'megabytes_of_memory': {'key': 'megabytesOfMemory', 'type': 'float'},
        'number_of_cores': {'key': 'numberOfCores', 'type': 'int'},
        'operating_system_type': {'key': 'operatingSystemType', 'type': 'str'},
        'operating_system_name': {'key': 'operatingSystemName', 'type': 'str'},
        'operating_system_version': {'key': 'operatingSystemVersion', 'type': 'str'},
        'monthly_bandwidth_cost': {'key': 'monthlyBandwidthCost', 'type': 'float'},
        'monthly_storage_cost': {'key': 'monthlyStorageCost', 'type': 'float'},
        'monthly_premium_storage_cost': {'key': 'monthlyPremiumStorageCost', 'type': 'float'},
        'monthly_standard_ssd_storage_cost': {'key': 'monthlyStandardSSDStorageCost', 'type': 'float'},
        'confidence_rating_in_percentage': {'key': 'confidenceRatingInPercentage', 'type': 'float'},
        'disks': {'key': 'disks', 'type': '{AssessedDisk}'},
        'network_adapters': {'key': 'networkAdapters', 'type': '{AssessedNetworkAdapter}'},
        'recommended_size': {'key': 'recommendedSize', 'type': 'str'},
        'number_of_cores_for_recommended_size': {'key': 'numberOfCoresForRecommendedSize', 'type': 'int'},
        'megabytes_of_memory_for_recommended_size': {'key': 'megabytesOfMemoryForRecommendedSize', 'type': 'float'},
        'monthly_compute_cost_for_recommended_size': {'key': 'monthlyComputeCostForRecommendedSize', 'type': 'float'},
        'percentage_cores_utilization': {'key': 'percentageCoresUtilization', 'type': 'float'},
        'percentage_memory_utilization': {'key': 'percentageMemoryUtilization', 'type': 'float'},
        'suitability': {'key': 'suitability', 'type': 'str'},
        'suitability_explanation': {'key': 'suitabilityExplanation', 'type': 'str'},
        'suitability_detail': {'key': 'suitabilityDetail', 'type': 'str'},
        'created_timestamp': {'key': 'createdTimestamp', 'type': 'iso-8601'},
        'updated_timestamp': {'key': 'updatedTimestamp', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(AssessedMachineProperties, self).__init__(**kwargs)
        self.boot_type = None
        self.datacenter_machine_arm_id = None
        self.datacenter_management_server_arm_id = None
        self.datacenter_management_server_name = None
        self.description = None
        self.display_name = None
        self.megabytes_of_memory = None
        self.number_of_cores = None
        self.operating_system_type = None
        self.operating_system_name = None
        self.operating_system_version = None
        self.monthly_bandwidth_cost = None
        self.monthly_storage_cost = None
        self.monthly_premium_storage_cost = None
        self.monthly_standard_ssd_storage_cost = None
        self.confidence_rating_in_percentage = None
        self.disks = None
        self.network_adapters = None
        self.recommended_size = None
        self.number_of_cores_for_recommended_size = None
        self.megabytes_of_memory_for_recommended_size = None
        self.monthly_compute_cost_for_recommended_size = None
        self.percentage_cores_utilization = None
        self.percentage_memory_utilization = None
        self.suitability = None
        self.suitability_explanation = None
        self.suitability_detail = None
        self.created_timestamp = None
        self.updated_timestamp = None


class AssessedMachineResultList(msrest.serialization.Model):
    """List of assessed machines.

    :param value: List of assessed machines.
    :type value: list[~azure_migrate_v2.models.AssessedMachine]
    :param next_link:
    :type next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[AssessedMachine]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["AssessedMachine"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        super(AssessedMachineResultList, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class AssessedNetworkAdapter(msrest.serialization.Model):
    """A network adapter assessed for an assessment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar mac_address: MAC Address of the network adapter.
    :vartype mac_address: str
    :ivar ip_addresses: List of IP Addresses on the network adapter.
    :vartype ip_addresses: list[str]
    :ivar display_name: User friendly name of the assessed network adapter.
    :vartype display_name: str
    :ivar monthly_bandwidth_costs: Monthly cost estimate for network bandwidth used by this network
     adapter.
    :vartype monthly_bandwidth_costs: float
    :ivar megabytes_per_second_received: Adapter throughput for incoming traffic in MegaBytes per
     second.
    :vartype megabytes_per_second_received: float
    :ivar megabytes_per_second_transmitted: Adapter throughput for outgoing traffic in MegaBytes
     per second.
    :vartype megabytes_per_second_transmitted: float
    :param net_gigabytes_transmitted_per_month: Gigabytes transmitted through this adapter each
     month.
    :type net_gigabytes_transmitted_per_month: float
    :ivar suitability: Whether this adapter is suitable for Azure. Possible values include:
     "Unknown", "NotSuitable", "Suitable", "ConditionallySuitable", "ReadinessUnknown".
    :vartype suitability: str or ~azure_migrate_v2.models.CloudSuitability
    :ivar suitability_explanation: If network adapter is suitable, this explains the reasons and
     mitigation steps. Possible values include: "Unknown", "NotApplicable", "InternalErrorOccurred".
    :vartype suitability_explanation: str or
     ~azure_migrate_v2.models.AzureNetworkAdapterSuitabilityExplanation
    :ivar suitability_detail: If network adapter is not suitable for cloud, this explains the
     reasons. Possible values include: "None", "MegabytesOfDataTransmittedMissing",
     "MegabytesOfDataTransmittedOutOfRange".
    :vartype suitability_detail: str or
     ~azure_migrate_v2.models.AzureNetworkAdapterSuitabilityDetail
    """

    _validation = {
        'mac_address': {'readonly': True},
        'ip_addresses': {'readonly': True},
        'display_name': {'readonly': True},
        'monthly_bandwidth_costs': {'readonly': True},
        'megabytes_per_second_received': {'readonly': True},
        'megabytes_per_second_transmitted': {'readonly': True},
        'suitability': {'readonly': True},
        'suitability_explanation': {'readonly': True},
        'suitability_detail': {'readonly': True},
    }

    _attribute_map = {
        'mac_address': {'key': 'macAddress', 'type': 'str'},
        'ip_addresses': {'key': 'ipAddresses', 'type': '[str]'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'monthly_bandwidth_costs': {'key': 'monthlyBandwidthCosts', 'type': 'float'},
        'megabytes_per_second_received': {'key': 'megabytesPerSecondReceived', 'type': 'float'},
        'megabytes_per_second_transmitted': {'key': 'megabytesPerSecondTransmitted', 'type': 'float'},
        'net_gigabytes_transmitted_per_month': {'key': 'netGigabytesTransmittedPerMonth', 'type': 'float'},
        'suitability': {'key': 'suitability', 'type': 'str'},
        'suitability_explanation': {'key': 'suitabilityExplanation', 'type': 'str'},
        'suitability_detail': {'key': 'suitabilityDetail', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        net_gigabytes_transmitted_per_month: Optional[float] = None,
        **kwargs
    ):
        super(AssessedNetworkAdapter, self).__init__(**kwargs)
        self.mac_address = None
        self.ip_addresses = None
        self.display_name = None
        self.monthly_bandwidth_costs = None
        self.megabytes_per_second_received = None
        self.megabytes_per_second_transmitted = None
        self.net_gigabytes_transmitted_per_month = net_gigabytes_transmitted_per_month
        self.suitability = None
        self.suitability_explanation = None
        self.suitability_detail = None


class Assessment(msrest.serialization.Model):
    """An assessment created for a group in the Migration project.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Path reference to this assessment.
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessment/{assessmentName}.
    :vartype id: str
    :ivar name: Unique name of an assessment.
    :vartype name: str
    :param e_tag: For optimistic concurrency control.
    :type e_tag: str
    :ivar type: Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].
    :vartype type: str
    :param azure_location: Required. Target Azure location for which the machines should be
     assessed. These enums are the same as used by Compute API. Possible values include: "Unknown",
     "EastAsia", "SoutheastAsia", "AustraliaEast", "AustraliaSoutheast", "BrazilSouth",
     "CanadaCentral", "CanadaEast", "WestEurope", "NorthEurope", "CentralIndia", "SouthIndia",
     "WestIndia", "JapanEast", "JapanWest", "KoreaCentral", "KoreaSouth", "UkWest", "UkSouth",
     "NorthCentralUs", "EastUs", "WestUs2", "SouthCentralUs", "CentralUs", "EastUs2", "WestUs",
     "WestCentralUs", "GermanyCentral", "GermanyNortheast", "ChinaNorth", "ChinaEast",
     "USGovArizona", "USGovTexas", "USGovIowa", "USGovVirginia", "USDoDCentral", "USDoDEast".
    :type azure_location: str or ~azure_migrate_v2.models.AzureLocation
    :param azure_offer_code: Required. Offer code according to which cost estimation is done.
     Possible values include: "Unknown", "MSAZR0003P", "MSAZR0044P", "MSAZR0059P", "MSAZR0060P",
     "MSAZR0062P", "MSAZR0063P", "MSAZR0064P", "MSAZR0029P", "MSAZR0022P", "MSAZR0023P",
     "MSAZR0148P", "MSAZR0025P", "MSAZR0036P", "MSAZR0120P", "MSAZR0121P", "MSAZR0122P",
     "MSAZR0123P", "MSAZR0124P", "MSAZR0125P", "MSAZR0126P", "MSAZR0127P", "MSAZR0128P",
     "MSAZR0129P", "MSAZR0130P", "MSAZR0111P", "MSAZR0144P", "MSAZR0149P", "MSMCAZR0044P",
     "MSMCAZR0059P", "MSMCAZR0060P", "MSMCAZR0063P", "MSMCAZR0120P", "MSMCAZR0121P", "MSMCAZR0125P",
     "MSMCAZR0128P", "MSAZRDE0003P", "MSAZRDE0044P", "MSAZRUSGOV0003P", "EA".
    :type azure_offer_code: str or ~azure_migrate_v2.models.AzureOfferCode
    :ivar ea_subscription_id: Enterprise agreement subscription arm id.
    :vartype ea_subscription_id: str
    :param azure_pricing_tier: Required. Pricing tier for Size evaluation. Possible values include:
     "Standard", "Basic".
    :type azure_pricing_tier: str or ~azure_migrate_v2.models.AzurePricingTier
    :param azure_storage_redundancy: Required. Storage Redundancy type offered by Azure. Possible
     values include: "Unknown", "LocallyRedundant", "ZoneRedundant", "GeoRedundant",
     "ReadAccessGeoRedundant".
    :type azure_storage_redundancy: str or ~azure_migrate_v2.models.AzureStorageRedundancy
    :param scaling_factor: Required. Scaling factor used over utilization data to add a performance
     buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default =
     1.3.
    :type scaling_factor: float
    :param percentile: Required. Percentile of performance data used to recommend Azure size.
     Possible values include: "Percentile50", "Percentile90", "Percentile95", "Percentile99".
    :type percentile: str or ~azure_migrate_v2.models.Percentile
    :param time_range: Required. Time range of performance data used to recommend a size. Possible
     values include: "Day", "Week", "Month", "Custom".
    :type time_range: str or ~azure_migrate_v2.models.TimeRange
    :ivar perf_data_start_time: Start time to consider performance data for assessment.
    :vartype perf_data_start_time: ~datetime.datetime
    :ivar perf_data_end_time: End time to consider performance data for assessment.
    :vartype perf_data_end_time: ~datetime.datetime
    :param stage: Required. User configurable setting that describes the status of the assessment.
     Possible values include: "InProgress", "UnderReview", "Approved".
    :type stage: str or ~azure_migrate_v2.models.AssessmentStage
    :param currency: Required. Currency to report prices in. Possible values include: "Unknown",
     "USD", "DKK", "CAD", "IDR", "JPY", "KRW", "NZD", "NOK", "RUB", "SAR", "ZAR", "SEK", "TRY",
     "GBP", "MXN", "MYR", "INR", "HKD", "BRL", "TWD", "EUR", "CHF", "ARS", "AUD", "CNY".
    :type currency: str or ~azure_migrate_v2.models.Currency
    :param azure_hybrid_use_benefit: Required. AHUB discount on windows virtual machines. Possible
     values include: "Unknown", "Yes", "No".
    :type azure_hybrid_use_benefit: str or ~azure_migrate_v2.models.AzureHybridUseBenefit
    :param discount_percentage: Required. Custom discount percentage to be applied on final costs.
     Can be in the range [0, 100].
    :type discount_percentage: float
    :ivar confidence_rating_in_percentage: Confidence rating percentage for assessment. Can be in
     the range [0, 100].
    :vartype confidence_rating_in_percentage: float
    :param sizing_criterion: Required. Assessment sizing criterion. Possible values include:
     "PerformanceBased", "AsOnPremises".
    :type sizing_criterion: str or ~azure_migrate_v2.models.AssessmentSizingCriterion
    :param reserved_instance: Required. Azure reserved instance. Possible values include: "None",
     "RI1Year", "RI3Year".
    :type reserved_instance: str or ~azure_migrate_v2.models.ReservedInstance
    :param azure_vm_families: Required. List of azure VM families.
    :type azure_vm_families: list[str or ~azure_migrate_v2.models.AzureVmFamily]
    :param azure_disk_type: Required. Storage type selected for this disk. Possible values include:
     "Unknown", "Standard", "Premium", "StandardSSD", "StandardOrPremium".
    :type azure_disk_type: str or ~azure_migrate_v2.models.AzureDiskType
    :param vm_uptime: Required. Specify the duration for which the VMs are up in the on-premises
     environment.
    :type vm_uptime: ~azure_migrate_v2.models.VmUptime
    :ivar prices_timestamp: Time when the Azure Prices were queried. Date-Time represented in
     ISO-8601 format.
    :vartype prices_timestamp: ~datetime.datetime
    :ivar created_timestamp: Time when this project was created. Date-Time represented in ISO-8601
     format.
    :vartype created_timestamp: ~datetime.datetime
    :ivar updated_timestamp: Time when this project was last updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: ~datetime.datetime
    :ivar monthly_compute_cost: Monthly compute cost estimate for the machines that are part of
     this assessment as a group, for a 31-day month.
    :vartype monthly_compute_cost: float
    :ivar monthly_bandwidth_cost: Monthly network cost estimate for the machines that are part of
     this assessment as a group, for a 31-day month.
    :vartype monthly_bandwidth_cost: float
    :ivar monthly_storage_cost: Monthly storage cost estimate for the machines that are part of
     this assessment as a group, for a 31-day month.
    :vartype monthly_storage_cost: float
    :ivar monthly_premium_storage_cost: Monthly premium storage cost estimate for the machines that
     are part of this assessment as a group, for a 31-day month.
    :vartype monthly_premium_storage_cost: float
    :ivar monthly_standard_ssd_storage_cost: Monthly standard SSD storage cost estimate for the
     machines that are part of this assessment as a group, for a 31-day month.
    :vartype monthly_standard_ssd_storage_cost: float
    :ivar status: Whether the assessment has been created and is valid. Possible values include:
     "Created", "Updated", "Running", "Completed", "Invalid", "OutOfSync", "OutDated".
    :vartype status: str or ~azure_migrate_v2.models.AssessmentStatus
    :ivar number_of_machines: Number of assessed machines part of this assessment.
    :vartype number_of_machines: int
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'azure_location': {'required': True},
        'azure_offer_code': {'required': True},
        'ea_subscription_id': {'readonly': True},
        'azure_pricing_tier': {'required': True},
        'azure_storage_redundancy': {'required': True},
        'scaling_factor': {'required': True},
        'percentile': {'required': True},
        'time_range': {'required': True},
        'perf_data_start_time': {'readonly': True},
        'perf_data_end_time': {'readonly': True},
        'stage': {'required': True},
        'currency': {'required': True},
        'azure_hybrid_use_benefit': {'required': True},
        'discount_percentage': {'required': True},
        'confidence_rating_in_percentage': {'readonly': True},
        'sizing_criterion': {'required': True},
        'reserved_instance': {'required': True},
        'azure_vm_families': {'required': True},
        'azure_disk_type': {'required': True},
        'vm_uptime': {'required': True},
        'prices_timestamp': {'readonly': True},
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
        'monthly_compute_cost': {'readonly': True},
        'monthly_bandwidth_cost': {'readonly': True},
        'monthly_storage_cost': {'readonly': True},
        'monthly_premium_storage_cost': {'readonly': True},
        'monthly_standard_ssd_storage_cost': {'readonly': True},
        'status': {'readonly': True},
        'number_of_machines': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'azure_location': {'key': 'properties.azureLocation', 'type': 'str'},
        'azure_offer_code': {'key': 'properties.azureOfferCode', 'type': 'str'},
        'ea_subscription_id': {'key': 'properties.eaSubscriptionId', 'type': 'str'},
        'azure_pricing_tier': {'key': 'properties.azurePricingTier', 'type': 'str'},
        'azure_storage_redundancy': {'key': 'properties.azureStorageRedundancy', 'type': 'str'},
        'scaling_factor': {'key': 'properties.scalingFactor', 'type': 'float'},
        'percentile': {'key': 'properties.percentile', 'type': 'str'},
        'time_range': {'key': 'properties.timeRange', 'type': 'str'},
        'perf_data_start_time': {'key': 'properties.perfDataStartTime', 'type': 'iso-8601'},
        'perf_data_end_time': {'key': 'properties.perfDataEndTime', 'type': 'iso-8601'},
        'stage': {'key': 'properties.stage', 'type': 'str'},
        'currency': {'key': 'properties.currency', 'type': 'str'},
        'azure_hybrid_use_benefit': {'key': 'properties.azureHybridUseBenefit', 'type': 'str'},
        'discount_percentage': {'key': 'properties.discountPercentage', 'type': 'float'},
        'confidence_rating_in_percentage': {'key': 'properties.confidenceRatingInPercentage', 'type': 'float'},
        'sizing_criterion': {'key': 'properties.sizingCriterion', 'type': 'str'},
        'reserved_instance': {'key': 'properties.reservedInstance', 'type': 'str'},
        'azure_vm_families': {'key': 'properties.azureVmFamilies', 'type': '[str]'},
        'azure_disk_type': {'key': 'properties.azureDiskType', 'type': 'str'},
        'vm_uptime': {'key': 'properties.vmUptime', 'type': 'VmUptime'},
        'prices_timestamp': {'key': 'properties.pricesTimestamp', 'type': 'iso-8601'},
        'created_timestamp': {'key': 'properties.createdTimestamp', 'type': 'iso-8601'},
        'updated_timestamp': {'key': 'properties.updatedTimestamp', 'type': 'iso-8601'},
        'monthly_compute_cost': {'key': 'properties.monthlyComputeCost', 'type': 'float'},
        'monthly_bandwidth_cost': {'key': 'properties.monthlyBandwidthCost', 'type': 'float'},
        'monthly_storage_cost': {'key': 'properties.monthlyStorageCost', 'type': 'float'},
        'monthly_premium_storage_cost': {'key': 'properties.monthlyPremiumStorageCost', 'type': 'float'},
        'monthly_standard_ssd_storage_cost': {'key': 'properties.monthlyStandardSSDStorageCost', 'type': 'float'},
        'status': {'key': 'properties.status', 'type': 'str'},
        'number_of_machines': {'key': 'properties.numberOfMachines', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        azure_location: Union[str, "AzureLocation"],
        azure_offer_code: Union[str, "AzureOfferCode"],
        azure_pricing_tier: Union[str, "AzurePricingTier"],
        azure_storage_redundancy: Union[str, "AzureStorageRedundancy"],
        scaling_factor: float,
        percentile: Union[str, "Percentile"],
        time_range: Union[str, "TimeRange"],
        stage: Union[str, "AssessmentStage"],
        currency: Union[str, "Currency"],
        azure_hybrid_use_benefit: Union[str, "AzureHybridUseBenefit"],
        discount_percentage: float,
        sizing_criterion: Union[str, "AssessmentSizingCriterion"],
        reserved_instance: Union[str, "ReservedInstance"],
        azure_vm_families: List[Union[str, "AzureVmFamily"]],
        azure_disk_type: Union[str, "AzureDiskType"],
        vm_uptime: "VmUptime",
        e_tag: Optional[str] = None,
        **kwargs
    ):
        super(Assessment, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.e_tag = e_tag
        self.type = None
        self.azure_location = azure_location
        self.azure_offer_code = azure_offer_code
        self.ea_subscription_id = None
        self.azure_pricing_tier = azure_pricing_tier
        self.azure_storage_redundancy = azure_storage_redundancy
        self.scaling_factor = scaling_factor
        self.percentile = percentile
        self.time_range = time_range
        self.perf_data_start_time = None
        self.perf_data_end_time = None
        self.stage = stage
        self.currency = currency
        self.azure_hybrid_use_benefit = azure_hybrid_use_benefit
        self.discount_percentage = discount_percentage
        self.confidence_rating_in_percentage = None
        self.sizing_criterion = sizing_criterion
        self.reserved_instance = reserved_instance
        self.azure_vm_families = azure_vm_families
        self.azure_disk_type = azure_disk_type
        self.vm_uptime = vm_uptime
        self.prices_timestamp = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.monthly_compute_cost = None
        self.monthly_bandwidth_cost = None
        self.monthly_storage_cost = None
        self.monthly_premium_storage_cost = None
        self.monthly_standard_ssd_storage_cost = None
        self.status = None
        self.number_of_machines = None


class AssessmentOptions(msrest.serialization.Model):
    """Assessment options.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Unique name of an assessment options.
    :vartype name: str
    :ivar id: Unique identifier of an assessment options.
    :vartype id: str
    :param properties: Required. Properties of the assessment options.
    :type properties: ~azure_migrate_v2.models.AssessmentOptionsProperties
    """

    _validation = {
        'name': {'readonly': True},
        'id': {'readonly': True},
        'properties': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'AssessmentOptionsProperties'},
    }

    def __init__(
        self,
        *,
        properties: "AssessmentOptionsProperties",
        **kwargs
    ):
        super(AssessmentOptions, self).__init__(**kwargs)
        self.name = None
        self.id = None
        self.properties = properties


class AssessmentOptionsProperties(msrest.serialization.Model):
    """Assessment options properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar vm_families: Dictionary of VM families grouped by vm family name describing the targeted
     azure locations of VM family and the category of the family.
    :vartype vm_families: list[~azure_migrate_v2.models.VmFamily]
    :ivar reserved_instance_vm_families: List of supported VM Families.
    :vartype reserved_instance_vm_families: list[str]
    :ivar reserved_instance_supported_locations: List of supported Azure regions for reserved
     instances.
    :vartype reserved_instance_supported_locations: list[str]
    :ivar reserved_instance_supported_currencies: List of supported currencies for reserved
     instances.
    :vartype reserved_instance_supported_currencies: list[str]
    :ivar reserved_instance_supported_offers: List of supported Azure offer codes for reserved
     instances.
    :vartype reserved_instance_supported_offers: list[str]
    """

    _validation = {
        'vm_families': {'readonly': True},
        'reserved_instance_vm_families': {'readonly': True},
        'reserved_instance_supported_locations': {'readonly': True},
        'reserved_instance_supported_currencies': {'readonly': True},
        'reserved_instance_supported_offers': {'readonly': True},
    }

    _attribute_map = {
        'vm_families': {'key': 'vmFamilies', 'type': '[VmFamily]'},
        'reserved_instance_vm_families': {'key': 'reservedInstanceVmFamilies', 'type': '[str]'},
        'reserved_instance_supported_locations': {'key': 'reservedInstanceSupportedLocations', 'type': '[str]'},
        'reserved_instance_supported_currencies': {'key': 'reservedInstanceSupportedCurrencies', 'type': '[str]'},
        'reserved_instance_supported_offers': {'key': 'reservedInstanceSupportedOffers', 'type': '[str]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(AssessmentOptionsProperties, self).__init__(**kwargs)
        self.vm_families = None
        self.reserved_instance_vm_families = None
        self.reserved_instance_supported_locations = None
        self.reserved_instance_supported_currencies = None
        self.reserved_instance_supported_offers = None


class AssessmentOptionsResultList(msrest.serialization.Model):
    """List of API operations.

    :param value: List of operations.
    :type value: list[~azure_migrate_v2.models.AssessmentOptions]
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[AssessmentOptions]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["AssessmentOptions"]] = None,
        **kwargs
    ):
        super(AssessmentOptionsResultList, self).__init__(**kwargs)
        self.value = value


class AssessmentResultList(msrest.serialization.Model):
    """List of assessments.

    :param value: List of assessments.
    :type value: list[~azure_migrate_v2.models.Assessment]
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Assessment]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Assessment"]] = None,
        **kwargs
    ):
        super(AssessmentResultList, self).__init__(**kwargs)
        self.value = value


class CloudErrorBody(msrest.serialization.Model):
    """An error response from the Azure Migrate service.

    :param code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :type code: str
    :param message: A message describing the error, intended to be suitable for display in a user
     interface.
    :type message: str
    :param target: The target of the particular error. For example, the name of the property in
     error.
    :type target: str
    :param details: A list of additional details about the error.
    :type details: list[~azure_migrate_v2.models.CloudErrorBody]
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[CloudErrorBody]'},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        target: Optional[str] = None,
        details: Optional[List["CloudErrorBody"]] = None,
        **kwargs
    ):
        super(CloudErrorBody, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details


class CollectorBodyAgentSpnProperties(msrest.serialization.Model):
    """CollectorBodyAgentSpnProperties.

    :param authority: AAD Authority URL which was used to request the token for the service
     principal.
    :type authority: str
    :param application_id: Application/client Id for the service principal with which the on-
     premise management/data plane components would communicate with our Azure services.
    :type application_id: str
    :param audience: Intended audience for the service principal.
    :type audience: str
    :param object_id: Object Id of the service principal with which the on-premise management/data
     plane components would communicate with our Azure services.
    :type object_id: str
    :param tenant_id: Tenant Id for the service principal with which the on-premise management/data
     plane components would communicate with our Azure services.
    :type tenant_id: str
    """

    _attribute_map = {
        'authority': {'key': 'authority', 'type': 'str'},
        'application_id': {'key': 'applicationId', 'type': 'str'},
        'audience': {'key': 'audience', 'type': 'str'},
        'object_id': {'key': 'objectId', 'type': 'str'},
        'tenant_id': {'key': 'tenantId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        authority: Optional[str] = None,
        application_id: Optional[str] = None,
        audience: Optional[str] = None,
        object_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        **kwargs
    ):
        super(CollectorBodyAgentSpnProperties, self).__init__(**kwargs)
        self.authority = authority
        self.application_id = application_id
        self.audience = audience
        self.object_id = object_id
        self.tenant_id = tenant_id


class Disk(msrest.serialization.Model):
    """A disk discovered on a machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar gigabytes_allocated: Gigabytes of storage provisioned for this disk.
    :vartype gigabytes_allocated: float
    :ivar display_name: User friendly name of the disk.
    :vartype display_name: str
    """

    _validation = {
        'gigabytes_allocated': {'readonly': True},
        'display_name': {'readonly': True},
    }

    _attribute_map = {
        'gigabytes_allocated': {'key': 'gigabytesAllocated', 'type': 'float'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Disk, self).__init__(**kwargs)
        self.gigabytes_allocated = None
        self.display_name = None


class DownloadUrl(msrest.serialization.Model):
    """Download URL for assessment report.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar assessment_report_url: Hyperlink to download report.
    :vartype assessment_report_url: str
    :ivar expiration_time: Expiry date of download url.
    :vartype expiration_time: ~datetime.datetime
    """

    _validation = {
        'assessment_report_url': {'readonly': True},
        'expiration_time': {'readonly': True},
    }

    _attribute_map = {
        'assessment_report_url': {'key': 'assessmentReportUrl', 'type': 'str'},
        'expiration_time': {'key': 'expirationTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(DownloadUrl, self).__init__(**kwargs)
        self.assessment_report_url = None
        self.expiration_time = None


class Group(msrest.serialization.Model):
    """A group created in a Migration project.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Path reference to this group.
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}.
    :vartype id: str
    :ivar name: Name of the group.
    :vartype name: str
    :param e_tag: For optimistic concurrency control.
    :type e_tag: str
    :ivar type: Type of the object = [Microsoft.Migrate/assessmentProjects/groups].
    :vartype type: str
    :param properties: Required. Properties of the group.
    :type properties: ~azure_migrate_v2.models.GroupProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'properties': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'GroupProperties'},
    }

    def __init__(
        self,
        *,
        properties: "GroupProperties",
        e_tag: Optional[str] = None,
        **kwargs
    ):
        super(Group, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.e_tag = e_tag
        self.type = None
        self.properties = properties


class GroupBodyProperties(msrest.serialization.Model):
    """Body properties of group update.

    :param operation_type: Whether to add or remove the machines. Possible values include: "Add",
     "Remove".
    :type operation_type: str or ~azure_migrate_v2.models.GroupUpdateOperation
    :param machines: List of machine names that are part of this group.
    :type machines: list[str]
    """

    _attribute_map = {
        'operation_type': {'key': 'operationType', 'type': 'str'},
        'machines': {'key': 'machines', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        operation_type: Optional[Union[str, "GroupUpdateOperation"]] = None,
        machines: Optional[List[str]] = None,
        **kwargs
    ):
        super(GroupBodyProperties, self).__init__(**kwargs)
        self.operation_type = operation_type
        self.machines = machines


class GroupProperties(msrest.serialization.Model):
    """Properties of group resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar group_status: Whether the group has been created and is valid. Possible values include:
     "Created", "Updated", "Running", "Completed", "Invalid".
    :vartype group_status: str or ~azure_migrate_v2.models.GroupStatus
    :ivar machine_count: Number of machines part of this group.
    :vartype machine_count: int
    :ivar assessments: List of References to Assessments created on this group.
    :vartype assessments: list[str]
    :ivar are_assessments_running: If the assessments are in running state.
    :vartype are_assessments_running: bool
    :ivar created_timestamp: Time when this group was created. Date-Time represented in ISO-8601
     format.
    :vartype created_timestamp: ~datetime.datetime
    :ivar updated_timestamp: Time when this group was last updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: ~datetime.datetime
    """

    _validation = {
        'group_status': {'readonly': True},
        'machine_count': {'readonly': True},
        'assessments': {'readonly': True},
        'are_assessments_running': {'readonly': True},
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
    }

    _attribute_map = {
        'group_status': {'key': 'groupStatus', 'type': 'str'},
        'machine_count': {'key': 'machineCount', 'type': 'int'},
        'assessments': {'key': 'assessments', 'type': '[str]'},
        'are_assessments_running': {'key': 'areAssessmentsRunning', 'type': 'bool'},
        'created_timestamp': {'key': 'createdTimestamp', 'type': 'iso-8601'},
        'updated_timestamp': {'key': 'updatedTimestamp', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(GroupProperties, self).__init__(**kwargs)
        self.group_status = None
        self.machine_count = None
        self.assessments = None
        self.are_assessments_running = None
        self.created_timestamp = None
        self.updated_timestamp = None


class GroupResultList(msrest.serialization.Model):
    """List of groups.

    :param value: List of groups.
    :type value: list[~azure_migrate_v2.models.Group]
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Group]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Group"]] = None,
        **kwargs
    ):
        super(GroupResultList, self).__init__(**kwargs)
        self.value = value


class HyperVCollector(msrest.serialization.Model):
    """HyperVCollector.

    Variables are only populated by the server, and will be ignored when sending a request.

    :param e_tag:
    :type e_tag: str
    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :param discovery_site_id: The ARM id of the discovery service site.
    :type discovery_site_id: str
    :ivar created_timestamp: Time when this collector was created. Date-Time represented in
     ISO-8601 format.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Time when this collector was updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: str
    :ivar id_properties_agent_properties_id:
    :vartype id_properties_agent_properties_id: str
    :ivar version:
    :vartype version: str
    :ivar last_heartbeat_utc:
    :vartype last_heartbeat_utc: ~datetime.datetime
    :param spn_details:
    :type spn_details: ~azure_migrate_v2.models.CollectorBodyAgentSpnProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
        'id_properties_agent_properties_id': {'readonly': True},
        'version': {'readonly': True},
        'last_heartbeat_utc': {'readonly': True},
    }

    _attribute_map = {
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'discovery_site_id': {'key': 'properties.discoverySiteId', 'type': 'str'},
        'created_timestamp': {'key': 'properties.createdTimestamp', 'type': 'str'},
        'updated_timestamp': {'key': 'properties.updatedTimestamp', 'type': 'str'},
        'id_properties_agent_properties_id': {'key': 'properties.agentProperties.id', 'type': 'str'},
        'version': {'key': 'properties.agentProperties.version', 'type': 'str'},
        'last_heartbeat_utc': {'key': 'properties.agentProperties.lastHeartbeatUtc', 'type': 'iso-8601'},
        'spn_details': {'key': 'properties.agentProperties.spnDetails', 'type': 'CollectorBodyAgentSpnProperties'},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        discovery_site_id: Optional[str] = None,
        spn_details: Optional["CollectorBodyAgentSpnProperties"] = None,
        **kwargs
    ):
        super(HyperVCollector, self).__init__(**kwargs)
        self.e_tag = e_tag
        self.id = None
        self.name = None
        self.type = None
        self.discovery_site_id = discovery_site_id
        self.created_timestamp = None
        self.updated_timestamp = None
        self.id_properties_agent_properties_id = None
        self.version = None
        self.last_heartbeat_utc = None
        self.spn_details = spn_details


class HyperVCollectorList(msrest.serialization.Model):
    """List of Hyper-V collectors.

    :param value: List of Hyper-V collectors.
    :type value: list[~azure_migrate_v2.models.HyperVCollector]
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[HyperVCollector]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["HyperVCollector"]] = None,
        **kwargs
    ):
        super(HyperVCollectorList, self).__init__(**kwargs)
        self.value = value


class Machine(msrest.serialization.Model):
    """A machine in a migration project.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Path reference to this machine.
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines/{machineName}.
    :vartype id: str
    :ivar name: Name of the machine. It is a GUID which is unique identifier of machine in private
     data center. For user-readable name, we have a displayName property on this machine.
    :vartype name: str
    :param e_tag: For optimistic concurrency control.
    :type e_tag: str
    :ivar type: Type of the object = [Microsoft.Migrate/assessmentProjects/machines].
    :vartype type: str
    :param properties: Properties of the machine.
    :type properties: ~azure_migrate_v2.models.MachineProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'MachineProperties'},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        properties: Optional["MachineProperties"] = None,
        **kwargs
    ):
        super(Machine, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.e_tag = e_tag
        self.type = None
        self.properties = properties


class MachineProperties(msrest.serialization.Model):
    """Properties of a machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar boot_type: Boot type of the machine. Possible values include: "Unknown", "EFI", "BIOS".
    :vartype boot_type: str or ~azure_migrate_v2.models.MachineBootType
    :ivar datacenter_management_server_arm_id: ARM ID of the data center as tracked by the
     Microsoft.OffAzure.
    :vartype datacenter_management_server_arm_id: str
    :ivar discovery_machine_arm_id: ARM ID of the machine as tracked by the Microsoft.OffAzure.
    :vartype discovery_machine_arm_id: str
    :ivar datacenter_management_server_name: Name of the server hosting the datacenter management
     solution.
    :vartype datacenter_management_server_name: str
    :ivar display_name: User readable name of the machine as defined by the user in their private
     datacenter.
    :vartype display_name: str
    :ivar megabytes_of_memory: Memory in Megabytes.
    :vartype megabytes_of_memory: float
    :ivar number_of_cores: Processor count.
    :vartype number_of_cores: int
    :ivar operating_system_type: Operating System type of the machine.
    :vartype operating_system_type: str
    :ivar operating_system_name: Operating System name of the machine.
    :vartype operating_system_name: str
    :ivar operating_system_version: Operating System version of the machine.
    :vartype operating_system_version: str
    :ivar description: Description of the machine.
    :vartype description: str
    :ivar groups: List of references to the groups that the machine is member of.
    :vartype groups: list[str]
    :ivar created_timestamp: Time when this machine was created. Date-Time represented in ISO-8601
     format.
    :vartype created_timestamp: ~datetime.datetime
    :ivar updated_timestamp: Time when this machine was last updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: ~datetime.datetime
    :ivar disks: Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk
     object.
    :vartype disks: dict[str, ~azure_migrate_v2.models.Disk]
    :ivar network_adapters: Dictionary of network adapters attached to the machine. Key is ID of
     network adapter. Value is a network adapter object.
    :vartype network_adapters: dict[str, ~azure_migrate_v2.models.NetworkAdapter]
    """

    _validation = {
        'boot_type': {'readonly': True},
        'datacenter_management_server_arm_id': {'readonly': True},
        'discovery_machine_arm_id': {'readonly': True},
        'datacenter_management_server_name': {'readonly': True},
        'display_name': {'readonly': True},
        'megabytes_of_memory': {'readonly': True},
        'number_of_cores': {'readonly': True},
        'operating_system_type': {'readonly': True},
        'operating_system_name': {'readonly': True},
        'operating_system_version': {'readonly': True},
        'description': {'readonly': True},
        'groups': {'readonly': True},
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
        'disks': {'readonly': True},
        'network_adapters': {'readonly': True},
    }

    _attribute_map = {
        'boot_type': {'key': 'bootType', 'type': 'str'},
        'datacenter_management_server_arm_id': {'key': 'datacenterManagementServerArmId', 'type': 'str'},
        'discovery_machine_arm_id': {'key': 'discoveryMachineArmId', 'type': 'str'},
        'datacenter_management_server_name': {'key': 'datacenterManagementServerName', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'megabytes_of_memory': {'key': 'megabytesOfMemory', 'type': 'float'},
        'number_of_cores': {'key': 'numberOfCores', 'type': 'int'},
        'operating_system_type': {'key': 'operatingSystemType', 'type': 'str'},
        'operating_system_name': {'key': 'operatingSystemName', 'type': 'str'},
        'operating_system_version': {'key': 'operatingSystemVersion', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'groups': {'key': 'groups', 'type': '[str]'},
        'created_timestamp': {'key': 'createdTimestamp', 'type': 'iso-8601'},
        'updated_timestamp': {'key': 'updatedTimestamp', 'type': 'iso-8601'},
        'disks': {'key': 'disks', 'type': '{Disk}'},
        'network_adapters': {'key': 'networkAdapters', 'type': '{NetworkAdapter}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MachineProperties, self).__init__(**kwargs)
        self.boot_type = None
        self.datacenter_management_server_arm_id = None
        self.discovery_machine_arm_id = None
        self.datacenter_management_server_name = None
        self.display_name = None
        self.megabytes_of_memory = None
        self.number_of_cores = None
        self.operating_system_type = None
        self.operating_system_name = None
        self.operating_system_version = None
        self.description = None
        self.groups = None
        self.created_timestamp = None
        self.updated_timestamp = None
        self.disks = None
        self.network_adapters = None


class MachineResultList(msrest.serialization.Model):
    """List of machines.

    :param value: List of machines.
    :type value: list[~azure_migrate_v2.models.Machine]
    :param next_link:
    :type next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Machine]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Machine"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        super(MachineResultList, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NetworkAdapter(msrest.serialization.Model):
    """A network adapter discovered on a machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar mac_address: MAC Address of the network adapter.
    :vartype mac_address: str
    :ivar ip_addresses: List of IP Addresses on the network adapter.
    :vartype ip_addresses: list[str]
    :ivar display_name: User friendly name of the network adapter.
    :vartype display_name: str
    """

    _validation = {
        'mac_address': {'readonly': True},
        'ip_addresses': {'readonly': True},
        'display_name': {'readonly': True},
    }

    _attribute_map = {
        'mac_address': {'key': 'macAddress', 'type': 'str'},
        'ip_addresses': {'key': 'ipAddresses', 'type': '[str]'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(NetworkAdapter, self).__init__(**kwargs)
        self.mac_address = None
        self.ip_addresses = None
        self.display_name = None


class Operation(msrest.serialization.Model):
    """A REST API operation supported by the provider.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the operation.
    :vartype name: str
    :ivar display: Displayable properties of the operation.
    :vartype display: ~azure_migrate_v2.models.OperationDisplay
    :ivar origin: Origin of the operation.
    :vartype origin: str
    """

    _validation = {
        'name': {'readonly': True},
        'display': {'readonly': True},
        'origin': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'display': {'key': 'display', 'type': 'OperationDisplay'},
        'origin': {'key': 'origin', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Operation, self).__init__(**kwargs)
        self.name = None
        self.display = None
        self.origin = None


class OperationDisplay(msrest.serialization.Model):
    """Displayable properties of the operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: Provider of the operation.
    :vartype provider: str
    :ivar resource: Resource operated on by the operation.
    :vartype resource: str
    :ivar operation: Operation Type.
    :vartype operation: str
    :ivar description: Description of the operation.
    :vartype description: str
    """

    _validation = {
        'provider': {'readonly': True},
        'resource': {'readonly': True},
        'operation': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OperationDisplay, self).__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationResultList(msrest.serialization.Model):
    """List of API operations.

    :param value: List of operations.
    :type value: list[~azure_migrate_v2.models.Operation]
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Operation]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Operation"]] = None,
        **kwargs
    ):
        super(OperationResultList, self).__init__(**kwargs)
        self.value = value


class Project(msrest.serialization.Model):
    """Azure Migrate Project.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Path reference to this project
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}.
    :vartype id: str
    :ivar name: Name of the project.
    :vartype name: str
    :ivar type: Type of the object = [Microsoft.Migrate/assessmentProjects].
    :vartype type: str
    :param e_tag: For optimistic concurrency control.
    :type e_tag: str
    :param location: Azure location in which project is created.
    :type location: str
    :param tags: A set of tags. Tags provided by Azure Tagging service.
    :type tags: object
    :param properties: Properties of the project.
    :type properties: ~azure_migrate_v2.models.ProjectProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': 'object'},
        'properties': {'key': 'properties', 'type': 'ProjectProperties'},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        location: Optional[str] = None,
        tags: Optional[object] = None,
        properties: Optional["ProjectProperties"] = None,
        **kwargs
    ):
        super(Project, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.e_tag = e_tag
        self.location = location
        self.tags = tags
        self.properties = properties


class ProjectProperties(msrest.serialization.Model):
    """Properties of a project.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_timestamp: Time when this project was created. Date-Time represented in ISO-8601
     format.
    :vartype created_timestamp: ~datetime.datetime
    :ivar updated_timestamp: Time when this project was last updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: ~datetime.datetime
    :ivar service_endpoint: Endpoint at which the collector agent can call agent REST API.
    :vartype service_endpoint: str
    :param assessment_solution_id: Assessment solution ARM id tracked by
     Microsoft.Migrate/migrateProjects.
    :type assessment_solution_id: str
    :param project_status: Assessment project status. Possible values include: "Active",
     "Inactive".
    :type project_status: str or ~azure_migrate_v2.models.ProjectStatus
    :param customer_workspace_id: The ARM id of service map workspace created by customer.
    :type customer_workspace_id: str
    :param customer_workspace_location: Location of service map workspace created by customer.
    :type customer_workspace_location: str
    :ivar number_of_groups: Number of groups created in the project.
    :vartype number_of_groups: int
    :ivar number_of_machines: Number of machines in the project.
    :vartype number_of_machines: int
    :ivar number_of_assessments: Number of assessments created in the project.
    :vartype number_of_assessments: int
    :ivar last_assessment_timestamp: Time when last assessment was created. Date-Time represented
     in ISO-8601 format. This value will be null until assessment is created.
    :vartype last_assessment_timestamp: ~datetime.datetime
    :ivar provisioning_state: Provisioning state of the project. Possible values include:
     "Accepted", "Creating", "Deleting", "Failed", "Moving", "Succeeded".
    :vartype provisioning_state: str or ~azure_migrate_v2.models.ProvisioningState
    """

    _validation = {
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
        'service_endpoint': {'readonly': True},
        'number_of_groups': {'readonly': True},
        'number_of_machines': {'readonly': True},
        'number_of_assessments': {'readonly': True},
        'last_assessment_timestamp': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'created_timestamp': {'key': 'createdTimestamp', 'type': 'iso-8601'},
        'updated_timestamp': {'key': 'updatedTimestamp', 'type': 'iso-8601'},
        'service_endpoint': {'key': 'serviceEndpoint', 'type': 'str'},
        'assessment_solution_id': {'key': 'assessmentSolutionId', 'type': 'str'},
        'project_status': {'key': 'projectStatus', 'type': 'str'},
        'customer_workspace_id': {'key': 'customerWorkspaceId', 'type': 'str'},
        'customer_workspace_location': {'key': 'customerWorkspaceLocation', 'type': 'str'},
        'number_of_groups': {'key': 'numberOfGroups', 'type': 'int'},
        'number_of_machines': {'key': 'numberOfMachines', 'type': 'int'},
        'number_of_assessments': {'key': 'numberOfAssessments', 'type': 'int'},
        'last_assessment_timestamp': {'key': 'lastAssessmentTimestamp', 'type': 'iso-8601'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        assessment_solution_id: Optional[str] = None,
        project_status: Optional[Union[str, "ProjectStatus"]] = None,
        customer_workspace_id: Optional[str] = None,
        customer_workspace_location: Optional[str] = None,
        **kwargs
    ):
        super(ProjectProperties, self).__init__(**kwargs)
        self.created_timestamp = None
        self.updated_timestamp = None
        self.service_endpoint = None
        self.assessment_solution_id = assessment_solution_id
        self.project_status = project_status
        self.customer_workspace_id = customer_workspace_id
        self.customer_workspace_location = customer_workspace_location
        self.number_of_groups = None
        self.number_of_machines = None
        self.number_of_assessments = None
        self.last_assessment_timestamp = None
        self.provisioning_state = None


class ProjectResultList(msrest.serialization.Model):
    """List of projects.

    :param value: List of projects.
    :type value: list[~azure_migrate_v2.models.Project]
    :param next_link:
    :type next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Project]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Project"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        super(ProjectResultList, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class UpdateGroupBody(msrest.serialization.Model):
    """Properties of group update.

    :param e_tag: For optimistic concurrency control.
    :type e_tag: str
    :param properties: Properties of the group.
    :type properties: ~azure_migrate_v2.models.GroupBodyProperties
    """

    _attribute_map = {
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'GroupBodyProperties'},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        properties: Optional["GroupBodyProperties"] = None,
        **kwargs
    ):
        super(UpdateGroupBody, self).__init__(**kwargs)
        self.e_tag = e_tag
        self.properties = properties


class VmFamily(msrest.serialization.Model):
    """VM family name, the list of targeted azure locations and the category of the family.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar family_name: Name of the VM family.
    :vartype family_name: str
    :ivar target_locations: List of Azure regions.
    :vartype target_locations: list[str]
    :ivar category: Category of the VM family.
    :vartype category: list[str]
    """

    _validation = {
        'family_name': {'readonly': True},
        'target_locations': {'readonly': True},
        'category': {'readonly': True},
    }

    _attribute_map = {
        'family_name': {'key': 'familyName', 'type': 'str'},
        'target_locations': {'key': 'targetLocations', 'type': '[str]'},
        'category': {'key': 'category', 'type': '[str]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(VmFamily, self).__init__(**kwargs)
        self.family_name = None
        self.target_locations = None
        self.category = None


class VmUptime(msrest.serialization.Model):
    """VmUptime.

    :param days_per_month: Number of days in a month for VM uptime.
    :type days_per_month: int
    :param hours_per_day: Number of hours per day for VM uptime.
    :type hours_per_day: int
    """

    _attribute_map = {
        'days_per_month': {'key': 'daysPerMonth', 'type': 'int'},
        'hours_per_day': {'key': 'hoursPerDay', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        days_per_month: Optional[int] = None,
        hours_per_day: Optional[int] = None,
        **kwargs
    ):
        super(VmUptime, self).__init__(**kwargs)
        self.days_per_month = days_per_month
        self.hours_per_day = hours_per_day


class VMwareCollector(msrest.serialization.Model):
    """VMwareCollector.

    Variables are only populated by the server, and will be ignored when sending a request.

    :param e_tag:
    :type e_tag: str
    :ivar id:
    :vartype id: str
    :ivar name:
    :vartype name: str
    :ivar type:
    :vartype type: str
    :param discovery_site_id: The ARM id of the discovery service site.
    :type discovery_site_id: str
    :ivar created_timestamp: Time when this collector was created. Date-Time represented in
     ISO-8601 format.
    :vartype created_timestamp: str
    :ivar updated_timestamp: Time when this collector was updated. Date-Time represented in
     ISO-8601 format.
    :vartype updated_timestamp: str
    :ivar id_properties_agent_properties_id:
    :vartype id_properties_agent_properties_id: str
    :ivar version:
    :vartype version: str
    :ivar last_heartbeat_utc:
    :vartype last_heartbeat_utc: ~datetime.datetime
    :param spn_details:
    :type spn_details: ~azure_migrate_v2.models.CollectorBodyAgentSpnProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'created_timestamp': {'readonly': True},
        'updated_timestamp': {'readonly': True},
        'id_properties_agent_properties_id': {'readonly': True},
        'version': {'readonly': True},
        'last_heartbeat_utc': {'readonly': True},
    }

    _attribute_map = {
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'discovery_site_id': {'key': 'properties.discoverySiteId', 'type': 'str'},
        'created_timestamp': {'key': 'properties.createdTimestamp', 'type': 'str'},
        'updated_timestamp': {'key': 'properties.updatedTimestamp', 'type': 'str'},
        'id_properties_agent_properties_id': {'key': 'properties.agentProperties.id', 'type': 'str'},
        'version': {'key': 'properties.agentProperties.version', 'type': 'str'},
        'last_heartbeat_utc': {'key': 'properties.agentProperties.lastHeartbeatUtc', 'type': 'iso-8601'},
        'spn_details': {'key': 'properties.agentProperties.spnDetails', 'type': 'CollectorBodyAgentSpnProperties'},
    }

    def __init__(
        self,
        *,
        e_tag: Optional[str] = None,
        discovery_site_id: Optional[str] = None,
        spn_details: Optional["CollectorBodyAgentSpnProperties"] = None,
        **kwargs
    ):
        super(VMwareCollector, self).__init__(**kwargs)
        self.e_tag = e_tag
        self.id = None
        self.name = None
        self.type = None
        self.discovery_site_id = discovery_site_id
        self.created_timestamp = None
        self.updated_timestamp = None
        self.id_properties_agent_properties_id = None
        self.version = None
        self.last_heartbeat_utc = None
        self.spn_details = spn_details


class VMwareCollectorList(msrest.serialization.Model):
    """List of VMware collectors.

    :param value: List of VMware collectors.
    :type value: list[~azure_migrate_v2.models.VMwareCollector]
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[VMwareCollector]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["VMwareCollector"]] = None,
        **kwargs
    ):
        super(VMwareCollectorList, self).__init__(**kwargs)
        self.value = value
