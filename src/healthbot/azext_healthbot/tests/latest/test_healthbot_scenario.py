# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg, rg_2):
    pass


# EXAMPLE: /Bots/put/BotCreate
@try_manual
def step__bots_put_botcreate(test, rg, rg_2):
    test.cmd('az healthbot bot create '
             '--name "{myBot}" '
             '--location "East US" '
             '--sku name="F0" '
             '--resource-group "{rg_2}"',
             checks=[
                 test.check("name", "{myBot}", case_sensitive=False),
                 test.check("location", "East US", case_sensitive=False),
                 test.check("sku.name", "F0", case_sensitive=False),
             ])


# EXAMPLE: /Bots/get/List Bots by Resource Group
@try_manual
def step__bots_get_list_bots_by_resource_group(test, rg, rg_2):
    test.cmd('az healthbot bot list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Bots/get/List Bots by Subscription
@try_manual
def step__bots_get_list_bots_by_subscription(test, rg, rg_2):
    test.cmd('az healthbot bot list '
             '-g ""',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /Bots/get/ResourceInfoGet
@try_manual
def step__bots_get_resourceinfoget(test, rg, rg_2):
    test.cmd('az healthbot bot show '
             '--name "{myBot}" '
             '--resource-group "{rg_2}"',
             checks=[
                 test.check("name", "{myBot}", case_sensitive=False),
                 test.check("location", "East US", case_sensitive=False),
                 test.check("sku.name", "F0", case_sensitive=False),
             ])


# EXAMPLE: /Bots/patch/BotUpdate
@try_manual
def step__bots_patch_botupdate(test, rg, rg_2):
    test.cmd('az healthbot bot update '
             '--name "{myBot}" '
             '--sku name="F0" '
             '--resource-group "{rg_2}"',
             checks=[
                 test.check("name", "{myBot}", case_sensitive=False),
                 test.check("location", "East US", case_sensitive=False),
                 test.check("sku.name", "F0", case_sensitive=False),
             ])


# EXAMPLE: /Bots/delete/BotDelete
@try_manual
def step__bots_delete_botdelete(test, rg, rg_2):
    test.cmd('az healthbot bot delete -y '
             '--name "{myBot}" '
             '--resource-group "{rg_2}"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test, rg, rg_2):
    pass


# Testcase
@try_manual
def call_scenario(test, rg, rg_2):
    setup(test, rg, rg_2)
    step__bots_put_botcreate(test, rg, rg_2)
    step__bots_get_list_bots_by_resource_group(test, rg, rg_2)
    step__bots_get_list_bots_by_subscription(test, rg, rg_2)
    step__bots_get_resourceinfoget(test, rg, rg_2)
    step__bots_patch_botupdate(test, rg, rg_2)
    step__bots_delete_botdelete(test, rg, rg_2)
    cleanup(test, rg, rg_2)


@try_manual
class HealthbotScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitesthealthbot_OneResourceGroupName'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitesthealthbot_healthbotClient'[:7], key='rg_2', parameter_name='rg_2')
    def test_healthbot(self, rg, rg_2):

        self.kwargs.update({
            'myBot': 'samplebotname',
        })

        call_scenario(self, rg, rg_2)
        calc_coverage(__file__)
        raise_if()
