# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['healthbot'] = """
    type: group
    short-summary: Manage bot with healthbot
"""

helps['healthbot list'] = """
    type: command
    short-summary: "Returns all the resources of a particular type belonging to a resource group And Returns all the \
resources of a particular type belonging to a subscription."
    examples:
      - name: List Bots by Resource Group
        text: |-
               az healthbot list --resource-group "OneResourceGroupName"
      - name: List Bots by Subscription
        text: |-
               az healthbot list
"""

helps['healthbot show'] = """
    type: command
    short-summary: "Get a HealthBot."
    examples:
      - name: ResourceInfoGet
        text: |-
               az healthbot show --name "samplebotname" --resource-group "healthbotClient"
"""

helps['healthbot create'] = """
    type: command
    short-summary: "Create a new HealthBot."
    examples:
      - name: BotCreate
        text: |-
               az healthbot create --name "samplebotname" --location "East US" --sku "F0" --resource-group \
"healthbotClient"
"""

helps['healthbot update'] = """
    type: command
    short-summary: "Patch a HealthBot."
    examples:
      - name: BotUpdate
        text: |-
               az healthbot update --bot-name "samplebotname" --name "F0" --resource-group "healthbotClient"
"""

helps['healthbot delete'] = """
    type: command
    short-summary: "Delete a HealthBot."
    examples:
      - name: BotDelete
        text: |-
               az healthbot delete --name "samplebotname" --resource-group "healthbotClient"
"""

helps['healthbot wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the healthbot is met.
    examples:
      - name: Pause executing next line of CLI script until the healthbot is successfully created.
        text: |-
               az healthbot wait --name "samplebotname" --resource-group "healthbotClient" --created
      - name: Pause executing next line of CLI script until the healthbot is successfully deleted.
        text: |-
               az healthbot wait --name "samplebotname" --resource-group "healthbotClient" --deleted
"""
