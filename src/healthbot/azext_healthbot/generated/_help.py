# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['healthbot bot'] = """
    type: group
    short-summary: healthbot bot
"""

helps['healthbot bot list'] = """
    type: command
    short-summary: "Returns all the resources of a particular type belonging to a resource group And Returns all the \
resources of a particular type belonging to a subscription."
    examples:
      - name: List Bots by Resource Group
        text: |-
               az healthbot bot list --resource-group "OneResourceGroupName"
      - name: List Bots by Subscription
        text: |-
               az healthbot bot list
"""

helps['healthbot bot show'] = """
    type: command
    short-summary: "Get a Healthcare Bot."
    examples:
      - name: ResourceInfoGet
        text: |-
               az healthbot bot show --name "samplebotname" --resource-group "healthbotClient"
"""

helps['healthbot bot create'] = """
    type: command
    short-summary: "Create a new Healthcare Bot."
    parameters:
      - name: --sku
        short-summary: "SKU of the HealthBot."
        long-summary: |
            Usage: --sku name=XX tier=XX size=XX family=XX capacity=XX

            name: Required. The name of the HealthBot SKU
            tier: This field is required to be implemented by the Resource Provider if the service has more than one \
tier, but is not required on a PUT.
            size: The SKU size. When the name field is the combination of tier and some other value, this would be the \
standalone code.
            family: If the service has different generations of hardware, for the same SKU, then that can be captured \
here.
            capacity: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in \
is not possible for the resource this may be omitted.
    examples:
      - name: BotCreate
        text: |-
               az healthbot bot create --name "samplebotname" --location "East US" --sku name="F0" --resource-group \
"healthbotClient"
"""

helps['healthbot bot update'] = """
    type: command
    short-summary: "Patch a Healthcare Bot."
    parameters:
      - name: --sku
        short-summary: "SKU of the HealthBot."
        long-summary: |
            Usage: --sku name=XX tier=XX size=XX family=XX capacity=XX

            name: Required. The name of the HealthBot SKU
            tier: This field is required to be implemented by the Resource Provider if the service has more than one \
tier, but is not required on a PUT.
            size: The SKU size. When the name field is the combination of tier and some other value, this would be the \
standalone code.
            family: If the service has different generations of hardware, for the same SKU, then that can be captured \
here.
            capacity: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in \
is not possible for the resource this may be omitted.
    examples:
      - name: BotUpdate
        text: |-
               az healthbot bot update --name "samplebotname" --sku name="F0" --resource-group "healthbotClient"
"""

helps['healthbot bot delete'] = """
    type: command
    short-summary: "Delete a Healthcare Bot."
    examples:
      - name: BotDelete
        text: |-
               az healthbot bot delete --name "samplebotname" --resource-group "healthbotClient"
"""

helps['healthbot bot wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the healthbot bot is met.
    examples:
      - name: Pause executing next line of CLI script until the healthbot bot is successfully created.
        text: |-
               az healthbot bot wait --name "samplebotname" --resource-group "healthbotClient" --created
      - name: Pause executing next line of CLI script until the healthbot bot is successfully deleted.
        text: |-
               az healthbot bot wait --name "samplebotname" --resource-group "healthbotClient" --deleted
"""
