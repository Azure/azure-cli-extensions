# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MongoDBCollectionGetPropertiesResource(Model):
    """MongoDBCollectionGetPropertiesResource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :param id: Required. Name of the Cosmos DB MongoDB collection
    :type id: str
    :param shard_key: A key-value pair of shard keys to be applied for the
     request.
    :type shard_key: dict[str, str]
    :param indexes: List of index keys
    :type indexes: list[~azure.mgmt.cosmosdb.models.MongoIndex]
    :param analytical_storage_ttl: Analytical TTL.
    :type analytical_storage_ttl: int
    :ivar _rid: A system generated property. A unique identifier.
    :vartype _rid: str
    :ivar _ts: A system generated property that denotes the last updated
     timestamp of the resource.
    :vartype _ts: object
    :ivar _etag: A system generated property representing the resource etag
     required for optimistic concurrency control.
    :vartype _etag: str
    """

    _validation = {
        'id': {'required': True},
        '_rid': {'readonly': True},
        '_ts': {'readonly': True},
        '_etag': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'shard_key': {'key': 'shardKey', 'type': '{str}'},
        'indexes': {'key': 'indexes', 'type': '[MongoIndex]'},
        'analytical_storage_ttl': {'key': 'analyticalStorageTtl', 'type': 'int'},
        '_rid': {'key': '_rid', 'type': 'str'},
        '_ts': {'key': '_ts', 'type': 'object'},
        '_etag': {'key': '_etag', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(MongoDBCollectionGetPropertiesResource, self).__init__(**kwargs)
        self.id = kwargs.get('id', None)
        self.shard_key = kwargs.get('shard_key', None)
        self.indexes = kwargs.get('indexes', None)
        self.analytical_storage_ttl = kwargs.get('analytical_storage_ttl', None)
        self._rid = None
        self._ts = None
        self._etag = None
