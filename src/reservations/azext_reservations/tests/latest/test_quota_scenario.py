# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .example_steps import step_operation_list
from .example_steps import step_create
from .example_steps import step_create2
from .example_steps import step_create3
from .example_steps import step_list
from .example_steps import step_list2
from .example_steps import step_show
from .example_steps import step_update
from .example_steps import step_quota_request_status_show
from .example_steps import step_quota_request_status_list
from .example_steps import step_quota_request_status_show2
from .example_steps import step_quota_request_status_show3
from .example_steps import step_calculate_exchange_post
from .example_steps import step_exchange_post
from .example_steps import step_show_applied_reservation_list
from .example_steps import step_show_catalog
from .example_steps import step_reservation_show
from .example_steps import step_reservation_list
from .example_steps import step_reservation_list_revision
from .example_steps import step_reservation_update
from .example_steps import step_reservation_available_scope
from .example_steps import step_reservation_merge
from .example_steps import step_reservation_split
from .example_steps import step_reservation_order_purchase
from .example_steps import step_reservation_order_show
from .example_steps import step_reservation_order_show2
from .example_steps import step_reservation_order_list
from .example_steps import step_reservation_order_calculate
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test):
    pass


# Env undefined
@try_manual
def undefined(test):
    pass


# Env undefined
@try_manual
def undefined(test):
    pass


# Env undefined
@try_manual
def undefined(test):
    pass


# Env undefined
@try_manual
def undefined(test):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test):
    setup_scenario(test)
    step_operation_list(test, checks=[])
    undefined(test)
    step_create(test, checks=[])
    step_create2(test, checks=[])
    step_create3(test, checks=[])
    step_list(test, checks=[])
    step_list2(test, checks=[])
    step_show(test, checks=[])
    step_update(test, checks=[])
    undefined(test)
    step_quota_request_status_show(test, checks=[])
    step_quota_request_status_list(test, checks=[])
    step_quota_request_status_show2(test, checks=[])
    step_quota_request_status_show3(test, checks=[])
    undefined(test)
    step_calculate_exchange_post(test, checks=[])
    step_exchange_post(test, checks=[])
    step_show_applied_reservation_list(test, checks=[])
    step_show_catalog(test, checks=[])
    undefined(test)
    step_reservation_show(test, checks=[])
    step_reservation_list(test, checks=[])
    step_reservation_list_revision(test, checks=[])
    step_reservation_update(test, checks=[])
    step_reservation_available_scope(test, checks=[])
    step_reservation_merge(test, checks=[])
    step_reservation_split(test, checks=[])
    step_reservation_order_purchase(test, checks=[])
    step_reservation_order_show(test, checks=[])
    step_reservation_order_show2(test, checks=[])
    step_reservation_order_list(test, checks=[])
    step_reservation_order_calculate(test, checks=[])
    cleanup_scenario(test)


# Test class for Scenario
@try_manual
class QuotaScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(QuotaScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myQuota': 'standard_D1',
        })


    def test_quota_Scenario(self):
        call_scenario(self)
        calc_coverage(__file__)
        raise_if()

