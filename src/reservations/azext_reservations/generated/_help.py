# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['quota reservation'] = """
    type: group
    short-summary: Manage reservation with quota
"""

helps['quota reservation list'] = """
    type: command
    short-summary: "List `Reservation`s within a single `ReservationOrder`."
    examples:
      - name: ReservationList
        text: |-
               az quota reservation list --reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f3557da"
"""

helps['quota reservation show'] = """
    type: command
    short-summary: "Get specific `Reservation` details."
    examples:
      - name: GetReservation
        text: |-
               az quota reservation show --expand "renewProperties" --reservation-id "6ef59113-3482-40da-8d79-787f823e3\
4bc" --reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f3557da"
"""

helps['quota reservation update'] = """
    type: command
    short-summary: "Updates the applied scopes of the `Reservation`."
    examples:
      - name: PatchReservation
        text: |-
               az quota reservation update --applied-scope-type "Shared" --instance-flexibility "Off" --reservation-id \
"6ef59113-3482-40da-8d79-787f823e34bc" --reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f3557da"
"""

helps['quota reservation available-scope'] = """
    type: command
    short-summary: "Get Available Scopes for `Reservation`."
    parameters:
      - name: --properties
        short-summary: "Available scope request properties"
        long-summary: |
            Usage: --properties scopes=XX

    examples:
      - name: AvailableScopes
        text: |-
               az quota reservation available-scope --properties scopes="/subscriptions/efc7c997-7700-4a74-b731-55aec16\
c15e9" --reservation-id "356e7ae4-84d0-4da6-ab4b-d6b94f3557da" --reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f35\
57da"
"""

helps['quota reservation list-revision'] = """
    type: command
    short-summary: "List of all the revisions for the `Reservation`."
    examples:
      - name: ReservationRevisions
        text: |-
               az quota reservation list-revision --reservation-id "6ef59113-3482-40da-8d79-787f823e34bc" \
--reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f3557da"
"""

helps['quota reservation merge'] = """
    type: command
    short-summary: "Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged \
must have same properties."
    examples:
      - name: Merge
        text: |-
               az quota reservation merge --sources "/providers/Microsoft.Capacity/reservationOrders/c0565a8a-4491-4e77\
-b07b-5e6d66718e1c/reservations/cea04232-932e-47db-acb5-e29a945ecc73" "/providers/Microsoft.Capacity/reservationOrders/\
c0565a8a-4491-4e77-b07b-5e6d66718e1c/reservations/5bf54dc7-dacd-4f46-a16b-7b78f4a59799" --reservation-order-id \
"276e7ae4-84d0-4da6-ab4b-d6b94f3557da"
"""

helps['quota reservation split'] = """
    type: command
    short-summary: "Split a `Reservation` into two `Reservation`s with specified quantity distribution."
    examples:
      - name: Split
        text: |-
               az quota reservation split --quantities 1 2 --reservation-id "/providers/Microsoft.Capacity/reservationO\
rders/276e7ae4-84d0-4da6-ab4b-d6b94f3557da/reservations/bcae77cd-3119-4766-919f-b50d36c75c7a" --reservation-order-id \
"276e7ae4-84d0-4da6-ab4b-d6b94f3557da"
"""

helps['quota reservation wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the quota reservation is met.
    examples:
      - name: Pause executing next line of CLI script until the quota reservation is successfully updated.
        text: |-
               az quota reservation wait --expand "renewProperties" --reservation-id "6ef59113-3482-40da-8d79-787f823e3\
4bc" --reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f3557da" --updated
      - name: Pause executing next line of CLI script until the quota reservation is successfully created.
        text: |-
               az quota reservation wait --expand "renewProperties" --reservation-id "6ef59113-3482-40da-8d79-787f823e3\
4bc" --reservation-order-id "276e7ae4-84d0-4da6-ab4b-d6b94f3557da" --created
"""

helps['quota'] = """
    type: group
    short-summary: Manage  with quota
"""

helps['quota show-applied-reservation-list'] = """
    type: command
    short-summary: "Get applicable `Reservation`s that are applied to this subscription or a resource group under this \
subscription."
    examples:
      - name: AppliedReservationList
        text: |-
               az quota show-applied-reservation-list --subscription-id "23bc208b-083f-4901-ae85-4f98c0c3b4b6"
"""

helps['quota show-catalog'] = """
    type: command
    short-summary: "Get the regions and skus that are available for RI purchase for the specified Azure subscription."
    examples:
      - name: Catalog
        text: |-
               az quota show-catalog --location "eastus" --reserved-resource-type "VirtualMachines" --subscription-id \
"23bc208b-083f-4901-ae85-4f98c0c3b4b6"
"""

helps['quota reservation-order'] = """
    type: group
    short-summary: Manage reservation order with quota
"""

helps['quota reservation-order list'] = """
    type: command
    short-summary: "List of all the `ReservationOrder`s that the user has access to in the current tenant."
    examples:
      - name: ReservationOrderList
        text: |-
               az quota reservation-order list
"""

helps['quota reservation-order show'] = """
    type: command
    short-summary: "Get the details of the `ReservationOrder`."
    examples:
      - name: GetReservation
        text: |-
               az quota reservation-order show --reservation-order-id "a075419f-44cc-497f-b68a-14ee811d48b9"
      - name: GetReservationWithExpandPayments
        text: |-
               az quota reservation-order show --expand "schedule" --reservation-order-id \
"a075419f-44cc-497f-b68a-14ee811d48b9"
"""

helps['quota reservation-order calculate'] = """
    type: command
    short-summary: "Calculate price for placing a `ReservationOrder`."
    examples:
      - name: Purchase
        text: |-
               az quota reservation-order calculate --location "westus" --applied-scope-type "Shared" --billing-plan \
"Monthly" --billing-scope-id "/subscriptions/ed3a1871-612d-abcd-a849-c2542a68be83" --display-name \
"TestReservationOrder" --quantity 1 --instance-flexibility "On" --reserved-resource-type "VirtualMachines" --term \
"P1Y" --name "standard_D1"
"""

helps['quota reservation-order purchase'] = """
    type: command
    short-summary: "Purchase `ReservationOrder` and create resource under the specified URI."
    examples:
      - name: Purchase
        text: |-
               az quota reservation-order purchase --location "westus" --applied-scope-type "Shared" --billing-plan \
"Monthly" --billing-scope-id "/subscriptions/ed3a1871-612d-abcd-a849-c2542a68be83" --display-name \
"TestReservationOrder" --quantity 1 --renew false --instance-flexibility "On" --reserved-resource-type \
"VirtualMachines" --term "P1Y" --name "standard_D1" --reservation-order-id "a075419f-44cc-497f-b68a-14ee811d48b9"
"""

helps['quota reservation-order wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the quota reservation-order is met.
    examples:
      - name: Pause executing next line of CLI script until the quota reservation-order is successfully created.
        text: |-
               az quota reservation-order wait --expand "schedule" --reservation-order-id \
"a075419f-44cc-497f-b68a-14ee811d48b9" --created
"""

helps['quota operation'] = """
    type: group
    short-summary: Manage operation with quota
"""

helps['quota operation list'] = """
    type: command
    short-summary: "List all the operations."
    examples:
      - name: GetOperations
        text: |-
               az quota operation list
"""

helps['quota calculate-exchange'] = """
    type: group
    short-summary: Manage calculate exchange with quota
"""

helps['quota calculate-exchange post'] = """
    type: command
    short-summary: "Calculates price for exchanging `Reservations` if there are no policy errors."
    parameters:
      - name: --reservations-to-purchase
        short-summary: "List of reservations that are being purchased in this exchange."
        long-summary: |
            Usage: --reservations-to-purchase location=XX reserved-resource-type=XX billing-scope-id=XX term=XX \
billing-plan=XX quantity=XX display-name=XX applied-scope-type=XX applied-scopes=XX renew=XX instance-flexibility=XX \
name=XX

            location: The Azure Region where the reserved resource lives.
            reserved-resource-type: The type of the resource that is being reserved.
            billing-scope-id: Subscription that will be charged for purchasing Reservation
            term: Represent the term of Reservation.
            billing-plan: Represent the billing plans.
            quantity: Quantity of the SKUs that are part of the Reservation. Must be greater than zero.
            display-name: Friendly name of the Reservation
            applied-scope-type: Type of the Applied Scope.
            applied-scopes: List of the subscriptions that the benefit will be applied. Do not specify if \
AppliedScopeType is Shared.
            renew: Setting this to true will automatically purchase a new reservation on the expiration date time.
            instance-flexibility: Turning this on will apply the reservation discount to other VMs in the same VM size \
group. Only specify for VirtualMachines reserved resource type.

            Multiple actions can be specified by using more than one --reservations-to-purchase argument.
      - name: --reservations-to-exchange
        short-summary: "List of reservations that are being returned in this exchange."
        long-summary: |
            Usage: --reservations-to-exchange reservation-id=XX quantity=XX

            reservation-id: Fully qualified identifier of the Reservation being returned
            quantity: Quantity to be returned. Must be greater than zero.

            Multiple actions can be specified by using more than one --reservations-to-exchange argument.
    examples:
      - name: CalculateExchange
        text: |-
               az quota calculate-exchange post --reservations-to-exchange quantity=1 reservation-id="/providers/micros\
oft.capacity/reservationOrders/1f14354c-dc12-4c8d-8090-6f295a3a34aa/reservations/c8c926bd-fc5d-4e29-9d43-b68340ac23a6" \
--reservations-to-purchase location="westus" reserved-resource-type="VirtualMachines" billing-scope-id="/subscriptions/\
ed3a1871-612d-abcd-a849-c2542a68be83" term="P1Y" billing-plan="Upfront" quantity=1 display-name="testDisplayName" \
applied-scope-type="Shared" applied-scopes=null renew=false instance-flexibility="On" name="Standard_B1ls"
"""

helps['quota exchange'] = """
    type: group
    short-summary: Manage exchange with quota
"""

helps['quota exchange post'] = """
    type: command
    short-summary: "Returns one or more `Reservations` in exchange for one or more `Reservation` purchases."
    examples:
      - name: Exchange
        text: |-
               az quota exchange post --session-id "66e2ac8f-439e-4345-8235-6fef07608081"
"""

helps['quota'] = """
    type: group
    short-summary: Manage quota
"""

helps['quota list'] = """
    type: command
    short-summary: "Gets a list of current quotas (service limits) and usage for all resources. The response from the \
list quota operation can be leveraged to request quota updates."
    examples:
      - name: Quotas_listUsagesForCompute
        text: |-
               az quota list --location "eastus" --provider-id "Microsoft.Compute" --subscription-id \
"00000000-0000-0000-0000-000000000000"
      - name: Quotas_listUsagesMachineLearningServices
        text: |-
               az quota list --location "eastus" --provider-id "Microsoft.MachineLearningServices" --subscription-id \
"00000000-0000-0000-0000-000000000000"
"""

helps['quota show'] = """
    type: command
    short-summary: "Get the current quota (service limit) and usage of a resource. You can use the response from the \
GET operation to submit quota update request."
    examples:
      - name: Quotas_Request_ForCompute
        text: |-
               az quota show --location "eastus" --provider-id "Microsoft.Compute" --resource-name "standardNDSFamily" \
--subscription-id "00000000-0000-0000-0000-000000000000"
"""

helps['quota create'] = """
    type: command
    short-summary: "Create the quota (service limits) of a resource to the requested value.  Steps:   1. Make the Get \
request to get the quota information for specific resource.   2. To increase the quota, update the limit field in the \
response from Get request to new value.   3. Submit the JSON to the quota request API to update the quota.   The \
Create quota request may be constructed as follows. The PUT operation can be used to update the quota."
    examples:
      - name: Quotas_Request_PutForCompute
        text: |-
               az quota create --properties "{\\"name\\":{\\"value\\":\\"standardFSv2Family\\"},\\"limit\\":200,\\"unit\
\\":\\"Count\\"}" --location "eastus" --provider-id "Microsoft.Compute" --resource-name "standardFSv2Family" \
--subscription-id "D7EC67B3-7657-4966-BFFC-41EFD36BAAB3"
      - name: Quotas_Request_PutForMachineLearningServices_DedicatedResource
        text: |-
               az quota create --properties "{\\"name\\":{\\"value\\":\\"StandardDv2Family\\"},\\"limit\\":200,\\"resou\
rceType\\":\\"dedicated\\",\\"unit\\":\\"Count\\"}" --location "eastus" --provider-id "Microsoft.MachineLearningService\
s" --resource-name "StandardDv2Family" --subscription-id "D7EC67B3-7657-4966-BFFC-41EFD36BAAB3"
      - name: Quotas_Request_PutForMachineLearningServices_LowPriorityResource
        text: |-
               az quota create --properties "{\\"name\\":{\\"value\\":\\"TotalLowPriorityCores\\"},\\"limit\\":200,\\"r\
esourceType\\":\\"lowPriority\\",\\"unit\\":\\"Count\\"}" --location "eastus" --provider-id \
"Microsoft.MachineLearningServices" --resource-name "TotalLowPriorityCores" --subscription-id \
"D7EC67B3-7657-4966-BFFC-41EFD36BAAB3"
"""

helps['quota update'] = """
    type: command
    short-summary: "Update the quota (service limits) of this resource to the requested value.   • To get the quota \
information for specific resource, send a GET request.   • To increase the quota, update the limit field from the GET \
response to a new value.   • To update the quota value, submit the JSON response to the quota request API to update \
the quota.   • To update the quota. use the PATCH operation."
    examples:
      - name: Quotas_Request_PatchForCompute
        text: |-
               az quota update --properties "{\\"name\\":{\\"value\\":\\"standardFSv2Family\\"},\\"limit\\":200,\\"unit\
\\":\\"Count\\"}" --location "eastus" --provider-id "Microsoft.Compute" --resource-name "standardFSv2Family" \
--subscription-id "D7EC67B3-7657-4966-BFFC-41EFD36BAAB3"
"""

helps['quota wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the quota is met.
    examples:
      - name: Pause executing next line of CLI script until the quota is successfully created.
        text: |-
               az quota wait --location "eastus" --provider-id "Microsoft.Compute" --resource-name "standardNDSFamily" \
--subscription-id "00000000-0000-0000-0000-000000000000" --created
      - name: Pause executing next line of CLI script until the quota is successfully updated.
        text: |-
               az quota wait --location "eastus" --provider-id "Microsoft.Compute" --resource-name "standardNDSFamily" \
--subscription-id "00000000-0000-0000-0000-000000000000" --updated
"""

helps['quota quota-request-status'] = """
    type: group
    short-summary: Manage quota request status with quota
"""

helps['quota quota-request-status list'] = """
    type: command
    short-summary: "For the specified Azure region (location), subscription, and resource provider, get the history of \
the quota requests for the past year. To select specific quota requests, use the oData filter."
    examples:
      - name: QuotaRequestHistory
        text: |-
               az quota quota-request-status list --location "eastus" --provider-id "Microsoft.Compute" \
--subscription-id "3f75fdf7-977e-44ad-990d-99f14f0f299f"
"""

helps['quota quota-request-status show'] = """
    type: command
    short-summary: "For the specified Azure region (location), get the details and status of the quota request by the \
quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a \
response with the requestId parameter."
    examples:
      - name: QuotaRequestFailed
        text: |-
               az quota quota-request-status show --id "2B5C8515-37D8-4B6A-879B-CD641A2CF605" --location "eastus" \
--provider-id "Microsoft.Compute" --subscription-id "00000000-0000-0000-0000-000000000000"
      - name: QuotaRequestInProgress
        text: |-
               az quota quota-request-status show --id "2B5C8515-37D8-4B6A-879B-CD641A2CF605" --location "eastus" \
--provider-id "Microsoft.Compute" --subscription-id "00000000-0000-0000-0000-000000000000"
      - name: QuotaRequestStatus
        text: |-
               az quota quota-request-status show --id "2B5C8515-37D8-4B6A-879B-CD641A2CF605" --location "eastus" \
--provider-id "Microsoft.Compute" --subscription-id "00000000-0000-0000-0000-000000000000"
"""
