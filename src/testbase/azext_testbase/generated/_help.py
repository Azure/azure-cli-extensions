# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['testbase'] = '''
    type: group
    short-summary: Manage Test Base
'''

helps['testbase sku'] = """
    type: group
    short-summary: Manage sku with testbase
"""

helps['testbase sku list'] = """
    type: command
    short-summary: "Lists the available SKUs of Test Base Account in a subscription."
    examples:
      - name: TestBaseAccountSKUsList
        text: |-
               az testbase sku list
"""

helps['testbase account'] = """
    type: group
    short-summary: Manage test base account with testbase
"""

helps['testbase account list'] = """
    type: command
    short-summary: "Lists all the Test Base Accounts in a resource group. And Lists all the Test Base Accounts in a \
subscription. This API is required by ARM guidelines."
    examples:
      - name: TestBaseAccountsList
        text: |-
               az testbase account list --resource-group "contoso-rg1"
      - name: TestBaseAccountsListBySubscription
        text: |-
               az testbase account list
"""

helps['testbase account show'] = """
    type: command
    short-summary: "Gets a Test Base Account."
    examples:
      - name: TestBaseAccountGet
        text: |-
               az testbase account show --resource-group "contoso-rg1" --name "contoso-testBaseAccount1"
"""

helps['testbase account create'] = """
    type: command
    short-summary: "Create or replace (overwrite/recreate, with potential downtime) a Test Base Account in the \
specified subscription."
    examples:
      - name: TestBaseAccountCreate
        text: |-
               az testbase account create --location "westus" --sku-name "S0" --resource-group "contoso-rg1" --name \
"contoso-testBaseAccount1"
"""

helps['testbase account update'] = """
    type: command
    short-summary: "Update an existing Test Base Account."
    examples:
      - name: TestBaseAccountUpdate
        text: |-
               az testbase account update --name "S0" --resource-group "contoso-rg1"
"""

helps['testbase account check-package-name'] = """
    type: command
    short-summary: "Checks that the Test Base Package name and version is valid and is not already in use."
    examples:
      - name: CheckPackageNameAvailability
        text: |-
               az testbase account check-package-name --name "testApp" --type "Microsoft.TestBase/testBaseAccounts/pack\
ages" --application-name "testApp" --version "1.0.0" --resource-group "contoso-rg1"
"""

helps['testbase account get-package-blob-path'] = """
    type: command
    short-summary: "Gets the file upload URL of a Test Base Account."
    examples:
      - name: TestBaseAccountGetFileUploadUrl
        text: |-
               az testbase account get-package-blob-path --file-name "package.zip" --resource-group "contoso-rg1" \
--name "contoso-testBaseAccount1"
"""

helps['testbase account soft-delete'] = """
    type: command
    short-summary: "Offboard a Test Base Account."
    examples:
      - name: TestBaseAccountOffboard
        text: |-
               az testbase account soft-delete --resource-group "contoso-rg1" --name "contoso-testBaseAccount1"
"""

helps['testbase account wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the testbase account is met.
    examples:
      - name: Pause executing next line of CLI script until the testbase account is successfully created.
        text: |-
               az testbase account wait --resource-group "contoso-rg1" --name "contoso-testBaseAccount1" --created
      - name: Pause executing next line of CLI script until the testbase account is successfully updated.
        text: |-
               az testbase account wait --resource-group "contoso-rg1" --name "contoso-testBaseAccount1" --updated
"""

helps['testbase usage'] = """
    type: group
    short-summary: Manage usage with testbase
"""

helps['testbase usage list'] = """
    type: command
    short-summary: "Lists the usage data of a Test Base Account."
    examples:
      - name: TestBaseAccountUsagesList
        text: |-
               az testbase usage list --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase available-os'] = """
    type: group
    short-summary: Manage available os with testbase
"""

helps['testbase available-os list'] = """
    type: command
    short-summary: "Lists all the available OSs to run a package under a Test Base Account."
    examples:
      - name: AvailableOSsList
        text: |-
               az testbase available-os list --os-update-type "SecurityUpdate" --resource-group "contoso-rg" \
--account-name "contoso-testBaseAccount"
"""

helps['testbase available-os show'] = """
    type: command
    short-summary: "Gets an available OS to run a package under a Test Base Account."
    examples:
      - name: AvailableOSGet
        text: |-
               az testbase available-os show --available-os-resource-name "Windows-10-2004" --resource-group \
"contoso-rg" --account-name "contoso-testBaseAccount"
"""

helps['testbase flighting-ring'] = """
    type: group
    short-summary: Manage flighting ring with testbase
"""

helps['testbase flighting-ring list'] = """
    type: command
    short-summary: "Lists all the flighting rings of a Test Base Account."
    examples:
      - name: FlightingRingsList
        text: |-
               az testbase flighting-ring list --resource-group "contoso-rg" --account-name "contoso-testBaseAccount"
"""

helps['testbase flighting-ring show'] = """
    type: command
    short-summary: "Gets a flighting ring of a Test Base Account."
    examples:
      - name: FlightingRingGet
        text: |-
               az testbase flighting-ring show --flighting-ring-resource-name "Insider-Beta-Channel" --resource-group \
"contoso-rg" --account-name "contoso-testBaseAccount"
"""

helps['testbase test-type'] = """
    type: group
    short-summary: Manage test type with testbase
"""

helps['testbase test-type list'] = """
    type: command
    short-summary: "Lists all the test types of a Test Base Account."
    examples:
      - name: TestTypesList
        text: |-
               az testbase test-type list --resource-group "contoso-rg" --account-name "contoso-testBaseAccount"
"""

helps['testbase test-type show'] = """
    type: command
    short-summary: "Gets a test type of a Test Base Account."
    examples:
      - name: TestTypeGet
        text: |-
               az testbase test-type show --resource-group "contoso-rg" --account-name "contoso-testBaseAccount" \
--test-type-resource-name "Functional-Test"
"""

helps['testbase package'] = """
    type: group
    short-summary: Manage package with testbase
"""

helps['testbase package list'] = """
    type: command
    short-summary: "Lists all the packages under a Test Base Account."
    examples:
      - name: PackagesList
        text: |-
               az testbase package list --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase package show'] = """
    type: command
    short-summary: "Gets a Test Base Package."
    examples:
      - name: PackageGet
        text: |-
               az testbase package show --name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase package create'] = """
    type: command
    short-summary: "Create or replace (overwrite/recreate, with potential downtime) a Test Base Package."
    parameters:
      - name: --target-os-list
        short-summary: "Specifies the target OSs of specific OS Update types."
        long-summary: |
            Usage: --target-os-list os-update-type=XX target-o-ss=XX

            os-update-type: Required. Specifies the OS update type to test against, e.g., 'Security updates' or \
'Feature updates'.
            target-o-ss: Required. Specifies the target OSs to be tested.

            Multiple actions can be specified by using more than one --target-os-list argument.
    examples:
      - name: PackageCreate
        text: |-
               az testbase package create --name "contoso-package2" --location "westus" --application-name \
"contoso-package2" --blob-path "storageAccountPath/package.zip" --flighting-ring "Insider Beta Channel" \
--target-os-list os-update-type="Security updates" target-o-ss="Windows 10 2004" target-o-ss="Windows 10 1903" --tests \
"[{\\"isActive\\":true,\\"testType\\":\\"OutOfBoxTest\\",\\"commands\\":[{\\"name\\":\\"Install\\",\\"action\\":\\"Inst\
all\\",\\"alwaysRun\\":true,\\"applyUpdateBefore\\":false,\\"content\\":\\"app/scripts/install/job.ps1\\",\\"contentTyp\
e\\":\\"Path\\",\\"maxRunTime\\":1800,\\"restartAfter\\":true,\\"runAsInteractive\\":true,\\"runElevated\\":true},{\\"n\
ame\\":\\"Launch\\",\\"action\\":\\"Launch\\",\\"alwaysRun\\":false,\\"applyUpdateBefore\\":true,\\"content\\":\\"app/s\
cripts/launch/job.ps1\\",\\"contentType\\":\\"Path\\",\\"maxRunTime\\":1800,\\"restartAfter\\":false,\\"runAsInteractiv\
e\\":true,\\"runElevated\\":true},{\\"name\\":\\"Close\\",\\"action\\":\\"Close\\",\\"alwaysRun\\":false,\\"applyUpdate\
Before\\":false,\\"content\\":\\"app/scripts/close/job.ps1\\",\\"contentType\\":\\"Path\\",\\"maxRunTime\\":1800,\\"res\
tartAfter\\":false,\\"runAsInteractive\\":true,\\"runElevated\\":true},{\\"name\\":\\"Uninstall\\",\\"action\\":\\"Unin\
stall\\",\\"alwaysRun\\":true,\\"applyUpdateBefore\\":false,\\"content\\":\\"app/scripts/uninstall/job.ps1\\",\\"conten\
tType\\":\\"Path\\",\\"maxRunTime\\":1800,\\"restartAfter\\":false,\\"runAsInteractive\\":true,\\"runElevated\\":true}]\
}]" --version "1.0.0" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase package update'] = """
    type: command
    short-summary: "Update an existing Test Base Package."
    parameters:
      - name: --target-os-list
        short-summary: "Specifies the target OSs of specific OS Update types."
        long-summary: |
            Usage: --target-os-list os-update-type=XX target-o-ss=XX

            os-update-type: Required. Specifies the OS update type to test against, e.g., 'Security updates' or \
'Feature updates'.
            target-o-ss: Required. Specifies the target OSs to be tested.

            Multiple actions can be specified by using more than one --target-os-list argument.
    examples:
      - name: PackageUpdate
        text: |-
               az testbase package update --name "contoso-package2" --blob-path "storageAccountPath/package.zip" \
--flighting-ring "Insider Beta Channel" --is-enabled false --target-os-list os-update-type="Security updates" \
target-o-ss="Windows 10 2004" target-o-ss="Windows 10 1903" --tests "[{\\"isActive\\":true,\\"testType\\":\\"OutOfBoxTe\
st\\",\\"commands\\":[{\\"name\\":\\"Install\\",\\"action\\":\\"Install\\",\\"alwaysRun\\":true,\\"applyUpdateBefore\\"\
:false,\\"content\\":\\"app/scripts/install/job.ps1\\",\\"contentType\\":\\"Path\\",\\"maxRunTime\\":1800,\\"restartAft\
er\\":true,\\"runAsInteractive\\":true,\\"runElevated\\":true},{\\"name\\":\\"Launch\\",\\"action\\":\\"Launch\\",\\"al\
waysRun\\":false,\\"applyUpdateBefore\\":true,\\"content\\":\\"app/scripts/launch/job.ps1\\",\\"contentType\\":\\"Path\
\\",\\"maxRunTime\\":1800,\\"restartAfter\\":false,\\"runAsInteractive\\":true,\\"runElevated\\":true},{\\"name\\":\\"C\
lose\\",\\"action\\":\\"Close\\",\\"alwaysRun\\":false,\\"applyUpdateBefore\\":false,\\"content\\":\\"app/scripts/close\
/job.ps1\\",\\"contentType\\":\\"Path\\",\\"maxRunTime\\":1800,\\"restartAfter\\":false,\\"runAsInteractive\\":true,\\"\
runElevated\\":true},{\\"name\\":\\"Uninstall\\",\\"action\\":\\"Uninstall\\",\\"alwaysRun\\":true,\\"applyUpdateBefore\
\\":false,\\"content\\":\\"app/scripts/uninstall/job.ps1\\",\\"contentType\\":\\"Path\\",\\"maxRunTime\\":1800,\\"resta\
rtAfter\\":false,\\"runAsInteractive\\":true,\\"runElevated\\":true}]}]" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase package delete'] = """
    type: command
    short-summary: "Deletes a Test Base Package."
    examples:
      - name: PackageDelete
        text: |-
               az testbase package delete --name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase package get-download-url'] = """
    type: command
    short-summary: "Gets the download URL of a package."
    examples:
      - name: PackageGetDownloadURL
        text: |-
               az testbase package get-download-url --name "contoso-package2" --resource-group "contoso-rg1" \
--account-name "contoso-testBaseAccount1"
"""

helps['testbase package hard-delete'] = """
    type: command
    short-summary: "Hard Delete a Test Base Package."
    examples:
      - name: PackageHardDelete
        text: |-
               az testbase package hard-delete --name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase package wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the testbase package is met.
    examples:
      - name: Pause executing next line of CLI script until the testbase package is successfully created.
        text: |-
               az testbase package wait --name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1" --created
      - name: Pause executing next line of CLI script until the testbase package is successfully updated.
        text: |-
               az testbase package wait --name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1" --updated
      - name: Pause executing next line of CLI script until the testbase package is successfully deleted.
        text: |-
               az testbase package wait --name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1" --deleted
"""

helps['testbase test-summary'] = """
    type: group
    short-summary: Manage test summary with testbase
"""

helps['testbase test-summary list'] = """
    type: command
    short-summary: "Lists the Test Summaries of all the packages under a Test Base Account."
    examples:
      - name: TestSummariesList
        text: |-
               az testbase test-summary list --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase test-summary show'] = """
    type: command
    short-summary: "Gets a Test Summary with specific name from all the Test Summaries of all the packages under a \
Test Base Account."
    examples:
      - name: TestSummaryGet
        text: |-
               az testbase test-summary show --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" \
--name "contoso-package2-096bffb5-5d3d-4305-a66a-953372ed6e88"
"""

helps['testbase test-result'] = """
    type: group
    short-summary: Manage test result with testbase
"""

helps['testbase test-result list'] = """
    type: command
    short-summary: "Lists all the Test Results with specified OS Update type for a Test Base Package. Can be filtered \
by osName, releaseName, flightingRing, buildVersion, buildRevision."
    examples:
      - name: TestResultsList
        text: |-
               az testbase test-result list --filter "osName eq \'Windows 10 2004\' and releaseName eq \'2020.11B\'" \
--os-update-type "SecurityUpdate" --package-name "contoso-package2" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase test-result show'] = """
    type: command
    short-summary: "Get the Test Result by Id with specified OS Update type for a Test Base Package."
    examples:
      - name: TestResultGet
        text: |-
               az testbase test-result show --package-name "contoso-package2" --resource-group "contoso-rg1" \
--account-name "contoso-testBaseAccount1" --name "Windows-10-1909-99b1f80d-03a9-4148-997f-806ba5bac8e0"
"""

helps['testbase test-result get-download-url'] = """
    type: command
    short-summary: "Gets the download URL of the test result."
    examples:
      - name: TestResultGetDownloadURL
        text: |-
               az testbase test-result get-download-url --package-name "contoso-package2" --resource-group \
"contoso-rg1" --account-name "contoso-testBaseAccount1" --name "Windows-10-1909-99b1f80d-03a9-4148-997f-806ba5bac8e0"
"""

helps['testbase test-result get-video-download-url'] = """
    type: command
    short-summary: "Gets the download URL of the test execution screen recording."
    examples:
      - name: TestResultGetVideoDownloadURL
        text: |-
               az testbase test-result get-video-download-url --package-name "contoso-package2" --resource-group \
"contoso-rg1" --account-name "contoso-testBaseAccount1" --name "Windows-10-1909-99b1f80d-03a9-4148-997f-806ba5bac8e0"
"""

helps['testbase os-update'] = """
    type: group
    short-summary: Manage os update with testbase
"""

helps['testbase os-update list'] = """
    type: command
    short-summary: "Lists the OS Updates in which the package were tested before."
    examples:
      - name: OSUpdatesList
        text: |-
               az testbase os-update list --os-update-type "SecurityUpdate" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase os-update show'] = """
    type: command
    short-summary: "Gets an OS Update by name in which the package was tested before."
    examples:
      - name: OSUpdateGet
        text: |-
               az testbase os-update show --os-update-resource-name "Windows-10-2004-2020-12-B-505" --package-name \
"contoso-package2" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase favorite-process'] = """
    type: group
    short-summary: Manage favorite process with testbase
"""

helps['testbase favorite-process list'] = """
    type: command
    short-summary: "Lists the favorite processes for a specific package."
    examples:
      - name: FavoriteProcessesList
        text: |-
               az testbase favorite-process list --package-name "contoso-package2" --resource-group "contoso-rg1" \
--account-name "contoso-testBaseAccount1"
"""

helps['testbase favorite-process show'] = """
    type: command
    short-summary: "Gets a favorite process for a Test Base Package."
    examples:
      - name: FavoriteProcessGet
        text: |-
               az testbase favorite-process show --name "testAppProcess" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase favorite-process create'] = """
    type: command
    short-summary: "Create or replace a favorite process for a Test Base Package."
    examples:
      - name: FavoriteProcessCreate
        text: |-
               az testbase favorite-process create --name "testAppProcess" --package-name "contoso-package2" \
--actual-process-name "testApp&.exe" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase favorite-process delete'] = """
    type: command
    short-summary: "Deletes a favorite process for a specific package."
    examples:
      - name: FavoriteProcessDelete
        text: |-
               az testbase favorite-process delete --name "testAppProcess" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1"
"""

helps['testbase analysis-result'] = """
    type: group
    short-summary: Manage analysis result with testbase
"""

helps['testbase analysis-result list'] = """
    type: command
    short-summary: "Lists the Analysis Results of a Test Result. The result collection will only contain one element \
as all the data will be nested in a singleton object."
    examples:
      - name: CPURegressionAnalysisResultsList
        text: |-
               az testbase analysis-result list --analysis-result-type "CPURegression" --package-name \
"contoso-package2" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name \
"Windows-10-1909-Test-Id"
      - name: CPUUtilizationAnalysisResultsList
        text: |-
               az testbase analysis-result list --analysis-result-type "CPUUtilization" --package-name \
"contoso-package2" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name \
"Windows-10-1909-Test-Id"
      - name: MemoryRegressionAnalysisResultsList
        text: |-
               az testbase analysis-result list --analysis-result-type "MemoryRegression" --package-name \
"contoso-package2" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name \
"Windows-10-1909-Test-Id"
      - name: MemoryUtilizationAnalysisResultsList
        text: |-
               az testbase analysis-result list --analysis-result-type "MemoryUtilization" --package-name \
"contoso-package2" --resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name \
"Windows-10-1909-Test-Id"
"""

helps['testbase analysis-result show'] = """
    type: command
    short-summary: "Gets an Analysis Result of a Test Result by name."
    examples:
      - name: CPURegressionAnalysisResultGet
        text: |-
               az testbase analysis-result show --name "cpuRegression" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name "Windows-10-1909-Test-Id"
      - name: CPUUtilizationAnalysisResultGet
        text: |-
               az testbase analysis-result show --name "cpuUtilization" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name "Windows-10-1909-Test-Id"
      - name: MemoryRegressionAnalysisResultGet
        text: |-
               az testbase analysis-result show --name "memoryRegression" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name "Windows-10-1909-Test-Id"
      - name: MemoryUtilizationAnalysisResultGet
        text: |-
               az testbase analysis-result show --name "memoryUtilization" --package-name "contoso-package2" \
--resource-group "contoso-rg1" --account-name "contoso-testBaseAccount1" --test-result-name "Windows-10-1909-Test-Id"
"""

helps['testbase email-event'] = """
    type: group
    short-summary: Manage email event with testbase
"""

helps['testbase email-event list'] = """
    type: command
    short-summary: "Lists all the email events of a Test Base Account."
    examples:
      - name: EmailEventsList
        text: |-
               az testbase email-event list --resource-group "contoso-rg" --account-name "contoso-testBaseAccount"
"""

helps['testbase email-event show'] = """
    type: command
    short-summary: "Gets a email event of a Test Base Account."
    examples:
      - name: EmailEventGet
        text: |-
               az testbase email-event show --email-event-resource-name "weekly-summary" --resource-group "contoso-rg" \
--account-name "contoso-testBaseAccount"
"""

helps['testbase customer-event'] = """
    type: group
    short-summary: Manage customer event with testbase
"""

helps['testbase customer-event list'] = """
    type: command
    short-summary: "Lists all notification events subscribed under a Test Base Account."
    examples:
      - name: CustomerEventsList
        text: |-
               az testbase customer-event list --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase customer-event show'] = """
    type: command
    short-summary: "Gets a Test Base CustomerEvent."
    examples:
      - name: CustomerEventGet
        text: |-
               az testbase customer-event show --name "WeeklySummary" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase customer-event create'] = """
    type: command
    short-summary: "Create or replace a Test Base Customer Event."
    examples:
      - name: CustomerEventCreate
        text: |-
               az testbase customer-event create --name "WeeklySummary" --event-name "WeeklySummary" --receivers \
"[{\\"receiverType\\":\\"UserObjects\\",\\"receiverValue\\":{\\"userObjectReceiverValue\\":{\\"userObjectIds\\":[\\"245\
245245245325\\",\\"365365365363565\\"]}}},{\\"receiverType\\":\\"DistributionGroup\\",\\"receiverValue\\":{\\"distribut\
ionGroupListReceiverValue\\":{\\"distributionGroups\\":[\\"test@microsoft.com\\"]}}}]" --resource-group "contoso-rg1" \
--account-name "contoso-testBaseAccount1"
"""

helps['testbase customer-event delete'] = """
    type: command
    short-summary: "Deletes a Test Base Customer Event."
    examples:
      - name: CustomerEventDelete
        text: |-
               az testbase customer-event delete --name "WeeklySummary" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1"
"""

helps['testbase customer-event wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the testbase customer-event is met.
    examples:
      - name: Pause executing next line of CLI script until the testbase customer-event is successfully created.
        text: |-
               az testbase customer-event wait --name "WeeklySummary" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1" --created
      - name: Pause executing next line of CLI script until the testbase customer-event is successfully deleted.
        text: |-
               az testbase customer-event wait --name "WeeklySummary" --resource-group "contoso-rg1" --account-name \
"contoso-testBaseAccount1" --deleted
"""
