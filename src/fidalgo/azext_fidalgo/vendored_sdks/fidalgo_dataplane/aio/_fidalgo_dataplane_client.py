# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, Awaitable, TYPE_CHECKING

from azure.core import AsyncPipelineClient
from azure.core.rest import AsyncHttpResponse, HttpRequest
from msrest import Deserializer, Serializer

from .. import models
from ._configuration import FidalgoDataplaneClientConfiguration
from .operations import CatalogItemOperations, DeploymentsOperations, EnvironmentTypeOperations, EnvironmentsOperations, PoolOperations, ProjectOperations, VirtualMachineOperations

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

class FidalgoDataplaneClient:
    """FidalgoDataplaneClient.

    :ivar project: ProjectOperations operations
    :vartype project: azure.fidalgo.aio.operations.ProjectOperations
    :ivar pool: PoolOperations operations
    :vartype pool: azure.fidalgo.aio.operations.PoolOperations
    :ivar virtual_machine: VirtualMachineOperations operations
    :vartype virtual_machine: azure.fidalgo.aio.operations.VirtualMachineOperations
    :ivar environments: EnvironmentsOperations operations
    :vartype environments: azure.fidalgo.aio.operations.EnvironmentsOperations
    :ivar deployments: DeploymentsOperations operations
    :vartype deployments: azure.fidalgo.aio.operations.DeploymentsOperations
    :ivar catalog_item: CatalogItemOperations operations
    :vartype catalog_item: azure.fidalgo.aio.operations.CatalogItemOperations
    :ivar environment_type: EnvironmentTypeOperations operations
    :vartype environment_type: azure.fidalgo.aio.operations.EnvironmentTypeOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        **kwargs: Any
    ) -> None:
        _base_url = 'https://{devCenter}.{fidalgoDnsSuffix}'
        self._config = FidalgoDataplaneClientConfiguration(credential, **kwargs)
        self._client = AsyncPipelineClient(base_url=_base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self.project = ProjectOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pool = PoolOperations(self._client, self._config, self._serialize, self._deserialize)
        self.virtual_machine = VirtualMachineOperations(self._client, self._config, self._serialize, self._deserialize)
        self.environments = EnvironmentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.deployments = DeploymentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.catalog_item = CatalogItemOperations(self._client, self._config, self._serialize, self._deserialize)
        self.environment_type = EnvironmentTypeOperations(self._client, self._config, self._serialize, self._deserialize)


    def _send_request(
        self,
        request: HttpRequest,
        **kwargs: Any
    ) -> Awaitable[AsyncHttpResponse]:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = await client._send_request(request)
        <AsyncHttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/python/protocol/quickstart

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.AsyncHttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, **kwargs)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "FidalgoDataplaneClient":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
