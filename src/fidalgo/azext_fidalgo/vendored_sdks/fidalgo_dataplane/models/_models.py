# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class Action(msrest.serialization.Model):
    """Properties of an Action.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Action unique identifier.
    :vartype id: str
    :ivar requested_by: Identifier of the user that executed the Action.
    :vartype requested_by: str
    :ivar task_id: Identifier of the scheduled task that executed the Action.
    :vartype task_id: str
    :ivar type: The type of action to execute. Possible values include: "Custom", "Deploy",
     "Delete".
    :vartype type: str or ~azure.fidalgo.models.ActionType
    :ivar type_name: The name of the custom Action type.
    :vartype type_name: str
    :ivar created_time: Time the action was created.
    :vartype created_time: ~datetime.datetime
    :ivar started_time: Time the action started.
    :vartype started_time: ~datetime.datetime
    :ivar finished_time: Time the action finished.
    :vartype finished_time: ~datetime.datetime
    :ivar parameters: Parameters object for the Action.
    :vartype parameters: any
    :ivar output: Output from the Action execution. This is null on list operations.
    :vartype output: str
    :ivar action_state: The state of the action executiton. Possible values include: "Pending",
     "Initializing", "Processing", "Succeeded", "Canceled", "Failed".
    :vartype action_state: str or ~azure.fidalgo.models.ActionState
    :ivar exit_code: Exit code of the Action execution.
    :vartype exit_code: int
    """

    _validation = {
        'id': {'readonly': True},
        'requested_by': {'readonly': True},
        'task_id': {'readonly': True},
        'type': {'readonly': True},
        'type_name': {'readonly': True},
        'created_time': {'readonly': True},
        'started_time': {'readonly': True},
        'finished_time': {'readonly': True},
        'parameters': {'readonly': True},
        'output': {'readonly': True},
        'action_state': {'readonly': True},
        'exit_code': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'requested_by': {'key': 'requestedBy', 'type': 'str'},
        'task_id': {'key': 'taskId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'type_name': {'key': 'typeName', 'type': 'str'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'started_time': {'key': 'startedTime', 'type': 'iso-8601'},
        'finished_time': {'key': 'finishedTime', 'type': 'iso-8601'},
        'parameters': {'key': 'parameters', 'type': 'object'},
        'output': {'key': 'output', 'type': 'str'},
        'action_state': {'key': 'actionState', 'type': 'str'},
        'exit_code': {'key': 'exitCode', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Action, self).__init__(**kwargs)
        self.id = None
        self.requested_by = None
        self.task_id = None
        self.type = None
        self.type_name = None
        self.created_time = None
        self.started_time = None
        self.finished_time = None
        self.parameters = None
        self.output = None
        self.action_state = None
        self.exit_code = None


class ActionListResult(msrest.serialization.Model):
    """Results of the actions list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Action]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Action]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ActionListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class ActionRequest(msrest.serialization.Model):
    """Action request.

    All required parameters must be populated in order to send to Azure.

    :ivar action_id: Required. The Catalog Item action id to execute.
    :vartype action_id: str
    :ivar parameters: Parameters object for the Action.
    :vartype parameters: any
    """

    _validation = {
        'action_id': {'required': True},
    }

    _attribute_map = {
        'action_id': {'key': 'actionId', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword action_id: Required. The Catalog Item action id to execute.
        :paramtype action_id: str
        :keyword parameters: Parameters object for the Action.
        :paramtype parameters: any
        """
        super(ActionRequest, self).__init__(**kwargs)
        self.action_id = kwargs['action_id']
        self.parameters = kwargs.get('parameters', None)


class Artifact(msrest.serialization.Model):
    """Properties of an Artifact.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Artifact identifier.
    :vartype id: str
    :ivar name: Artifact name.
    :vartype name: str
    :ivar is_directory: Whether artifact is a directory.
    :vartype is_directory: bool
    :ivar download_uri: Uri where the file contents can be downloaded.
    :vartype download_uri: str
    :ivar file_size: Size of file in bytes, if the artifact is a file.
    :vartype file_size: float
    :ivar created_time: Time the artifact was created.
    :vartype created_time: ~datetime.datetime
    :ivar last_modified_time: Time the artifact was last modified.
    :vartype last_modified_time: ~datetime.datetime
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'is_directory': {'readonly': True},
        'download_uri': {'readonly': True},
        'file_size': {'readonly': True},
        'created_time': {'readonly': True},
        'last_modified_time': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'is_directory': {'key': 'isDirectory', 'type': 'bool'},
        'download_uri': {'key': 'downloadUri', 'type': 'str'},
        'file_size': {'key': 'fileSize', 'type': 'float'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'last_modified_time': {'key': 'lastModifiedTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Artifact, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.is_directory = None
        self.download_uri = None
        self.file_size = None
        self.created_time = None
        self.last_modified_time = None


class ArtifactListResult(msrest.serialization.Model):
    """Results of the artifact list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Artifact]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Artifact]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ArtifactListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class CatalogItem(msrest.serialization.Model):
    """A catalog item.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Unique identifier of the catalog item.
    :vartype id: str
    :ivar name: Name of the catalog item.
    :vartype name: str
    :ivar catalog_name: Name of the catalog.
    :vartype catalog_name: str
    :ivar summary: A short summary of the catalog item.
    :vartype summary: str
    :ivar description: A long description of the catalog item.
    :vartype description: str
    :ivar template_path: Path to the catalog item entrypoint file.
    :vartype template_path: str
    :ivar parameters_schema: JSON schema defining the parameters object passed to actions.
    :vartype parameters_schema: str
    :ivar parameters: Input parameters passed to actions.
    :vartype parameters: list[~azure.fidalgo.models.CatalogItemParameter]
    :ivar actions: Custom actions for the catalog item.
    :vartype actions: list[~azure.fidalgo.models.CatalogItemAction]
    :ivar runner: The default container image to use to execute actions.
    :vartype runner: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'catalog_name': {'readonly': True},
        'summary': {'readonly': True},
        'description': {'readonly': True},
        'template_path': {'readonly': True},
        'parameters_schema': {'readonly': True},
        'parameters': {'readonly': True},
        'actions': {'readonly': True},
        'runner': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'catalog_name': {'key': 'catalogName', 'type': 'str'},
        'summary': {'key': 'summary', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'template_path': {'key': 'templatePath', 'type': 'str'},
        'parameters_schema': {'key': 'parametersSchema', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': '[CatalogItemParameter]'},
        'actions': {'key': 'actions', 'type': '[CatalogItemAction]'},
        'runner': {'key': 'runner', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItem, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.catalog_name = None
        self.summary = None
        self.description = None
        self.template_path = None
        self.parameters_schema = None
        self.parameters = None
        self.actions = None
        self.runner = None


class CatalogItemAction(msrest.serialization.Model):
    """CatalogItemAction.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Unique identifier of the action.
    :vartype id: str
    :ivar name: Display name of the action.
    :vartype name: str
    :ivar description: Description of the action.
    :vartype description: str
    :ivar parameters_schema: JSON schema defining the parameters specific to the custom action.
    :vartype parameters_schema: str
    :ivar parameters: Input parameters passed to the action.
    :vartype parameters: list[~azure.fidalgo.models.CatalogItemParameter]
    :ivar type: The action type. Possible values include: "Custom", "Deploy", "Delete".
    :vartype type: str or ~azure.fidalgo.models.ActionType
    :ivar type_name: Name of the custom action type.
    :vartype type_name: str
    :ivar runner: The container image to use to execute the action.
    :vartype runner: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'description': {'readonly': True},
        'parameters_schema': {'readonly': True},
        'parameters': {'readonly': True},
        'type': {'readonly': True},
        'type_name': {'readonly': True},
        'runner': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'parameters_schema': {'key': 'parametersSchema', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': '[CatalogItemParameter]'},
        'type': {'key': 'type', 'type': 'str'},
        'type_name': {'key': 'typeName', 'type': 'str'},
        'runner': {'key': 'runner', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItemAction, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.description = None
        self.parameters_schema = None
        self.parameters = None
        self.type = None
        self.type_name = None
        self.runner = None


class CatalogItemListResult(msrest.serialization.Model):
    """Results of the catalog item list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.CatalogItem]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[CatalogItem]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItemListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class CatalogItemParameter(msrest.serialization.Model):
    """Properties of an Catalog Item parameter.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Unique ID of the parameter.
    :vartype id: str
    :ivar name: Display name of the parameter.
    :vartype name: str
    :ivar description: Description of the parameter.
    :vartype description: str
    :ivar default: Default value of the parameter.
    :vartype default: any
    :ivar type: A string of one of the basic JSON types (number, integer, null, array, object,
     boolean, string). Possible values include: "array", "boolean", "integer", "null", "number",
     "object", "string".
    :vartype type: str or ~azure.fidalgo.models.ParameterType
    :ivar read_only: Whether or not this parameter is read-only.  If true, default should have a
     value.
    :vartype read_only: bool
    :ivar required: Whether or not this parameter is required.
    :vartype required: bool
    :ivar allowed: An array of allowed values.
    :vartype allowed: list[any]
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'description': {'readonly': True},
        'default': {'readonly': True},
        'type': {'readonly': True},
        'read_only': {'readonly': True},
        'required': {'readonly': True},
        'allowed': {'readonly': True, 'min_items': 1, 'unique': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'default': {'key': 'default', 'type': 'object'},
        'type': {'key': 'type', 'type': 'str'},
        'read_only': {'key': 'readOnly', 'type': 'bool'},
        'required': {'key': 'required', 'type': 'bool'},
        'allowed': {'key': 'allowed', 'type': '[object]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItemParameter, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.description = None
        self.default = None
        self.type = None
        self.read_only = None
        self.required = None
        self.allowed = None


class CloudError(msrest.serialization.Model):
    """An error response from the Fidalgo service.

    :ivar error: Error body.
    :vartype error: ~azure.fidalgo.models.CloudErrorBody
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'CloudErrorBody'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword error: Error body.
        :paramtype error: ~azure.fidalgo.models.CloudErrorBody
        """
        super(CloudError, self).__init__(**kwargs)
        self.error = kwargs.get('error', None)


class CloudErrorBody(msrest.serialization.Model):
    """An error response from the Fidalgo service.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: str
    :ivar target: The target of the particular error. For example, the name of the property in
     error.
    :vartype target: str
    :ivar details: A list of additional details about the error.
    :vartype details: list[~azure.fidalgo.models.CloudErrorBody]
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[CloudErrorBody]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword code: An identifier for the error. Codes are invariant and are intended to be consumed
         programmatically.
        :paramtype code: str
        :keyword message: A message describing the error, intended to be suitable for display in a user
         interface.
        :paramtype message: str
        :keyword target: The target of the particular error. For example, the name of the property in
         error.
        :paramtype target: str
        :keyword details: A list of additional details about the error.
        :paramtype details: list[~azure.fidalgo.models.CloudErrorBody]
        """
        super(CloudErrorBody, self).__init__(**kwargs)
        self.code = kwargs.get('code', None)
        self.message = kwargs.get('message', None)
        self.target = kwargs.get('target', None)
        self.details = kwargs.get('details', None)


class EnvironmentUpdate(msrest.serialization.Model):
    """Properties of an environment. These properties can be updated after the resource has been created.

    :ivar description: Description of the Environment.
    :vartype description: str
    :ivar catalog_name: Name of the catalog.
    :vartype catalog_name: str
    :ivar catalog_item_name: Name of the catalog item.
    :vartype catalog_item_name: str
    :ivar parameters: Parameters object for the deploy action.
    :vartype parameters: any
    :ivar scheduled_tasks: Set of supported scheduled tasks to help manage cost.
    :vartype scheduled_tasks: dict[str, ~azure.fidalgo.models.ScheduledTask]
    :ivar tags: A set of tags. Key value pairs that will be applied to resources deployed in this
     environment as tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        'description': {'key': 'description', 'type': 'str'},
        'catalog_name': {'key': 'catalogName', 'type': 'str'},
        'catalog_item_name': {'key': 'catalogItemName', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': 'object'},
        'scheduled_tasks': {'key': 'scheduledTasks', 'type': '{ScheduledTask}'},
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword description: Description of the Environment.
        :paramtype description: str
        :keyword catalog_name: Name of the catalog.
        :paramtype catalog_name: str
        :keyword catalog_item_name: Name of the catalog item.
        :paramtype catalog_item_name: str
        :keyword parameters: Parameters object for the deploy action.
        :paramtype parameters: any
        :keyword scheduled_tasks: Set of supported scheduled tasks to help manage cost.
        :paramtype scheduled_tasks: dict[str, ~azure.fidalgo.models.ScheduledTask]
        :keyword tags: A set of tags. Key value pairs that will be applied to resources deployed in
         this environment as tags.
        :paramtype tags: dict[str, str]
        """
        super(EnvironmentUpdate, self).__init__(**kwargs)
        self.description = kwargs.get('description', None)
        self.catalog_name = kwargs.get('catalog_name', None)
        self.catalog_item_name = kwargs.get('catalog_item_name', None)
        self.parameters = kwargs.get('parameters', None)
        self.scheduled_tasks = kwargs.get('scheduled_tasks', None)
        self.tags = kwargs.get('tags', None)


class Environment(EnvironmentUpdate):
    """Properties of an environment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar description: Description of the Environment.
    :vartype description: str
    :ivar catalog_name: Name of the catalog.
    :vartype catalog_name: str
    :ivar catalog_item_name: Name of the catalog item.
    :vartype catalog_item_name: str
    :ivar parameters: Parameters object for the deploy action.
    :vartype parameters: any
    :ivar scheduled_tasks: Set of supported scheduled tasks to help manage cost.
    :vartype scheduled_tasks: dict[str, ~azure.fidalgo.models.ScheduledTask]
    :ivar tags: A set of tags. Key value pairs that will be applied to resources deployed in this
     environment as tags.
    :vartype tags: dict[str, str]
    :ivar name: Environment name.
    :vartype name: str
    :ivar environment_type: Required. Environment type.
    :vartype environment_type: str
    :ivar owner: Identifier of the owner of this Environment.
    :vartype owner: str
    :ivar provisioning_state: The provisioning state of the environment.
    :vartype provisioning_state: str
    :ivar resource_group_id: The identifier of the resource group containing the environment's
     resources.
    :vartype resource_group_id: str
    """

    _validation = {
        'name': {'readonly': True},
        'environment_type': {'required': True},
        'provisioning_state': {'readonly': True},
        'resource_group_id': {'readonly': True},
    }

    _attribute_map = {
        'description': {'key': 'description', 'type': 'str'},
        'catalog_name': {'key': 'catalogName', 'type': 'str'},
        'catalog_item_name': {'key': 'catalogItemName', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': 'object'},
        'scheduled_tasks': {'key': 'scheduledTasks', 'type': '{ScheduledTask}'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'name': {'key': 'name', 'type': 'str'},
        'environment_type': {'key': 'environmentType', 'type': 'str'},
        'owner': {'key': 'owner', 'type': 'str'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'resource_group_id': {'key': 'resourceGroupId', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword description: Description of the Environment.
        :paramtype description: str
        :keyword catalog_name: Name of the catalog.
        :paramtype catalog_name: str
        :keyword catalog_item_name: Name of the catalog item.
        :paramtype catalog_item_name: str
        :keyword parameters: Parameters object for the deploy action.
        :paramtype parameters: any
        :keyword scheduled_tasks: Set of supported scheduled tasks to help manage cost.
        :paramtype scheduled_tasks: dict[str, ~azure.fidalgo.models.ScheduledTask]
        :keyword tags: A set of tags. Key value pairs that will be applied to resources deployed in
         this environment as tags.
        :paramtype tags: dict[str, str]
        :keyword environment_type: Required. Environment type.
        :paramtype environment_type: str
        :keyword owner: Identifier of the owner of this Environment.
        :paramtype owner: str
        """
        super(Environment, self).__init__(**kwargs)
        self.name = None
        self.environment_type = kwargs['environment_type']
        self.owner = kwargs.get('owner', None)
        self.provisioning_state = None
        self.resource_group_id = None


class EnvironmentListResult(msrest.serialization.Model):
    """Results of the environment list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Environment]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Environment]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(EnvironmentListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class EnvironmentType(msrest.serialization.Model):
    """Properties of an environment type.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the environment type.
    :vartype name: str
    """

    _validation = {
        'name': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(EnvironmentType, self).__init__(**kwargs)
        self.name = None


class EnvironmentTypeListResult(msrest.serialization.Model):
    """Result of the environment type list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.EnvironmentType]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[EnvironmentType]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(EnvironmentTypeListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class HardwareProfile(msrest.serialization.Model):
    """Hardware specifications for the virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar sku_name: The name of the SKU.
    :vartype sku_name: str
    :ivar v_cp_us: The number of vCPUs available for the Virtual Machine.
    :vartype v_cp_us: int
    :ivar memory_gb: The amount of memory available for the Virtual Machine.
    :vartype memory_gb: int
    """

    _validation = {
        'sku_name': {'readonly': True},
        'v_cp_us': {'readonly': True},
        'memory_gb': {'readonly': True},
    }

    _attribute_map = {
        'sku_name': {'key': 'skuName', 'type': 'str'},
        'v_cp_us': {'key': 'vCPUs', 'type': 'int'},
        'memory_gb': {'key': 'memoryGB', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(HardwareProfile, self).__init__(**kwargs)
        self.sku_name = None
        self.v_cp_us = None
        self.memory_gb = None


class ImageReference(msrest.serialization.Model):
    """Specifies information about the image used.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the image used.
    :vartype name: str
    :ivar version: The version of the image.
    :vartype version: str
    :ivar published_date: The datetime that the backing image version was published.
    :vartype published_date: ~datetime.datetime
    """

    _validation = {
        'name': {'readonly': True},
        'version': {'readonly': True},
        'published_date': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'version': {'key': 'version', 'type': 'str'},
        'published_date': {'key': 'publishedDate', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ImageReference, self).__init__(**kwargs)
        self.name = None
        self.version = None
        self.published_date = None


class OSDisk(msrest.serialization.Model):
    """Settings for the operating system disk.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar disk_size_gb: The size of the OS Disk in gigabytes.
    :vartype disk_size_gb: int
    """

    _validation = {
        'disk_size_gb': {'readonly': True},
    }

    _attribute_map = {
        'disk_size_gb': {'key': 'diskSizeGB', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OSDisk, self).__init__(**kwargs)
        self.disk_size_gb = None


class Pool(msrest.serialization.Model):
    """A pool of DevBox Virtual Machines.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Pool name.
    :vartype name: str
    :ivar location: Azure region where virtual machines in the pool are located.
    :vartype location: str
    :ivar os_type: The operating system type of the virtual machines in this pool. Possible values
     include: "Windows".
    :vartype os_type: str or ~azure.fidalgo.models.OsType
    :ivar hardware_profile: Hardware settings for the virtual machines created in this pool.
    :vartype hardware_profile: ~azure.fidalgo.models.HardwareProfile
    :ivar storage_profile: Storage settings for virtual machine created in this pool.
    :vartype storage_profile: ~azure.fidalgo.models.StorageProfile
    :ivar image_reference: Image settings for virtual machines create in this pool.
    :vartype image_reference: ~azure.fidalgo.models.ImageReference
    """

    _validation = {
        'name': {'readonly': True},
        'location': {'readonly': True},
        'os_type': {'readonly': True},
        'hardware_profile': {'readonly': True},
        'storage_profile': {'readonly': True},
        'image_reference': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
        'hardware_profile': {'key': 'hardwareProfile', 'type': 'HardwareProfile'},
        'storage_profile': {'key': 'storageProfile', 'type': 'StorageProfile'},
        'image_reference': {'key': 'imageReference', 'type': 'ImageReference'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Pool, self).__init__(**kwargs)
        self.name = None
        self.location = None
        self.os_type = None
        self.hardware_profile = None
        self.storage_profile = None
        self.image_reference = None


class PoolListResult(msrest.serialization.Model):
    """The Pool list result.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Pool]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Pool]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(PoolListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class Project(msrest.serialization.Model):
    """Project details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the project.
    :vartype name: str
    :ivar description: Description of the project.
    :vartype description: str
    """

    _validation = {
        'name': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Project, self).__init__(**kwargs)
        self.name = None
        self.description = None


class ProjectListResult(msrest.serialization.Model):
    """Results of the project list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Project]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Project]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProjectListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class ProvisioningError(msrest.serialization.Model):
    """Error details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProvisioningError, self).__init__(**kwargs)
        self.code = None
        self.message = None


class RemoteConnection(msrest.serialization.Model):
    """Provides RDP connection information.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar web_url: URL to open a browser based RDP session.
    :vartype web_url: str
    :ivar rdp_connection_url: Link to open a Remote Desktop session.
    :vartype rdp_connection_url: str
    """

    _validation = {
        'web_url': {'readonly': True},
        'rdp_connection_url': {'readonly': True},
    }

    _attribute_map = {
        'web_url': {'key': 'webUrl', 'type': 'str'},
        'rdp_connection_url': {'key': 'rdpConnectionUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(RemoteConnection, self).__init__(**kwargs)
        self.web_url = None
        self.rdp_connection_url = None


class ScheduledTask(msrest.serialization.Model):
    """Scheduled task to auto-expire an environment.

    All required parameters must be populated in order to send to Azure.

    :ivar type: Required. Supported type this scheduled task represents. Possible values include:
     "AutoExpire".
    :vartype type: str or ~azure.fidalgo.models.ScheduledTaskType
    :ivar enabled: Indicates whether or not this scheduled task is enabled.
    :vartype enabled: bool
    :ivar start_time: Required. Date/time by which the environment should expire.
    
     The start date and time in this format:
    
     YYYY-MM-DDThh:mm:ss if you specify a time zone
    
     -or-
    
     YYYY-MM-DDThh:mm:ssZ if you don't specify a time zone.
    :vartype start_time: ~datetime.datetime
    :ivar time_zone: Time zone for the date/time by which the environment should expire.
    
     Applies only when you specify a start time because the scheduled task doesn't accept UTC
     offset.
    :vartype time_zone: str
    """

    _validation = {
        'type': {'required': True},
        'start_time': {'required': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'enabled': {'key': 'enabled', 'type': 'bool'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'time_zone': {'key': 'timeZone', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword type: Required. Supported type this scheduled task represents. Possible values
         include: "AutoExpire".
        :paramtype type: str or ~azure.fidalgo.models.ScheduledTaskType
        :keyword enabled: Indicates whether or not this scheduled task is enabled.
        :paramtype enabled: bool
        :keyword start_time: Required. Date/time by which the environment should expire.
        
         The start date and time in this format:
        
         YYYY-MM-DDThh:mm:ss if you specify a time zone
        
         -or-
        
         YYYY-MM-DDThh:mm:ssZ if you don't specify a time zone.
        :paramtype start_time: ~datetime.datetime
        :keyword time_zone: Time zone for the date/time by which the environment should expire.
        
         Applies only when you specify a start time because the scheduled task doesn't accept UTC
         offset.
        :paramtype time_zone: str
        """
        super(ScheduledTask, self).__init__(**kwargs)
        self.type = kwargs['type']
        self.enabled = kwargs.get('enabled', None)
        self.start_time = kwargs['start_time']
        self.time_zone = kwargs.get('time_zone', None)


class StorageProfile(msrest.serialization.Model):
    """Storage settings for the Virtual Machine's disks.

    :ivar os_disk: Settings for the operating system disk.
    :vartype os_disk: ~azure.fidalgo.models.OSDisk
    """

    _attribute_map = {
        'os_disk': {'key': 'osDisk', 'type': 'OSDisk'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword os_disk: Settings for the operating system disk.
        :paramtype os_disk: ~azure.fidalgo.models.OSDisk
        """
        super(StorageProfile, self).__init__(**kwargs)
        self.os_disk = kwargs.get('os_disk', None)


class VirtualMachine(msrest.serialization.Model):
    """A DevBox virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Display name for the virtual machine.
    :vartype name: str
    :ivar project_name: Name of the project this Virtual Machine belongs to.
    :vartype project_name: str
    :ivar pool_name: Required. The name of the virtual machine pool this machine belongs to.
    :vartype pool_name: str
    :ivar provisioning_state: The current provisioning state of the virtual machine.
    :vartype provisioning_state: str
    :ivar action_state: The current action state of the virtual machine. This is state is based on
     previous action performed by user.
    :vartype action_state: str
    :ivar power_state: The current power state of the virtual machine. Possible values include:
     "Unknown", "Stopped", "Running", "Hibernated".
    :vartype power_state: str or ~azure.fidalgo.models.PowerState
    :ivar error_details: Provisioning or action error details. Populated only for error states.
    :vartype error_details: ~azure.fidalgo.models.ProvisioningError
    :ivar location: Azure region where this virtual machines is located. This will be the same
     region as the Virtual Network it is attached to.
    :vartype location: str
    :ivar os_type: The operating system type of this virtual machines. Possible values include:
     "Windows".
    :vartype os_type: str or ~azure.fidalgo.models.OsType
    :ivar owner: User identifier of the user this vm is assigned to.
    :vartype owner: str
    :ivar hardware_profile: Information about the Virtual Machine's hardware resources.
    :vartype hardware_profile: ~azure.fidalgo.models.HardwareProfile
    :ivar storage_profile: Storage settings for this Virtual Machine.
    :vartype storage_profile: ~azure.fidalgo.models.StorageProfile
    :ivar image_reference: Information about the image used for this Virtual Machine.
    :vartype image_reference: ~azure.fidalgo.models.ImageReference
    :ivar created_time: Creation time of this virtual machine.
    :vartype created_time: ~datetime.datetime
    """

    _validation = {
        'name': {'readonly': True},
        'project_name': {'readonly': True},
        'pool_name': {'required': True},
        'provisioning_state': {'readonly': True},
        'action_state': {'readonly': True},
        'power_state': {'readonly': True},
        'error_details': {'readonly': True},
        'location': {'readonly': True},
        'os_type': {'readonly': True},
        'owner': {'readonly': True},
        'hardware_profile': {'readonly': True},
        'storage_profile': {'readonly': True},
        'image_reference': {'readonly': True},
        'created_time': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'project_name': {'key': 'projectName', 'type': 'str'},
        'pool_name': {'key': 'poolName', 'type': 'str'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'action_state': {'key': 'actionState', 'type': 'str'},
        'power_state': {'key': 'powerState', 'type': 'str'},
        'error_details': {'key': 'errorDetails', 'type': 'ProvisioningError'},
        'location': {'key': 'location', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
        'owner': {'key': 'owner', 'type': 'str'},
        'hardware_profile': {'key': 'hardwareProfile', 'type': 'HardwareProfile'},
        'storage_profile': {'key': 'storageProfile', 'type': 'StorageProfile'},
        'image_reference': {'key': 'imageReference', 'type': 'ImageReference'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword pool_name: Required. The name of the virtual machine pool this machine belongs to.
        :paramtype pool_name: str
        """
        super(VirtualMachine, self).__init__(**kwargs)
        self.name = None
        self.project_name = None
        self.pool_name = kwargs['pool_name']
        self.provisioning_state = None
        self.action_state = None
        self.power_state = None
        self.error_details = None
        self.location = None
        self.os_type = None
        self.owner = None
        self.hardware_profile = None
        self.storage_profile = None
        self.image_reference = None
        self.created_time = None


class VirtualMachineListResult(msrest.serialization.Model):
    """The virtual machine list result.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of DevBox virtual machines.
    :vartype value: list[~azure.fidalgo.models.VirtualMachine]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[VirtualMachine]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(VirtualMachineListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None
