# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Dict, List, Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class Assignment(msrest.serialization.Model):
    """An assignment request.

    :ivar new_owner: Identifier of new owner.
    :vartype new_owner: str
    """

    _attribute_map = {
        'new_owner': {'key': 'newOwner', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        new_owner: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword new_owner: Identifier of new owner.
        :paramtype new_owner: str
        """
        super(Assignment, self).__init__(**kwargs)
        self.new_owner = new_owner


class CatalogItem(msrest.serialization.Model):
    """A catalog item.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the catalog item.
    :vartype name: str
    :ivar description: Description of the catalog item.
    :vartype description: str
    :ivar engine: The catalog item engine.
    :vartype engine: ~azure.fidalgo.models.CatalogItemEngineProperties
    """

    _validation = {
        'name': {'readonly': True},
        'description': {'readonly': True},
        'engine': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'engine': {'key': 'engine', 'type': 'CatalogItemEngineProperties'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItem, self).__init__(**kwargs)
        self.name = None
        self.description = None
        self.engine = None


class CatalogItemEngineProperties(msrest.serialization.Model):
    """Properties of a catalog item engine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The type of catalog item used to deploy the environment. Possible values include:
     "ARM".
    :vartype type: str or ~azure.fidalgo.models.CatalogItemType
    :ivar template_path: Path to the catalog item entrypoint file.
    :vartype template_path: str
    :ivar parameters: Parameters that can be provided to the catalog item.
    :vartype parameters: list[~azure.fidalgo.models.CatalogItemParameterProperties]
    """

    _validation = {
        'type': {'readonly': True},
        'template_path': {'readonly': True},
        'parameters': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'template_path': {'key': 'templatePath', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': '[CatalogItemParameterProperties]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItemEngineProperties, self).__init__(**kwargs)
        self.type = None
        self.template_path = None
        self.parameters = None


class CatalogItemListResult(msrest.serialization.Model):
    """Results of the catalog item list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.CatalogItem]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[CatalogItem]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItemListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class CatalogItemParameterProperties(msrest.serialization.Model):
    """Properties of a catalog item parameter.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the parameter.
    :vartype name: str
    :ivar type: The type accepted for the parameter value.
    :vartype type: str
    :ivar description: Description of the parameter.
    :vartype description: str
    """

    _validation = {
        'name': {'readonly': True},
        'type': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CatalogItemParameterProperties, self).__init__(**kwargs)
        self.name = None
        self.type = None
        self.description = None


class CloudError(msrest.serialization.Model):
    """An error response from the Fidalgo service.

    :ivar error: Error body.
    :vartype error: ~azure.fidalgo.models.CloudErrorBody
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'CloudErrorBody'},
    }

    def __init__(
        self,
        *,
        error: Optional["CloudErrorBody"] = None,
        **kwargs
    ):
        """
        :keyword error: Error body.
        :paramtype error: ~azure.fidalgo.models.CloudErrorBody
        """
        super(CloudError, self).__init__(**kwargs)
        self.error = error


class CloudErrorBody(msrest.serialization.Model):
    """An error response from the Fidalgo service.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: str
    :ivar target: The target of the particular error. For example, the name of the property in
     error.
    :vartype target: str
    :ivar details: A list of additional details about the error.
    :vartype details: list[~azure.fidalgo.models.CloudErrorBody]
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[CloudErrorBody]'},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        target: Optional[str] = None,
        details: Optional[List["CloudErrorBody"]] = None,
        **kwargs
    ):
        """
        :keyword code: An identifier for the error. Codes are invariant and are intended to be consumed
         programmatically.
        :paramtype code: str
        :keyword message: A message describing the error, intended to be suitable for display in a user
         interface.
        :paramtype message: str
        :keyword target: The target of the particular error. For example, the name of the property in
         error.
        :paramtype target: str
        :keyword details: A list of additional details about the error.
        :paramtype details: list[~azure.fidalgo.models.CloudErrorBody]
        """
        super(CloudErrorBody, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details


class Deployment(msrest.serialization.Model):
    """Details of a specific deployment of an environment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: Current provisioning state of the deployment.
    :vartype provisioning_state: str
    :ivar logs: Deployment logs.
    :vartype logs: str
    :ivar parameters: Deployment parameters passed to the catalog item.
    :vartype parameters: any
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'logs': {'readonly': True},
        'parameters': {'readonly': True},
    }

    _attribute_map = {
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'logs': {'key': 'logs', 'type': 'str'},
        'parameters': {'key': 'parameters', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Deployment, self).__init__(**kwargs)
        self.provisioning_state = None
        self.logs = None
        self.parameters = None


class DeploymentHistoryResult(msrest.serialization.Model):
    """Results of the get deployment history operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Recent deployment history.
    :vartype value: list[~azure.fidalgo.models.Deployment]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Deployment]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(DeploymentHistoryResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class EnvironmentUpdate(msrest.serialization.Model):
    """Properties of an environment. These properties can be updated after the resource has been created.

    :ivar description: Description of the Environment.
    :vartype description: str
    :ivar catalog_item_name: Name of the catalog item.
    :vartype catalog_item_name: str
    :ivar deployment_parameters: Deployment parameters passed to catalog item.
    :vartype deployment_parameters: any
    """

    _attribute_map = {
        'description': {'key': 'description', 'type': 'str'},
        'catalog_item_name': {'key': 'catalogItemName', 'type': 'str'},
        'deployment_parameters': {'key': 'deploymentParameters', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        catalog_item_name: Optional[str] = None,
        deployment_parameters: Optional[Any] = None,
        **kwargs
    ):
        """
        :keyword description: Description of the Environment.
        :paramtype description: str
        :keyword catalog_item_name: Name of the catalog item.
        :paramtype catalog_item_name: str
        :keyword deployment_parameters: Deployment parameters passed to catalog item.
        :paramtype deployment_parameters: any
        """
        super(EnvironmentUpdate, self).__init__(**kwargs)
        self.description = description
        self.catalog_item_name = catalog_item_name
        self.deployment_parameters = deployment_parameters


class Environment(EnvironmentUpdate):
    """Properties of an environment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar description: Description of the Environment.
    :vartype description: str
    :ivar catalog_item_name: Name of the catalog item.
    :vartype catalog_item_name: str
    :ivar deployment_parameters: Deployment parameters passed to catalog item.
    :vartype deployment_parameters: any
    :ivar name: Environment name.
    :vartype name: str
    :ivar environment_type: Required. Environment type.
    :vartype environment_type: str
    :ivar owner: Identifier of the owner of this Environment.
    :vartype owner: str
    :ivar provisioning_state: The provisioning state of the environment.
    :vartype provisioning_state: str
    :ivar resource_group_id: The identifier of the resource group containing the environment's
     resources.
    :vartype resource_group_id: str
    :ivar outputs: Outputs from the deployment.
    :vartype outputs: any
    :ivar tags: A set of tags. Key value pairs that will be applied to resources deployed in this
     environment as tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        'name': {'readonly': True},
        'environment_type': {'required': True},
        'provisioning_state': {'readonly': True},
        'resource_group_id': {'readonly': True},
        'outputs': {'readonly': True},
    }

    _attribute_map = {
        'description': {'key': 'description', 'type': 'str'},
        'catalog_item_name': {'key': 'catalogItemName', 'type': 'str'},
        'deployment_parameters': {'key': 'deploymentParameters', 'type': 'object'},
        'name': {'key': 'name', 'type': 'str'},
        'environment_type': {'key': 'environmentType', 'type': 'str'},
        'owner': {'key': 'owner', 'type': 'str'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'resource_group_id': {'key': 'resourceGroupId', 'type': 'str'},
        'outputs': {'key': 'outputs', 'type': 'object'},
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        *,
        environment_type: str,
        description: Optional[str] = None,
        catalog_item_name: Optional[str] = None,
        deployment_parameters: Optional[Any] = None,
        owner: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        """
        :keyword description: Description of the Environment.
        :paramtype description: str
        :keyword catalog_item_name: Name of the catalog item.
        :paramtype catalog_item_name: str
        :keyword deployment_parameters: Deployment parameters passed to catalog item.
        :paramtype deployment_parameters: any
        :keyword environment_type: Required. Environment type.
        :paramtype environment_type: str
        :keyword owner: Identifier of the owner of this Environment.
        :paramtype owner: str
        :keyword tags: A set of tags. Key value pairs that will be applied to resources deployed in
         this environment as tags.
        :paramtype tags: dict[str, str]
        """
        super(Environment, self).__init__(description=description, catalog_item_name=catalog_item_name, deployment_parameters=deployment_parameters, **kwargs)
        self.name = None
        self.environment_type = environment_type
        self.owner = owner
        self.provisioning_state = None
        self.resource_group_id = None
        self.outputs = None
        self.tags = tags


class EnvironmentDeploy(msrest.serialization.Model):
    """Environment deploymentment request.

    :ivar parameters: Deployment parameters.
    :vartype parameters: any
    """

    _attribute_map = {
        'parameters': {'key': 'parameters', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        parameters: Optional[Any] = None,
        **kwargs
    ):
        """
        :keyword parameters: Deployment parameters.
        :paramtype parameters: any
        """
        super(EnvironmentDeploy, self).__init__(**kwargs)
        self.parameters = parameters


class EnvironmentListResult(msrest.serialization.Model):
    """Results of the environment list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Environment]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Environment]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(EnvironmentListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class EnvironmentType(msrest.serialization.Model):
    """Properties of an environment type.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the environment type.
    :vartype name: str
    """

    _validation = {
        'name': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(EnvironmentType, self).__init__(**kwargs)
        self.name = None


class EnvironmentTypeListResult(msrest.serialization.Model):
    """Result of the environment type list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.EnvironmentType]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[EnvironmentType]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(EnvironmentTypeListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class Pool(msrest.serialization.Model):
    """A pool of DevBox Virtual Machines.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Pool name.
    :vartype name: str
    :ivar location: Azure region where virtual machines in the pool are located.
    :vartype location: str
    :ivar os_type: The operating system type of the virtual machines in this pool. Possible values
     include: "Windows".
    :vartype os_type: str or ~azure.fidalgo.models.OsType
    """

    _validation = {
        'name': {'readonly': True},
        'location': {'readonly': True},
        'os_type': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Pool, self).__init__(**kwargs)
        self.name = None
        self.location = None
        self.os_type = None


class PoolListResult(msrest.serialization.Model):
    """The Pool list result.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Pool]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Pool]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(PoolListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class Project(msrest.serialization.Model):
    """Project details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the project.
    :vartype name: str
    :ivar description: Description of the project.
    :vartype description: str
    """

    _validation = {
        'name': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Project, self).__init__(**kwargs)
        self.name = None
        self.description = None


class ProjectListResult(msrest.serialization.Model):
    """Results of the project list operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Current page of results.
    :vartype value: list[~azure.fidalgo.models.Project]
    :ivar next_link: URL to get the next set of results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Project]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProjectListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class ProvisioningError(msrest.serialization.Model):
    """Error details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProvisioningError, self).__init__(**kwargs)
        self.code = None
        self.message = None


class RdpConnection(msrest.serialization.Model):
    """Represents the content of a .rdp file.

    :ivar contents: The contents of the .rdp file.
    :vartype contents: str
    """

    _attribute_map = {
        'contents': {'key': 'contents', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        contents: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword contents: The contents of the .rdp file.
        :paramtype contents: str
        """
        super(RdpConnection, self).__init__(**kwargs)
        self.contents = contents


class VirtualMachine(msrest.serialization.Model):
    """A DevBox virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Display name for the virtual machine.
    :vartype name: str
    :ivar pool_name: Required. The name of the virtual machine pool this machine belongs to.
    :vartype pool_name: str
    :ivar provisioning_state: The current provisioning state of the virtual machine.
    :vartype provisioning_state: str
    :ivar provisioning_error: Provisioning error details for last provisioning state. Populated
     only for error states.
    :vartype provisioning_error: ~azure.fidalgo.models.ProvisioningError
    :ivar location: Azure region where this virtual machines is located. This will be the same
     region as the Virtual Network it is attached to.
    :vartype location: str
    :ivar os_type: The operating system type of this virtual machines. Possible values include:
     "Windows".
    :vartype os_type: str or ~azure.fidalgo.models.OsType
    :ivar owner: User identifier of the user this vm is assigned to.
    :vartype owner: str
    """

    _validation = {
        'name': {'readonly': True},
        'pool_name': {'required': True},
        'provisioning_state': {'readonly': True},
        'provisioning_error': {'readonly': True},
        'location': {'readonly': True},
        'os_type': {'readonly': True},
        'owner': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'pool_name': {'key': 'poolName', 'type': 'str'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'provisioning_error': {'key': 'provisioningError', 'type': 'ProvisioningError'},
        'location': {'key': 'location', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
        'owner': {'key': 'owner', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        pool_name: str,
        **kwargs
    ):
        """
        :keyword pool_name: Required. The name of the virtual machine pool this machine belongs to.
        :paramtype pool_name: str
        """
        super(VirtualMachine, self).__init__(**kwargs)
        self.name = None
        self.pool_name = pool_name
        self.provisioning_state = None
        self.provisioning_error = None
        self.location = None
        self.os_type = None
        self.owner = None


class VirtualMachineListResult(msrest.serialization.Model):
    """The virtual machine list result.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of DevBox virtual machines.
    :vartype value: list[~azure.fidalgo.models.VirtualMachine]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[VirtualMachine]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(VirtualMachineListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None
