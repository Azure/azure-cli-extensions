# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /HostPools/put/HostPool_Create
@try_manual
def step_hostpool_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool create '
             '--location "centralus" '
             '--description "des1" '
             '--friendly-name "friendly" '
             '--host-pool-type "Pooled" '
             '--load-balancer-type "BreadthFirst" '
             '--max-session-limit 999999 '
             '--personal-desktop-assignment-type "Automatic" '
             '--preferred-app-group-type "Desktop" '
             '--registration-info expiration-time="2022-03-26T05:38:08.189Z" registration-token-operation="Update" '
             '--sso-client-id "client" '
             '--sso-client-secret-key-vault-path "https://keyvault/secret" '
             '--sso-secret-type "SharedKey" '
             '--start-vm-on-connect false '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myHostPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /HostPools/get/HostPool_Get
@try_manual
def step_hostpool_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool show '
             '--name "{myHostPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /HostPools/get/HostPool_List
@try_manual
def step_hostpool_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool list '
             '-g ""',
             checks=checks)


# EXAMPLE: /HostPools/get/HostPool_ListByResourceGroup
@try_manual
def step_hostpool_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /HostPools/patch/HostPool_Update
@try_manual
def step_hostpool_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool update '
             '--description "des1" '
             '--friendly-name "friendly" '
             '--load-balancer-type "BreadthFirst" '
             '--max-session-limit 999999 '
             '--personal-desktop-assignment-type "Automatic" '
             '--registration-info expiration-time="2022-03-26T05:38:08.190Z" registration-token-operation="Update" '
             '--sso-client-id "client" '
             '--sso-client-secret-key-vault-path "https://keyvault/secret" '
             '--sso-secret-type "SharedKey" '
             '--start-vm-on-connect false '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myHostPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /HostPools/post/HostPools_RetrieveRegistrationToken_Post
@try_manual
def step_hostpool_retrieve_registration_token(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool retrieve-registration-token '
             '--name "{myHostPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApplicationGroups/put/ApplicationGroup_Create
@try_manual
def step_applicationgroup_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization applicationgroup create '
             '--location "centralus" '
             '--description "des1" '
             '--application-group-type "RemoteApp" '
             '--friendly-name "friendly" '
             '--host-pool-arm-path "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DesktopVir'
             'tualization/hostPools/{myHostPool}" '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myApplicationGroup}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApplicationGroups/get/ApplicationGroup_Get
@try_manual
def step_applicationgroup_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization applicationgroup show '
             '--name "{myApplicationGroup}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApplicationGroups/get/ApplicationGroup_List
@try_manual
def step_applicationgroup_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization applicationgroup list '
             '--filter "applicationGroupType eq \'RailApplication\'" '
             '-g ""',
             checks=checks)


# EXAMPLE: /ApplicationGroups/get/ApplicationGroup_ListByResourceGroup
@try_manual
def step_applicationgroup_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization applicationgroup list '
             '--filter "applicationGroupType eq \'RailApplication\'" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApplicationGroups/patch/ApplicationGroups_Update
@try_manual
def step_applicationgroup_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization applicationgroup update '
             '--description "des1" '
             '--friendly-name "friendly" '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myApplicationGroup}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ApplicationGroups/delete/ApplicationGroup_Delete
@try_manual
def step_applicationgroup_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization applicationgroup delete '
             '--name "{myApplicationGroup}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /HostPools/delete/HostPool_Delete
@try_manual
def step_hostpool_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization hostpool delete '
             '--force true '
             '--name "{myHostPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Workspaces/put/Workspace_Create
@try_manual
def step_workspace_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization workspace create '
             '--resource-group "{rg}" '
             '--location "centralus" '
             '--description "des1" '
             '--friendly-name "friendly" '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myWorkspace}"',
             checks=checks)


# EXAMPLE: /Workspaces/get/Workspace_Get
@try_manual
def step_workspace_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization workspace show '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=checks)


# EXAMPLE: /Workspaces/get/Workspace_ListByResourceGroup
@try_manual
def step_workspace_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization workspace list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Workspaces/get/Workspace_ListBySubscription
@try_manual
def step_workspace_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization workspace list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Workspaces/patch/Workspace_Update
@try_manual
def step_workspace_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization workspace update '
             '--resource-group "{rg}" '
             '--description "des1" '
             '--friendly-name "friendly" '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myWorkspace}"',
             checks=checks)


# EXAMPLE: /Workspaces/delete/Workspace_Delete
@try_manual
def step_workspace_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az desktopvirtualization workspace delete '
             '--resource-group "{rg}" '
             '--name "{myWorkspace}"',
             checks=checks)
