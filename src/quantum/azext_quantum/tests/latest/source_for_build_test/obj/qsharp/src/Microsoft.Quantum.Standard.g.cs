//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.AmplitudeAmplification\",\"Name\":\"ReflectionPhases\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Phases for a sequence of partial reflections in amplitude amplification.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Both arrays must be of equal length. Note that in many cases, the first phase about the start state and last phase about the target state introduces a global phase shift and may be set to $0$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"AboutStart\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array of phases for reflection about the\\rstart state.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"AboutTarget\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array of phases for reflection\\rabout the target state.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\AmplitudeAmplification\\\\Types.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":25}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"AboutStart\",\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":19}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"AboutTarget\",\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":20}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Phases for a sequence of partial reflections in amplitude amplification.\",\"\",\" # Named Items\",\" ## AboutStart\",\" An array of phases for reflection about the\",\" start state.\",\" ## AboutTarget\",\" An array of phases for reflection\",\" about the target state.\",\"\",\" # Remarks\",\" Both arrays must be of equal length. Note that in many cases, the first phase about the start state and last phase about the target state introduces a global phase shift and may be set to $0$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.AmplitudeAmplification\",\"Name\":\"RotationPhases\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Phases for a sequence of single-qubit rotations in amplitude amplification.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The first parameter is an array of phases for reflections, expressed as a product of single-qubit rotations.\\r[ G.H. Low, I. L. Chuang, https://arxiv.org/abs/1707.05391].\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\AmplitudeAmplification\\\\Types.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":23}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Phases for a sequence of single-qubit rotations in amplitude amplification.\",\"\",\" # Remarks\",\" The first parameter is an array of phases for reflections, expressed as a product of single-qubit rotations.\",\" [ G.H. Low, I. L. Chuang, https://arxiv.org/abs/1707.05391].\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Register that encodes an unsigned integer in little-endian order. The\\rqubit with index `0` encodes the lowest bit of an unsigned integer.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"We abbreviate `LittleEndian` as `LE` in the documentation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Arithmetic\\\\Types.qs\",\"Position\":{\"Item1\":11,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":21}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Register that encodes an unsigned integer in little-endian order. The\",\" qubit with index `0` encodes the lowest bit of an unsigned integer.\",\"\",\" # Remarks\",\" We abbreviate `LittleEndian` as `LE` in the documentation.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Register that encodes an unsigned integer in big-endian order. The\\rqubit with index `0` encodes the highest bit of an unsigned integer.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"We abbreviate `BigEndian` as `BE` in the documentation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Arithmetic\\\\Types.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":18}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Register that encodes an unsigned integer in big-endian order. The\",\" qubit with index `0` encodes the highest bit of an unsigned integer.\",\"\",\" # Remarks\",\" We abbreviate `BigEndian` as `BE` in the documentation.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"PhaseLittleEndian\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Little-endian unsigned integers in QFT basis.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"If $\\\\ket{x}$ is the little-endian encoding of the integer\\r$x$ in the computational basis,\\rthen $\\\\operatorname{QFTLE} \\\\ket{x}$ is the encoding of $x$ in the QFT\\rbasis.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"We abbreviate `PhaseLittleEndian` as `PhaseLE` in the documentation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Canon.QFT\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Canon.QFTLE\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Arithmetic\\\\Types.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":26}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Little-endian unsigned integers in QFT basis.\",\"\",\" # Description\",\" If $\\\\ket{x}$ is the little-endian encoding of the integer\",\" $x$ in the computational basis,\",\" then $\\\\operatorname{QFTLE} \\\\ket{x}$ is the encoding of $x$ in the QFT\",\" basis.\",\"\",\" # Remarks\",\" We abbreviate `PhaseLittleEndian` as `PhaseLE` in the documentation.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Canon.QFT\",\" - Microsoft.Quantum.Canon.QFTLE\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Arrays\",\"Name\":\"_a3fdc4c0bd3849478e4565ddce7e593d_ForEach\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Given an array and an operation that is defined\\rfor the elements of the array, returns a new array that consists\\rof the images of the original array under the operation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The operation is defined for generic types, i.e., whenever we have\\ran array `'T[]` and an operation `action : 'T -> 'U` we can map the elements\\rof the array and produce a new array of type `'U[]`.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Arrays.Mapped\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"action\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An operation from `'T` to `'U` that is applied to each element.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"array\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array of elements over `'T`.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Output\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array `'U[]` of elements that are mapped by the `action` operation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"TypeParameter\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"'T\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The type of `array` elements.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"TypeParameter\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"'U\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The result type of the `action` operation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"Internal\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Arrays\\\\Map.qs\",\"Position\":{\"Item1\":230,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"action\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"Qubit\"},\"Item2\":{\"Case\":\"Result\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":34}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"array\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":54}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"Qubit\"},\"Item2\":{\"Case\":\"Result\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Given an array and an operation that is defined\",\" for the elements of the array, returns a new array that consists\",\" of the images of the original array under the operation.\",\"\",\" # Remarks\",\" The operation is defined for generic types, i.e., whenever we have\",\" an array `'T[]` and an operation `action : 'T -> 'U` we can map the elements\",\" of the array and produce a new array of type `'U[]`.\",\"\",\" # Type Parameters\",\" ## 'T\",\" The type of `array` elements.\",\" ## 'U\",\" The result type of the `action` operation.\",\"\",\" # Input\",\" ## action\",\" An operation from `'T` to `'U` that is applied to each element.\",\" ## array\",\" An array of elements over `'T`.\",\"\",\" # Output\",\" An array `'U[]` of elements that are mapped by the `action` operation.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Arrays.Mapped\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Arrays\",\"Name\":\"_a3fdc4c0bd3849478e4565ddce7e593d_ForEach\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Arrays\\\\Map.qs\",\"Position\":{\"Item1\":230,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Canon\",\"Name\":\"CCNOTop\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The signature type of CCNOT gate.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Canon\\\\Combinators\\\\ApplyMultiControlled.qs\",\"Position\":{\"Item1\":13,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":16}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Apply\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":20},\"Item2\":{\"Line\":1,\"Column\":25}}}]}]}]]},\"Documentation\":[\" # Summary\",\" The signature type of CCNOT gate.\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Canon\",\"Name\":\"_03bc932f434c4a06b38d83801c20968f_ApplyToEach\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Applies a single-qubit operation to each element in a register.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Canon.ApplyToEachC\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Canon.ApplyToEachA\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Canon.ApplyToEachCA\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Prepare a three-qubit $\\\\ket{+}$ state:\\r\\r```qsharp\\rusing (register = Qubit[3]) {\\r    ApplyToEach(H, register);\\r}\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"singleElementOperation\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Operation to apply to each qubit.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"register\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Array of qubits on which to apply the given operation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"TypeParameter\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"'T\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The target on which the operation acts.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"Internal\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Canon\\\\Combinators\\\\ApplyToEach.qs\",\"Position\":{\"Item1\":128,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"singleElementOperation\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"Qubit\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":50}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":67},\"Item2\":{\"Line\":1,\"Column\":75}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"Qubit\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Applies a single-qubit operation to each element in a register.\",\"\",\" # Input\",\" ## singleElementOperation\",\" Operation to apply to each qubit.\",\" ## register\",\" Array of qubits on which to apply the given operation.\",\"\",\" # Type Parameters\",\" ## 'T\",\" The target on which the operation acts.\",\"\",\" # Example\",\" Prepare a three-qubit $\\\\ket{+}$ state:\",\" ```qsharp\",\" using (register = Qubit[3]) {\",\"     ApplyToEach(H, register);\",\" }\",\" ```\",\"\",\" # See Also\",\" - Microsoft.Quantum.Canon.ApplyToEachC\",\" - Microsoft.Quantum.Canon.ApplyToEachA\",\" - Microsoft.Quantum.Canon.ApplyToEachCA\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Canon\",\"Name\":\"_03bc932f434c4a06b38d83801c20968f_ApplyToEach\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Canon\\\\Combinators\\\\ApplyToEach.qs\",\"Position\":{\"Item1\":128,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Type for register of physical qubits `Qubit[]` that encode the\\rlogical qubits.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":24}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Type for register of physical qubits `Qubit[]` that encode the\",\" logical qubits.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"Syndrome\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Type for measurement results `Result[]` that specify an error syndrome\\rof a quantum code.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":13,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":17}},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Type for measurement results `Result[]` that specify an error syndrome\",\" of a quantum code.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"RecoveryFn\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Type for function that maps an error syndrome to a sequence of `Pauli[]`\\roperations that correct the detected error.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":19}},\"Type\":{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"Syndrome\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Pauli\"}]}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"Syndrome\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Pauli\"}]}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Type for function that maps an error syndrome to a sequence of `Pauli[]`\",\" operations that correct the detected error.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"EncodeOp\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an operation which encodes a physical register into a\\rlogical register, using the provided scratch qubits.\\r\\rThe first argument is taken to be the physical register that will\\rbe encoded, while the second argument is taken to be the scratch\\rregister that will be used.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":17}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\",\"Range\":{\"Case\":\"Null\"}}]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\",\"Range\":{\"Case\":\"Null\"}}]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an operation which encodes a physical register into a\",\" logical register, using the provided scratch qubits.\",\"\",\" The first argument is taken to be the physical register that will\",\" be encoded, while the second argument is taken to be the scratch\",\" register that will be used.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"DecodeOp\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an operation which decodes an encoded register into a\\rphysical register and the scratch qubits used to record a syndrome.\\r\\rThe argument to a DecodeOp is the same as the return from an\\rEncodeOp, and vice versa.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":41,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":17}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\",\"Range\":{\"Case\":\"Null\"}}]},\"Item2\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\",\"Range\":{\"Case\":\"Null\"}}]},\"Item2\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an operation which decodes an encoded register into a\",\" physical register and the scratch qubits used to record a syndrome.\",\"\",\" The argument to a DecodeOp is the same as the return from an\",\" EncodeOp, and vice versa.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an operation that is used to measure the syndrome\\rof an error-correcting code block.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The signature `(LogicalRegister => Syndrome)` represents an operation\\rthat acts jointly on the qubits in `LogicalRegister` and some auxiliary\\rqubits followed by a measurements of the auxiliary qubits to extract a\\r`Syndrome` value representing the `Result[]` of these measurements.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.ErrorCorrection.LogicalRegister\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.ErrorCorrection.Syndrome\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Measure syndromes for the bit-flip code\\r$S = \\\\langle ZZI, IZZ \\\\rangle$ using scratch qubits in a\\rnon–fault tolerant manner:\\r\\r```qsharp\\r    let syndMeasOp = SyndromeMeasOp(MeasureStabilizerGenerators([\\r            [PauliZ, PauliZ, PauliI],\\r            [PauliI, PauliZ, PauliZ]\\r        ], _, MeasureWithScratch));\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":67,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":23}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\",\"Range\":{\"Case\":\"Null\"}}]},\"Item2\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"Syndrome\",\"Range\":{\"Case\":\"Null\"}}]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"LogicalRegister\",\"Range\":{\"Case\":\"Null\"}}]},\"Item2\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"Syndrome\",\"Range\":{\"Case\":\"Null\"}}]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an operation that is used to measure the syndrome\",\" of an error-correcting code block.\",\"\",\" # Remarks\",\" The signature `(LogicalRegister => Syndrome)` represents an operation\",\" that acts jointly on the qubits in `LogicalRegister` and some auxiliary\",\" qubits followed by a measurements of the auxiliary qubits to extract a\",\" `Syndrome` value representing the `Result[]` of these measurements.\",\"\",\" # Example\",\" Measure syndromes for the bit-flip code\",\" $S = \\\\langle ZZI, IZZ \\\\rangle$ using scratch qubits in a\",\" non–fault tolerant manner:\",\" ```qsharp\",\"     let syndMeasOp = SyndromeMeasOp(MeasureStabilizerGenerators([\",\"             [PauliZ, PauliZ, PauliI],\",\"             [PauliI, PauliZ, PauliZ]\",\"         ], _, MeasureWithScratch));\",\" ```\",\"\",\" # See Also\",\" - Microsoft.Quantum.ErrorCorrection.LogicalRegister\",\" - Microsoft.Quantum.ErrorCorrection.Syndrome\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"QECC\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an error-correcting code as defined by its encoder,\\rdecoder, and syndrome measurement procedure.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":72,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":13}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"EncodeOp\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"DecodeOp\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\",\"Range\":{\"Case\":\"Null\"}}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"EncodeOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"DecodeOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an error-correcting code as defined by its encoder,\",\" decoder, and syndrome measurement procedure.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"CSS\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a Calderbank–Shor–Steane (CSS) code as defined by\\rits encoder, decoder, and its syndrome measurement procedures\\rfor `X` and `Z` errors, respectively.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\ErrorCorrection\\\\Types.qs\",\"Position\":{\"Item1\":78,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":12}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"EncodeOp\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"DecodeOp\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\",\"Range\":{\"Case\":\"Null\"}}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"EncodeOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"DecodeOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.ErrorCorrection\",\"Name\":\"SyndromeMeasOp\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a Calderbank–Shor–Steane (CSS) code as defined by\",\" its encoder, decoder, and its syndrome measurement procedures\",\" for `X` and `Z` errors, respectively.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"Fraction\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a rational number of the form `p/q`. Integer `p` is\\rthe first element of the tuple and `q` is the second element\\rof the tuple.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Numerator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Numerator of the fraction.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Denominator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Denominator of the fraction/\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Math\\\\Types.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":17}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Numerator\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Denominator\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":20}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a rational number of the form `p/q`. Integer `p` is\",\" the first element of the tuple and `q` is the second element\",\" of the tuple.\",\"\",\" # Named Items\",\" ## Numerator\",\" Numerator of the fraction.\",\" ## Denominator\",\" Denominator of the fraction/\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"ComplexPolar\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a complex number in polar form.\\r\\rThe polar representation of a complex number is $c=r e^{i t}$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Magnitude\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The absolute value $r \\\\ge 0$ of $c$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Argument\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The phase $t \\\\in \\\\mathbb R$ of $c$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Math\\\\Complex.qs\",\"Position\":{\"Item1\":15,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":21}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"Double\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Magnitude\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":25},\"Item2\":{\"Line\":1,\"Column\":34}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Argument\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":52}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a complex number in polar form.\",\"\",\" The polar representation of a complex number is $c=r e^{i t}$.\",\"\",\" # Named Items\",\" ## Magnitude\",\" The absolute value $r \\\\ge 0$ of $c$.\",\" ## Argument\",\" The phase $t \\\\in \\\\mathbb R$ of $c$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"BigFraction\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a rational number of the form `p/q`. Integer `p` is\\rthe first element of the tuple and `q` is the second element\\rof the tuple.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Numerator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Numerator of the fraction.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Denominator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Denominator of the fraction/\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Math\\\\Types.qs\",\"Position\":{\"Item1\":27,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":20}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"BigInt\"},{\"Case\":\"BigInt\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Numerator\",\"Type\":{\"Case\":\"BigInt\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":18}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Denominator\",\"Type\":{\"Case\":\"BigInt\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":20}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a rational number of the form `p/q`. Integer `p` is\",\" the first element of the tuple and `q` is the second element\",\" of the tuple.\",\"\",\" # Named Items\",\" ## Numerator\",\" Numerator of the fraction.\",\" ## Denominator\",\" Denominator of the fraction/\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Measurement\",\"Name\":\"MultiM\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Measures each qubit in a given array in the standard basis.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This operation does not reset the measured qubits to the |0⟩ state,\\rleaving them in the state that corresponds to the measurement results.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"targets\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array of qubits to be measured.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Output\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array of measurement results.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Measurement\\\\Registers.qs\",\"Position\":{\"Item1\":73,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"targets\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":26}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Measures each qubit in a given array in the standard basis.\",\" # Input\",\" ## targets\",\" An array of qubits to be measured.\",\" # Output\",\" An array of measurement results.\",\"\",\" # Remarks\",\" This operation does not reset the measured qubits to the |0⟩ state,\",\" leaving them in the state that corresponds to the measurement results.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Measurement\",\"Name\":\"MultiM\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Measurement\\\\Registers.qs\",\"Position\":{\"Item1\":73,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Optimization\",\"Name\":\"UnivariateOptimizationResult\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents the result of optimizing a univariate function.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Coordinate\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Input at which an optimum was found.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Value\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Value returned by the function at its optimum.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"NQueries\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The amount of times the function was called.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Optimization\\\\Univariate.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":37}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"Double\"},{\"Case\":\"Int\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Coordinate\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":19}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Value\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":14}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"NQueries\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":17}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents the result of optimizing a univariate function.\",\"\",\" # Named Items\",\" ## Coordinate\",\" Input at which an optimum was found.\",\" ## Value\",\" Value returned by the function at its optimum.\",\" ## NQueries\",\" The amount of times the function was called.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"ReflectionOracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a reflection oracle.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This oracle $O = \\\\boldone - (1 - e^{i \\\\phi}) \\\\ket{\\\\psi}\\\\bra{\\\\psi}$\\rperforms a partial reflection by a phase $\\\\phi$ about a single pure state\\r$\\\\ket{\\\\psi}$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"ApplyReflection\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"A reflection oracle, $O$, implemented by an operation with inputs:\\r\\r- The phase $\\\\phi$ by which to rotate the reflected subspace.\\r- The qubit register on which to perform the given reflection.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Oracles\\\\Types.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":25}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"ApplyReflection\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":24}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a reflection oracle.\",\"\",\" # Named Items\",\" ## ApplyReflection\",\" A reflection oracle, $O$, implemented by an operation with inputs:\",\" - The phase $\\\\phi$ by which to rotate the reflected subspace.\",\" - The qubit register on which to perform the given reflection.\",\"\",\" # Remarks\",\" This oracle $O = \\\\boldone - (1 - e^{i \\\\phi}) \\\\ket{\\\\psi}\\\\bra{\\\\psi}$\",\" performs a partial reflection by a phase $\\\\phi$ about a single pure state\",\" $\\\\ket{\\\\psi}$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"ObliviousOracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an oracle for oblivious amplitude amplification.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The inputs to the oracle $O$ are:\\r\\r- The ancilla register $a$ that $O$ acts on.\\r- The system register $s$ on which the desired unitary $U$ is applied, post-selected on register $a$ being in state $\\\\ket{t}\\\\_a$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This oracle defined by\\r$$\\rO\\\\ket{s}\\\\_a\\\\ket{\\\\psi}\\\\_s= \\\\lambda\\\\ket{t}\\\\_a U \\\\ket{\\\\psi}\\\\_s + \\\\sqrt{1-|\\\\lambda|^2}\\\\ket{t^\\\\perp}\\\\_a\\\\cdots\\r$$\\racts on the ancilla state $\\\\ket{s}\\\\_a$ to implement the unitary $U$ on any system state $\\\\ket{\\\\psi}\\\\_s$ with amplitude $\\\\lambda$ in the basis flagged by $\\\\ket{t}\\\\_a$.\\rThe first parameter is the qubit register of $\\\\ket{s}\\\\_a$. The second parameter is the qubit register of $\\\\ket{\\\\psi}\\\\_s$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Oracles\\\\Types.qs\",\"Position\":{\"Item1\":39,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":24}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an oracle for oblivious amplitude amplification.\",\"\",\" # Description\",\" The inputs to the oracle $O$ are:\",\" - The ancilla register $a$ that $O$ acts on.\",\" - The system register $s$ on which the desired unitary $U$ is applied, post-selected on register $a$ being in state $\\\\ket{t}\\\\_a$.\",\"\",\" # Remarks\",\" This oracle defined by\",\" $$\",\"     O\\\\ket{s}\\\\_a\\\\ket{\\\\psi}\\\\_s= \\\\lambda\\\\ket{t}\\\\_a U \\\\ket{\\\\psi}\\\\_s + \\\\sqrt{1-|\\\\lambda|^2}\\\\ket{t^\\\\perp}\\\\_a\\\\cdots\",\" $$\",\" acts on the ancilla state $\\\\ket{s}\\\\_a$ to implement the unitary $U$ on any system state $\\\\ket{\\\\psi}\\\\_s$ with amplitude $\\\\lambda$ in the basis flagged by $\\\\ket{t}\\\\_a$.\",\" The first parameter is the qubit register of $\\\\ket{s}\\\\_a$. The second parameter is the qubit register of $\\\\ket{\\\\psi}\\\\_s$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"StateOracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an oracle for state preparation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The inputs to the oracle $O$ are:\\r\\r- An integer indexing the flag qubit $f$.\\r- The system register $s$ that will store the desired quantum state $\\\\ket{\\\\psi}\\\\_s$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This oracle defined by\\r$$\\rO\\\\ket{0}\\\\_{f}\\\\ket{0}\\\\_s= \\\\lambda\\\\ket{1}\\\\_f\\\\ket{\\\\psi}\\\\_s + \\\\sqrt{1-|\\\\lambda|^2}\\\\ket{0}\\\\_f\\\\cdots,\\r$$\\racts on the on computational basis state $\\\\ket{0}\\\\_{f}\\\\ket{0}\\\\_s$ to create the target state $\\\\ket{\\\\psi}\\\\_s$ with amplitude $\\\\lambda$ in the basis flagged by $\\\\ket{1}\\\\_f$.\\rThe first parameter is an index to the qubit register of $\\\\ket{0}\\\\_f$. The second parameter encompassed both registers.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Oracles\\\\Types.qs\",\"Position\":{\"Item1\":56,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":20}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an oracle for state preparation.\",\"\",\" # Description\",\" The inputs to the oracle $O$ are:\",\" - An integer indexing the flag qubit $f$.\",\" - The system register $s$ that will store the desired quantum state $\\\\ket{\\\\psi}\\\\_s$.\",\"\",\" # Remarks\",\" This oracle defined by\",\" $$\",\" O\\\\ket{0}\\\\_{f}\\\\ket{0}\\\\_s= \\\\lambda\\\\ket{1}\\\\_f\\\\ket{\\\\psi}\\\\_s + \\\\sqrt{1-|\\\\lambda|^2}\\\\ket{0}\\\\_f\\\\cdots,\",\" $$\",\" acts on the on computational basis state $\\\\ket{0}\\\\_{f}\\\\ket{0}\\\\_s$ to create the target state $\\\\ket{\\\\psi}\\\\_s$ with amplitude $\\\\lambda$ in the basis flagged by $\\\\ket{1}\\\\_f$.\",\" The first parameter is an index to the qubit register of $\\\\ket{0}\\\\_f$. The second parameter encompassed both registers.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"DeterministicStateOracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents an oracle for deterministic state preparation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The input to the oracle $O$ is:\\r\\r- The register that will store the desired quantum state $\\\\ket{\\\\psi}\\\\_s$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This oracle defined by $O\\\\ket{0}=\\\\ket{\\\\psi}$ acts on the on computational basis state $\\\\ket{0}$ to create the state $\\\\ket{\\\\psi}$.\\rThe first parameter is the qubit register of $\\\\ket{\\\\psi}$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Oracles\\\\Types.qs\",\"Position\":{\"Item1\":68,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":33}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents an oracle for deterministic state preparation.\",\"\",\" # Description\",\" The input to the oracle $O$ is:\",\" - The register that will store the desired quantum state $\\\\ket{\\\\psi}\\\\_s$.\",\"\",\" # Remarks\",\" This oracle defined by $O\\\\ket{0}=\\\\ket{\\\\psi}$ acts on the on computational basis state $\\\\ket{0}$ to create the state $\\\\ket{\\\\psi}$.\",\" The first parameter is the qubit register of $\\\\ket{\\\\psi}$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"DiscreteOracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a discrete-time oracle.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This is an oracle that implements $U^m$ for a fixed operation $U$\\rand a non-negative integer $m$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Oracles\\\\Types.qs\",\"Position\":{\"Item1\":77,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":23}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a discrete-time oracle.\",\"\",\" # Description\",\" This is an oracle that implements $U^m$ for a fixed operation $U$\",\" and a non-negative integer $m$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Oracles\",\"Name\":\"ContinuousOracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a continuous-time oracle.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This is an oracle that implements\\r$U(\\\\delta t) : \\\\ket{\\\\psi(t)} \\\\mapsto \\\\ket{\\\\psi(t + \\\\delta t)}$\\rfor all times $t$, where $U$ is a fixed operation, and where\\r$\\\\delta t$ is a non-negative real number.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Oracles\\\\Types.qs\",\"Position\":{\"Item1\":87,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":25}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a continuous-time oracle.\",\"\",\" # Description\",\" This is an oracle that implements\",\" $U(\\\\delta t) : \\\\ket{\\\\psi(t)} \\\\mapsto \\\\ket{\\\\psi(t + \\\\delta t)}$\",\" for all times $t$, where $U$ is a fixed operation, and where\",\" $\\\\delta t$ is a non-negative real number.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Preparation\",\"Name\":\"MixedStatePreparation\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a particular mixed state that can be prepared on an index\\rand a garbage register.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.PurifiedMixedState\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Preparation\\\\Types.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":30}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Preparation\",\"Name\":\"MixedStatePreparationRequirements\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Double\"},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Requirements\",\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Preparation\",\"Name\":\"MixedStatePreparationRequirements\",\"Range\":{\"Case\":\"Null\"}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":21}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Norm\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":13}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Prepare\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"LittleEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":16}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a particular mixed state that can be prepared on an index\",\" and a garbage register.\",\"\",\" # Input\",\" ## Requirements\",\" Specifies the size of the qubit registers required to prepare the\",\" mixed state represented by this UDT value.\",\" ## Norm\",\" Specifies the 1-norm of the coefficients used to define this mixed\",\" state.\",\" ## Prepare\",\" An operation that, given an index register, a data register, and a\",\" garbage register initially in the $\\\\ket{0}$, $\\\\let{00\\\\dots 0}$, and\",\" $\\\\ket{00\\\\dots 0}$ states (respectively),\",\" prepares the state represented by this UDT value on those registers.\",\"\",\" # See Also\",\" - Microsoft.Quantum.PurifiedMixedState\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Preparation\",\"Name\":\"MixedStatePreparationRequirements\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents the number of qubits required in order to prepare a given\\rmixed state.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.PurifiedMixedState\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Preparation\\\\Types.qs\",\"Position\":{\"Item1\":48,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":42}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"NTotalQubits\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":21}}}]}]},{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"NIndexQubits\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":13},\"Item2\":{\"Line\":4,\"Column\":25}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"NGarbageQubits\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":5,\"Column\":13},\"Item2\":{\"Line\":5,\"Column\":27}}}]}]}]]}]]},\"Documentation\":[\" # Summary\",\" Represents the number of qubits required in order to prepare a given\",\" mixed state.\",\"\",\" # Input\",\" ## NTotalQubits\",\" The total number of qubits required by the represented state preparation\",\" operation.\",\" ## NIndexQubits\",\" The number of qubits required for the index register used by the\",\" represented state preparation operation.\",\" ## NGarbageQubits\",\" The number of qubits required for the garbage register used by the\",\" represented state preparation operation.\",\"\",\" # See Also\",\" - Microsoft.Quantum.PurifiedMixedState\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorIndex\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a single primitive term in the set of all dynamical generators, e.g.\\rHermitian operators, for which there exists a map from that generator\\rto time-evolution by that generator, through `EvolutionSet`.\\r\\rThe first element\\r(Int[], Double[]) is indexes that single term -- For instance, the Pauli string\\rXXY with coefficient 0.5 would be indexed by ([1,1,2], [0.5]). Alternatively,\\rHamiltonians parameterized by a continuous variable, such as X cos φ + Y sin φ,\\rmight for instance be represented by ([], [φ]). The second\\relement indexes the subsystem on which the generator acts on.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"> [!WARNING]\\r> The interpretation of an `GeneratorIndex` is not defined except\\r> with reference to a particular set of generators.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.EvolutionSet\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.PauliEvolutionSet\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Using <xref:Microsoft.Quantum.Simulation.PauliEvolutionSet>, the operator\\r$\\\\pi X_2 X_5 Y_9$ is represented as:\\r\\r```qsharp\\rlet index = GeneratorIndex(([1, 1, 2], [PI()]), [2, 5, 9]);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":35,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":23}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]}]]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Double\"}]}]}]}]]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a single primitive term in the set of all dynamical generators, e.g.\",\" Hermitian operators, for which there exists a map from that generator\",\" to time-evolution by that generator, through `EvolutionSet`.\",\"\",\" The first element\",\" (Int[], Double[]) is indexes that single term -- For instance, the Pauli string\",\" XXY with coefficient 0.5 would be indexed by ([1,1,2], [0.5]). Alternatively,\",\" Hamiltonians parameterized by a continuous variable, such as X cos φ + Y sin φ,\",\" might for instance be represented by ([], [φ]). The second\",\" element indexes the subsystem on which the generator acts on.\",\"\",\" # Remarks\",\" > [!WARNING]\",\" > The interpretation of an `GeneratorIndex` is not defined except\",\" > with reference to a particular set of generators.\",\"\",\" # Example\",\" Using <xref:Microsoft.Quantum.Simulation.PauliEvolutionSet>, the operator\",\" $\\\\pi X_2 X_5 Y_9$ is represented as:\",\" ```qsharp\",\" let index = GeneratorIndex(([1, 1, 2], [PI()]), [2, 5, 9]);\",\" ```\",\"\",\" # See Also\",\" - Microsoft.Quantum.Simulation.EvolutionSet\",\" - Microsoft.Quantum.Simulation.PauliEvolutionSet\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"SimulationAlgorithm\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a time-independent simulation algorithm.\\r\\rA time-independent simulation technique converts an\\r<xref:Microsoft.Quantum.Simulation.EvolutionGenerator>\\rto unitary time evolution for some time-interval.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The inputs into the callable are:\\r\\r- The time interval of simulation.\\r- A representation of the generator of dynamic evolution.\\r- A register encoding the state of the system.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"To apply the Trotter–Suzuki simulation algorithm to a register of\\rqubits:\\r\\r```qsharp\\roperation EvolveUnderGenerator(generator : EvolutionGenerator, time : Double, register : Qubit[])\\r: Unit is Adj + Ctl {\\r    let trotterStepSize = 0.1;\\r    let trotterOrder = 1;\\r    let evolveFor = (TrotterSimulationAlgorithm(trotterStepSize, trotterOrder))!;\\r    evolveFor(time, generator, register);\\r}\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Types.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":28}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionGenerator\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionGenerator\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a time-independent simulation algorithm.\",\"\",\" A time-independent simulation technique converts an\",\" <xref:Microsoft.Quantum.Simulation.EvolutionGenerator>\",\" to unitary time evolution for some time-interval.\",\"\",\" # Description\",\" The inputs into the callable are:\",\" - The time interval of simulation.\",\" - A representation of the generator of dynamic evolution.\",\" - A register encoding the state of the system.\",\"\",\" # Example\",\" To apply the Trotter–Suzuki simulation algorithm to a register of\",\" qubits:\",\"\",\" ```qsharp\",\" operation EvolveUnderGenerator(generator : EvolutionGenerator, time : Double, register : Qubit[])\",\" : Unit is Adj + Ctl {\",\"     let trotterStepSize = 0.1;\",\"     let trotterOrder = 1;\",\"     let evolveFor = (TrotterSimulationAlgorithm(trotterStepSize, trotterOrder))!;\",\"     evolveFor(time, generator, register);\",\" }\",\" ```\",\"\",\" # See Also\",\" - Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"BlockEncoding\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a unitary where an arbitrary operator of\\rinterest is encoded in the top-left block.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"A unitary operation that can be represented by a unitary matrix $U$\\rwhere an arbitrary operator $H$ of\\rinterest that acts on the system register `s` is encoded in the top-\\rleft block corresponding to auxiliary state $\\\\ket{0}_a$. That is,\\r\\r$$\\r\\\\begin{align}\\r(\\\\bra{0}_a\\\\otimes I_s)U(\\\\ket{0}_a\\\\otimes I_s) = H\\r\\\\end{align}\\r$$.\\r\\rThe inputs to this callable are:\\r\\r- An array of qubits representing the auxiliary register acted on by $U$.\\r  Note that the action of $U$ is only defined when this register is\\r  in the state $\\\\ket{0}_a$.\\r- An array of qubits representing the system register acted on by $H$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.BlockEncodingReflection\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.TimeDependentBlockEncoding\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\BlockEncoding.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":22}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a unitary where an arbitrary operator of\",\" interest is encoded in the top-left block.\",\"\",\" # Description\",\" A unitary operation that can be represented by a unitary matrix $U$\",\" where an arbitrary operator $H$ of\",\" interest that acts on the system register `s` is encoded in the top-\",\" left block corresponding to auxiliary state $\\\\ket{0}_a$. That is,\",\"\",\" $$\",\" \\\\begin{align}\",\" (\\\\bra{0}_a\\\\otimes I_s)U(\\\\ket{0}_a\\\\otimes I_s) = H\",\" \\\\end{align}\",\" $$.\",\"\",\" The inputs to this callable are:\",\" - An array of qubits representing the auxiliary register acted on by $U$.\",\"   Note that the action of $U$ is only defined when this register is\",\"   in the state $\\\\ket{0}_a$.\",\" - An array of qubits representing the system register acted on by $H$.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Simulation.BlockEncodingReflection\",\" - Microsoft.Quantum.Simulation.TimeDependentBlockEncoding\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a collection of `GeneratorIndex`es.\\r\\rWe iterate over this\\rcollection using a single-index integer, and the size of the\\rcollection is assumed to be known.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Instances of `GeneratorSystem` can be defined easily using the\\r<xref:Microsoft.Quantum.Arrays.LookupFunction> function.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Arrays.LookupFunction\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":50,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":24}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"Int\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorIndex\",\"Range\":{\"Case\":\"Null\"}}]}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"Int\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorIndex\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a collection of `GeneratorIndex`es.\",\"\",\" We iterate over this\",\" collection using a single-index integer, and the size of the\",\" collection is assumed to be known.\",\"\",\" # Remarks\",\" Instances of `GeneratorSystem` can be defined easily using the\",\" <xref:Microsoft.Quantum.Arrays.LookupFunction> function.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Arrays.LookupFunction\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"TimeDependentGeneratorSystem\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a time-dependent dynamical generator as a function\\rfrom time to the value of the dynamical generator at that time.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":55,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":37}},\"Type\":{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\",\"Range\":{\"Case\":\"Null\"}}]}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a time-dependent dynamical generator as a function\",\" from time to the value of the dynamical generator at that time.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"Unitary\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents evolution under a unitary operator.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":59,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":16}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents evolution under a unitary operator.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"BlockEncodingReflection\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a `BlockEncoding` that is also a reflection.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"A unitary operation that can be represented by a unitary matrix $U$\\rwhere an arbitrary operator $H$ of\\rinterest that acts on the system register `s` is encoded in the top-\\rleft block corresponding to auxiliary state $\\\\ket{0}_a$. That is,\\r\\r$$\\r\\\\begin{align}\\r(\\\\bra{0}_a\\\\otimes I_s)U(\\\\ket{0}_a\\\\otimes I_s) = H\\r\\\\end{align}\\r$$.\\r\\rThe inputs to this callable are:\\r\\r- An array of qubits representing the auxiliary register acted on by $U$.\\r  Note that the action of $U$ is only defined when this register is\\r  in the state $\\\\ket{0}_a$.\\r- An array of qubits representing the system register acted on by $H$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.BlockEncoding\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\BlockEncoding.qs\",\"Position\":{\"Item1\":66,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":32}},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"BlockEncoding\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"BlockEncoding\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a `BlockEncoding` that is also a reflection.\",\"\",\" # Description\",\" A unitary operation that can be represented by a unitary matrix $U$\",\" where an arbitrary operator $H$ of\",\" interest that acts on the system register `s` is encoded in the top-\",\" left block corresponding to auxiliary state $\\\\ket{0}_a$. That is,\",\"\",\" $$\",\" \\\\begin{align}\",\" (\\\\bra{0}_a\\\\otimes I_s)U(\\\\ket{0}_a\\\\otimes I_s) = H\",\" \\\\end{align}\",\" $$.\",\"\",\" The inputs to this callable are:\",\" - An array of qubits representing the auxiliary register acted on by $U$.\",\"   Note that the action of $U$ is only defined when this register is\",\"   in the state $\\\\ket{0}_a$.\",\" - An array of qubits representing the system register acted on by $H$.\",\"\",\"\",\" # See Also\",\" - Microsoft.Quantum.Simulation.BlockEncoding\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionUnitary\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a unitary time-evolution operator.\\r\\rThe first parameter is\\ris duration of time-evolution, and the second parameter is the qubit\\rregister acted upon by the unitary.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":67,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":25}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a unitary time-evolution operator.\",\"\",\" The first parameter is\",\" is duration of time-evolution, and the second parameter is the qubit\",\" register acted upon by the unitary.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"TimeDependentSimulationAlgorithm\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a time-dependent simulation algorithm.\\r\\rA time-dependent simulation technique converts an\\r<xref:Microsoft.Quantum.Simulation.EvolutionSchedule>\\rto unitary time-evolution for some time-interval.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The inputs into the callable are:\\r\\r- The time interval of simulation.\\r- A schedule mapping evolution time to the generator at that time.\\r- A register encoding the state of the system.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Simulation.SimulationAlgorithm\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"To apply the Trotter–Suzuki simulation algorithm to a register of\\rqubits:\\r\\r```qsharp\\roperation EvolveUnderTimeDependentGenerator(schedule : EvolutionSchedule, time : Double, register : Qubit[])\\r: Unit is Adj + Ctl {\\r    let trotterStepSize = 0.1;\\r    let trotterOrder = 1;\\r    let evolveFor = (TimeDependentTrotterSimulationAlgorithm(trotterStepSize, trotterOrder))!;\\r    evolveFor(time, schedule, register);\\r}\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Types.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":41}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSchedule\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSchedule\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a time-dependent simulation algorithm.\",\"\",\" A time-dependent simulation technique converts an\",\" <xref:Microsoft.Quantum.Simulation.EvolutionSchedule>\",\" to unitary time-evolution for some time-interval.\",\"\",\" # Description\",\" The inputs into the callable are:\",\" - The time interval of simulation.\",\" - A schedule mapping evolution time to the generator at that time.\",\" - A register encoding the state of the system.\",\"\",\" # Example\",\" To apply the Trotter–Suzuki simulation algorithm to a register of\",\" qubits:\",\"\",\" ```qsharp\",\" operation EvolveUnderTimeDependentGenerator(schedule : EvolutionSchedule, time : Double, register : Qubit[])\",\" : Unit is Adj + Ctl {\",\"     let trotterStepSize = 0.1;\",\"     let trotterOrder = 1;\",\"     let evolveFor = (TimeDependentTrotterSimulationAlgorithm(trotterStepSize, trotterOrder))!;\",\"     evolveFor(time, schedule, register);\",\" }\",\" ```\",\"\",\" # See Also\",\" - Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm\",\"\",\" # See Also\",\" - Microsoft.Quantum.Simulation.SimulationAlgorithm\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSet\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a set of gates that can be readily implemented and used\\rto implement simulation algorithms.\\r\\rElements in the set are indexed\\rby a <xref:Microsoft.Quantum.Simulation.GeneratorIndex>,\\rand each set is described by a function\\rfrom `GeneratorIndex` to <xref:Microsoft.Quantum.Simulation.EvolutionUnitary>,\\rwhich are operations\\rparameterized by a real number representing time\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":79,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":21}},\"Type\":{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorIndex\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionUnitary\",\"Range\":{\"Case\":\"Null\"}}]}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorIndex\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionUnitary\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a set of gates that can be readily implemented and used\",\" to implement simulation algorithms.\",\"\",\" Elements in the set are indexed\",\" by a <xref:Microsoft.Quantum.Simulation.GeneratorIndex>,\",\" and each set is described by a function\",\" from `GeneratorIndex` to <xref:Microsoft.Quantum.Simulation.EvolutionUnitary>,\",\" which are operations\",\" parameterized by a real number representing time\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionGenerator\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a dynamical generator as a set of simulatable gates and\\ran expansion in terms of that basis.\\r\\rLast parameter for number of terms.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":86,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":27}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSet\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\",\"Range\":{\"Case\":\"Null\"}}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSet\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a dynamical generator as a set of simulatable gates and\",\" an expansion in terms of that basis.\",\"\",\" Last parameter for number of terms.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"TimeDependentBlockEncoding\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a `BlockEncoding` that is controlled by a clock register.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An operation marked as a `TimeDependentBlockEncoding` can be\\rrepresented by a unitary matrix $U$ controlled by a state\\r$\\\\ket{k}_d$ in clock register `d` such that an arbitrary operator $H_k$ of\\rinterest that acts on the system register `s` is encoded in the top-\\rleft block corresponding to auxiliary state $\\\\ket{0}_a$. That is,\\r\\r$$\\r\\\\begin{align}\\r(\\\\bra{0}\\\\_a\\\\otimes I_{ds})U(\\\\ket{0}\\\\_a\\\\otimes I_{ds}) = \\\\sum_{k}\\\\ket{k}\\\\bra{k}\\\\_d\\\\otimes H_k.\\r\\\\end{align}\\r$$.\\r\\rThe inputs to the operation wrapped by this user-defined type are:\\r\\r- An array of qubits representing the time register that controls $H_k$.\\r- An array of qubits representing the auxiliary register acted on by $U$.\\r  The action of $U$ is only defined when this is $\\\\ket{0}_a$.\\r- An array of qubits representing the system register acted on by $H$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\BlockEncoding.qs\",\"Position\":{\"Item1\":89,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":35}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a `BlockEncoding` that is controlled by a clock register.\",\"\",\" # Description\",\" An operation marked as a `TimeDependentBlockEncoding` can be\",\" represented by a unitary matrix $U$ controlled by a state\",\" $\\\\ket{k}_d$ in clock register `d` such that an arbitrary operator $H_k$ of\",\" interest that acts on the system register `s` is encoded in the top-\",\" left block corresponding to auxiliary state $\\\\ket{0}_a$. That is,\",\"\",\" $$\",\" \\\\begin{align}\",\" (\\\\bra{0}\\\\_a\\\\otimes I_{ds})U(\\\\ket{0}\\\\_a\\\\otimes I_{ds}) = \\\\sum_{k}\\\\ket{k}\\\\bra{k}\\\\_d\\\\otimes H_k.\",\" \\\\end{align}\",\" $$.\",\"\",\" The inputs to the operation wrapped by this user-defined type are:\",\" - An array of qubits representing the time register that controls $H_k$.\",\" - An array of qubits representing the auxiliary register acted on by $U$.\",\"   The action of $U$ is only defined when this is $\\\\ket{0}_a$.\",\" - An array of qubits representing the system register acted on by $H$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSchedule\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a time-dependent dynamical generator.\\r\\rThe `Double`\\rparameter is a schedule in $[0, 1]$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Simulation\\\\Data\\\\GeneratorRepresentation.qs\",\"Position\":{\"Item1\":93,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":26}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSet\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\",\"Range\":{\"Case\":\"Null\"}}]}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"EvolutionSet\",\"Range\":{\"Case\":\"Null\"}}]}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"Double\"},{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Simulation\",\"Name\":\"GeneratorSystem\",\"Range\":{\"Case\":\"Null\"}}]}]}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a time-dependent dynamical generator.\",\"\",\" The `Double`\",\" parameter is a schedule in $[0, 1]$.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Synthesis\",\"Name\":\"__QsRef2__MCMTMask__\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"A type to represent a multiple-controlled multiple-target Toffoli gate.\\r\\rThe first integer is a bit mask for control lines.  Bit indexes which\\rare set correspond to control line indexes.\\r\\rThe second integer is a bit mask for target lines.  Bit indexes which\\rare set correspond to target line indexes.\\r\\rThe bit indexes of both integers must be disjoint.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"Internal\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Synthesis\\\\TransformationBased.qs\",\"Position\":{\"Item1\":27,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":26}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"ControlMask\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":20}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"TargetMask\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":28},\"Item2\":{\"Line\":2,\"Column\":38}}}]}]}]]},\"Documentation\":[\" # Summary\",\" A type to represent a multiple-controlled multiple-target Toffoli gate.\",\"\",\" The first integer is a bit mask for control lines.  Bit indexes which\",\" are set correspond to control line indexes.\",\"\",\" The second integer is a bit mask for target lines.  Bit indexes which\",\" are set correspond to target line indexes.\",\"\",\" The bit indexes of both integers must be disjoint.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Synthesis\",\"Name\":\"SingleQubitClifford\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An element of the single-qubit Clifford group.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Each element is represented as as $E^{i} S^{j} X^{k} \\\\omega^{\\\\ell}$, where $\\\\omega^8 = 1$ and where $E = H S^3 \\\\omega^3$.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"References\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"- https://hackage.haskell.org/package/newsynth-0.4.0.0/docs/Quantum-Synthesis-Clifford.html\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"```Q#\\rlet identity = SingleQubitClifford((0, 0, 0, 0));\\rlet xClifford = SingleQubitClifford((0, 0, 1, 0));\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"E\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The power to which $E$ should be raised to generate this element.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"S\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The power to which $S$ should be raised to generate this element.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"X\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The power to which $X$ should be raised to generate this element.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Omega\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The power to which $\\\\omega$ should be raised to generate this element.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Synthesis\\\\SingleQubitCliffordGroup\\\\Types.qs\",\"Position\":{\"Item1\":30,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":28}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"E\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":10}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"S\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":10}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"X\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":10}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Omega\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":5,\"Column\":9},\"Item2\":{\"Line\":5,\"Column\":14}}}]}]}]]},\"Documentation\":[\" # Summary\",\" An element of the single-qubit Clifford group.\",\"\",\" # Description\",\" Each element is represented as as $E^{i} S^{j} X^{k} \\\\omega^{\\\\ell}$, where $\\\\omega^8 = 1$ and where $E = H S^3 \\\\omega^3$.\",\"\",\" # Named Items\",\" ## E\",\" The power to which $E$ should be raised to generate this element.\",\" ## S\",\" The power to which $S$ should be raised to generate this element.\",\" ## X\",\" The power to which $X$ should be raised to generate this element.\",\" ## Omega\",\" The power to which $\\\\omega$ should be raised to generate this element.\",\"\",\" # Example\",\" ```Q#\",\" let identity = SingleQubitClifford((0, 0, 0, 0));\",\" let xClifford = SingleQubitClifford((0, 0, 1, 0));\",\" ```\",\"\",\" # References\",\" - https://hackage.haskell.org/package/newsynth-0.4.0.0/docs/Quantum-Synthesis-Clifford.html\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Synthesis\",\"Name\":\"__QsRef2__DecompositionState__\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"State during decomposition based on variable indexes\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The state holds the current permutation and the currently generated functions\\rfor controlled gates on the left, and controlled gates on the right.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"Internal\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\QuantumLibraries\\\\Standard\\\\src\\\\Synthesis\\\\DecompositionBased.qs\",\"Position\":{\"Item1\":151,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":36}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"BigInt\"},{\"Case\":\"Int\"}]]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"BigInt\"},{\"Case\":\"Int\"}]]}]}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Perm\",\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":44}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Lfunctions\",\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"BigInt\"},{\"Case\":\"Int\"}]]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":54},\"Item2\":{\"Line\":1,\"Column\":64}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Rfunctions\",\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"BigInt\"},{\"Case\":\"Int\"}]]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":84},\"Item2\":{\"Line\":1,\"Column\":94}}}]}]}]]},\"Documentation\":[\" # Summary\",\" State during decomposition based on variable indexes\",\"\",\" # Description\",\" The state holds the current permutation and the currently generated functions\",\" for controlled gates on the left, and controlled gates on the right.\"]}")]
#line hidden
namespace Microsoft.Quantum.AmplitudeAmplification
{
    public class ReflectionPhases : UDTBase<(IQArray<Double>,IQArray<Double>)>, IApplyData
    {
        public ReflectionPhases() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(IQArray<Double>,IQArray<Double>)>())
        {
        }

        public ReflectionPhases((IQArray<Double>,IQArray<Double>) data) : base(data)
        {
        }

        public IQArray<Double> AboutStart => Data.Item1;
        public IQArray<Double> AboutTarget => Data.Item2;
        public IQArray<Double> Item1 => Data.Item1;
        public IQArray<Double> Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out IQArray<Double> item1, out IQArray<Double> item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class RotationPhases : UDTBase<IQArray<Double>>, IApplyData
    {
        public RotationPhases() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Double>>())
        {
        }

        public RotationPhases(IQArray<Double> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Arithmetic
{
    public class LittleEndian : UDTBase<IQArray<Qubit>>, IApplyData
    {
        public LittleEndian() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Qubit>>())
        {
        }

        public LittleEndian(IQArray<Qubit> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class BigEndian : UDTBase<IQArray<Qubit>>, IApplyData
    {
        public BigEndian() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Qubit>>())
        {
        }

        public BigEndian(IQArray<Qubit> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class PhaseLittleEndian : UDTBase<IQArray<Qubit>>, IApplyData
    {
        public PhaseLittleEndian() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Qubit>>())
        {
        }

        public PhaseLittleEndian(IQArray<Qubit> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Arrays
{
    [SourceLocation("/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll", OperationFunctor.Body, 231, -1)]
    internal partial class _a3fdc4c0bd3849478e4565ddce7e593d_ForEach : Operation<(ICallable,IQArray<Qubit>), IQArray<Result>>, ICallable
    {
        public _a3fdc4c0bd3849478e4565ddce7e593d_ForEach(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(ICallable,IQArray<Qubit>)>, IApplyData
        {
            public In((ICallable,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "_a3fdc4c0bd3849478e4565ddce7e593d_ForEach";
        String ICallable.FullName => "Microsoft.Quantum.Arrays._a3fdc4c0bd3849478e4565ddce7e593d_ForEach";
        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<(ICallable,IQArray<Qubit>), IQArray<Result>> __Body__ => (__in__) =>
        {
            var (action,array) = __in__;
#line 232 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            var length = array.Length;
#line 233 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            if ((length == 0L))
            {
#line 234 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
                return new QArray<Result>();
            }

#line 236 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            var first = action.Apply<Result>(array[0L]);
#line 237 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
#line hidden
            var __arg1__ = first;
#line 237 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            var retval = new QArray<Result>(QArray.Filled(() => __arg1__, length));
#line 238 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            foreach (var idx in new QRange(1L, (length - 1L)))
#line hidden
            {
#line 239 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
                retval.Modify(idx, action.Apply<Result>(array[idx]));
            }

#line 241 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            return retval;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__((ICallable,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__, ICallable action, IQArray<Qubit> array)
        {
            return __m__.Run<_a3fdc4c0bd3849478e4565ddce7e593d_ForEach, (ICallable,IQArray<Qubit>), IQArray<Result>>((action, array));
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Canon
{
    public class CCNOTop : UDTBase<IAdjointable>, IApplyData
    {
        public CCNOTop() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IAdjointable>())
        {
        }

        public CCNOTop(IAdjointable data) : base(data)
        {
        }

        public IAdjointable Apply => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    [SourceLocation("/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll", OperationFunctor.Body, 129, 152)]
    internal partial class _03bc932f434c4a06b38d83801c20968f_ApplyToEach : Operation<(ICallable,IQArray<Qubit>), QVoid>, ICallable
    {
        public _03bc932f434c4a06b38d83801c20968f_ApplyToEach(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(ICallable,IQArray<Qubit>)>, IApplyData
        {
            public In((ICallable,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "_03bc932f434c4a06b38d83801c20968f_ApplyToEach";
        String ICallable.FullName => "Microsoft.Quantum.Canon._03bc932f434c4a06b38d83801c20968f_ApplyToEach";
        private protected ICallable<IQArray<Qubit>, QRange> Microsoft__Quantum__Arrays___193ad00b502e41959f16032a21c1f934_IndexRange
        {
            get;
            set;
        }

        public override Func<(ICallable,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (singleElementOperation,register) = __in__;
#line 130 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            foreach (var idxQubit in Microsoft__Quantum__Arrays___193ad00b502e41959f16032a21c1f934_IndexRange.Apply(register))
#line hidden
            {
#line 131 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
                singleElementOperation.Apply(register[idxQubit]);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays___193ad00b502e41959f16032a21c1f934_IndexRange = this.__Factory__.Get<ICallable<IQArray<Qubit>, QRange>>(typeof(global::Microsoft.Quantum.Arrays._193ad00b502e41959f16032a21c1f934_IndexRange));
        }

        public override IApplyData __DataIn__((ICallable,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, ICallable singleElementOperation, IQArray<Qubit> register)
        {
            return __m__.Run<_03bc932f434c4a06b38d83801c20968f_ApplyToEach, (ICallable,IQArray<Qubit>), QVoid>((singleElementOperation, register));
        }
    }
}

#line hidden
namespace Microsoft.Quantum.ErrorCorrection
{
    public class LogicalRegister : UDTBase<IQArray<Qubit>>, IApplyData
    {
        public LogicalRegister() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Qubit>>())
        {
        }

        public LogicalRegister(IQArray<Qubit> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class Syndrome : UDTBase<IQArray<Result>>, IApplyData
    {
        public Syndrome() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IQArray<Result>>())
        {
        }

        public Syndrome(IQArray<Result> data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }

    public class RecoveryFn : UDTBase<ICallable>, IApplyData
    {
        public RecoveryFn() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public RecoveryFn(ICallable data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class EncodeOp : UDTBase<ICallable>, IApplyData
    {
        public EncodeOp() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public EncodeOp(ICallable data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class DecodeOp : UDTBase<ICallable>, IApplyData
    {
        public DecodeOp() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public DecodeOp(ICallable data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class SyndromeMeasOp : UDTBase<ICallable>, IApplyData
    {
        public SyndromeMeasOp() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public SyndromeMeasOp(ICallable data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class QECC : UDTBase<(EncodeOp,DecodeOp,SyndromeMeasOp)>, IApplyData
    {
        public QECC() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(EncodeOp,DecodeOp,SyndromeMeasOp)>())
        {
        }

        public QECC((EncodeOp,DecodeOp,SyndromeMeasOp) data) : base(data)
        {
        }

        public EncodeOp Item1 => Data.Item1;
        public DecodeOp Item2 => Data.Item2;
        public SyndromeMeasOp Item3 => Data.Item3;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2?.Data)?.Qubits, ((IApplyData)Data.Item3?.Data)?.Qubits);
            }
        }

        public void Deconstruct(out EncodeOp item1, out DecodeOp item2, out SyndromeMeasOp item3)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
        }
    }

    public class CSS : UDTBase<(EncodeOp,DecodeOp,SyndromeMeasOp,SyndromeMeasOp)>, IApplyData
    {
        public CSS() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(EncodeOp,DecodeOp,SyndromeMeasOp,SyndromeMeasOp)>())
        {
        }

        public CSS((EncodeOp,DecodeOp,SyndromeMeasOp,SyndromeMeasOp) data) : base(data)
        {
        }

        public EncodeOp Item1 => Data.Item1;
        public DecodeOp Item2 => Data.Item2;
        public SyndromeMeasOp Item3 => Data.Item3;
        public SyndromeMeasOp Item4 => Data.Item4;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2?.Data)?.Qubits, ((IApplyData)Data.Item3?.Data)?.Qubits, ((IApplyData)Data.Item4?.Data)?.Qubits);
            }
        }

        public void Deconstruct(out EncodeOp item1, out DecodeOp item2, out SyndromeMeasOp item3, out SyndromeMeasOp item4)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
            item4 = Data.Item4;
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Math
{
    public class Fraction : UDTBase<(Int64,Int64)>, IApplyData
    {
        public Fraction() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Int64,Int64)>())
        {
        }

        public Fraction((Int64,Int64) data) : base(data)
        {
        }

        public Int64 Numerator => Data.Item1;
        public Int64 Denominator => Data.Item2;
        public Int64 Item1 => Data.Item1;
        public Int64 Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Int64 item1, out Int64 item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class ComplexPolar : UDTBase<(Double,Double)>, IApplyData
    {
        public ComplexPolar() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Double,Double)>())
        {
        }

        public ComplexPolar((Double,Double) data) : base(data)
        {
        }

        public Double Magnitude => Data.Item1;
        public Double Argument => Data.Item2;
        public Double Item1 => Data.Item1;
        public Double Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Double item1, out Double item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class BigFraction : UDTBase<(System.Numerics.BigInteger,System.Numerics.BigInteger)>, IApplyData
    {
        public BigFraction() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(System.Numerics.BigInteger,System.Numerics.BigInteger)>())
        {
        }

        public BigFraction((System.Numerics.BigInteger,System.Numerics.BigInteger) data) : base(data)
        {
        }

        public System.Numerics.BigInteger Numerator => Data.Item1;
        public System.Numerics.BigInteger Denominator => Data.Item2;
        public System.Numerics.BigInteger Item1 => Data.Item1;
        public System.Numerics.BigInteger Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out System.Numerics.BigInteger item1, out System.Numerics.BigInteger item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Measurement
{
    [SourceLocation("/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll", OperationFunctor.Body, 74, 78)]
    public partial class MultiM : Operation<IQArray<Qubit>, IQArray<Result>>, ICallable
    {
        public MultiM(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "MultiM";
        String ICallable.FullName => "Microsoft.Quantum.Measurement.MultiM";
        private protected ICallable<(ICallable,IQArray<Qubit>), IQArray<Result>> Microsoft__Quantum__Arrays___a3fdc4c0bd3849478e4565ddce7e593d_ForEach
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, IQArray<Result>> __Body__ => (__in__) =>
        {
            var targets = __in__;
#line 75 "/home/cloudtest/.nuget/packages/microsoft.quantum.standard/0.25.218240/lib/netstandard2.1/Microsoft.Quantum.Standard.dll"
            return Microsoft__Quantum__Arrays___a3fdc4c0bd3849478e4565ddce7e593d_ForEach.Apply((Microsoft__Quantum__Intrinsic__M, targets));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays___a3fdc4c0bd3849478e4565ddce7e593d_ForEach = this.__Factory__.Get<ICallable<(ICallable,IQArray<Qubit>), IQArray<Result>>>(typeof(global::Microsoft.Quantum.Arrays._a3fdc4c0bd3849478e4565ddce7e593d_ForEach));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__, IQArray<Qubit> targets)
        {
            return __m__.Run<MultiM, IQArray<Qubit>, IQArray<Result>>(targets);
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Optimization
{
    public class UnivariateOptimizationResult : UDTBase<(Double,Double,Int64)>, IApplyData
    {
        public UnivariateOptimizationResult() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Double,Double,Int64)>())
        {
        }

        public UnivariateOptimizationResult((Double,Double,Int64) data) : base(data)
        {
        }

        public Double Coordinate => Data.Item1;
        public Double Value => Data.Item2;
        public Int64 NQueries => Data.Item3;
        public Double Item1 => Data.Item1;
        public Double Item2 => Data.Item2;
        public Int64 Item3 => Data.Item3;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Double item1, out Double item2, out Int64 item3)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Oracles
{
    public class ReflectionOracle : UDTBase<IUnitary>, IApplyData
    {
        public ReflectionOracle() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public ReflectionOracle(IUnitary data) : base(data)
        {
        }

        public IUnitary ApplyReflection => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class ObliviousOracle : UDTBase<IUnitary>, IApplyData
    {
        public ObliviousOracle() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public ObliviousOracle(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class StateOracle : UDTBase<IUnitary>, IApplyData
    {
        public StateOracle() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public StateOracle(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class DeterministicStateOracle : UDTBase<IUnitary>, IApplyData
    {
        public DeterministicStateOracle() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public DeterministicStateOracle(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class DiscreteOracle : UDTBase<IUnitary>, IApplyData
    {
        public DiscreteOracle() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public DiscreteOracle(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class ContinuousOracle : UDTBase<IUnitary>, IApplyData
    {
        public ContinuousOracle() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public ContinuousOracle(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Preparation
{
    public class MixedStatePreparation : UDTBase<(MixedStatePreparationRequirements,Double,IUnitary)>, IApplyData
    {
        public MixedStatePreparation() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(MixedStatePreparationRequirements,Double,IUnitary)>())
        {
        }

        public MixedStatePreparation((MixedStatePreparationRequirements,Double,IUnitary) data) : base(data)
        {
        }

        public MixedStatePreparationRequirements Requirements => Data.Item1;
        public Double Norm => Data.Item2;
        public IUnitary Prepare => Data.Item3;
        public MixedStatePreparationRequirements Item1 => Data.Item1;
        public Double Item2 => Data.Item2;
        public IUnitary Item3 => Data.Item3;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data.Item3)?.Qubits;
            }
        }

        public void Deconstruct(out MixedStatePreparationRequirements item1, out Double item2, out IUnitary item3)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
        }
    }

    public class MixedStatePreparationRequirements : UDTBase<(Int64,(Int64,Int64))>, IApplyData
    {
        public MixedStatePreparationRequirements() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Int64,(Int64,Int64))>())
        {
        }

        public MixedStatePreparationRequirements((Int64,(Int64,Int64)) data) : base(data)
        {
        }

        public Int64 NTotalQubits => Data.Item1;
        public Int64 NIndexQubits => Data.Item2.Item1;
        public Int64 NGarbageQubits => Data.Item2.Item2;
        public Int64 Item1 => Data.Item1;
        public (Int64,Int64) Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Int64 item1, out (Int64,Int64) item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Simulation
{
    public class GeneratorIndex : UDTBase<((IQArray<Int64>,IQArray<Double>),IQArray<Int64>)>, IApplyData
    {
        public GeneratorIndex() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<((IQArray<Int64>,IQArray<Double>),IQArray<Int64>)>())
        {
        }

        public GeneratorIndex(((IQArray<Int64>,IQArray<Double>),IQArray<Int64>) data) : base(data)
        {
        }

        public (IQArray<Int64>,IQArray<Double>) Item1 => Data.Item1;
        public IQArray<Int64> Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out (IQArray<Int64>,IQArray<Double>) item1, out IQArray<Int64> item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class SimulationAlgorithm : UDTBase<IUnitary>, IApplyData
    {
        public SimulationAlgorithm() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public SimulationAlgorithm(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class BlockEncoding : UDTBase<IUnitary>, IApplyData
    {
        public BlockEncoding() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public BlockEncoding(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class GeneratorSystem : UDTBase<(Int64,ICallable)>, IApplyData
    {
        public GeneratorSystem() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Int64,ICallable)>())
        {
        }

        public GeneratorSystem((Int64,ICallable) data) : base(data)
        {
        }

        public Int64 Item1 => Data.Item1;
        public ICallable Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data.Item2)?.Qubits;
            }
        }

        public void Deconstruct(out Int64 item1, out ICallable item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class TimeDependentGeneratorSystem : UDTBase<ICallable>, IApplyData
    {
        public TimeDependentGeneratorSystem() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public TimeDependentGeneratorSystem(ICallable data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class Unitary : UDTBase<IUnitary>, IApplyData
    {
        public Unitary() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public Unitary(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class BlockEncodingReflection : UDTBase<BlockEncoding>, IApplyData
    {
        public BlockEncodingReflection() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<BlockEncoding>())
        {
        }

        public BlockEncodingReflection(BlockEncoding data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data?.Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class EvolutionUnitary : UDTBase<IUnitary>, IApplyData
    {
        public EvolutionUnitary() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public EvolutionUnitary(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class TimeDependentSimulationAlgorithm : UDTBase<IUnitary>, IApplyData
    {
        public TimeDependentSimulationAlgorithm() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public TimeDependentSimulationAlgorithm(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class EvolutionSet : UDTBase<ICallable>, IApplyData
    {
        public EvolutionSet() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public EvolutionSet(ICallable data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class EvolutionGenerator : UDTBase<(EvolutionSet,GeneratorSystem)>, IApplyData
    {
        public EvolutionGenerator() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(EvolutionSet,GeneratorSystem)>())
        {
        }

        public EvolutionGenerator((EvolutionSet,GeneratorSystem) data) : base(data)
        {
        }

        public EvolutionSet Item1 => Data.Item1;
        public GeneratorSystem Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2?.Data.Item2)?.Qubits);
            }
        }

        public void Deconstruct(out EvolutionSet item1, out GeneratorSystem item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class TimeDependentBlockEncoding : UDTBase<IUnitary>, IApplyData
    {
        public TimeDependentBlockEncoding() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<IUnitary>())
        {
        }

        public TimeDependentBlockEncoding(IUnitary data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class EvolutionSchedule : UDTBase<(EvolutionSet,ICallable)>, IApplyData
    {
        public EvolutionSchedule() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(EvolutionSet,ICallable)>())
        {
        }

        public EvolutionSchedule((EvolutionSet,ICallable) data) : base(data)
        {
        }

        public EvolutionSet Item1 => Data.Item1;
        public ICallable Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return Qubit.Concat(((IApplyData)Data.Item1?.Data)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
            }
        }

        public void Deconstruct(out EvolutionSet item1, out ICallable item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Synthesis
{
    internal class __QsRef2__MCMTMask__ : UDTBase<(Int64,Int64)>, IApplyData
    {
        public __QsRef2__MCMTMask__() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Int64,Int64)>())
        {
        }

        public __QsRef2__MCMTMask__((Int64,Int64) data) : base(data)
        {
        }

        public Int64 ControlMask => Data.Item1;
        public Int64 TargetMask => Data.Item2;
        public Int64 Item1 => Data.Item1;
        public Int64 Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Int64 item1, out Int64 item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class SingleQubitClifford : UDTBase<(Int64,Int64,Int64,Int64)>, IApplyData
    {
        public SingleQubitClifford() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Int64,Int64,Int64,Int64)>())
        {
        }

        public SingleQubitClifford((Int64,Int64,Int64,Int64) data) : base(data)
        {
        }

        public Int64 E => Data.Item1;
        public Int64 S => Data.Item2;
        public Int64 X => Data.Item3;
        public Int64 Omega => Data.Item4;
        public Int64 Item1 => Data.Item1;
        public Int64 Item2 => Data.Item2;
        public Int64 Item3 => Data.Item3;
        public Int64 Item4 => Data.Item4;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Int64 item1, out Int64 item2, out Int64 item3, out Int64 item4)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
            item4 = Data.Item4;
        }
    }

    internal class __QsRef2__DecompositionState__ : UDTBase<(IQArray<Int64>,IQArray<(System.Numerics.BigInteger,Int64)>,IQArray<(System.Numerics.BigInteger,Int64)>)>, IApplyData
    {
        public __QsRef2__DecompositionState__() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(IQArray<Int64>,IQArray<(System.Numerics.BigInteger,Int64)>,IQArray<(System.Numerics.BigInteger,Int64)>)>())
        {
        }

        public __QsRef2__DecompositionState__((IQArray<Int64>,IQArray<(System.Numerics.BigInteger,Int64)>,IQArray<(System.Numerics.BigInteger,Int64)>) data) : base(data)
        {
        }

        public IQArray<Int64> Perm => Data.Item1;
        public IQArray<(System.Numerics.BigInteger,Int64)> Lfunctions => Data.Item2;
        public IQArray<(System.Numerics.BigInteger,Int64)> Rfunctions => Data.Item3;
        public IQArray<Int64> Item1 => Data.Item1;
        public IQArray<(System.Numerics.BigInteger,Int64)> Item2 => Data.Item2;
        public IQArray<(System.Numerics.BigInteger,Int64)> Item3 => Data.Item3;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out IQArray<Int64> item1, out IQArray<(System.Numerics.BigInteger,Int64)> item2, out IQArray<(System.Numerics.BigInteger,Int64)> item3)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
            item3 = Data.Item3;
        }
    }
}