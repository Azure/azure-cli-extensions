# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /DevCenters/put/DevCenters_Create
@try_manual
def step_dev_center_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center create '
             '--location "centralus" '
             '--tags CostCode="12345" '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter dev-center wait --created '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/put/DevCenters_CreateWithUserIdentity
@try_manual
def step_dev_center_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center create '
             '--type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ident'
             'ityGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testidentity1\\":{{}}}}" '
             '--location "centralus" '
             '--tags CostCode="12345" '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter dev-center wait --created '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/get/DevCenters_Get
@try_manual
def step_dev_center_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center show '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/get/DevCenters_ListByResourceGroup
@try_manual
def step_dev_center_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/get/DevCenters_ListBySubscription
@try_manual
def step_dev_center_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center list '
             '-g ""',
             checks=checks)


# EXAMPLE: /DevCenters/patch/DevCenters_Update
@try_manual
def step_dev_center_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center update '
             '--tags CostCode="12345" '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AttachedNetworks/put/AttachedNetworks_Create
@try_manual
def step_attached_network_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter attached-network create '
             '--attached-network-connection-name "{{attachedNetworkConnectionName}}" '
             '--network-connection-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DevCent'
             'er/NetworkConnections/{myNetworkConnection}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AttachedNetworks/get/AttachedNetworks_GetByDevCenter
@try_manual
def step_attached_network_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter attached-network show '
             '--attached-network-connection-name "{myNetworkConnection}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AttachedNetworks/get/AttachedNetworks_GetByProject
@try_manual
def step_attached_network_show2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter attached-network show '
             '--attached-network-connection-name "{myNetworkConnection}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AttachedNetworks/get/AttachedNetworks_ListByDevCenter
@try_manual
def step_attached_network_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter attached-network list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AttachedNetworks/get/AttachedNetworks_ListByProject
@try_manual
def step_attached_network_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter attached-network list '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AttachedNetworks/delete/AttachedNetworks_Delete
@try_manual
def step_attached_network_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter attached-network delete -y '
             '--attached-network-connection-name "{{attachedNetworkConnectionName}}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/put/Catalogs_CreateOrUpdateAdo
@try_manual
def step_catalog_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog create '
             '--ado-git path="/templates" branch="main" secret-identifier="https://contosokv.vault.azure.net/secrets/Ce'
             'ntralRepoPat" uri="https://contoso@dev.azure.com/contoso/contosoOrg/_git/centralrepo-fakecontoso" '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter catalog wait --created '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/put/Catalogs_CreateOrUpdateGitHub
@try_manual
def step_catalog_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog create '
             '--git-hub path="/templates" branch="main" secret-identifier="https://contosokv.vault.azure.net/secrets/Ce'
             'ntralRepoPat" uri="https://github.com/Contoso/centralrepo-fake.git" '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter catalog wait --created '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/get/Catalogs_Get
@try_manual
def step_catalog_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog show '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/get/Catalogs_ListByDevCenter
@try_manual
def step_catalog_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/patch/Catalogs_Update
@try_manual
def step_catalog_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog update '
             '--git-hub path="/environments" '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/post/Catalogs_Sync
@try_manual
def step_catalog_sync(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog sync '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/delete/Catalogs_Delete
@try_manual
def step_catalog_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter catalog delete -y '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Galleries/put/Galleries_CreateOrUpdate
@try_manual
def step_gallery_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter gallery create '
             '--gallery-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/g'
             'alleries/{myGallery}" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myGallery}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter gallery wait --created '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myGallery}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/get/Images_Get
@try_manual
def step_image_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter image show '
             '--dev-center-name "{myDevCenter}" '
             '--gallery-name "{myGallery3}" '
             '--name "{myImage}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/get/Images_ListByDevCenter
@try_manual
def step_image_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter image list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Images/get/Images_ListByGallery
@try_manual
def step_image_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter image list '
             '--dev-center-name "{myDevCenter}" '
             '--gallery-name "{myGallery2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/put/DevBoxDefinitions_Create
@try_manual
def step_dev_box_definition_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition create '
             '--location "centralus" '
             '--image-reference id="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.DevCente'
             'r/devcenters/{myDevCenter}/galleries/{myGallery4}/images/{myImage3}/version/1.0.0" '
             '--os-storage-type "SSD_1024" '
             '--sku name="Preview" '
             '--name "{myDevBoxDefinition}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter dev-box-definition wait --created '
             '--name "{myDevBoxDefinition}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/get/DevBoxDefinitions_Get
@try_manual
def step_dev_box_definition_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition show '
             '--name "{myDevBoxDefinition}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/get/DevBoxDefinitions_GetByProject
@try_manual
def step_dev_box_definition_show2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition show '
             '--name "{myDevBoxDefinition}" '
             '--project-name "{myProject3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/get/DevBoxDefinitions_ListByDevCenter
@try_manual
def step_dev_box_definition_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/get/DevBoxDefinitions_ListByProject
@try_manual
def step_dev_box_definition_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition list '
             '--project-name "{myProject3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/patch/DevBoxDefinitions_Patch
@try_manual
def step_dev_box_definition_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition update '
             '--image-reference id="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.DevCente'
             'r/devcenters/{myDevCenter}/galleries/{myGallery4}/images/{myImage3}/version/2.0.0" '
             '--name "{myDevBoxDefinition}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevBoxDefinitions/delete/DevBoxDefinitions_Delete
@try_manual
def step_dev_box_definition_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-box-definition delete -y '
             '--name "{myDevBoxDefinition}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/put/EnvironmentTypes_CreateOrUpdate
@try_manual
def step_environment_type_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter environment-type create '
             '--tags Owner="superuser" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/get/EnvironmentTypes_Get
@try_manual
def step_environment_type_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter environment-type show '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/get/EnvironmentTypes_ListByDevCenter
@try_manual
def step_environment_type_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter environment-type list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/patch/EnvironmentTypes_Update
@try_manual
def step_environment_type_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter environment-type update '
             '--tags Owner="superuser" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/delete/EnvironmentTypes_Delete
@try_manual
def step_environment_type_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter environment-type delete -y '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Galleries/get/Galleries_Get
@try_manual
def step_gallery_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter gallery show '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myGallery}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Galleries/get/Galleries_ListByDevCenter
@try_manual
def step_gallery_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter gallery list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ImageVersions/get/ImageVersions_ListByImage
@try_manual
def step_image_version_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter image-version list '
             '--dev-center-name "{myDevCenter}" '
             '--gallery-name "{myGallery3}" '
             '--image-name "{myImage2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ImageVersions/get/Versions_Get
@try_manual
def step_image_version_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter image-version show '
             '--dev-center-name "{myDevCenter}" '
             '--gallery-name "{myGallery3}" '
             '--image-name "{myImage2}" '
             '--resource-group "{rg}" '
             '--version-name "{{versionName}}"',
             checks=checks)


# EXAMPLE: /Galleries/delete/Galleries_Delete
@try_manual
def step_gallery_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter gallery delete -y '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myGallery}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/delete/DevCenters_Delete
@try_manual
def step_dev_center_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter dev-center delete -y '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/put/NetworkConnections_CreateOrUpdate
@try_manual
def step_network_connection_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection create '
             '--location "centralus" '
             '--domain-join-type "HybridAzureADJoin" '
             '--domain-name "mydomaincontroller.local" '
             '--domain-password "Password value for user" '
             '--domain-username "testuser@mydomaincontroller.local" '
             '--networking-resource-group-name "NetworkInterfaces" '
             '--subnet-id "/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Network/virtualNe'
             'tworks/{vn}/subnets/{subnets}" '
             '--name "{myNetworkConnection3}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter network-connection wait --created '
             '--name "{myNetworkConnection3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/get/NetworkConnections_Get
@try_manual
def step_network_connection_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection show '
             '--name "{myNetworkConnection3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/get/NetworkConnections_GetHealthDetails
@try_manual
def step_network_connection_show_health_detail(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection show-health-detail '
             '--name "{myNetworkConnection4}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/get/NetworkConnections_ListByResourceGroup
@try_manual
def step_network_connection_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/get/NetworkConnections_ListBySubscription
@try_manual
def step_network_connection_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection list '
             '-g ""',
             checks=checks)


# EXAMPLE: /NetworkConnections/get/NetworkConnections_ListHealthDetails
@try_manual
def step_network_connection_list_health_detail(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection list-health-detail '
             '--name "{myNetworkConnection3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/patch/NetworkConnections_Update
@try_manual
def step_network_connection_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection update '
             '--domain-password "New Password value for user" '
             '--name "{myNetworkConnection3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/post/NetworkConnections_RunHealthChecks
@try_manual
def step_network_connection_run_health_check(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection run-health-check '
             '--name "{myNetworkConnection3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkConnections/delete/NetworkConnections_Delete
@try_manual
def step_network_connection_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter network-connection delete -y '
             '--name "{myNetworkConnection4}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /OperationStatuses/get/Get OperationStatus
@try_manual
def step_operation_statuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter operation-statuses show '
             '--operation-id "{{operationId}}" '
             '--location "{{location}}"',
             checks=checks)


# EXAMPLE: /Projects/put/Projects_CreateOrUpdate
@try_manual
def step_project_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project create '
             '--location "centralus" '
             '--description "This is my first project." '
             '--dev-center-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DevCenter/devce'
             'nters/{myDevCenter2}" '
             '--tags CostCenter="R&D" '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter project wait --created '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/get/Projects_Get
@try_manual
def step_project_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project show '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/get/Projects_ListByResourceGroup
@try_manual
def step_project_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/get/Projects_ListBySubscription
@try_manual
def step_project_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Projects/patch/Projects_Update
@try_manual
def step_project_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project update '
             '--description "This is my first project." '
             '--tags CostCenter="R&D" '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/put/Pools_CreateOrUpdate
@try_manual
def step_pool_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter pool create '
             '--location "centralus" '
             '--dev-box-definition-name "{myDevBoxDefinition}" '
             '--local-administrator "Enabled" '
             '--network-connection-name "{myNetworkConnection2}" '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az devcenter pool wait --created '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/get/Pools_Get
@try_manual
def step_pool_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter pool show '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/get/Pools_ListByProject
@try_manual
def step_pool_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter pool list '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/patch/Pools_Update
@try_manual
def step_pool_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter pool update '
             '--dev-box-definition-name "{myDevBoxDefinition2}" '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/delete/Pools_Delete
@try_manual
def step_pool_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter pool delete -y '
             '--name "{myPool2}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ProjectEnvironmentTypes/put/ProjectEnvironmentTypes_CreateOrUpdate
@try_manual
def step_project_environment_type_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project-environment-type create '
             '--type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/ident'
             'ityGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testidentity1\\":{{}}}}" '
             '--creator-role-assignment "/some/role/definition/id" '
             '--deployment-target-id "/subscriptions/{subscription_id}" '
             '--status "Enabled" '
             '--user-role-assignments "{{\\"e45e3m7c-176e-416a-b466-0c5ec8298f8a\\":{{\\"roles\\":{{\\"4cbf0b6c-e750-44'
             '1c-98a7-10da8387e4d6\\":{{}}}}}}}}" '
             '--tags CostCenter="RnD" '
             '--environment-type-name "{myEnvironmentType}" '
             '--project-name "{myProject2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ProjectEnvironmentTypes/get/ProjectEnvironmentTypes_Get
@try_manual
def step_project_environment_type_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project-environment-type show '
             '--environment-type-name "{myEnvironmentType}" '
             '--project-name "{myProject2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ProjectEnvironmentTypes/get/ProjectEnvironmentTypes_List
@try_manual
def step_project_environment_type_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project-environment-type list '
             '--project-name "{myProject2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ProjectEnvironmentTypes/patch/ProjectEnvironmentTypes_Update
@try_manual
def step_project_environment_type_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project-environment-type update '
             '--type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/ident'
             'ityGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testidentity1\\":{{}}}}" '
             '--deployment-target-id "/subscriptions/{subscription_id}" '
             '--status "Enabled" '
             '--user-role-assignments "{{\\"e45e3m7c-176e-416a-b466-0c5ec8298f8a\\":{{\\"roles\\":{{\\"4cbf0b6c-e750-44'
             '1c-98a7-10da8387e4d6\\":{{}}}}}}}}" '
             '--tags CostCenter="RnD" '
             '--environment-type-name "{myEnvironmentType}" '
             '--project-name "{myProject2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ProjectEnvironmentTypes/delete/ProjectEnvironmentTypes_Delete
@try_manual
def step_project_environment_type_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project-environment-type delete -y '
             '--environment-type-name "{myEnvironmentType}" '
             '--project-name "{myProject2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Schedules/put/Schedules_CreateDailyShutdownPoolSchedule
@try_manual
def step_schedule_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter schedule create '
             '--state "Enabled" '
             '--time "17:30" '
             '--time-zone "America/Los_Angeles" '
             '--pool-name "{myPool3}" '
             '--project-name "{myProject5}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=[])
    test.cmd('az devcenter schedule wait --created '
             '--pool-name "{myPool3}" '
             '--project-name "{myProject5}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Schedules/get/Schedules_GetByPool
@try_manual
def step_schedule_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter schedule show '
             '--pool-name "{myPool3}" '
             '--project-name "{myProject4}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Schedules/get/Schedules_ListByPool
@try_manual
def step_schedule_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter schedule list '
             '--pool-name "{myPool3}" '
             '--project-name "{myProject4}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Schedules/patch/Schedules_Update
@try_manual
def step_schedule_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter schedule update '
             '--time "18:00" '
             '--pool-name "{myPool3}" '
             '--project-name "{myProject4}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Schedules/delete/Schedules_Delete
@try_manual
def step_schedule_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter schedule delete -y '
             '--pool-name "{myPool3}" '
             '--project-name "{myProject4}" '
             '--resource-group "{rg}" '
             '--name "{mySchedule}"',
             checks=checks)


# EXAMPLE: /Projects/delete/Projects_Delete
@try_manual
def step_project_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter project delete -y '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_ListBySubscription
@try_manual
def step_sku_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter sku list',
             checks=checks)


# EXAMPLE: /Usages/get/listUsages
@try_manual
def step_usage_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az devcenter usage list '
             '--location "westus"',
             checks=checks)
