# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from .utils import get_project_data
from ._validators import validate_endpoint
# Data plane

from collections import namedtuple
DevCenterClientAccessToken = namedtuple("AccessToken", ["token", "expires_on"])
import requests


class DevCenterClientTokenCredential:
    """Simple access token Authentication. Returns the access token as-is.
    """

    def __init__(self, access_token, expires_on):
        self.access_token = access_token
        self.expires_on = expires_on

    def get_token(self, *arg, **kwargs):
        return DevCenterClientAccessToken(self.access_token, self.expires_on)

    def signed_session(self, session=None):
        session = session or requests.Session()
        header = "{} {}".format('Bearer', self.access_token)
        session.headers['Authorization'] = header
        return session


def cf_devcenter_dataplane(cli_ctx, endpoint=None, dev_center=None, project_name=None):
    from azure.cli.core._profile import Profile
    from azext_devcenter.vendored_sdks.devcenter_dataplane import (
        DevCenterClient,
    )

    validate_endpoint(endpoint, dev_center)
    print(endpoint)

    if endpoint is None and dev_center is not None:
        project = get_project_data(cli_ctx, dev_center, project_name)
        endpoint = project["devCenterUri"]

    token = Profile(
        cli_ctx=cli_ctx
    ).get_raw_token(resource="https://devcenter.azure.com")[0][2]
    access_token = token['accessToken']
    expires_on=token['expires_on']

    credential = DevCenterClientTokenCredential(access_token, expires_on)
    

    cli_ctx.cloud.endpoints.active_directory_resource_id = "https://devcenter.azure.com"
    return DevCenterClient(endpoint, credential)


def cf_dev_center_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).dev_center


def cf_dev_boxes_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).dev_boxes


def cf_dev_box_operations_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).dev_box_operations


def cf_environments_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).environments


def cf_environment_operations_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).environment_operations

# Control plane


def cf_devcenter_cl(cli_ctx, *_):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from azext_devcenter.vendored_sdks.devcenter import DevCenter

    return get_mgmt_service_client(cli_ctx, DevCenter)
