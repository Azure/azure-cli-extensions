# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from .utils import get_project_data
from ._validators import validate_endpoint

# Data plane


def cf_devcenter_dataplane(cli_ctx, endpoint=None, dev_center=None, project_name=None):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from azext_devcenter.vendored_sdks.devcenter_dataplane import (
        DevCenterDataplaneClient,
    )

    validate_endpoint(endpoint, dev_center)

    if endpoint is None and dev_center is not None:
        project = get_project_data(cli_ctx, dev_center, project_name)

        # We need to set the project name even if we don't need this information
        # since initializing DevCenterDataplaneClient requires this param
        if project_name is None:
            project_name = project["name"]
        endpoint = project["devCenterUri"]

    if project_name is None:
        project_name = "placeholder"  # see comment above

    cli_ctx.cloud.endpoints.active_directory_resource_id = "https://devcenter.azure.com"

    return get_mgmt_service_client(
        cli_ctx,
        DevCenterDataplaneClient,
        subscription_bound=False,
        base_url_bound=False,
        endpoint=endpoint,
        project_name=project_name,
    )


def cf_project_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).project


def cf_pool_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).pool


def cf_schedule_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).schedule


def cf_dev_box_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).dev_box


def cf_environment_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).environments


def cf_catalog_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).catalogs


def cf_environment_definition_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).environment_definitions


def cf_environment_type_dp(cli_ctx, dev_center, *_):
    return cf_devcenter_dataplane(cli_ctx, dev_center).environment_type


# Control plane


def cf_devcenter_cl(cli_ctx, *_):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from azext_devcenter.vendored_sdks.devcenter import DevCenter

    return get_mgmt_service_client(cli_ctx, DevCenter)
