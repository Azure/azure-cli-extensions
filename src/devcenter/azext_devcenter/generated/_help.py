# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['devcenter'] = '''
    type: group
    short-summary: Manage Dev Center
'''

helps['devcenter dev-center'] = """
    type: group
    short-summary: Manage dev center with devcenter
"""

helps['devcenter dev-center list'] = """
    type: command
    short-summary: "Lists all devcenters in a resource group. And Lists all devcenters in a subscription."
    examples:
      - name: DevCenters_ListByResourceGroup
        text: |-
               az devcenter dev-center list --resource-group "rg1"
      - name: DevCenters_ListBySubscription
        text: |-
               az devcenter dev-center list
"""

helps['devcenter dev-center show'] = """
    type: command
    short-summary: "Gets a devcenter."
    examples:
      - name: DevCenters_Get
        text: |-
               az devcenter dev-center show --name "Contoso" --resource-group "rg1"
"""

helps['devcenter dev-center create'] = """
    type: command
    short-summary: "Create a devcenter resource."
    examples:
      - name: DevCenters_Create
        text: |-
               az devcenter dev-center create --location "centralus" --tags CostCode="12345" --name "Contoso" \
--resource-group "rg1"
      - name: DevCenters_CreateWithUserIdentity
        text: |-
               az devcenter dev-center create --type "UserAssigned" --user-assigned-identities \
"{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/identityGroup/providers/Microsoft.ManagedIdenti\
ty/userAssignedIdentities/testidentity1\\":{}}" --location "centralus" --tags CostCode="12345" --name "Contoso" \
--resource-group "rg1"
"""

helps['devcenter dev-center update'] = """
    type: command
    short-summary: "Partially updates a devcenter."
    examples:
      - name: DevCenters_Update
        text: |-
               az devcenter dev-center update --tags CostCode="12345" --name "Contoso" --resource-group "rg1"
"""

helps['devcenter dev-center delete'] = """
    type: command
    short-summary: "Deletes a devcenter."
    examples:
      - name: DevCenters_Delete
        text: |-
               az devcenter dev-center delete --name "Contoso" --resource-group "rg1"
"""

helps['devcenter dev-center wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter dev-center is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter dev-center is successfully created.
        text: |-
               az devcenter dev-center wait --name "Contoso" --resource-group "rg1" --created
      - name: Pause executing next line of CLI script until the devcenter dev-center is successfully updated.
        text: |-
               az devcenter dev-center wait --name "Contoso" --resource-group "rg1" --updated
      - name: Pause executing next line of CLI script until the devcenter dev-center is successfully deleted.
        text: |-
               az devcenter dev-center wait --name "Contoso" --resource-group "rg1" --deleted
"""

helps['devcenter project'] = """
    type: group
    short-summary: Manage project with devcenter
"""

helps['devcenter project list'] = """
    type: command
    short-summary: "Lists all projects in the resource group. And Lists all projects in the subscription."
    examples:
      - name: Projects_ListByResourceGroup
        text: |-
               az devcenter project list --resource-group "rg1"
      - name: Projects_ListBySubscription
        text: |-
               az devcenter project list
"""

helps['devcenter project show'] = """
    type: command
    short-summary: "Gets a specific project."
    examples:
      - name: Projects_Get
        text: |-
               az devcenter project show --name "{projectName}" --resource-group "rg1"
"""

helps['devcenter project create'] = """
    type: command
    short-summary: "Create a project."
    examples:
      - name: Projects_CreateOrUpdate
        text: |-
               az devcenter project create --location "centralus" --description "This is my first project." \
--dev-center-id "/subscriptions/{subscriptionId}/resourceGroups/rg1/providers/Microsoft.DevCenter/devcenters/{devCenter\
Name}" --tags CostCenter="R&D" --name "{projectName}" --resource-group "rg1"
"""

helps['devcenter project update'] = """
    type: command
    short-summary: "Partially updates a project."
    examples:
      - name: Projects_Update
        text: |-
               az devcenter project update --description "This is my first project." --tags CostCenter="R&D" --name \
"{projectName}" --resource-group "rg1"
"""

helps['devcenter project delete'] = """
    type: command
    short-summary: "Deletes a project resource."
    examples:
      - name: Projects_Delete
        text: |-
               az devcenter project delete --name "{projectName}" --resource-group "rg1"
"""

helps['devcenter project wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter project is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter project is successfully created.
        text: |-
               az devcenter project wait --name "{projectName}" --resource-group "rg1" --created
      - name: Pause executing next line of CLI script until the devcenter project is successfully updated.
        text: |-
               az devcenter project wait --name "{projectName}" --resource-group "rg1" --updated
      - name: Pause executing next line of CLI script until the devcenter project is successfully deleted.
        text: |-
               az devcenter project wait --name "{projectName}" --resource-group "rg1" --deleted
"""

helps['devcenter attached-network'] = """
    type: group
    short-summary: Manage attached network with devcenter
"""

helps['devcenter attached-network list'] = """
    type: command
    short-summary: "Lists the attached NetworkConnections for a Project. And Lists the attached NetworkConnections for \
a DevCenter."
    examples:
      - name: AttachedNetworks_ListByProject
        text: |-
               az devcenter attached-network list --project-name "{projectName}" --resource-group "rg1"
      - name: AttachedNetworks_ListByDevCenter
        text: |-
               az devcenter attached-network list --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter attached-network show'] = """
    type: command
    short-summary: "Gets an attached NetworkConnection. And Gets an attached NetworkConnection."
    examples:
      - name: AttachedNetworks_GetByProject
        text: |-
               az devcenter attached-network show --attached-network-connection-name "network-uswest3" --project-name \
"{projectName}" --resource-group "rg1"
      - name: AttachedNetworks_GetByDevCenter
        text: |-
               az devcenter attached-network show --attached-network-connection-name "network-uswest3" \
--dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter attached-network create'] = """
    type: command
    short-summary: "Create an attached NetworkConnection."
    examples:
      - name: AttachedNetworks_Create
        text: |-
               az devcenter attached-network create --attached-network-connection-name "{attachedNetworkConnectionName}\
" --network-connection-id "/subscriptions/{subscriptionId}/resourceGroups/rg1/providers/Microsoft.DevCenter/NetworkConn\
ections/network-uswest3" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter attached-network update'] = """
    type: command
    short-summary: "Update an attached NetworkConnection."
"""

helps['devcenter attached-network delete'] = """
    type: command
    short-summary: "Un-attach a NetworkConnection."
    examples:
      - name: AttachedNetworks_Delete
        text: |-
               az devcenter attached-network delete --attached-network-connection-name "{attachedNetworkConnectionName}\
" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter attached-network wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter attached-network is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter attached-network is successfully created.
        text: |-
               az devcenter attached-network wait --attached-network-connection-name "network-uswest3" \
--dev-center-name "Contoso" --resource-group "rg1" --created
      - name: Pause executing next line of CLI script until the devcenter attached-network is successfully updated.
        text: |-
               az devcenter attached-network wait --attached-network-connection-name "network-uswest3" \
--dev-center-name "Contoso" --resource-group "rg1" --updated
      - name: Pause executing next line of CLI script until the devcenter attached-network is successfully deleted.
        text: |-
               az devcenter attached-network wait --attached-network-connection-name "network-uswest3" \
--dev-center-name "Contoso" --resource-group "rg1" --deleted
"""

helps['devcenter gallery'] = """
    type: group
    short-summary: Manage gallery with devcenter
"""

helps['devcenter gallery list'] = """
    type: command
    short-summary: "Lists galleries for a devcenter."
    examples:
      - name: Galleries_ListByDevCenter
        text: |-
               az devcenter gallery list --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter gallery show'] = """
    type: command
    short-summary: "Gets a gallery."
    examples:
      - name: Galleries_Get
        text: |-
               az devcenter gallery show --dev-center-name "Contoso" --name "{galleryName}" --resource-group "rg1"
"""

helps['devcenter gallery create'] = """
    type: command
    short-summary: "Create a gallery."
    examples:
      - name: Galleries_CreateOrUpdate
        text: |-
               az devcenter gallery create --gallery-resource-id "/subscriptions/{subscriptionId}/resourceGroups/rg1/pr\
oviders/Microsoft.Compute/galleries/{galleryName}" --dev-center-name "Contoso" --name "{galleryName}" --resource-group \
"rg1"
"""

helps['devcenter gallery update'] = """
    type: command
    short-summary: "Update a gallery."
"""

helps['devcenter gallery delete'] = """
    type: command
    short-summary: "Deletes a gallery resource."
    examples:
      - name: Galleries_Delete
        text: |-
               az devcenter gallery delete --dev-center-name "Contoso" --name "{galleryName}" --resource-group "rg1"
"""

helps['devcenter gallery wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter gallery is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter gallery is successfully created.
        text: |-
               az devcenter gallery wait --dev-center-name "Contoso" --name "{galleryName}" --resource-group "rg1" \
--created
      - name: Pause executing next line of CLI script until the devcenter gallery is successfully updated.
        text: |-
               az devcenter gallery wait --dev-center-name "Contoso" --name "{galleryName}" --resource-group "rg1" \
--updated
      - name: Pause executing next line of CLI script until the devcenter gallery is successfully deleted.
        text: |-
               az devcenter gallery wait --dev-center-name "Contoso" --name "{galleryName}" --resource-group "rg1" \
--deleted
"""

helps['devcenter image'] = """
    type: group
    short-summary: Manage image with devcenter
"""

helps['devcenter image list'] = """
    type: command
    short-summary: "Lists images for a gallery. And Lists images for a devcenter."
    examples:
      - name: Images_ListByGallery
        text: |-
               az devcenter image list --dev-center-name "Contoso" --gallery-name "DevGallery" --resource-group "rg1"
      - name: Images_ListByDevCenter
        text: |-
               az devcenter image list --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter image show'] = """
    type: command
    short-summary: "Gets a gallery image."
    examples:
      - name: Images_Get
        text: |-
               az devcenter image show --dev-center-name "Contoso" --gallery-name "DefaultDevGallery" --name \
"{imageName}" --resource-group "rg1"
"""

helps['devcenter image-version'] = """
    type: group
    short-summary: Manage image version with devcenter
"""

helps['devcenter image-version list'] = """
    type: command
    short-summary: "Lists versions for an image."
    examples:
      - name: ImageVersions_ListByImage
        text: |-
               az devcenter image-version list --dev-center-name "Contoso" --gallery-name "DefaultDevGallery" \
--image-name "Win11" --resource-group "rg1"
"""

helps['devcenter image-version show'] = """
    type: command
    short-summary: "Gets an image version."
    examples:
      - name: Versions_Get
        text: |-
               az devcenter image-version show --dev-center-name "Contoso" --gallery-name "DefaultDevGallery" \
--image-name "Win11" --resource-group "rg1" --version-name "{versionName}"
"""

helps['devcenter catalog'] = """
    type: group
    short-summary: Manage catalog with devcenter
"""

helps['devcenter catalog list'] = """
    type: command
    short-summary: "Lists catalogs for a devcenter."
    examples:
      - name: Catalogs_ListByDevCenter
        text: |-
               az devcenter catalog list --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter catalog show'] = """
    type: command
    short-summary: "Gets a catalog."
    examples:
      - name: Catalogs_Get
        text: |-
               az devcenter catalog show --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter catalog create'] = """
    type: command
    short-summary: "Create a catalog."
    parameters:
      - name: --git-hub
        short-summary: "Properties for a GitHub catalog type."
        long-summary: |
            Usage: --git-hub uri=XX branch=XX secret-identifier=XX path=XX

            uri: Git URI.
            branch: Git branch.
            secret-identifier: A reference to the Key Vault secret containing a security token to authenticate to a \
Git repository.
            path: The folder where the catalog items can be found inside the repository.
      - name: --ado-git
        short-summary: "Properties for an Azure DevOps catalog type."
        long-summary: |
            Usage: --ado-git uri=XX branch=XX secret-identifier=XX path=XX

            uri: Git URI.
            branch: Git branch.
            secret-identifier: A reference to the Key Vault secret containing a security token to authenticate to a \
Git repository.
            path: The folder where the catalog items can be found inside the repository.
    examples:
      - name: Catalogs_CreateOrUpdateAdo
        text: |-
               az devcenter catalog create --ado-git path="/templates" branch="main" secret-identifier="https://contoso\
kv.vault.azure.net/secrets/CentralRepoPat" uri="https://contoso@dev.azure.com/contoso/contosoOrg/_git/centralrepo-fakec\
ontoso" --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1"
      - name: Catalogs_CreateOrUpdateGitHub
        text: |-
               az devcenter catalog create --git-hub path="/templates" branch="main" secret-identifier="https://contoso\
kv.vault.azure.net/secrets/CentralRepoPat" uri="https://github.com/Contoso/centralrepo-fake.git" --name \
"{catalogName}" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter catalog update'] = """
    type: command
    short-summary: "Partially updates a catalog."
    parameters:
      - name: --git-hub
        short-summary: "Properties for a GitHub catalog type."
        long-summary: |
            Usage: --git-hub uri=XX branch=XX secret-identifier=XX path=XX

            uri: Git URI.
            branch: Git branch.
            secret-identifier: A reference to the Key Vault secret containing a security token to authenticate to a \
Git repository.
            path: The folder where the catalog items can be found inside the repository.
      - name: --ado-git
        short-summary: "Properties for an Azure DevOps catalog type."
        long-summary: |
            Usage: --ado-git uri=XX branch=XX secret-identifier=XX path=XX

            uri: Git URI.
            branch: Git branch.
            secret-identifier: A reference to the Key Vault secret containing a security token to authenticate to a \
Git repository.
            path: The folder where the catalog items can be found inside the repository.
    examples:
      - name: Catalogs_Update
        text: |-
               az devcenter catalog update --git-hub path="/environments" --name "{catalogName}" --dev-center-name \
"Contoso" --resource-group "rg1"
"""

helps['devcenter catalog delete'] = """
    type: command
    short-summary: "Deletes a catalog resource."
    examples:
      - name: Catalogs_Delete
        text: |-
               az devcenter catalog delete --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter catalog sync'] = """
    type: command
    short-summary: "Syncs templates for a template source."
    examples:
      - name: Catalogs_Sync
        text: |-
               az devcenter catalog sync --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter catalog wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter catalog is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter catalog is successfully created.
        text: |-
               az devcenter catalog wait --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1" \
--created
      - name: Pause executing next line of CLI script until the devcenter catalog is successfully updated.
        text: |-
               az devcenter catalog wait --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1" \
--updated
      - name: Pause executing next line of CLI script until the devcenter catalog is successfully deleted.
        text: |-
               az devcenter catalog wait --name "{catalogName}" --dev-center-name "Contoso" --resource-group "rg1" \
--deleted
"""

helps['devcenter environment-type'] = """
    type: group
    short-summary: Manage environment type with devcenter
"""

helps['devcenter environment-type list'] = """
    type: command
    short-summary: "Lists environment types for the devcenter."
    examples:
      - name: EnvironmentTypes_ListByDevCenter
        text: |-
               az devcenter environment-type list --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter environment-type show'] = """
    type: command
    short-summary: "Gets an environment type."
    examples:
      - name: EnvironmentTypes_Get
        text: |-
               az devcenter environment-type show --dev-center-name "Contoso" --name "{environmentTypeName}" \
--resource-group "rg1"
"""

helps['devcenter environment-type create'] = """
    type: command
    short-summary: "Create an environment type."
    examples:
      - name: EnvironmentTypes_CreateOrUpdate
        text: |-
               az devcenter environment-type create --tags Owner="superuser" --dev-center-name "Contoso" --name \
"{environmentTypeName}" --resource-group "rg1"
"""

helps['devcenter environment-type update'] = """
    type: command
    short-summary: "Partially updates an environment type."
    examples:
      - name: EnvironmentTypes_Update
        text: |-
               az devcenter environment-type update --tags Owner="superuser" --dev-center-name "Contoso" --name \
"{environmentTypeName}" --resource-group "rg1"
"""

helps['devcenter environment-type delete'] = """
    type: command
    short-summary: "Deletes an environment type."
    examples:
      - name: EnvironmentTypes_Delete
        text: |-
               az devcenter environment-type delete --dev-center-name "Contoso" --name "{environmentTypeName}" \
--resource-group "rg1"
"""

helps['devcenter project-allowed-environment-type'] = """
    type: group
    short-summary: Manage project allowed environment type with devcenter
"""

helps['devcenter project-allowed-environment-type list'] = """
    type: command
    short-summary: "Lists allowed environment types for a project."
    examples:
      - name: ProjectAllowedEnvironmentTypes_List
        text: |-
               az devcenter project-allowed-environment-type list --project-name "Contoso" --resource-group "rg1"
"""

helps['devcenter project-allowed-environment-type show'] = """
    type: command
    short-summary: "Gets an allowed environment type."
    examples:
      - name: ProjectAllowedEnvironmentTypes_Get
        text: |-
               az devcenter project-allowed-environment-type show --environment-type-name "{environmentTypeName}" \
--project-name "Contoso" --resource-group "rg1"
"""

helps['devcenter project-environment-type'] = """
    type: group
    short-summary: Manage project environment type with devcenter
"""

helps['devcenter project-environment-type list'] = """
    type: command
    short-summary: "Lists environment types for a project."
    examples:
      - name: ProjectEnvironmentTypes_List
        text: |-
               az devcenter project-environment-type list --project-name "ContosoProj" --resource-group "rg1"
"""

helps['devcenter project-environment-type show'] = """
    type: command
    short-summary: "Gets a project environment type."
    examples:
      - name: ProjectEnvironmentTypes_Get
        text: |-
               az devcenter project-environment-type show --environment-type-name "{environmentTypeName}" \
--project-name "ContosoProj" --resource-group "rg1"
"""

helps['devcenter project-environment-type create'] = """
    type: command
    short-summary: "Create a project environment type."
    examples:
      - name: ProjectEnvironmentTypes_CreateOrUpdate
        text: |-
               az devcenter project-environment-type create --type "UserAssigned" --user-assigned-identities \
"{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/identityGroup/providers/Microsoft.ManagedIdenti\
ty/userAssignedIdentities/testidentity1\\":{}}" --roles "{\\"4cbf0b6c-e750-441c-98a7-10da8387e4d6\\":{}}" \
--deployment-target-id "/subscriptions/00000000-0000-0000-0000-000000000000" --status "Enabled" \
--user-role-assignments "{\\"e45e3m7c-176e-416a-b466-0c5ec8298f8a\\":{\\"roles\\":{\\"4cbf0b6c-e750-441c-98a7-10da8387e\
4d6\\":{}}}}" --tags CostCenter="RnD" --environment-type-name "{environmentTypeName}" --project-name "ContosoProj" \
--resource-group "rg1"
"""

helps['devcenter project-environment-type update'] = """
    type: command
    short-summary: "Partially updates a project environment type."
    examples:
      - name: ProjectEnvironmentTypes_Update
        text: |-
               az devcenter project-environment-type update --type "UserAssigned" --user-assigned-identities \
"{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/identityGroup/providers/Microsoft.ManagedIdenti\
ty/userAssignedIdentities/testidentity1\\":{}}" --deployment-target-id "/subscriptions/00000000-0000-0000-0000-00000000\
0000" --status "Enabled" --user-role-assignments "{\\"e45e3m7c-176e-416a-b466-0c5ec8298f8a\\":{\\"roles\\":{\\"4cbf0b6c\
-e750-441c-98a7-10da8387e4d6\\":{}}}}" --tags CostCenter="RnD" --environment-type-name "{environmentTypeName}" \
--project-name "ContosoProj" --resource-group "rg1"
"""

helps['devcenter project-environment-type delete'] = """
    type: command
    short-summary: "Deletes a project environment type."
    examples:
      - name: ProjectEnvironmentTypes_Delete
        text: |-
               az devcenter project-environment-type delete --environment-type-name "{environmentTypeName}" \
--project-name "ContosoProj" --resource-group "rg1"
"""

helps['devcenter dev-box-definition'] = """
    type: group
    short-summary: Manage dev box definition with devcenter
"""

helps['devcenter dev-box-definition list'] = """
    type: command
    short-summary: "List Dev Box definitions for a devcenter. And List Dev Box definitions configured for a project."
    examples:
      - name: DevBoxDefinitions_ListByDevCenter
        text: |-
               az devcenter dev-box-definition list --dev-center-name "Contoso" --resource-group "rg1"
      - name: DevBoxDefinitions_ListByProject
        text: |-
               az devcenter dev-box-definition list --project-name "ContosoProject" --resource-group "rg1"
"""

helps['devcenter dev-box-definition show'] = """
    type: command
    short-summary: "Gets a Dev Box definition And Gets a Dev Box definition configured for a project."
    examples:
      - name: DevBoxDefinitions_Get
        text: |-
               az devcenter dev-box-definition show --name "WebDevBox" --dev-center-name "Contoso" --resource-group \
"rg1"
      - name: DevBoxDefinitions_GetByProject
        text: |-
               az devcenter dev-box-definition show --name "WebDevBox" --project-name "ContosoProject" \
--resource-group "rg1"
"""

helps['devcenter dev-box-definition create'] = """
    type: command
    short-summary: "Create a Dev Box definition."
    parameters:
      - name: --image-reference
        short-summary: "Image reference information."
        long-summary: |
            Usage: --image-reference id=XX publisher=XX offer=XX sku=XX

            id: Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
            publisher: The image publisher.
            offer: The image offer.
            sku: The image sku.
      - name: --sku
        short-summary: "The SKU for Dev Boxes created using this definition."
        long-summary: |
            Usage: --sku name=XX tier=XX size=XX family=XX capacity=XX

            name: Required. The name of the SKU. Ex - P3. It is typically a letter+number code
            tier: This field is required to be implemented by the Resource Provider if the service has more than one \
tier, but is not required on a PUT.
            size: The SKU size. When the name field is the combination of tier and some other value, this would be the \
standalone code.
            family: If the service has different generations of hardware, for the same SKU, then that can be captured \
here.
            capacity: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in \
is not possible for the resource this may be omitted.
    examples:
      - name: DevBoxDefinitions_Create
        text: |-
               az devcenter dev-box-definition create --location "centralus" --image-reference \
id="/subscriptions/0ac520ee-14c0-480f-b6c9-0a90c58ffff/resourceGroups/Example/providers/Microsoft.DevCenter/devcenters/\
Contoso/galleries/contosogallery/images/exampleImage/version/1.0.0" --os-storage-type "SSD_1024" --sku name="Preview" \
--name "WebDevBox" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter dev-box-definition update'] = """
    type: command
    short-summary: "Partially updates a Dev Box definition."
    parameters:
      - name: --image-reference
        short-summary: "Image reference information."
        long-summary: |
            Usage: --image-reference id=XX publisher=XX offer=XX sku=XX

            id: Image ID, or Image version ID. When Image ID is provided, its latest version will be used.
            publisher: The image publisher.
            offer: The image offer.
            sku: The image sku.
      - name: --sku
        short-summary: "The SKU for Dev Boxes created using this definition."
        long-summary: |
            Usage: --sku name=XX tier=XX size=XX family=XX capacity=XX

            name: Required. The name of the SKU. Ex - P3. It is typically a letter+number code
            tier: This field is required to be implemented by the Resource Provider if the service has more than one \
tier, but is not required on a PUT.
            size: The SKU size. When the name field is the combination of tier and some other value, this would be the \
standalone code.
            family: If the service has different generations of hardware, for the same SKU, then that can be captured \
here.
            capacity: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in \
is not possible for the resource this may be omitted.
    examples:
      - name: DevBoxDefinitions_Patch
        text: |-
               az devcenter dev-box-definition update --image-reference id="/subscriptions/0ac520ee-14c0-480f-b6c9-0a90\
c58ffff/resourceGroups/Example/providers/Microsoft.DevCenter/devcenters/Contoso/galleries/contosogallery/images/example\
Image/version/2.0.0" --name "WebDevBox" --dev-center-name "Contoso" --resource-group "rg1"
"""

helps['devcenter dev-box-definition delete'] = """
    type: command
    short-summary: "Deletes a Dev Box definition."
    examples:
      - name: DevBoxDefinitions_Delete
        text: |-
               az devcenter dev-box-definition delete --name "WebDevBox" --dev-center-name "Contoso" --resource-group \
"rg1"
"""

helps['devcenter dev-box-definition wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter dev-box-definition is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter dev-box-definition is successfully created.
        text: |-
               az devcenter dev-box-definition wait --name "WebDevBox" --project-name "ContosoProject" \
--resource-group "rg1" --created
      - name: Pause executing next line of CLI script until the devcenter dev-box-definition is successfully updated.
        text: |-
               az devcenter dev-box-definition wait --name "WebDevBox" --project-name "ContosoProject" \
--resource-group "rg1" --updated
      - name: Pause executing next line of CLI script until the devcenter dev-box-definition is successfully deleted.
        text: |-
               az devcenter dev-box-definition wait --name "WebDevBox" --project-name "ContosoProject" \
--resource-group "rg1" --deleted
"""

helps['devcenter operation-statuses'] = """
    type: group
    short-summary: Manage operation statuses with devcenter
"""

helps['devcenter operation-statuses show'] = """
    type: command
    short-summary: "Gets the current status of an async operation."
    examples:
      - name: Get OperationStatus
        text: |-
               az devcenter operation-statuses show --operation-id "{operationId}" --location "{location}"
"""

helps['devcenter usage'] = """
    type: group
    short-summary: Manage usage with devcenter
"""

helps['devcenter usage list'] = """
    type: command
    short-summary: "Lists the current usages and limits in this location for the provided subscription."
    examples:
      - name: listUsages
        text: |-
               az devcenter usage list --location "westus"
"""

helps['devcenter sku'] = """
    type: group
    short-summary: Manage sku with devcenter
"""

helps['devcenter sku list'] = """
    type: command
    short-summary: "Lists the Microsoft.DevCenter SKUs available in a subscription."
    examples:
      - name: Skus_ListBySubscription
        text: |-
               az devcenter sku list
"""

helps['devcenter pool'] = """
    type: group
    short-summary: Manage pool with devcenter
"""

helps['devcenter pool list'] = """
    type: command
    short-summary: "Lists pools for a project."
    examples:
      - name: Pools_ListByProject
        text: |-
               az devcenter pool list --project-name "{projectName}" --resource-group "rg1"
"""

helps['devcenter pool show'] = """
    type: command
    short-summary: "Gets a machine pool."
    examples:
      - name: Pools_Get
        text: |-
               az devcenter pool show --name "{poolName}" --project-name "{projectName}" --resource-group "rg1"
"""

helps['devcenter pool create'] = """
    type: command
    short-summary: "Create a machine pool."
    examples:
      - name: Pools_CreateOrUpdate
        text: |-
               az devcenter pool create --location "centralus" --dev-box-definition-name "WebDevBox" \
--local-administrator "Enabled" --network-connection-name "Network1-westus2" --name "{poolName}" --project-name \
"{projectName}" --resource-group "rg1"
"""

helps['devcenter pool update'] = """
    type: command
    short-summary: "Partially updates a machine pool."
    examples:
      - name: Pools_Update
        text: |-
               az devcenter pool update --dev-box-definition-name "WebDevBox2" --name "{poolName}" --project-name \
"{projectName}" --resource-group "rg1"
"""

helps['devcenter pool delete'] = """
    type: command
    short-summary: "Deletes a machine pool."
    examples:
      - name: Pools_Delete
        text: |-
               az devcenter pool delete --name "poolName" --project-name "{projectName}" --resource-group "rg1"
"""

helps['devcenter pool wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter pool is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter pool is successfully created.
        text: |-
               az devcenter pool wait --name "{poolName}" --project-name "{projectName}" --resource-group "rg1" \
--created
      - name: Pause executing next line of CLI script until the devcenter pool is successfully updated.
        text: |-
               az devcenter pool wait --name "{poolName}" --project-name "{projectName}" --resource-group "rg1" \
--updated
      - name: Pause executing next line of CLI script until the devcenter pool is successfully deleted.
        text: |-
               az devcenter pool wait --name "{poolName}" --project-name "{projectName}" --resource-group "rg1" \
--deleted
"""

helps['devcenter schedule'] = """
    type: group
    short-summary: Manage schedule with devcenter
"""

helps['devcenter schedule list'] = """
    type: command
    short-summary: "Lists schedules for a pool."
    examples:
      - name: Schedules_ListByPool
        text: |-
               az devcenter schedule list --pool-name "DevPool" --project-name "TestProject" --resource-group "rg1"
"""

helps['devcenter schedule show'] = """
    type: command
    short-summary: "Gets a schedule resource."
    examples:
      - name: Schedules_GetByPool
        text: |-
               az devcenter schedule show --pool-name "DevPool" --project-name "TestProject" --resource-group "rg1" \
--name "autoShutdown"
"""

helps['devcenter schedule create'] = """
    type: command
    short-summary: "Create a Schedule."
    examples:
      - name: Schedules_CreateDailyShutdownPoolSchedule
        text: |-
               az devcenter schedule create --state "Enabled" --time "17:30" --time-zone "America/Los_Angeles" \
--pool-name "DevPool" --project-name "DevProject" --resource-group "rg1" --name "autoShutdown"
"""

helps['devcenter schedule update'] = """
    type: command
    short-summary: "Partially updates a Scheduled."
    examples:
      - name: Schedules_Update
        text: |-
               az devcenter schedule update --time "18:00" --pool-name "DevPool" --project-name "TestProject" \
--resource-group "rg1" --name "autoShutdown"
"""

helps['devcenter schedule delete'] = """
    type: command
    short-summary: "Deletes a Scheduled."
    examples:
      - name: Schedules_Delete
        text: |-
               az devcenter schedule delete --pool-name "DevPool" --project-name "TestProject" --resource-group "rg1" \
--name "autoShutdown"
"""

helps['devcenter schedule wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter schedule is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter schedule is successfully created.
        text: |-
               az devcenter schedule wait --pool-name "DevPool" --project-name "TestProject" --resource-group "rg1" \
--name "autoShutdown" --created
      - name: Pause executing next line of CLI script until the devcenter schedule is successfully updated.
        text: |-
               az devcenter schedule wait --pool-name "DevPool" --project-name "TestProject" --resource-group "rg1" \
--name "autoShutdown" --updated
      - name: Pause executing next line of CLI script until the devcenter schedule is successfully deleted.
        text: |-
               az devcenter schedule wait --pool-name "DevPool" --project-name "TestProject" --resource-group "rg1" \
--name "autoShutdown" --deleted
"""

helps['devcenter network-connection'] = """
    type: group
    short-summary: Manage network connection with devcenter
"""

helps['devcenter network-connection list'] = """
    type: command
    short-summary: "Lists network connections in a resource group And Lists network connections in a subscription."
    examples:
      - name: NetworkConnections_ListByResourceGroup
        text: |-
               az devcenter network-connection list --resource-group "rg1"
      - name: NetworkConnections_ListBySubscription
        text: |-
               az devcenter network-connection list
"""

helps['devcenter network-connection show'] = """
    type: command
    short-summary: "Gets a network connection resource."
    examples:
      - name: NetworkConnections_Get
        text: |-
               az devcenter network-connection show --name "uswest3network" --resource-group "rg1"
"""

helps['devcenter network-connection create'] = """
    type: command
    short-summary: "Create a Network Connections resource."
    examples:
      - name: NetworkConnections_CreateOrUpdate
        text: |-
               az devcenter network-connection create --location "centralus" --domain-join-type "HybridAzureADJoin" \
--domain-name "mydomaincontroller.local" --domain-password "Password value for user" --domain-username \
"testuser@mydomaincontroller.local" --networking-resource-group-name "NetworkInterfaces" --subnet-id \
"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ExampleRG/providers/Microsoft.Network/virtualNetwor\
ks/ExampleVNet/subnets/default" --name "uswest3network" --resource-group "rg1"
"""

helps['devcenter network-connection update'] = """
    type: command
    short-summary: "Partially updates a Network Connection."
    examples:
      - name: NetworkConnections_Update
        text: |-
               az devcenter network-connection update --domain-password "New Password value for user" --name \
"uswest3network" --resource-group "rg1"
"""

helps['devcenter network-connection delete'] = """
    type: command
    short-summary: "Deletes a Network Connections resource."
    examples:
      - name: NetworkConnections_Delete
        text: |-
               az devcenter network-connection delete --name "{networkConnectionName}" --resource-group "rg1"
"""

helps['devcenter network-connection list-health-detail'] = """
    type: command
    short-summary: "Lists health check status details."
    examples:
      - name: NetworkConnections_ListHealthDetails
        text: |-
               az devcenter network-connection list-health-detail --name "uswest3network" --resource-group "rg1"
"""

helps['devcenter network-connection run-health-check'] = """
    type: command
    short-summary: "Triggers a new health check run. The execution and health check result can be tracked via the \
network Connection health check details."
    examples:
      - name: NetworkConnections_RunHealthChecks
        text: |-
               az devcenter network-connection run-health-check --name "uswest3network" --resource-group "rg1"
"""

helps['devcenter network-connection show-health-detail'] = """
    type: command
    short-summary: "Gets health check status details."
    examples:
      - name: NetworkConnections_GetHealthDetails
        text: |-
               az devcenter network-connection show-health-detail --name "{networkConnectionName}" --resource-group \
"rg1"
"""

helps['devcenter network-connection wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the devcenter network-connection is met.
    examples:
      - name: Pause executing next line of CLI script until the devcenter network-connection is successfully created.
        text: |-
               az devcenter network-connection wait --name "uswest3network" --resource-group "rg1" --created
      - name: Pause executing next line of CLI script until the devcenter network-connection is successfully updated.
        text: |-
               az devcenter network-connection wait --name "uswest3network" --resource-group "rg1" --updated
      - name: Pause executing next line of CLI script until the devcenter network-connection is successfully deleted.
        text: |-
               az devcenter network-connection wait --name "uswest3network" --resource-group "rg1" --deleted
"""
