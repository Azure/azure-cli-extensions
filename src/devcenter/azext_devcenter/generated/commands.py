# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from azure.cli.core.commands import CliCommandType
from azext_devcenter.generated._client_factory import cf_dev_center, cf_dev_box, cf_environment


devcenter_dev_box = CliCommandType(
    operations_tmpl=(
        'azext_devcenter.vendored_sdks.devcenter_dataplane.operations._dev_boxes_operations#DevBoxesOperations.{}'
    ),
    client_factory=cf_dev_box,
)


devcenter_dev_center = CliCommandType(
    operations_tmpl=(
        'azext_devcenter.vendored_sdks.devcenter_dataplane.operations._dev_center_operations#DevCenterOperations.{}'
    ),
    client_factory=cf_dev_center,
)


devcenter_environment = CliCommandType(
    operations_tmpl='azext_devcenter.vendored_sdks.devcenter_dataplane.operations._environments_operations#EnvironmentsOperations.{}',
    client_factory=cf_environment,
)


def load_command_table(self, _):

    with self.command_group('devcenter dev-box', devcenter_dev_box, client_factory=cf_dev_box) as g:
        g.custom_command('create-dev-box', 'devcenter_dev_box_create_dev_box')
        g.custom_command('delay-action', 'devcenter_dev_box_delay_action')
        g.custom_command('delete-dev-box', 'devcenter_dev_box_delete_dev_box')
        g.custom_command('list-action', 'devcenter_dev_box_list_action')
        g.custom_command('list-dev-box', 'devcenter_dev_box_list_dev_box')
        g.custom_command('list-pool', 'devcenter_dev_box_list_pool')
        g.custom_command('list-schedule', 'devcenter_dev_box_list_schedule')
        g.custom_command('restart-dev-box', 'devcenter_dev_box_restart_dev_box')
        g.custom_command('show-action', 'devcenter_dev_box_show_action')
        g.custom_command('show-dev-box', 'devcenter_dev_box_show_dev_box')
        g.custom_command('show-pool', 'devcenter_dev_box_show_pool')
        g.custom_command('show-remote-connection', 'devcenter_dev_box_show_remote_connection')
        g.custom_command('show-schedule', 'devcenter_dev_box_show_schedule')
        g.custom_command('skip-action', 'devcenter_dev_box_skip_action')
        g.custom_command('start-dev-box', 'devcenter_dev_box_start_dev_box')
        g.custom_command('stop-dev-box', 'devcenter_dev_box_stop_dev_box')

    with self.command_group('devcenter dev-center', devcenter_dev_center, client_factory=cf_dev_center) as g:
        g.custom_command('create-notification-setting', 'devcenter_dev_center_create_notification_setting')
        g.custom_command('list-all-dev-box', 'devcenter_dev_center_list_all_dev_box')
        g.custom_command(
            'list-notification-setting-allowed-culture',
            'devcenter_dev_center_list_notification_setting_allowed_culture',
        )
        g.custom_command('list-project', 'devcenter_dev_center_list_project')
        g.custom_command('show-notification-setting', 'devcenter_dev_center_show_notification_setting')
        g.custom_command('show-project', 'devcenter_dev_center_show_project')

    with self.command_group('devcenter environment', devcenter_environment, client_factory=cf_environment) as g:
        g.custom_command('create-or-replace-environment', 'devcenter_environment_create_or_replace_environment')
        g.custom_command('delete-environment', 'devcenter_environment_delete_environment')
        g.custom_command('list-artifact', 'devcenter_environment_list_artifact')
        g.custom_command('list-catalog', 'devcenter_environment_list_catalog')
        g.custom_command('list-environment', 'devcenter_environment_list_environment')
        g.custom_command('list-environment-definition', 'devcenter_environment_list_environment_definition')
        g.custom_command('list-environment-type', 'devcenter_environment_list_environment_type')
        g.custom_command('show-catalog', 'devcenter_environment_show_catalog')
        g.custom_command('show-environment', 'devcenter_environment_show_environment')
        g.custom_command('show-environment-definition', 'devcenter_environment_show_environment_definition')

    with self.command_group('devcenter', is_experimental=True):
        pass
