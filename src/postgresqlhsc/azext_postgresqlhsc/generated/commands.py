# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_postgresqlhsc.generated._client_factory import cf_server_group
    postgresqlhsc_server_group = CliCommandType(
        operations_tmpl='azext_postgresqlhsc.vendored_sdks.postgresqlhsc.operations._server_group_operations#ServerGrou'
        'pOperations.{}',
        client_factory=cf_server_group)
    with self.command_group('postgresqlhsc server-group', postgresqlhsc_server_group, client_factory=cf_server_group,
                            is_experimental=True) as g:
        g.custom_command('list', 'postgresqlhsc_server_group_list')
        g.custom_show_command('show', 'postgresqlhsc_server_group_show')
        g.custom_command('create', 'postgresqlhsc_server_group_create', supports_no_wait=True)
        g.custom_command('update', 'postgresqlhsc_server_group_update', supports_no_wait=True)
        g.custom_command('delete', 'postgresqlhsc_server_group_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('restart', 'postgresqlhsc_server_group_restart', supports_no_wait=True)
        g.custom_command('start', 'postgresqlhsc_server_group_start', supports_no_wait=True)
        g.custom_command('stop', 'postgresqlhsc_server_group_stop', supports_no_wait=True)
        g.custom_wait_command('wait', 'postgresqlhsc_server_group_show')

    from azext_postgresqlhsc.generated._client_factory import cf_server
    postgresqlhsc_server = CliCommandType(
        operations_tmpl='azext_postgresqlhsc.vendored_sdks.postgresqlhsc.operations._server_operations#ServerOperations'
        '.{}',
        client_factory=cf_server)
    with self.command_group('postgresqlhsc server', postgresqlhsc_server, client_factory=cf_server,
                            is_experimental=True) as g:
        g.custom_command('list', 'postgresqlhsc_server_list')
        g.custom_show_command('show', 'postgresqlhsc_server_show')

    from azext_postgresqlhsc.generated._client_factory import cf_configuration
    postgresqlhsc_configuration = CliCommandType(
        operations_tmpl='azext_postgresqlhsc.vendored_sdks.postgresqlhsc.operations._configuration_operations#Configura'
        'tionOperations.{}',
        client_factory=cf_configuration)
    with self.command_group('postgresqlhsc configuration', postgresqlhsc_configuration,
                            client_factory=cf_configuration, is_experimental=True) as g:
        g.custom_command('list', 'postgresqlhsc_configuration_list')
        g.custom_show_command('show', 'postgresqlhsc_configuration_show')
        g.custom_command('update', 'postgresqlhsc_configuration_update', supports_no_wait=True)
        g.custom_wait_command('wait', 'postgresqlhsc_configuration_show')

    from azext_postgresqlhsc.generated._client_factory import cf_firewall_rule
    postgresqlhsc_firewall_rule = CliCommandType(
        operations_tmpl='azext_postgresqlhsc.vendored_sdks.postgresqlhsc.operations._firewall_rule_operations#FirewallR'
        'uleOperations.{}',
        client_factory=cf_firewall_rule)
    with self.command_group('postgresqlhsc firewall-rule', postgresqlhsc_firewall_rule,
                            client_factory=cf_firewall_rule, is_experimental=True) as g:
        g.custom_command('list', 'postgresqlhsc_firewall_rule_list')
        g.custom_show_command('show', 'postgresqlhsc_firewall_rule_show')
        g.custom_command('create', 'postgresqlhsc_firewall_rule_create', supports_no_wait=True)
        g.custom_command('update', 'postgresqlhsc_firewall_rule_update', supports_no_wait=True)
        g.custom_command('delete', 'postgresqlhsc_firewall_rule_delete', supports_no_wait=True, confirmation=True)
        g.custom_wait_command('wait', 'postgresqlhsc_firewall_rule_show')

    from azext_postgresqlhsc.generated._client_factory import cf_role
    postgresqlhsc_role = CliCommandType(
        operations_tmpl='azext_postgresqlhsc.vendored_sdks.postgresqlhsc.operations._role_operations#RoleOperations.{}',
        client_factory=cf_role)
    with self.command_group('postgresqlhsc role', postgresqlhsc_role, client_factory=cf_role,
                            is_experimental=True) as g:
        g.custom_command('list', 'postgresqlhsc_role_list')
        g.custom_command('create', 'postgresqlhsc_role_create')
        g.custom_command('delete', 'postgresqlhsc_role_delete', confirmation=True)
