# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from azure.cli.core.util import sdk_no_wait


def postgresqlhsc_server_group_list(client,
                                    resource_group_name=None):
    if resource_group_name:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list()


def postgresqlhsc_server_group_show(client,
                                    resource_group_name,
                                    server_group_name):
    return client.get(resource_group_name=resource_group_name,
                      server_group_name=server_group_name)


def postgresqlhsc_server_group_create(client,
                                      resource_group_name,
                                      server_group_name,
                                      location,
                                      tags=None,
                                      create_mode=None,
                                      administrator_login=None,
                                      administrator_login_password=None,
                                      backup_retention_days=None,
                                      postgresql_version=None,
                                      citus_version=None,
                                      enable_mx=None,
                                      enable_zfs=None,
                                      enable_shards_on_coordinator=None,
                                      server_role_groups=None,
                                      maintenance_window=None,
                                      availability_zone=None,
                                      standby_availability_zone=None,
                                      source_subscription_id=None,
                                      source_resource_group_name=None,
                                      source_server_group_name=None,
                                      source_location=None,
                                      point_in_time_utc=None,
                                      delegated_subnet_arguments_subnet_arm_resource_id=None,
                                      no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_create_or_update,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name,
                       tags=tags,
                       location=location,
                       create_mode=create_mode,
                       administrator_login=administrator_login,
                       administrator_login_password=administrator_login_password,
                       backup_retention_days=backup_retention_days,
                       postgresql_version=postgresql_version,
                       citus_version=citus_version,
                       enable_mx=enable_mx,
                       enable_zfs=enable_zfs,
                       enable_shards_on_coordinator=enable_shards_on_coordinator,
                       server_role_groups=server_role_groups,
                       maintenance_window=maintenance_window,
                       availability_zone=availability_zone,
                       standby_availability_zone=standby_availability_zone,
                       source_subscription_id=source_subscription_id,
                       source_resource_group_name=source_resource_group_name,
                       source_server_group_name=source_server_group_name,
                       source_location=source_location,
                       point_in_time_utc=point_in_time_utc,
                       subnet_arm_resource_id=delegated_subnet_arguments_subnet_arm_resource_id)


def postgresqlhsc_server_group_update(client,
                                      resource_group_name,
                                      server_group_name,
                                      location=None,
                                      tags=None,
                                      administrator_login_password=None,
                                      backup_retention_days=None,
                                      postgresql_version=None,
                                      citus_version=None,
                                      enable_shards_on_coordinator=None,
                                      server_role_groups=None,
                                      maintenance_window=None,
                                      availability_zone=None,
                                      standby_availability_zone=None,
                                      no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_update,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name,
                       location=location,
                       tags=tags,
                       administrator_login_password=administrator_login_password,
                       backup_retention_days=backup_retention_days,
                       postgresql_version=postgresql_version,
                       citus_version=citus_version,
                       enable_shards_on_coordinator=enable_shards_on_coordinator,
                       server_role_groups=server_role_groups,
                       maintenance_window=maintenance_window,
                       availability_zone=availability_zone,
                       standby_availability_zone=standby_availability_zone)


def postgresqlhsc_server_group_delete(client,
                                      resource_group_name,
                                      server_group_name,
                                      no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_delete,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name)


def postgresqlhsc_server_group_restart(client,
                                       resource_group_name,
                                       server_group_name,
                                       no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_restart,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name)


def postgresqlhsc_server_group_start(client,
                                     resource_group_name,
                                     server_group_name,
                                     no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_start,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name)


def postgresqlhsc_server_group_stop(client,
                                    resource_group_name,
                                    server_group_name,
                                    no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_stop,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name)


def postgresqlhsc_server_list(client,
                              resource_group_name,
                              server_group_name):
    return client.list_by_server_group(resource_group_name=resource_group_name,
                                       server_group_name=server_group_name)


def postgresqlhsc_server_show(client,
                              resource_group_name,
                              server_group_name,
                              server_name):
    return client.get(resource_group_name=resource_group_name,
                      server_group_name=server_group_name,
                      server_name=server_name)


def postgresqlhsc_configuration_list(client,
                                     resource_group_name,
                                     server_group_name,
                                     server_name=None):
    if resource_group_name and server_group_name is not None and server_name is not None:
        return client.list_by_server(resource_group_name=resource_group_name,
                                     server_group_name=server_group_name,
                                     server_name=server_name)
    return client.list_by_server_group(resource_group_name=resource_group_name,
                                       server_group_name=server_group_name)


def postgresqlhsc_configuration_show(client,
                                     resource_group_name,
                                     server_group_name,
                                     configuration_name):
    return client.get(resource_group_name=resource_group_name,
                      server_group_name=server_group_name,
                      configuration_name=configuration_name)


def postgresqlhsc_configuration_update(client,
                                       resource_group_name,
                                       server_group_name,
                                       configuration_name,
                                       server_role_group_configurations=None,
                                       no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_update,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name,
                       configuration_name=configuration_name,
                       server_role_group_configurations=server_role_group_configurations)


def postgresqlhsc_firewall_rule_list(client,
                                     resource_group_name,
                                     server_group_name):
    return client.list_by_server_group(resource_group_name=resource_group_name,
                                       server_group_name=server_group_name)


def postgresqlhsc_firewall_rule_show(client,
                                     resource_group_name,
                                     server_group_name,
                                     firewall_rule_name):
    return client.get(resource_group_name=resource_group_name,
                      server_group_name=server_group_name,
                      firewall_rule_name=firewall_rule_name)


def postgresqlhsc_firewall_rule_create(client,
                                       resource_group_name,
                                       server_group_name,
                                       firewall_rule_name,
                                       start_ip_address,
                                       end_ip_address,
                                       no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_create_or_update,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name,
                       firewall_rule_name=firewall_rule_name,
                       start_ip_address=start_ip_address,
                       end_ip_address=end_ip_address)


def postgresqlhsc_firewall_rule_update(client,
                                       resource_group_name,
                                       server_group_name,
                                       firewall_rule_name,
                                       start_ip_address,
                                       end_ip_address,
                                       no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_create_or_update,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name,
                       firewall_rule_name=firewall_rule_name,
                       start_ip_address=start_ip_address,
                       end_ip_address=end_ip_address)


def postgresqlhsc_firewall_rule_delete(client,
                                       resource_group_name,
                                       server_group_name,
                                       firewall_rule_name,
                                       no_wait=False):
    return sdk_no_wait(no_wait,
                       client.begin_delete,
                       resource_group_name=resource_group_name,
                       server_group_name=server_group_name,
                       firewall_rule_name=firewall_rule_name)


def postgresqlhsc_role_list(client,
                            resource_group_name,
                            server_group_name):
    return client.list_by_server_group(resource_group_name=resource_group_name,
                                       server_group_name=server_group_name)


def postgresqlhsc_role_create(client,
                              resource_group_name,
                              server_group_name,
                              role_name,
                              password=None):
    return client.begin_create(resource_group_name=resource_group_name,
                               server_group_name=server_group_name,
                               role_name=role_name,
                               password=password)


def postgresqlhsc_role_delete(client,
                              resource_group_name,
                              server_group_name,
                              role_name):
    return client.begin_delete(resource_group_name=resource_group_name,
                               server_group_name=server_group_name,
                               role_name=role_name)
