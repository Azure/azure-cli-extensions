# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from azure.cli.testsdk import (live_only)
from azure_devtools.scenario_tests import AllowLargeResponse
from .. import try_manual


# EXAMPLE: /CustomRollouts/put/CustomRollouts_CreateOrUpdate
@try_manual
def step_custom_rollout_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub custom-rollout create '
             '--provider-namespace "{providerNamespace}" '
             '--rollout-name "{customRolloutName}" '
             '--canary regions="EastUS2EUAP" regions="centraluseuap"',
             checks=[])


# EXAMPLE: /CustomRollouts/get/CustomRollouts_Get
@try_manual
def step_custom_rollout_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub custom-rollout show '
             '--provider-namespace "{providerNamespace}" '
             '--rollout-name "{customRolloutName}"',
             checks=checks)


# EXAMPLE: /CustomRollouts/get/CustomRollouts_ListByProviderRegistration
@AllowLargeResponse()
@try_manual
def step_custom_rollout_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub custom-rollout list '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /DefaultRollouts/put/DefaultRollouts_CreateOrUpdate
@AllowLargeResponse()
@live_only()
def step_default_rollout_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub default-rollout create '
             '--provider-namespace "{providerNamespace}" '
             '--rollout-name "{defaultRolloutName}" '
             '--rest-of-the-world-group-two wait-duration="PT2H" '
             '--canary skip-regions="centraluseuap"',
             checks=checks)


# EXAMPLE: /DefaultRollouts/get/DefaultRollouts_Get
@AllowLargeResponse()
@try_manual
def step_default_rollout_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub default-rollout show '
             '--provider-namespace "{providerNamespace}" '
             '--rollout-name "{defaultRolloutName}"',
             checks=checks)


# EXAMPLE: /DefaultRollouts/get/DefaultRollouts_ListByProviderRegistration
@AllowLargeResponse()
@try_manual
def step_default_rollout_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub default-rollout list '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /DefaultRollouts/post/DefaultRollouts_Stop
@try_manual
def step_default_rollout_stop(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub default-rollout stop '
             '--provider-namespace "{providerNamespace}" '
             '--rollout-name "{defaultRolloutName}"',
             checks=checks)


# EXAMPLE: /DefaultRollouts/delete/DefaultRollouts_Delete
@try_manual
def step_default_rollout_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub default-rollout delete -y '
             '--provider-namespace "{providerNamespace}" '
             '--rollout-name "{defaultRolloutName}"',
             checks=checks)


# EXAMPLE: /Operations/put/Operations_CreateOrUpdate
@try_manual
def step_operation_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub operation create '
             '--contents "[{{\\"name\\":\\"Microsoft.Contoso/Employees/Read\\",\\"display\\":{{\\"description\\":\\"Rea'
             'd employees\\",\\"operation\\":\\"Gets/List employee resources\\",\\"provider\\":\\"Microsoft.Contoso\\",'
             '\\"resource\\":\\"Employees\\"}}}}]" '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /Operations/get/Operations_ListByProviderRegistration
@AllowLargeResponse()
@try_manual
def step_operation_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub operation list '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /Operations/delete/Operations_Delete
@try_manual
def step_operation_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub operation delete -y '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /providerhub/post/CheckinManifest
@try_manual
def step_manifest_checkin(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub manifest checkin '
             '--environment "Prod" '
             '--baseline-arm-manifest-location "EastUS2EUAP" '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /providerhub/post/GenerateManifest
@AllowLargeResponse()
@try_manual
def step_manifest_generate(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub manifest generate '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /ProviderRegistrations/put/ProviderRegistrations_CreateOrUpdate
@AllowLargeResponse()
@try_manual
def step_provider_registration_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub provider-registration create '
             '--providerhub-metadata-authorizations application-id="3d834152-5efa-46f7-85a4-a18c2b5d46f9" '
             'role-definition-id="760505bf-dcfa-4311-b890-18da392a00b2" '
             '--providerhub-metadata-authentication allowed-audiences="https://management.core.windows.net/" '
             '--service-tree-infos service-id="6f53185c-ea09-4fc3-9075-318dec805303" '
             'component-id="6f53185c-ea09-4fc3-9075-318dec805303" '
             '--capabilities effect="Allow" quota-id="CSP_2015-05-01" '
             '--capabilities effect="Allow" quota-id="CSP_MG_2017-12-01" '
             '--manifest-owners "SPARTA-PlatformServiceAdministrator" '
             '--incident-contact-email "helpme@contoso.com" '
             '--incident-routing-service "Contoso Resource Provider" '
             '--incident-routing-team "Contoso Triage" '
             '--provider-type "Internal, Hidden" '
             '--provider-version "2.0" '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /ProviderRegistrations/get/ProviderRegistrations_Get
@AllowLargeResponse()
@try_manual
def step_provider_registration_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub provider-registration show '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /ProviderRegistrations/get/ProviderRegistrations_List
@AllowLargeResponse()
@try_manual
def step_provider_registration_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub provider-registration list',
             checks=checks)


# EXAMPLE: /ProviderRegistrations/post/ProviderRegistrations_GenerateOperations
@AllowLargeResponse()
@try_manual
def step_provider_registration_generate_operation(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub provider-registration generate-operation '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /ProviderRegistrations/delete/ProviderRegistrations_Delete
@try_manual
def step_provider_registration_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub provider-registration delete -y '
             '--provider-namespace "{providerNamespace}" ',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistration/put/ResourceTypeRegistration_CreateOrUpdate
@AllowLargeResponse()
@try_manual
def step_resource_type_registration_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub resource-type-registration create '
             '--endpoints api-versions="2020-01-01-preview" '
             'locations="" required-features="Microsoft.Contoso/RPaaSSampleApp" '
             '--regionality "Global" '
             '--routing-type "Proxyonly, Extension" '
             '--swagger-specifications api-versions="2020-01-01-preview" swagger-spec-folder-uri="https://github.com/Azure/azure-rest-api-specs-pr/blob/RPSaaSMaster/specification/contoso/resource-manager/Microsoft.Contoso/" '
             '--provider-namespace "{providerNamespace}" '
             '--enable-async-operation false '
             '--enable-third-party-s2s false '
             '--resource-type "extensionresourcetype"',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistrations/get/ResourceTypeRegistrations_ListByProviderRegistration
@AllowLargeResponse()
@try_manual
def step_resource_type_registration_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub resource-type-registration list '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistrations/get/ResourceTypeRegistrations_Get
@AllowLargeResponse()
@try_manual
def step_resource_type_registration_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub resource-type-registration show '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "employees"',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistration/put/ResourceTypeRegistration_CreateOrUpdate
@AllowLargeResponse()
@try_manual
def step_nested_resource_type_registration_create(test, checks=None):
    if checks is None:
        checks = [
            test.check("properties.name", "employees/NestedResourceType", case_sensitive=False),
            test.check("properties.routingType", "ProxyOnly", case_sensitive=False),
            test.check("properties.regionality", "Global", case_sensitive=False)
        ]
    test.cmd('az providerhub resource-type-registration create '
             '--endpoints api-versions="2019-01-01" locations="Global" '
             'required-features="Microsoft.Contoso/RPaaSSampleApp" extension-endpoint-uri="https://contoso-test-extension-endpoint.com/" extension-categories="ResourceReadValidate" extension-categories="ResourceDeletionValidate" '
             '--regionality "Global" '
             '--routing-type "ProxyOnly" '
             '--swagger-specifications api-versions="2019-01-01" swagger-spec-folder-uri="https://github.com/Azure/azure-rest-api-specs-pr/tree/RPSaaSMaster/specification/rpsaas/resource-manager/Microsoft.Contoso/" '
             '--provider-namespace "{providerNamespace}" '
             '--enable-async-operation false '
             '--template-deployment-options preflight-supported="true" preflight-options="DefaultValidationOnly" preflight-options="continueDeploymentOnFailure" '
             '--resource-type "{resourceType}/{nestedResourceType}"',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistration/put/ResourceTypeRegistration_CreateOrUpdate
@AllowLargeResponse()
@try_manual
def step_nested_resource_type_registration_extensions_create(test, checks=None):
    if checks is None:
        checks = [
            test.check("properties.name", "employees/NestedResourceType", case_sensitive=False),
            test.check("properties.routingType", "ProxyOnly", case_sensitive=False),
            test.check("properties.regionality", "Global", case_sensitive=False)
        ]
    test.cmd('az providerhub resource-type-registration create '
             '--endpoints api-versions="2019-01-01" locations="Global" '
             'required-features="Microsoft.Contoso/RPaaSSampleApp" extensions=[{{\\"endpointUri\\":\\"https://contoso-test-extension-endpoint.com/\\",\\"extensionCategories\\":[\\"ResourceReadValidate\\",\\"ResourceDeletionValidate\\"]}}] '
             '--regionality "Global" '
             '--routing-type "ProxyOnly" '
             '--swagger-specifications api-versions="2019-01-01" swagger-spec-folder-uri="https://github.com/Azure/azure-rest-api-specs-pr/tree/RPSaaSMaster/specification/rpsaas/resource-manager/Microsoft.Contoso/" '
             '--provider-namespace "{providerNamespace}" '
             '--enable-async-operation false '
             '--template-deployment-options preflight-supported="true" preflight-options="DefaultValidationOnly" preflight-options="continueDeploymentOnFailure" '
             '--resource-type "{resourceType}/{nestedResourceType}"',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistration/delete/ResourceTypeRegistration_Delete
@try_manual
def step_nested_resource_type_registration_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub resource-type-registration delete -y '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}/{nestedResourceType}"',
             checks=checks)


# EXAMPLE: /ResourceTypeRegistrations/get/ResourceTypeRegistrations_Get
@AllowLargeResponse()
@try_manual
def step_nested_resource_type_registration_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub resource-type-registration show '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}/{nestedResourceType}"',
             checks=checks)


# EXAMPLE: /NotificationRegistrations/put/NotificationRegistrations_CreateOrUpdate
@try_manual
def step_notification_registration_create(test, checks=None):
    if checks is None:
        checks = [
            test.check("name", "{notificationRegistration}", case_sensitive=False),
            test.check("properties.messageScope", "RegisteredSubscriptions", case_sensitive=False),
            test.check("properties.notificationMode", "EventHub", case_sensitive=False)
        ]
    test.cmd('az providerhub notification-registration create '
             '--name "{notificationRegistration}" '
             '--included-events "*/write" "Microsoft.Contoso/employees/delete" '
             '--message-scope "RegisteredSubscriptions" '
             '--notification-endpoints locations="" locations="East US" notification-destination="/subscriptions/ac6bcfb5-3dc1-491f-95a6-646b89bf3e88/resourceGroups/mgmtexp-eastus/providers/Microsoft.EventHub/namespaces/unitedstates-mgmtexpint/eventhubs/armlinkednotifications" '
             '--notification-endpoints locations="East US" notification-destination="/subscriptions/{subscription_'
             'id}/resourceGroups/providers/Microsoft.EventHub/namespaces/europe-mgmtexpint/eventhubs/armlinkedno'
             'tifications" '
             '--notification-mode "EventHub" '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /NotificationRegistrations/get/NotificationRegistrations_Get
@try_manual
def step_notification_registration_show(test, checks=None):
    if checks is None:
        checks = [
            test.check("name", "{notificationRegistration}", case_sensitive=False),
            test.check("properties.messageScope", "RegisteredSubscriptions", case_sensitive=False),
            test.check("properties.notificationMode", "EventHub", case_sensitive=False),
        ]
    test.cmd('az providerhub notification-registration show '
             '--name "{notificationRegistration}" '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /NotificationRegistrations/get/NotificationRegistrations_ListByProviderRegistration
@try_manual
def step_notification_registration_list(test, checks=None):
    if checks is None:
        checks = [
            test.check('length(@)', 2),
        ]
    test.cmd('az providerhub notification-registration list '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /NotificationRegistrations/delete/NotificationRegistrations_Delete
@try_manual
def step_notification_registration_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub notification-registration delete -y '
             '--name "{notificationRegistration}" '
             '--provider-namespace "{providerNamespace}"',
             checks=checks)


# EXAMPLE: /Skus/put/Skus_CreateOrUpdate
@try_manual
def step_sku_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku create '
             '--sku-settings "[{{\\"name\\":\\"freeSku\\"}}]" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/put/Skus_CreateOrUpdateNestedResourceTypeFirst
@try_manual
def step_sku_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku create '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--sku-settings "[{{\\"name\\":\\"freeSku\\",\\"kind\\":\\"Standard\\",\\"tier\\":\\"Tier1\\"}},{{\\"name'
             '\\":\\"premiumSku\\",\\"costs\\":[{{\\"meterId\\":\\"xxx\\"}}],\\"kind\\":\\"Premium\\",\\"tier\\":\\"Tie'
             'r2\\"}}]" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/put/Skus_CreateOrUpdateNestedResourceTypeSecond
@try_manual
def step_sku_create3(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku create '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--sku-settings "[{{\\"name\\":\\"freeSku\\",\\"kind\\":\\"Standard\\",\\"tier\\":\\"Tier1\\"}},{{\\"name'
             '\\":\\"premiumSku\\",\\"costs\\":[{{\\"meterId\\":\\"xxx\\"}}],\\"kind\\":\\"Premium\\",\\"tier\\":\\"Tie'
             'r2\\"}}]" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/put/Skus_CreateOrUpdateNestedResourceTypeThird
@try_manual
def step_sku_create4(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku create '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--nested-resource-type-third "nestedResourceTypeThird" '
             '--sku-settings "[{{\\"name\\":\\"freeSku\\",\\"kind\\":\\"Standard\\",\\"tier\\":\\"Tier1\\"}},{{\\"name'
             '\\":\\"premiumSku\\",\\"costs\\":[{{\\"meterId\\":\\"xxx\\"}}],\\"kind\\":\\"Premium\\",\\"tier\\":\\"Tie'
             'r2\\"}}]" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_Get
@try_manual
def step_sku_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku show '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_GetNestedResourceTypeFirst
@try_manual
def step_sku_show_nested_resource_type_first(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku show-nested-resource-type-first '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_GetNestedResourceTypeSecond
@try_manual
def step_sku_show_nested_resource_type_second(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku show-nested-resource-type-second '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_GetNestedResourceTypeThird
@try_manual
def step_sku_show_nested_resource_type_third(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku show-nested-resource-type-third '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--nested-resource-type-third "nestedResourceTypeThird" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_ListByResourceTypeRegistrations
@try_manual
def step_sku_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku list '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst
@try_manual
def step_sku_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku list '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond
@try_manual
def step_sku_list3(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku list '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird
@try_manual
def step_sku_list4(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku list '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--nested-resource-type-third "nestedResourceTypeThird" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}"',
             checks=checks)


# EXAMPLE: /Skus/delete/Skus_Delete
@try_manual
def step_sku_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku delete -y '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/delete/Skus_DeleteNestedResourceTypeFirst
@try_manual
def step_sku_delete2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku delete -y '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/delete/Skus_DeleteNestedResourceTypeSecond
@try_manual
def step_sku_delete3(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku delete -y '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)


# EXAMPLE: /Skus/delete/Skus_DeleteNestedResourceTypeThird
@try_manual
def step_sku_delete4(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az providerhub sku delete -y '
             '--nested-resource-type-first "nestedResourceTypeFirst" '
             '--nested-resource-type-second "nestedResourceTypeSecond" '
             '--nested-resource-type-third "nestedResourceTypeThird" '
             '--provider-namespace "{providerNamespace}" '
             '--resource-type "{resourceType}" '
             '--sku "{skuName}"',
             checks=checks)
