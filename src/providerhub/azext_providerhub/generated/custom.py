# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=unused-argument
# pylint: disable=too-many-locals

from azure.cli.core.util import sdk_no_wait


def providerhub_custom_rollout_list(client, provider_namespace):
    return client.list_by_provider_registration(provider_namespace=provider_namespace)


def providerhub_custom_rollout_show(client, provider_namespace, rollout_name):
    return client.get(provider_namespace=provider_namespace, rollout_name=rollout_name)


def providerhub_custom_rollout_create(client, provider_namespace, rollout_name, canary):
    properties = {"specification": {"Canary": canary}}
    return client.create_or_update(
        provider_namespace=provider_namespace,
        rollout_name=rollout_name,
        properties=properties,
    )


def providerhub_custom_rollout_update(client, provider_namespace, rollout_name, canary):
    properties = {"specification": {"Canary": canary}}
    return client.create_or_update(
        provider_namespace=provider_namespace,
        rollout_name=rollout_name,
        properties=properties,
    )


def providerhub_default_rollout_list(client, provider_namespace):
    return client.list_by_provider_registration(provider_namespace=provider_namespace)


def providerhub_default_rollout_show(client, provider_namespace, rollout_name):
    return client.get(provider_namespace=provider_namespace, rollout_name=rollout_name)


def providerhub_default_rollout_create(
    client,
    provider_namespace,
    rollout_name,
    row2_wait_duration,
    skip_regions=None,
    no_wait=False,
):
    return sdk_no_wait(
        no_wait,
        client.begin_create_or_update,
        provider_namespace=provider_namespace,
        rollout_name=rollout_name,
        row2_wait_duration=row2_wait_duration,
        skip_regions=skip_regions,
    )


def providerhub_default_rollout_update(
    client,
    provider_namespace,
    rollout_name,
    row2_wait_duration,
    skip_regions=None,
    no_wait=False,
):
    return sdk_no_wait(
        no_wait,
        client.begin_create_or_update,
        provider_namespace=provider_namespace,
        rollout_name=rollout_name,
        row2_wait_duration=row2_wait_duration,
        skip_regions=skip_regions,
    )


def providerhub_default_rollout_delete(client, provider_namespace, rollout_name):
    return client.delete(
        provider_namespace=provider_namespace, rollout_name=rollout_name
    )


def providerhub_default_rollout_stop(client, provider_namespace, rollout_name):
    return client.stop(provider_namespace=provider_namespace, rollout_name=rollout_name)


def providerhub_manifest_checkin(
    client, provider_namespace, environment, arm_manifest_location
):
    checkin_manifest_params = {}
    checkin_manifest_params["environment"] = environment
    checkin_manifest_params[
        "baseline_arm_manifest_location"
    ] = arm_manifest_location
    return client.checkin_manifest(
        provider_namespace=provider_namespace,
        checkin_manifest_params=checkin_manifest_params,
    )


def providerhub_manifest_generate(client, provider_namespace):
    return client.generate_manifest(provider_namespace=provider_namespace)


def providerhub_operation_list(client, provider_namespace):
    return client.list_by_provider_registration(provider_namespace=provider_namespace)


def providerhub_operation_create(client, provider_namespace):
    return client.create_or_update(provider_namespace=provider_namespace)


def providerhub_operation_update(client, provider_namespace):
    return client.create_or_update(provider_namespace=provider_namespace)


def providerhub_operation_delete(client, provider_namespace):
    return client.delete(provider_namespace=provider_namespace)


def providerhub_provider_registration_list(client, resource_group_name=None):
    if resource_group_name:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list()


def providerhub_provider_registration_show(client, provider_namespace):
    return client.get(provider_namespace=provider_namespace)


def providerhub_provider_registration_create(
    client,
    provider_namespace,
    provider_version="2.0",
    namespace=None,
    provider_type=None,
    provider_authentication=None,
    provider_authorizations=None,
    capabilities=None,
    metadata=None,
    template_deployment_options=None,
    schema_owners=None,
    manifest_owners=None,
    incident_routing_service=None,
    incident_routing_team=None,
    incident_contact_email=None,
    service_tree_infos=None,
    resource_access_policy=None,
    opt_in_headers=None,
    required_features_policy=None,
    managed_by_tenant_id=None,
    providerhub_metadata_provider_authorizations=None,
    providerhub_metadata_rp_authentication=None,
    lighthouse_authorizations=None,
    no_wait=False,
):
    return sdk_no_wait(
        no_wait,
        client.begin_create_or_update,
        provider_namespace=provider_namespace,
        provider_authentication=provider_authentication,
        provider_authorizations=provider_authorizations,
        namespace=namespace,
        provider_version=provider_version,
        provider_type=provider_type,
        capabilities=capabilities,
        metadata=metadata,
        template_deployment_options=template_deployment_options,
        schema_owners=schema_owners,
        manifest_owners=manifest_owners,
        incident_routing_service=incident_routing_service,
        incident_routing_team=incident_routing_team,
        incident_contact_email=incident_contact_email,
        service_tree_infos=service_tree_infos,
        resource_access_policy=resource_access_policy,
        opt_in_headers=opt_in_headers,
        required_features_policy=required_features_policy,
        managed_by_tenant_id=managed_by_tenant_id,
        providerhub_metadata_provider_authorizations=providerhub_metadata_provider_authorizations,
        providerhub_metadata_rp_authentication=providerhub_metadata_rp_authentication,
        lighthouse_authorizations=lighthouse_authorizations
    )


def providerhub_provider_registration_update(
    client,
    provider_namespace,
    provider_version="2.0",
    provider_type=None,
    provider_authentication=None,
    provider_authorizations=None,
    capabilities=None,
    metadata=None,
    template_deployment_options=None,
    schema_owners=None,
    manifest_owners=None,
    incident_routing_service=None,
    incident_routing_team=None,
    incident_contact_email=None,
    service_tree_infos=None,
    resource_access_policy=None,
    opt_in_headers=None,
    required_features_policy=None,
    managed_by_tenant_id=None,
    providerhub_metadata_provider_authorizations=None,
    providerhub_metadata_rp_authentication=None,
    lighthouse_authorizations=None,
    no_wait=False,
):
    return sdk_no_wait(
        no_wait,
        client.begin_create_or_update,
        provider_namespace=provider_namespace,
        provider_authentication=provider_authentication,
        provider_authorizations=provider_authorizations,
        provider_version=provider_version,
        provider_type=provider_type,
        capabilities=capabilities,
        metadata=metadata,
        template_deployment_options=template_deployment_options,
        schema_owners=schema_owners,
        manifest_owners=manifest_owners,
        incident_routing_service=incident_routing_service,
        incident_routing_team=incident_routing_team,
        incident_contact_email=incident_contact_email,
        service_tree_infos=service_tree_infos,
        resource_access_policy=resource_access_policy,
        opt_in_headers=opt_in_headers,
        required_features_policy=required_features_policy,
        managed_by_tenant_id=managed_by_tenant_id,
        providerhub_metadata_provider_authorizations=providerhub_metadata_provider_authorizations,
        providerhub_metadata_rp_authentication=providerhub_metadata_rp_authentication,
        lighthouse_authorizations=lighthouse_authorizations
    )


def providerhub_provider_registration_delete(client, provider_namespace):
    return client.delete(provider_namespace=provider_namespace)


def providerhub_provider_registration_generate_operation(client, provider_namespace):
    return client.generate_operations(provider_namespace=provider_namespace)


def providerhub_resource_type_registration_list(client, provider_namespace):
    return client.list_by_provider_registration(provider_namespace=provider_namespace)


def providerhub_resource_type_registration_show(
    client, provider_namespace, resource_type
):
    return client.get(
        provider_namespace=provider_namespace, resource_type=resource_type
    )


def providerhub_resource_type_registration_create(  # pylint: disable=too-many-locals
    client,
    provider_namespace,
    resource_type,
    routing_type=None,
    regionality=None,
    endpoints=None,
    marketplace_type=None,
    resource_creation_begin=None,
    resource_patch_begin=None,
    swagger_specifications=None,
    allowed_unauthorized_actions=None,
    authorization_action_mappings=None,
    linked_access_checks=None,
    default_api_version=None,
    logging_rules=None,
    throttling_rules=None,
    required_features=None,
    enable_async_operation=None,
    enable_third_party_s2s=None,
    is_pure_proxy=None,
    identity_management=None,
    check_name_availability_specifications=None,
    disallowed_action_verbs=None,
    service_tree_infos=None,
    subscription_state_rules=None,
    template_deployment_options=None,
    extended_locations=None,
    resource_move_policy=None,
    resource_deletion_policy=None,
    opt_in_headers=None,
    required_features_policy=None,
):
    return client.begin_create_or_update(
        provider_namespace=provider_namespace,
        resource_type=resource_type,
        routing_type=routing_type,
        regionality=regionality,
        endpoints=endpoints,
        resource_creation_begin=resource_creation_begin,
        resource_patch_begin=resource_patch_begin,
        marketplace_type=marketplace_type,
        swagger_specifications=swagger_specifications,
        allowed_unauthorized_actions=allowed_unauthorized_actions,
        authorization_action_mappings=authorization_action_mappings,
        linked_access_checks=linked_access_checks,
        default_api_version=default_api_version,
        logging_rules=logging_rules,
        throttling_rules=throttling_rules,
        required_features=required_features,
        enable_async_operation=enable_async_operation,
        enable_third_party_s2s=enable_third_party_s2s,
        is_pure_proxy=is_pure_proxy,
        identity_management=identity_management,
        check_name_availability_specifications=check_name_availability_specifications,
        disallowed_action_verbs=disallowed_action_verbs,
        service_tree_infos=service_tree_infos,
        subscription_state_rules=subscription_state_rules,
        template_deployment_options=template_deployment_options,
        extended_locations=extended_locations,
        resource_move_policy=resource_move_policy,
        resource_deletion_policy=resource_deletion_policy,
        opt_in_headers=opt_in_headers,
        required_features_policy=required_features_policy,
    )


def providerhub_resource_type_registration_update(  # pylint: disable=too-many-locals
    client,
    provider_namespace,
    resource_type,
    routing_type=None,
    regionality=None,
    endpoints=None,
    marketplace_type=None,
    resource_creation_begin=None,
    resource_patch_begin=None,
    swagger_specifications=None,
    allowed_unauthorized_actions=None,
    authorization_action_mappings=None,
    linked_access_checks=None,
    default_api_version=None,
    logging_rules=None,
    throttling_rules=None,
    required_features=None,
    enable_async_operation=None,
    enable_third_party_s2s=None,
    is_pure_proxy=None,
    identity_management=None,
    check_name_availability_specifications=None,
    disallowed_action_verbs=None,
    service_tree_infos=None,
    subscription_state_rules=None,
    template_deployment_options=None,
    extended_locations=None,
    resource_move_policy=None,
    resource_deletion_policy=None,
    opt_in_headers=None,
    required_features_policy=None,
):
    return client.begin_create_or_update(
        provider_namespace=provider_namespace,
        resource_type=resource_type,
        routing_type=routing_type,
        regionality=regionality,
        endpoints=endpoints,
        resource_creation_begin=resource_creation_begin,
        resource_patch_begin=resource_patch_begin,
        marketplace_type=marketplace_type,
        swagger_specifications=swagger_specifications,
        allowed_unauthorized_actions=allowed_unauthorized_actions,
        authorization_action_mappings=authorization_action_mappings,
        linked_access_checks=linked_access_checks,
        default_api_version=default_api_version,
        logging_rules=logging_rules,
        throttling_rules=throttling_rules,
        required_features=required_features,
        enable_async_operation=enable_async_operation,
        enable_third_party_s2s=enable_third_party_s2s,
        is_pure_proxy=is_pure_proxy,
        identity_management=identity_management,
        check_name_availability_specifications=check_name_availability_specifications,
        disallowed_action_verbs=disallowed_action_verbs,
        service_tree_infos=service_tree_infos,
        subscription_state_rules=subscription_state_rules,
        template_deployment_options=template_deployment_options,
        extended_locations=extended_locations,
        resource_move_policy=resource_move_policy,
        resource_deletion_policy=resource_deletion_policy,
        opt_in_headers=opt_in_headers,
        required_features_policy=required_features_policy,
    )


def providerhub_resource_type_registration_delete(
    client, provider_namespace, resource_type
):
    return client.delete(
        provider_namespace=provider_namespace, resource_type=resource_type
    )
