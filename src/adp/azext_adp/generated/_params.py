# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    tags_type,
    resource_group_name_type,
    get_location_type
)
from azure.cli.core.commands.validators import get_default_location_from_resource_group
from azext_adp.action import AddLocations


def load_arguments(self, _):

    with self.argument_context('adp account list') as c:
        c.argument('resource_group_name', resource_group_name_type)

    with self.argument_context('adp account show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', options_list=['--name', '-n', '--account-name'], type=str, help='The name of the '
                   'ADP account.', id_part='name')

    with self.argument_context('adp account create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', options_list=['--name', '-n', '--account-name'], type=str, help='The name of the '
                   'ADP account.')
        c.argument('tags', tags_type)
        c.argument('location', arg_type=get_location_type(self.cli_ctx),
                   validator=get_default_location_from_resource_group)

    with self.argument_context('adp account update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', options_list=['--name', '-n', '--account-name'], type=str, help='The name of the '
                   'ADP account.', id_part='name')
        c.argument('tags', tags_type)

    with self.argument_context('adp account delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', options_list=['--name', '-n', '--account-name'], type=str, help='The name of the '
                   'ADP account.', id_part='name')

    with self.argument_context('adp account wait') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', options_list=['--name', '-n', '--account-name'], type=str, help='The name of the '
                   'ADP account.', id_part='name')

    with self.argument_context('adp data-pool list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='The name of the ADP account.')

    with self.argument_context('adp data-pool show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='The name of the ADP account.', id_part='name')
        c.argument('data_pool_name', options_list=['--name', '-n', '--data-pool-name'], type=str, help='The name of '
                   'the Data Pool.', id_part='child_name_1')

    with self.argument_context('adp data-pool create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='The name of the ADP account.')
        c.argument('data_pool_name', options_list=['--name', '-n', '--data-pool-name'], type=str, help='The name of '
                   'the Data Pool.')
        c.argument('locations', action=AddLocations, nargs='*', help='Gets or sets the collection of locations where '
                   'Data Pool resources should be created.')

    with self.argument_context('adp data-pool update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='The name of the ADP account.', id_part='name')
        c.argument('data_pool_name', options_list=['--name', '-n', '--data-pool-name'], type=str, help='The name of '
                   'the Data Pool.', id_part='child_name_1')
        c.argument('locations', action=AddLocations, nargs='*', help='Gets or sets the collection of locations where '
                   'Data Pool resources should be created.')

    with self.argument_context('adp data-pool delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='The name of the ADP account.', id_part='name')
        c.argument('data_pool_name', options_list=['--name', '-n', '--data-pool-name'], type=str, help='The name of '
                   'the Data Pool.', id_part='child_name_1')

    with self.argument_context('adp data-pool wait') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='The name of the ADP account.', id_part='name')
        c.argument('data_pool_name', options_list=['--name', '-n', '--data-pool-name'], type=str, help='The name of '
                   'the Data Pool.', id_part='child_name_1')
