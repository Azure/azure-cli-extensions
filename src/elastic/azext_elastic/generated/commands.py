# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_elastic.generated._client_factory import cf_monitor
    elastic_monitor = CliCommandType(
        operations_tmpl='azext_elastic.vendored_sdks.elastic.operations._monitors_operations#MonitorsOperations.{}',
        client_factory=cf_monitor)
    with self.command_group('elastic monitor', elastic_monitor, client_factory=cf_monitor) as g:
        g.custom_command('list', 'elastic_monitor_list')
        g.custom_show_command('show', 'elastic_monitor_show')
        g.custom_command('create', 'elastic_monitor_create', supports_no_wait=True)
        g.custom_command('update', 'elastic_monitor_update')
        g.custom_command('delete', 'elastic_monitor_delete', supports_no_wait=True, confirmation=True)
        g.custom_wait_command('wait', 'elastic_monitor_show')

    from azext_elastic.generated._client_factory import cf_monitored_resource
    elastic_monitored_resource = CliCommandType(
        operations_tmpl='azext_elastic.vendored_sdks.elastic.operations._monitored_resources_operations#MonitoredResour'
        'cesOperations.{}',
        client_factory=cf_monitored_resource)
    with self.command_group('elastic monitored-resource', elastic_monitored_resource,
                            client_factory=cf_monitored_resource) as g:
        g.custom_command('list', 'elastic_monitored_resource_list')

    from azext_elastic.generated._client_factory import cf_deployment_info
    elastic_deployment_info = CliCommandType(
        operations_tmpl='azext_elastic.vendored_sdks.elastic.operations._deployment_info_operations#DeploymentInfoOpera'
        'tions.{}',
        client_factory=cf_deployment_info)
    with self.command_group('elastic deployment-info', elastic_deployment_info,
                            client_factory=cf_deployment_info) as g:
        g.custom_command('list', 'elastic_deployment_info_list')

    from azext_elastic.generated._client_factory import cf_tag_rule
    elastic_tag_rule = CliCommandType(
        operations_tmpl='azext_elastic.vendored_sdks.elastic.operations._tag_rules_operations#TagRulesOperations.{}',
        client_factory=cf_tag_rule)
    with self.command_group('elastic tag-rule', elastic_tag_rule, client_factory=cf_tag_rule) as g:
        g.custom_command('list', 'elastic_tag_rule_list')
        g.custom_show_command('show', 'elastic_tag_rule_show')
        g.custom_command('create', 'elastic_tag_rule_create')
        g.generic_update_command('update', setter_arg_name='body', custom_func_name='elastic_tag_rule_update')
        g.custom_command('delete', 'elastic_tag_rule_delete', supports_no_wait=True, confirmation=True)
        g.custom_wait_command('wait', 'elastic_tag_rule_show')

    with self.command_group('elastic', is_experimental=True):
        pass
