# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from azure.cli.core.commands import CliCommandType
from azext_elastic.generated._client_factory import (
    cf_monitor,
    cf_monitored_resource,
    cf_deployment_info,
    cf_tag_rule,
    cf_vm_host,
    cf_vm_ingestion,
    cf_vm_collection,
)


elastic_monitor = CliCommandType(
    operations_tmpl='azext_elastic.vendored_sdks.elastic.operations._monitors_operations#MonitorsOperations.{}',
    client_factory=cf_monitor,
)


elastic_tag_rule = CliCommandType(
    operations_tmpl='azext_elastic.vendored_sdks.elastic.operations._tag_rules_operations#TagRulesOperations.{}',
    client_factory=cf_tag_rule,
)


def load_command_table(self, _):

    with self.command_group('elastic monitor', elastic_monitor, client_factory=cf_monitor) as g:
        g.custom_command('list', 'elastic_monitor_list')
        g.custom_show_command('show', 'elastic_monitor_show')
        g.custom_command('create', 'elastic_monitor_create', supports_no_wait=True)
        g.custom_command('update', 'elastic_monitor_update')
        g.custom_command('delete', 'elastic_monitor_delete', supports_no_wait=True, confirmation=True)
        g.custom_command(
            'list-deployment-info', 'elastic_monitor_list_deployment_info', client_factory=cf_deployment_info
        )
        g.custom_command('list-resource', 'elastic_monitor_list_resource', client_factory=cf_monitored_resource)
        g.custom_command('list-vm-host', 'elastic_monitor_list_vm_host', client_factory=cf_vm_host)
        g.custom_command(
            'list-vm-ingestion-detail', 'elastic_monitor_list_vm_ingestion_detail', client_factory=cf_vm_ingestion
        )
        g.custom_command(
            'update-vm-collection', 'elastic_monitor_update_vm_collection', client_factory=cf_vm_collection
        )
        g.custom_wait_command('wait', 'elastic_monitor_show')

    with self.command_group('elastic monitor tag-rule', elastic_tag_rule, client_factory=cf_tag_rule) as g:
        g.custom_command('list', 'elastic_monitor_tag_rule_list')
        g.custom_show_command('show', 'elastic_monitor_tag_rule_show')
        g.custom_command('create', 'elastic_monitor_tag_rule_create')
        g.generic_update_command('update', custom_func_name='elastic_monitor_tag_rule_update', setter_arg_name='body')
        g.custom_command('delete', 'elastic_monitor_tag_rule_delete', supports_no_wait=True, confirmation=True)
        g.custom_wait_command('wait', 'elastic_monitor_tag_rule_show')

    with self.command_group('elastic', is_experimental=True):
        pass
