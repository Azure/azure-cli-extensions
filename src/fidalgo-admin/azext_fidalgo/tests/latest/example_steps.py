# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /DevCenters/put/DevCenters_Create
@try_manual
def step_dev_center_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center create '
             '--location "centralus" '
             '--tags CostCode="12345" '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin dev-center wait --created '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/put/DevCenters_CreateWithUserIdentity
@try_manual
def step_dev_center_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center create '
             '--type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ident'
             'ityGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testidentity1\\":{{}}}}" '
             '--location "centralus" '
             '--tags CostCode="12345" '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin dev-center wait --created '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/get/DevCenters_Get
@try_manual
def step_dev_center_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center show '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/get/DevCenters_ListByResourceGroup
@try_manual
def step_dev_center_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/get/DevCenters_ListBySubscription
@try_manual
def step_dev_center_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center list '
             '-g ""',
             checks=checks)


# EXAMPLE: /DevCenters/patch/DevCenters_Update
@try_manual
def step_dev_center_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center update '
             '--tags CostCode="12345" '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/put/Catalogs_CreateOrUpdateAdo
@try_manual
def step_catalog_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog create '
             '--ado-git path="/templates" branch="main" secret-identifier="https://contosokv.vault.azure.net/secrets/Ce'
             'ntralRepoPat" uri="https://contoso@dev.azure.com/contoso/contosoOrg/_git/centralrepo-fakecontoso" '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin catalog wait --created '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/put/Catalogs_CreateOrUpdateGitHub
@try_manual
def step_catalog_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog create '
             '--git-hub path="/templates" branch="main" secret-identifier="https://contosokv.vault.azure.net/secrets/Ce'
             'ntralRepoPat" uri="https://github.com/Contoso/centralrepo-fake.git" '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin catalog wait --created '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/get/Catalogs_Get
@try_manual
def step_catalog_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog show '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/get/Catalogs_ListByDevCenter
@try_manual
def step_catalog_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/patch/Catalogs_Update
@try_manual
def step_catalog_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog update '
             '--git-hub path="/environments" '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/post/Catalogs_Sync
@try_manual
def step_catalog_sync(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog sync '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CatalogItems/put/CatalogItems_CreateOrUpdate
@try_manual
def step_catalog_item_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog-item create '
             '--description "Hello world template to deploy a basic API service" '
             '--parameters name="app_name" type="string" description="The name of the application. This must be '
             'provided when deploying an environment with this template." '
             '--template-path "azuredeploy.json" '
             '--name "{myCatalogItem2}" '
             '--catalog-name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CatalogItems/get/CatalogItems_Get
@try_manual
def step_catalog_item_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog-item show '
             '--name "{myCatalogItem2}" '
             '--catalog-name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CatalogItems/get/CatalogItems_ListByCatalog
@try_manual
def step_catalog_item_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog-item list '
             '--catalog-name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CatalogItems/get/CatalogItems_ListByProject
@try_manual
def step_catalog_item_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog-item list '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CatalogItems/patch/CatalogItems_Update
@try_manual
def step_catalog_item_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog-item update '
             '--description "Hello world template to deploy a basic API service" '
             '--name "{myCatalogItem2}" '
             '--catalog-name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/put/Environments_CreateByCatalogItem
@try_manual
def step_environment_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment create '
             '--location "centralus" '
             '--description "Personal Dev Environment" '
             '--catalog-item-name "{myCatalogItem}" '
             '--deployment-parameters "{{\\"app_name\\":\\"mydevApi\\"}}" '
             '--environment-type "DevTest" '
             '--tags ProjectType="WebApi" Role="Development" Tech="NetCore" '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin environment wait --created '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/put/Environments_CreateByTemplateUri
@try_manual
def step_environment_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment create '
             '--location "centralus" '
             '--description "Personal Dev Environment" '
             '--deployment-parameters "{{\\"app_name\\":\\"mydevApi\\"}}" '
             '--environment-type "DevTest" '
             '--template-uri "https://raw.githubusercontent.com/contoso/webhelpcenter/master/environments/composition-t'
             'emplate.json" '
             '--tags ProjectType="WebApi" Role="Development" Tech="NetCore" '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin environment wait --created '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/get/Environments_Get
@try_manual
def step_environment_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment show '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/get/Environments_ListByProject
@try_manual
def step_environment_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment list '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/patch/Environments_Update
@try_manual
def step_environment_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment update '
             '--description "Personal Dev Environment 2" '
             '--tags ProjectType="WebApi" Role="Development" Tech="NetCore" '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/post/Environments_Deploy
@try_manual
def step_environment_deploy(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment deploy '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CatalogItems/delete/CatalogItems_Delete
@try_manual
def step_catalog_item_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog-item delete -y '
             '--name "{myCatalogItem2}" '
             '--catalog-name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Catalogs/delete/Catalogs_Delete
@try_manual
def step_catalog_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin catalog delete -y '
             '--name "{myCatalog}" '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Deployments/get/Deployments_ListByEnvironment
@try_manual
def step_deployment_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin deployment list '
             '--environment-name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/put/EnvironmentTypes_CreateOrUpdate
@try_manual
def step_environment_type_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment-type create '
             '--description "Developer/Testing environment" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/patch/EnvironmentTypes_Update
@try_manual
def step_environment_type_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment-type update '
             '--description "Updated description" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DevCenters/delete/DevCenters_Delete
@try_manual
def step_dev_center_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin dev-center delete -y '
             '--name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Environments/delete/Environments_Delete
@try_manual
def step_environment_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment delete -y '
             '--name "{myEnvironment}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/get/EnvironmentTypes_Get
@try_manual
def step_environment_type_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment-type show '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/get/EnvironmentTypes_ListByDevCenter
@try_manual
def step_environment_type_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment-type list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/get/EnvironmentTypes_ListByProject
@try_manual
def step_environment_type_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment-type list '
             '--project-name "{myProject2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EnvironmentTypes/delete/EnvironmentTypes_Delete
@try_manual
def step_environment_type_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin environment-type delete -y '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myEnvironmentType}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /MachineDefinitions/put/MachineDefinitions_CreateWithCustomImage
@try_manual
def step_machine_definition_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin machine-definition create '
             '--location "centralus" '
             '--image-reference id="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Compute/'
             'images/exampleImage" '
             '--name "{myMachineDefinition}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin machine-definition wait --created '
             '--name "{myMachineDefinition}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /MachineDefinitions/get/MachineDefinitions_Get
@try_manual
def step_machine_definition_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin machine-definition show '
             '--name "{myMachineDefinition}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /MachineDefinitions/get/MachineDefinitions_ListByResourceGroup
@try_manual
def step_machine_definition_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin machine-definition list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /MachineDefinitions/get/MachineDefinitions_ListBySubscription
@try_manual
def step_machine_definition_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin machine-definition list '
             '-g ""',
             checks=checks)


# EXAMPLE: /MachineDefinitions/patch/MachineDefinitions_Patch
@try_manual
def step_machine_definition_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin machine-definition update '
             '--image-reference id="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Compute/'
             'images/image2" '
             '--name "{myMachineDefinition}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /MachineDefinitions/delete/MachineDefinitions_Delete
@try_manual
def step_machine_definition_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin machine-definition delete -y '
             '--name "{myMachineDefinition}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Mappings/put/Mappings_CreateOrUpdate
@try_manual
def step_mapping_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin mapping create '
             '--environment-type "Sandbox" '
             '--mapped-subscription-id "/subscriptions/{subscription_id}" '
             '--project-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/projects/{'
             'myProject}" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myMapping}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Mappings/get/Mappings_Get
@try_manual
def step_mapping_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin mapping show '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myMapping}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Mappings/get/Mappings_ListByDevCenter
@try_manual
def step_mapping_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin mapping list '
             '--dev-center-name "{myDevCenter}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Mappings/patch/Mappings_Update
@try_manual
def step_mapping_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin mapping update '
             '--mapped-subscription-id "/subscriptions/{subscription_id}" '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myMapping}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Mappings/delete/Mappings_Delete
@try_manual
def step_mapping_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin mapping delete -y '
             '--dev-center-name "{myDevCenter}" '
             '--name "{myMapping}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkSettings/put/NetworkSettings_CreateOrUpdate
@try_manual
def step_network_setting_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting create '
             '--location "centralus" '
             '--domain-name "mydomaincontroller.local" '
             '--domain-password "Password value for user" '
             '--domain-username "testuser@mydomaincontroller.local" '
             '--networking-resource-group-id "/subscriptions/{subscription_id}/resourceGroups/{rg_3}" '
             '--subnet-id "/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Network/virtualNe'
             'tworks/{vn}/subnets/{subnets}" '
             '--name "{myNetworkSetting}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin network-setting wait --created '
             '--name "{myNetworkSetting}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkSettings/get/NetworkSettings_Get
@try_manual
def step_network_setting_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting show '
             '--name "{myNetworkSetting}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkSettings/get/NetworkSettings_GetHealthDetails
@try_manual
def step_network_setting_show_health_detail(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting show-health-detail '
             '--name "{myNetworkSetting}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkSettings/get/NetworkSettings_ListByResourceGroup
@try_manual
def step_network_setting_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkSettings/get/NetworkSettings_ListBySubscription
@try_manual
def step_network_setting_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting list '
             '-g ""',
             checks=checks)


# EXAMPLE: /NetworkSettings/patch/NetworkSettings_Update
@try_manual
def step_network_setting_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting update '
             '--domain-password "New Password value for user" '
             '--name "{myNetworkSetting}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /NetworkSettings/delete/NetworkSettings_Delete
@try_manual
def step_network_setting_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin network-setting delete -y '
             '--name "{myNetworkSetting}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /OperationStatuses/get/Get OperationStatus
@try_manual
def step_operation_statuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin operation-statuses show '
             '--operation-id "{{operationId}}" '
             '--location "{{location}}"',
             checks=checks)


# EXAMPLE: /Projects/put/Projects_CreateOrUpdate
@try_manual
def step_project_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin project create '
             '--location "centralus" '
             '--description "This is my first project." '
             '--dev-center-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/devcent'
             'ers/{myDevCenter2}" '
             '--tags CostCenter="R&D" '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin project wait --created '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/get/Projects_Get
@try_manual
def step_project_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin project show '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/get/Projects_ListByResourceGroup
@try_manual
def step_project_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin project list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/get/Projects_ListBySubscription
@try_manual
def step_project_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin project list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Projects/patch/Projects_Update
@try_manual
def step_project_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin project update '
             '--description "This is my first project." '
             '--tags CostCenter="R&D" '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/put/Pools_CreateOrUpdate
@try_manual
def step_pool_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin pool create '
             '--location "centralus" '
             '--machine-definition-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo'
             '/machinedefinitions/{myMachineDefinition}" '
             '--network-settings-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/n'
             'etworksettings/{myNetworkSetting}" '
             '--sku name="medium" '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az fidalgo-admin pool wait --created '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/get/Pools_Get
@try_manual
def step_pool_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin pool show '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/get/Pools_ListByProject
@try_manual
def step_pool_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin pool list '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/patch/Pools_Update
@try_manual
def step_pool_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin pool update '
             '--machine-definition-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo'
             '/machinedefinitions/{myMachineDefinition}" '
             '--name "{myPool}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pools/delete/Pools_Delete
@try_manual
def step_pool_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin pool delete -y '
             '--name "{myPool2}" '
             '--project-name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Projects/delete/Projects_Delete
@try_manual
def step_project_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin project delete -y '
             '--name "{myProject}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Skus/get/Skus_ListBySubscription
@try_manual
def step_sku_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az fidalgo-admin sku list',
             checks=checks)
