# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .preparers import VirtualNetworkPreparer
from .preparers import SubnetPreparer
from .example_steps import step_dev_center_create
from .example_steps import step_dev_center_create2
from .example_steps import step_dev_center_show
from .example_steps import step_dev_center_list
from .example_steps import step_dev_center_list2
from .example_steps import step_dev_center_update
from .example_steps import step_catalog_create
from .example_steps import step_catalog_create2
from .example_steps import step_catalog_show
from .example_steps import step_catalog_list
from .example_steps import step_catalog_update
from .example_steps import step_catalog_sync
from .example_steps import step_catalog_item_create
from .example_steps import step_catalog_item_show
from .example_steps import step_catalog_item_list
from .example_steps import step_catalog_item_list2
from .example_steps import step_catalog_item_update
from .example_steps import step_environment_create
from .example_steps import step_environment_create2
from .example_steps import step_environment_show
from .example_steps import step_environment_list
from .example_steps import step_environment_update
from .example_steps import step_environment_deploy
from .example_steps import step_catalog_item_delete
from .example_steps import step_catalog_delete
from .example_steps import step_deployment_list
from .example_steps import step_environment_type_create
from .example_steps import step_environment_type_update
from .example_steps import step_dev_center_delete
from .example_steps import step_environment_delete
from .example_steps import step_environment_type_show
from .example_steps import step_environment_type_list
from .example_steps import step_environment_type_list2
from .example_steps import step_environment_type_delete
from .example_steps import step_machine_definition_create
from .example_steps import step_machine_definition_show
from .example_steps import step_machine_definition_list
from .example_steps import step_machine_definition_list2
from .example_steps import step_machine_definition_update
from .example_steps import step_machine_definition_delete
from .example_steps import step_mapping_create
from .example_steps import step_mapping_show
from .example_steps import step_mapping_list
from .example_steps import step_mapping_update
from .example_steps import step_mapping_delete
from .example_steps import step_network_setting_create
from .example_steps import step_network_setting_show
from .example_steps import step_network_setting_show_health_detail
from .example_steps import step_network_setting_list
from .example_steps import step_network_setting_list2
from .example_steps import step_network_setting_update
from .example_steps import step_network_setting_delete
from .example_steps import step_operation_statuses_show
from .example_steps import step_project_create
from .example_steps import step_project_show
from .example_steps import step_project_list
from .example_steps import step_project_list2
from .example_steps import step_project_update
from .example_steps import step_pool_create
from .example_steps import step_pool_show
from .example_steps import step_pool_list
from .example_steps import step_pool_update
from .example_steps import step_pool_delete
from .example_steps import step_project_delete
from .example_steps import step_sku_list
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test):
    setup_scenario(test)
    step_dev_center_create(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("tags.CostCode", "12345", case_sensitive=False),
        test.check("name", "{myDevCenter}", case_sensitive=False),
    ])
    step_dev_center_create2(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("tags.CostCode", "12345", case_sensitive=False),
        test.check("name", "{myDevCenter}", case_sensitive=False),
        test.check("identity.type", "UserAssigned", case_sensitive=False),
    ])
    step_dev_center_show(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("tags.CostCode", "12345", case_sensitive=False),
        test.check("name", "{myDevCenter}", case_sensitive=False),
    ])
    step_dev_center_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_dev_center_list2(test, checks=[
        test.check('length(@)', 1),
    ])
    step_dev_center_update(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("tags.CostCode", "12345", case_sensitive=False),
        test.check("name", "{myDevCenter}", case_sensitive=False),
    ])
    step_catalog_create(test, checks=[])
    step_catalog_create2(test, checks=[])
    step_catalog_show(test, checks=[
        test.check("name", "{myCatalog}", case_sensitive=False),
        test.check("gitHub.path", "/templates", case_sensitive=False),
        test.check("gitHub.branch", "main", case_sensitive=False),
        test.check("gitHub.secretIdentifier", "https://contosokv.vault.azure.net/secrets/CentralRepoPat",
                   case_sensitive=False),
        test.check("gitHub.uri", "https://github.com/Contoso/centralrepo-fake.git", case_sensitive=False),
    ])
    step_catalog_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_catalog_update(test, checks=[
        test.check("name", "{myCatalog}", case_sensitive=False),
    ])
    step_catalog_sync(test, checks=[])
    step_catalog_item_create(test, checks=[
        test.check("description", "Hello world template to deploy a basic API service", case_sensitive=False),
        test.check("engine.templatePath", "azuredeploy.json", case_sensitive=False),
        test.check("name", "{myCatalogItem2}", case_sensitive=False),
    ])
    step_catalog_item_show(test, checks=[
        test.check("description", "Hello world template to deploy a basic API service", case_sensitive=False),
        test.check("engine.templatePath", "azuredeploy.json", case_sensitive=False),
        test.check("name", "{myCatalog}", case_sensitive=False),
    ])
    step_catalog_item_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_catalog_item_list2(test, checks=[])
    step_catalog_item_update(test, checks=[
        test.check("description", "Hello world template to deploy a basic API service", case_sensitive=False),
        test.check("engine.templatePath", "azuredeploy.json", case_sensitive=False),
        test.check("name", "{myCatalogItem2}", case_sensitive=False),
    ])
    step_environment_create(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("description", "Personal Dev Environment", case_sensitive=False),
        test.check("catalogItemName", "{myCatalogItem}", case_sensitive=False),
        test.check("deploymentParameters.app_name", "mydevApi", case_sensitive=False),
        test.check("environmentType", "DevTest", case_sensitive=False),
        test.check("tags.ProjectType", "WebApi", case_sensitive=False),
        test.check("tags.Role", "Development", case_sensitive=False),
        test.check("tags.Tech", "NetCore", case_sensitive=False),
        test.check("name", "{myEnvironment}", case_sensitive=False),
    ])
    step_environment_create2(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("description", "Personal Dev Environment", case_sensitive=False),
        test.check("deploymentParameters.app_name", "mydevApi", case_sensitive=False),
        test.check("environmentType", "DevTest", case_sensitive=False),
        test.check("tags.ProjectType", "WebApi", case_sensitive=False),
        test.check("tags.Role", "Development", case_sensitive=False),
        test.check("tags.Tech", "NetCore", case_sensitive=False),
        test.check("name", "{myEnvironment}", case_sensitive=False),
        test.check("templateUri", "https://raw.githubusercontent.com/contoso/webhelpcenter/master/environments/composit"
                   "ion-template.json", case_sensitive=False),
    ])
    step_environment_show(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("catalogItemName", "{myCatalogItem}", case_sensitive=False),
        test.check("environmentType", "DevTest", case_sensitive=False),
        test.check("tags.ProjectType", "WebApi", case_sensitive=False),
        test.check("tags.Role", "Development", case_sensitive=False),
        test.check("tags.Tech", "NetCore", case_sensitive=False),
        test.check("name", "{myEnvironment}", case_sensitive=False),
    ])
    step_environment_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_environment_update(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("description", "Personal Dev Environment 2", case_sensitive=False),
        test.check("catalogItemName", "{myCatalogItem}", case_sensitive=False),
        test.check("deploymentParameters.app_name", "mydevApi", case_sensitive=False),
        test.check("environmentType", "DevTest", case_sensitive=False),
        test.check("tags.ProjectType", "WebApi", case_sensitive=False),
        test.check("tags.Role", "Development", case_sensitive=False),
        test.check("tags.Tech", "NetCore", case_sensitive=False),
        test.check("name", "{myEnvironment}", case_sensitive=False),
    ])
    step_environment_deploy(test, checks=[])
    step_catalog_item_delete(test, checks=[])
    step_catalog_delete(test, checks=[])
    step_deployment_list(test, checks=[])
    step_environment_type_create(test, checks=[
        test.check("description", "Developer/Testing environment", case_sensitive=False),
        test.check("name", "{myEnvironmentType}", case_sensitive=False),
    ])
    step_environment_type_update(test, checks=[
        test.check("description", "Updated description", case_sensitive=False),
        test.check("name", "{myEnvironmentType}", case_sensitive=False),
    ])
    step_dev_center_delete(test, checks=[])
    step_environment_delete(test, checks=[])
    step_environment_type_show(test, checks=[
        test.check("name", "{myEnvironmentType}", case_sensitive=False),
    ])
    step_environment_type_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_environment_type_list2(test, checks=[])
    step_environment_type_delete(test, checks=[])
    step_machine_definition_create(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("imageReference.id", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Com"
                   "pute/images/exampleImage", case_sensitive=False),
        test.check("name", "{myMachineDefinition}", case_sensitive=False),
    ])
    step_machine_definition_show(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("imageReference.id", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Com"
                   "pute/images/exampleImage", case_sensitive=False),
        test.check("name", "{myMachineDefinition}", case_sensitive=False),
    ])
    step_machine_definition_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_machine_definition_list2(test, checks=[
        test.check('length(@)', 1),
    ])
    step_machine_definition_update(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("imageReference.id", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Com"
                   "pute/images/image2", case_sensitive=False),
        test.check("name", "{myMachineDefinition}", case_sensitive=False),
    ])
    step_machine_definition_delete(test, checks=[])
    step_mapping_create(test, checks=[
        test.check("environmentType", "Sandbox", case_sensitive=False),
        test.check("mappedSubscriptionId", "/subscriptions/{subscription_id}", case_sensitive=False),
        test.check("projectId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/proje"
                   "cts/{myProject}", case_sensitive=False),
        test.check("name", "{myMapping}", case_sensitive=False),
    ])
    step_mapping_show(test, checks=[
        test.check("mappedSubscriptionId", "/subscriptions/{subscription_id}", case_sensitive=False),
        test.check("projectId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/proje"
                   "cts/{myProject}", case_sensitive=False),
        test.check("name", "{myMapping}", case_sensitive=False),
    ])
    step_mapping_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_mapping_update(test, checks=[
        test.check("mappedSubscriptionId", "/subscriptions/{subscription_id}", case_sensitive=False),
        test.check("projectId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/proje"
                   "cts/{myProject}", case_sensitive=False),
        test.check("name", "{myMapping}", case_sensitive=False),
    ])
    step_mapping_delete(test, checks=[])
    step_network_setting_create(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("domainName", "mydomaincontroller.local", case_sensitive=False),
        test.check("domainUsername", "testuser@mydomaincontroller.local", case_sensitive=False),
        test.check("networkingResourceGroupId", "/subscriptions/{subscription_id}/resourceGroups/{rg_3}",
                   case_sensitive=False),
        test.check("subnetId", "/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Network/virt"
                   "ualNetworks/{vn}/subnets/{subnets}", case_sensitive=False),
        test.check("name", "{myNetworkSetting}", case_sensitive=False),
    ])
    step_network_setting_show(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("domainName", "mydomaincontroller.local", case_sensitive=False),
        test.check("domainUsername", "testuser@mydomaincontroller.local", case_sensitive=False),
        test.check("networkingResourceGroupId", "/subscriptions/{subscription_id}/resourceGroups/{rg_3}",
                   case_sensitive=False),
        test.check("subnetId", "/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Network/virt"
                   "ualNetworks/{vn}/subnets/{subnets}", case_sensitive=False),
        test.check("name", "{myNetworkSetting}", case_sensitive=False),
    ])
    step_network_setting_show_health_detail(test, checks=[])
    step_network_setting_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_network_setting_list2(test, checks=[
        test.check('length(@)', 1),
    ])
    step_network_setting_update(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("domainName", "mydomaincontroller.local", case_sensitive=False),
        test.check("domainUsername", "testuser@mydomaincontroller.local", case_sensitive=False),
        test.check("networkingResourceGroupId", "/subscriptions/{subscription_id}/resourceGroups/{rg_3}",
                   case_sensitive=False),
        test.check("subnetId", "/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Network/virt"
                   "ualNetworks/{vn}/subnets/{subnets}", case_sensitive=False),
        test.check("name", "{myNetworkSetting}", case_sensitive=False),
    ])
    step_network_setting_delete(test, checks=[])
    step_operation_statuses_show(test, checks=[])
    step_project_create(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("description", "This is my first project.", case_sensitive=False),
        test.check("devCenterId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/dev"
                   "centers/{myDevCenter2}", case_sensitive=False),
        test.check("tags.CostCenter", "R&D", case_sensitive=False),
        test.check("name", "{myProject}", case_sensitive=False),
    ])
    step_project_show(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("description", "This is my first project.", case_sensitive=False),
        test.check("devCenterId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/dev"
                   "centers/{myDevCenter2}", case_sensitive=False),
        test.check("tags.CostCenter", "R&D", case_sensitive=False),
        test.check("name", "{myProject}", case_sensitive=False),
    ])
    step_project_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_project_list2(test, checks=[
        test.check('length(@)', 1),
    ])
    step_project_update(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("devCenterId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidalgo/dev"
                   "centers/{myDevCenter2}", case_sensitive=False),
        test.check("tags.CostCenter", "R&D", case_sensitive=False),
    ])
    step_pool_create(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("machineDefinitionId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fid"
                   "algo/machinedefinitions/{myMachineDefinition}", case_sensitive=False),
        test.check("networkSettingsId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidal"
                   "go/networksettings/{myNetworkSetting}", case_sensitive=False),
        test.check("sku.name", "medium", case_sensitive=False),
        test.check("name", "{myPool}", case_sensitive=False),
    ])
    step_pool_show(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("machineDefinitionId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fid"
                   "algo/machinedefinitions/{myMachineDefinition}", case_sensitive=False),
        test.check("networkSettingsId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidal"
                   "go/networksettings/{myNetworkSetting}", case_sensitive=False),
        test.check("sku.name", "medium", case_sensitive=False),
        test.check("name", "{myPool}", case_sensitive=False),
    ])
    step_pool_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_pool_update(test, checks=[
        test.check("location", "centralus", case_sensitive=False),
        test.check("machineDefinitionId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fid"
                   "algo/machinedefinitions/{myMachineDefinition}", case_sensitive=False),
        test.check("networkSettingsId", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Fidal"
                   "go/networksettings/{myNetworkSetting}", case_sensitive=False),
        test.check("sku.name", "medium", case_sensitive=False),
        test.check("name", "{myPool}", case_sensitive=False),
    ])
    step_pool_delete(test, checks=[])
    step_project_delete(test, checks=[])
    step_sku_list(test, checks=[])
    cleanup_scenario(test)


# Test class for Scenario
@try_manual
class Fidalgo_adminScenarioTest(ScenarioTest):
    def __init__(self, *args, **kwargs):
        super(Fidalgo_adminScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myDevCenter2': '{devCenterName}',
            'myDevCenter': 'Contoso',
            'myProject': '{projectName}',
            'myProject2': 'Contoso',
            'myEnvironmentType': '{environmentTypeName}',
            'myCatalog': '{catalogName}',
            'myMapping': '{mappingName}',
            'myMachineDefinition': '{machineDefinitionName}',
            'myNetworkSetting': '{networkSettingName}',
            'myCatalogItem': 'helloworld',
            'myCatalogItem2': '{itemName}',
            'myPool': '{poolName}',
            'myPool2': 'poolName',
            'myEnvironment': '{environmentName}',
        })

    @ResourceGroupPreparer(name_prefix='clitestfidalgo_admin_rg1'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestfidalgo_admin_Example'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestfidalgo_admin_ExampleRG'[:7], key='rg_3', parameter_name='rg_3')
    @VirtualNetworkPreparer(name_prefix='clitestfidalgo_admin_ExampleVNet'[:7], key='vn', resource_group_key='rg_3')
    @SubnetPreparer(name_prefix='clitestfidalgo_admin_default'[:7], key='subnets', virtual_network_key='vn',
                    resource_group_key='rg_3')
    def test_fidalgo_admin_Scenario(self, rg, rg_2, rg_3):
        call_scenario(self)
        calc_coverage(__file__)
        raise_if()
