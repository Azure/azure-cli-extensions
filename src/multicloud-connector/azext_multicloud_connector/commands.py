# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

# pylint: disable=too-many-lines
# pylint: disable=too-many-statements
# pylint: disable=line-too-long


def load_command_table(self, _):  # pylint: disable=unused-argument
    with self.command_group("arc-multicloud") as g:
        g.custom_command("generate-aws-template", "customized_generate_aws_template", supports_no_wait=True)

    with self.command_group("arc-multicloud public-cloud-connector"):
        from .custom import (
            CustomizedPublicCloudConnectorCreate,
            CustomizedPublicCloudConnectorDelete,
            CustomizedPublicCloudConnectorList,
            CustomizedPublicCloudConnectorShow,
            CustomizedPublicCloudConnectorTestPermission,
            CustomizedPublicCloudConnectorUpdate
        )
        self.command_table["arc-multicloud public-cloud-connector create"] = CustomizedPublicCloudConnectorCreate(loader=self)
        self.command_table["arc-multicloud public-cloud-connector delete"] = CustomizedPublicCloudConnectorDelete(loader=self)
        self.command_table["arc-multicloud public-cloud-connector list"] = CustomizedPublicCloudConnectorList(loader=self)
        self.command_table["arc-multicloud public-cloud-connector show"] = CustomizedPublicCloudConnectorShow(loader=self)
        self.command_table["arc-multicloud public-cloud-connector test-permission"] = CustomizedPublicCloudConnectorTestPermission(loader=self)
        self.command_table["arc-multicloud public-cloud-connector update"] = CustomizedPublicCloudConnectorUpdate(loader=self)

    with self.command_group("arc-multicloud solution-configuration"):
        from .custom import (
            CustomizedSolutionConfigurationCreate,
            CustomizedSolutionConfigurationDelete,
            CustomizedSolutionConfigurationList,
            CustomizedSolutionConfigurationShow,
            CustomizedSolutionConfigurationSyncNow,
            CustomizedSolutionConfigurationUpdate
        )
        self.command_table["arc-multicloud solution-configuration create"] = CustomizedSolutionConfigurationCreate(loader=self)
        self.command_table["arc-multicloud solution-configuration delete"] = CustomizedSolutionConfigurationDelete(loader=self)
        self.command_table["arc-multicloud solution-configuration list"] = CustomizedSolutionConfigurationList(loader=self)
        self.command_table["arc-multicloud solution-configuration show"] = CustomizedSolutionConfigurationShow(loader=self)
        self.command_table["arc-multicloud solution-configuration sync-now"] = CustomizedSolutionConfigurationSyncNow(loader=self)
        self.command_table["arc-multicloud solution-configuration update"] = CustomizedSolutionConfigurationUpdate(loader=self)

    with self.command_group("arc-multicloud solution-type"):
        from .custom import (
            CustomizedSolutionTypeList,
            CustomizedSolutionTypeShow
        )
        self.command_table["arc-multicloud solution-type list"] = CustomizedSolutionTypeList(loader=self)
        self.command_table["arc-multicloud solution-type show"] = CustomizedSolutionTypeShow(loader=self)
