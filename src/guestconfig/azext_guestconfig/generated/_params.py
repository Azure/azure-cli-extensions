# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import resource_group_name_type


def load_arguments(self, _):

    with self.argument_context('guestconfig guest-configuration-assignment list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('vm_name', type=str, help='The name of the virtual machine.')

    with self.argument_context('guestconfig guest-configuration-assignment show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('guest_configuration_assignment_name', options_list=['--name', '-n', ''
                                                                        '--guest-configuration-assignment-name'],
                   type=str, help='The guest configuration assignment name.', id_part='child_name_1')
        c.argument('vm_name', type=str, help='The name of the virtual machine.', id_part='name')

    with self.argument_context('guestconfig guest-configuration-assignment-report list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('guest_configuration_assignment_name', type=str, help='The guest configuration assignment name.')
        c.argument('vm_name', type=str, help='The name of the virtual machine.')

    with self.argument_context('guestconfig guest-configuration-assignment-report show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('guest_configuration_assignment_name', type=str, help='The guest configuration assignment name.',
                   id_part='child_name_1')
        c.argument('report_id', type=str, help='The GUID for the guest configuration assignment report.', id_part=''
                   'child_name_2')
        c.argument('vm_name', type=str, help='The name of the virtual machine.', id_part='name')

    with self.argument_context('guestconfig guest-configuration-hcrp-assignment list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('machine_name', type=str, help='The name of the ARC machine.')

    with self.argument_context('guestconfig guest-configuration-hcrp-assignment show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('guest_configuration_assignment_name', type=str, help='The guest configuration assignment name.',
                   id_part='child_name_1')
        c.argument('machine_name', type=str, help='The name of the ARC machine.', id_part='name')

    with self.argument_context('guestconfig guest-configuration-hcrp-assignment-report list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('guest_configuration_assignment_name', type=str, help='The guest configuration assignment name.')
        c.argument('machine_name', type=str, help='The name of the ARC machine.')

    with self.argument_context('guestconfig guest-configuration-hcrp-assignment-report show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('guest_configuration_assignment_name', type=str, help='The guest configuration assignment name.',
                   id_part='child_name_1')
        c.argument('report_id', type=str, help='The GUID for the guest configuration assignment report.', id_part=''
                   'child_name_2')
        c.argument('machine_name', type=str, help='The name of the ARC machine.', id_part='name')
