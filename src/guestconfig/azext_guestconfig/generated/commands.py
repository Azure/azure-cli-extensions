# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_guestconfig.generated._client_factory import cf_guest_configuration_assignment
    guestconfig_guest_configuration_assignment = CliCommandType(
        operations_tmpl='azext_guestconfig.vendored_sdks.guestconfig.operations._guest_configuration_assignments_operat'
        'ions#GuestConfigurationAssignmentsOperations.{}',
        client_factory=cf_guest_configuration_assignment)
    with self.command_group('guestconfig guest-configuration-assignment', guestconfig_guest_configuration_assignment,
                            client_factory=cf_guest_configuration_assignment) as g:
        g.custom_command('list', 'guestconfig_guest_configuration_assignment_list')
        g.custom_show_command('show', 'guestconfig_guest_configuration_assignment_show')

    from azext_guestconfig.generated._client_factory import cf_guest_configuration_assignment_report
    guestconfig_guest_configuration_assignment_report = CliCommandType(
        operations_tmpl='azext_guestconfig.vendored_sdks.guestconfig.operations._guest_configuration_assignment_reports'
        '_operations#GuestConfigurationAssignmentReportsOperations.{}',
        client_factory=cf_guest_configuration_assignment_report)
    with self.command_group('guestconfig guest-configuration-assignment-report',
                            guestconfig_guest_configuration_assignment_report,
                            client_factory=cf_guest_configuration_assignment_report) as g:
        g.custom_command('list', 'guestconfig_guest_configuration_assignment_report_list')
        g.custom_show_command('show', 'guestconfig_guest_configuration_assignment_report_show')

    from azext_guestconfig.generated._client_factory import cf_guest_configuration_hcrp_assignment
    guestconfig_guest_configuration_hcrp_assignment = CliCommandType(
        operations_tmpl='azext_guestconfig.vendored_sdks.guestconfig.operations._guest_configuration_hcrp_assignments_o'
        'perations#GuestConfigurationHcrpAssignmentsOperations.{}',
        client_factory=cf_guest_configuration_hcrp_assignment)
    with self.command_group('guestconfig guest-configuration-hcrp-assignment',
                            guestconfig_guest_configuration_hcrp_assignment,
                            client_factory=cf_guest_configuration_hcrp_assignment) as g:
        g.custom_command('list', 'guestconfig_guest_configuration_hcrp_assignment_list')
        g.custom_show_command('show', 'guestconfig_guest_configuration_hcrp_assignment_show')

    from azext_guestconfig.generated._client_factory import cf_guest_configuration_hcrp_assignment_report
    guestconfig_guest_configuration_hcrp_assignment_report = CliCommandType(
        operations_tmpl='azext_guestconfig.vendored_sdks.guestconfig.operations._guest_configuration_hcrp_assignment_re'
        'ports_operations#GuestConfigurationHcrpAssignmentReportsOperations.{}',
        client_factory=cf_guest_configuration_hcrp_assignment_report)
    with self.command_group('guestconfig guest-configuration-hcrp-assignment-report',
                            guestconfig_guest_configuration_hcrp_assignment_report,
                            client_factory=cf_guest_configuration_hcrp_assignment_report) as g:
        g.custom_command('list', 'guestconfig_guest_configuration_hcrp_assignment_report_list')
        g.custom_show_command('show', 'guestconfig_guest_configuration_hcrp_assignment_report_show')

    with self.command_group('guestconfig', is_experimental=True):
        pass
