# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


# EXAMPLE: /Sites/put/Create VMware site
def step_vmware_site_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure vmware site create '
             '--location "centralus" '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" ',
             checks=checks)


# EXAMPLE: /Sites/get/Get VMware site
def step_vmware_site_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure vmware site show '
             '--resource-group "{rg}" '
             '--name "{vmware_site}" ',
             checks=checks)


# EXAMPLE: /Sites/delete/Delete VMware site
def step_vmware_site_delete(test):
    test.cmd('az offazure vmware site delete -y '
             '--resource-group "{rg}" '
             '--name "{vmware_site}" ')


# EXAMPLE: /HyperVMachines/get/List hosts by site
def step_hyperv_machine_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure hyperv machine list '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             checks=checks)


# EXAMPLE: /HyperVRunAsAccounts/get/Get run as account.
def step_hyperv_run_as_account_show(test):
    test.cmd('az offazure hyperv run-as-account show '
             '--account-name "not-exist-account" '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             expect_failure=True)


# EXAMPLE: /HyperVRunAsAccounts/get/List Run As Accounts by site
def step_hyperv_run_as_account_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure hyperv run-as-account list '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             checks=checks)


# EXAMPLE: /HyperVSites/put/Create Hyper-V site
def step_hyperv_site_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure hyperv site create '
             '--location "centralus" '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             checks=checks)


# EXAMPLE: /HyperVSites/get/Get Hyper-V site
def step_hyperv_site_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure hyperv site show '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             checks=checks)


# EXAMPLE: /HyperVCluster/get/Get cluster
def step_hyperv_cluster_show(test):
    test.cmd('az offazure hyperv cluster show '
             '--cluster-name "not-exist-cluster" '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             expect_failure=True)


# EXAMPLE: /HyperVCluster/get/List cluster by site
def step_hyperv_cluster_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure hyperv cluster list '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             checks=checks)


# EXAMPLE: /HyperVHost/get/Get host
def step_hyperv_host_show(test):
    test.cmd('az offazure hyperv host show '
             '--host-name "not-exist-host" '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             expect_failure=True)


# EXAMPLE: /HyperVHost/get/List hosts by site
def step_hyperv_host_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure hyperv host list '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             checks=checks)


# EXAMPLE: /HyperVSites/delete/Delete Hyper-V site.
def step_hyperv_site_delete(test):
    test.cmd('az offazure hyperv site delete -y '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ')


# EXAMPLE: /Machines/get/Get VMware machine.
def step_vmware_machine_show(test):
    test.cmd('az offazure vmware machine show '
             '--name "not-exist-machine" '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" ',
             expect_failure=True)


# EXAMPLE: /Machines/get/Get VMware machines
def step_vmware_machine_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure vmware machine list '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" ',
             checks=checks)


# EXAMPLE: /HyperVMachines/get/Get machine.
def step_hyperv_machine_show(test):
    test.cmd('az offazure hyperv machine show '
             '--machine-name "not-exist-machine" '
             '--resource-group "{rg}" '
             '--site-name "{hyperv_site}" ',
             expect_failure=True)


# EXAMPLE: /RunAsAccounts/get/Get VMware run as account.
def step_vmware_run_as_account_show(test):
    test.cmd('az offazure vmware run-as-account show '
             '--account-name "not-exist-account" '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" ',
             expect_failure=True)


# EXAMPLE: /RunAsAccounts/get/List VMware run as account by site.
def step_vmware_run_as_account_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure vmware run-as-account list '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" ',
             checks=checks)


# EXAMPLE: /VCenter/get/Get VMware Vcenter.
def step_vmware_vcenter_show(test):
    test.cmd('az offazure vmware vcenter show '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" '
             '--name "not-exist-vcenter"',
             expect_failure=True)


# EXAMPLE: /VCenter/get/List VMware vCenters by site
def step_vmware_vcenter_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az offazure vmware vcenter list '
             '--resource-group "{rg}" '
             '--site-name "{vmware_site}" ',
             checks=checks)
