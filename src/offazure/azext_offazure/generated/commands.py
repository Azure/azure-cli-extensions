# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_offazure.generated._client_factory import cf_hyper_vcluster
    offazure_hyper_vcluster = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._hyper_vcluster_operations#HyperVClusterOpera'
        'tions.{}',
        client_factory=cf_hyper_vcluster)
    with self.command_group('offazure hyperv cluster', offazure_hyper_vcluster,
                            client_factory=cf_hyper_vcluster) as g:
        g.custom_command('list', 'offazure_hyperv_cluster_list')
        g.custom_show_command('show', 'offazure_hyperv_cluster_show')

    from azext_offazure.generated._client_factory import cf_hyper_vhost
    offazure_hyper_vhost = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._hyper_vhost_operations#HyperVHostOperations.'
        '{}',
        client_factory=cf_hyper_vhost)
    with self.command_group('offazure hyperv host', offazure_hyper_vhost, client_factory=cf_hyper_vhost) as g:
        g.custom_command('list', 'offazure_hyperv_host_list')
        g.custom_show_command('show', 'offazure_hyperv_host_show')

    from azext_offazure.generated._client_factory import cf_hyper_vmachine
    offazure_hyper_vmachine = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._hyper_vmachines_operations#HyperVMachinesOpe'
        'rations.{}',
        client_factory=cf_hyper_vmachine)
    with self.command_group('offazure hyperv machine', offazure_hyper_vmachine,
                            client_factory=cf_hyper_vmachine) as g:
        g.custom_command('list', 'offazure_hyperv_machine_list')
        g.custom_show_command('show', 'offazure_hyperv_machine_show')

    from azext_offazure.generated._client_factory import cf_hyper_vrun_as_account
    offazure_hyper_vrun_as_account = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._hyper_vrun_as_accounts_operations#HyperVRunA'
        'sAccountsOperations.{}',
        client_factory=cf_hyper_vrun_as_account)
    with self.command_group('offazure hyperv run-as-account', offazure_hyper_vrun_as_account,
                            client_factory=cf_hyper_vrun_as_account) as g:
        g.custom_command('list', 'offazure_hyperv_run_as_account_list')
        g.custom_show_command('show', 'offazure_hyperv_run_as_account_show')

    from azext_offazure.generated._client_factory import cf_hyper_vsite
    offazure_hyper_vsite = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._hyper_vsites_operations#HyperVSitesOperation'
        's.{}',
        client_factory=cf_hyper_vsite)
    with self.command_group('offazure hyperv site', offazure_hyper_vsite, client_factory=cf_hyper_vsite) as g:
        g.custom_show_command('show', 'offazure_hyperv_site_show')
        g.custom_command('create', 'offazure_hyperv_site_create')
        g.custom_command('delete', 'offazure_hyperv_site_delete', confirmation=True)

    from azext_offazure.generated._client_factory import cf_machine
    offazure_machine = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._machines_operations#MachinesOperations.{}',
        client_factory=cf_machine)
    with self.command_group('offazure vmware machine', offazure_machine, client_factory=cf_machine) as g:
        g.custom_command('list', 'offazure_vmware_machine_list')
        g.custom_show_command('show', 'offazure_vmware_machine_show')

    from azext_offazure.generated._client_factory import cf_run_as_account
    offazure_run_as_account = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._run_as_accounts_operations#RunAsAccountsOper'
        'ations.{}',
        client_factory=cf_run_as_account)
    with self.command_group('offazure vmware run-as-account', offazure_run_as_account,
                            client_factory=cf_run_as_account) as g:
        g.custom_command('list', 'offazure_vmware_run_as_account_list')
        g.custom_show_command('show', 'offazure_vmware_run_as_account_show')

    from azext_offazure.generated._client_factory import cf_site
    offazure_site = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._sites_operations#SitesOperations.{}',
        client_factory=cf_site)
    with self.command_group('offazure vmware site', offazure_site, client_factory=cf_site) as g:
        g.custom_show_command('show', 'offazure_vmware_site_show')
        g.custom_command('create', 'offazure_vmware_site_create')
        g.custom_command('delete', 'offazure_vmware_site_delete', confirmation=True)

    from azext_offazure.generated._client_factory import cf_vcenter
    offazure_vcenter = CliCommandType(
        operations_tmpl='azext_offazure.vendored_sdks.offazure.operations._vcenter_operations#VCenterOperations.{}',
        client_factory=cf_vcenter)
    with self.command_group('offazure vmware vcenter', offazure_vcenter, client_factory=cf_vcenter) as g:
        g.custom_command('list', 'offazure_vmware_vcenter_list')
        g.custom_show_command('show', 'offazure_vmware_vcenter_show')

    with self.command_group('offazure', is_experimental=True):
        pass
