# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class CodespacesPlan(Resource):
    """Codespaces Plan. Represents the high level Plan needed to provision
    Codespaces resources.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Fully qualified resource Id for the resource.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource.
    :vartype type: str
    :param tags: Tags for the Codespaces Plan
    :type tags: dict[str, str]
    :param location: Region where the Azure resource is located.
    :type location: str
    :param sku: SKU of the service.
    :type sku: ~microsoft.codespaces.models.Sku
    :param identity: The type of identity used for the resource.
    :type identity: ~microsoft.codespaces.models.Identity
    :param properties: Codespaces Additional properties. Additional Codespaces
     Plan properties.
    :type properties: ~microsoft.codespaces.models.CodespacesPlanProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
        'sku': {'key': 'sku', 'type': 'Sku'},
        'identity': {'key': 'identity', 'type': 'Identity'},
        'properties': {'key': 'properties', 'type': 'CodespacesPlanProperties'},
    }

    def __init__(self, **kwargs):
        super(CodespacesPlan, self).__init__(**kwargs)
        self.sku = kwargs.get('sku', None)
        self.identity = kwargs.get('identity', None)
        self.properties = kwargs.get('properties', None)
