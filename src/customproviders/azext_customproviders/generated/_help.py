# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['customproviders custom-resource-provider'] = """
    type: group
    short-summary: customproviders custom-resource-provider
"""

helps['customproviders custom-resource-provider list'] = """
    type: command
    short-summary: "Gets all the custom resource providers within a resource group. And Gets all the custom resource \
providers within a subscription."
    examples:
      - name: List all custom resource providers on the resourceGroup
        text: |-
               az customproviders custom-resource-provider list --resource-group "testRG"
      - name: List all custom resource providers on the subscription
        text: |-
               az customproviders custom-resource-provider list
"""

helps['customproviders custom-resource-provider show'] = """
    type: command
    short-summary: "Gets the custom resource provider manifest."
    examples:
      - name: Get a custom resource provider
        text: |-
               az customproviders custom-resource-provider show --resource-group "testRG" --resource-provider-name \
"newrp"
"""

helps['customproviders custom-resource-provider create'] = """
    type: command
    short-summary: "Create the custom resource provider."
    parameters:
      - name: --actions
        short-summary: "A list of actions that the custom resource provider implements."
        long-summary: |
            Usage: --actions routing-type=XX name=XX endpoint=XX

            routing-type: The routing types that are supported for action requests.
            name: Required. The name of the route definition. This becomes the name for the ARM extension (e.g. \
'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProvide\
rs/{resourceProviderName}/{name}')
            endpoint: Required. The route definition endpoint URI that the custom resource provider will proxy \
requests to. This can be in the form of a flat URI (e.g. 'https://testendpoint/') or can specify to route via a path \
(e.g. 'https://testendpoint/{requestPath}')

            Multiple actions can be specified by using more than one --actions argument.
      - name: --resource-types
        short-summary: "A list of resource types that the custom resource provider implements."
        long-summary: |
            Usage: --resource-types routing-type=XX name=XX endpoint=XX

            routing-type: The routing types that are supported for resource requests.
            name: Required. The name of the route definition. This becomes the name for the ARM extension (e.g. \
'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProvide\
rs/{resourceProviderName}/{name}')
            endpoint: Required. The route definition endpoint URI that the custom resource provider will proxy \
requests to. This can be in the form of a flat URI (e.g. 'https://testendpoint/') or can specify to route via a path \
(e.g. 'https://testendpoint/{requestPath}')

            Multiple actions can be specified by using more than one --resource-types argument.
      - name: --validations
        short-summary: "A list of validations to run on the custom resource provider's requests."
        long-summary: |
            Usage: --validations validation-type=XX specification=XX

            validation-type: The type of validation to run against a matching request.
            specification: Required. A link to the validation specification. The specification must be hosted on \
raw.githubusercontent.com.

            Multiple actions can be specified by using more than one --validations argument.
    examples:
      - name: Create or update the custom resource provider
        text: |-
               az customproviders custom-resource-provider create --resource-group "testRG" --location "eastus" \
--actions name="TestAction" endpoint="https://mytestendpoint/" routing-type="Proxy" --resource-types \
name="TestResource" endpoint="https://mytestendpoint2/" routing-type="Proxy,Cache" --resource-provider-name "newrp"
"""

helps['customproviders custom-resource-provider update'] = """
    type: command
    short-summary: "Updates an existing custom resource provider. The only value that can be updated via PATCH \
currently is the tags."
    examples:
      - name: Update a custom resource provider
        text: |-
               az customproviders custom-resource-provider update --resource-group "testRG" --resource-provider-name \
"newrp"
"""

helps['customproviders custom-resource-provider delete'] = """
    type: command
    short-summary: "Deletes the custom resource provider."
    examples:
      - name: Delete a custom resource provider
        text: |-
               az customproviders custom-resource-provider delete --resource-group "testRG" --resource-provider-name \
"newrp"
"""

helps['customproviders custom-resource-provider wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the customproviders custom-resource-provider \
is met.
    examples:
      - name: Pause executing next line of CLI script until the customproviders custom-resource-provider is \
successfully created.
        text: |-
               az customproviders custom-resource-provider wait --resource-group "testRG" --resource-provider-name \
"newrp" --created
      - name: Pause executing next line of CLI script until the customproviders custom-resource-provider is \
successfully deleted.
        text: |-
               az customproviders custom-resource-provider wait --resource-group "testRG" --resource-provider-name \
"newrp" --deleted
"""

helps['customproviders association'] = """
    type: group
    short-summary: customproviders association
"""

helps['customproviders association show'] = """
    type: command
    short-summary: "Get an association."
    examples:
      - name: Get an association
        text: |-
               az customproviders association show --name "associationName" --scope "scope"
"""

helps['customproviders association create'] = """
    type: command
    short-summary: "Create an association."
    examples:
      - name: Create or update an association
        text: |-
               az customproviders association create --target-resource-id "/subscriptions/00000000-0000-0000-0000-00000\
0000000/resourceGroups/appRG/providers/Microsoft.Solutions/applications/applicationName" --name "associationName" \
--scope "scope"
"""

helps['customproviders association update'] = """
    type: command
    short-summary: "Update an association."
"""

helps['customproviders association delete'] = """
    type: command
    short-summary: "Delete an association."
    examples:
      - name: Delete an association
        text: |-
               az customproviders association delete --name "associationName" --scope "scope"
"""

helps['customproviders association list-all'] = """
    type: command
    short-summary: "Gets all association for the given scope."
    examples:
      - name: Get all associations
        text: |-
               az customproviders association list-all --scope "scope"
"""

helps['customproviders association wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the customproviders association is met.
    examples:
      - name: Pause executing next line of CLI script until the customproviders association is successfully created.
        text: |-
               az customproviders association wait --name "associationName" --scope "scope" --created
      - name: Pause executing next line of CLI script until the customproviders association is successfully updated.
        text: |-
               az customproviders association wait --name "associationName" --scope "scope" --updated
      - name: Pause executing next line of CLI script until the customproviders association is successfully deleted.
        text: |-
               az customproviders association wait --name "associationName" --scope "scope" --deleted
"""
