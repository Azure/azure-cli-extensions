# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg, rg_2):
    pass


# EXAMPLE: /Associations/put/Create or update an association
@try_manual
def step__associations_put_create_or_update_an_association(test, rg, rg_2):
    test.cmd('az customproviders association create '
             '--target-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Solutions/'
             'applications/applicationName" '
             '--name "{associationName}" '
             '--scope "scope"',
             checks=[])
    test.cmd('az customproviders association wait --created '
             '--name "{associationName}"',
             checks=[])


# EXAMPLE: /Associations/get/Get all associations
@try_manual
def step__associations_get_get_all_associations(test, rg, rg_2):
    test.cmd('az customproviders association list-all '
             '--scope "scope"',
             checks=[])


# EXAMPLE: /Associations/get/Get an association
@try_manual
def step__associations_get_get_an_association(test, rg, rg_2):
    test.cmd('az customproviders association show '
             '--name "{associationName}" '
             '--scope "scope"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/put/Create or update the custom resource provider
@try_manual
def step__customresourceprovider_put_create_or_update_the_custom_resource_provider(test, rg, rg_2):
    test.cmd('az customproviders custom-resource-provider create '
             '--resource-group "{rg_2}" '
             '--location "eastus" '
             '--actions name="TestAction" endpoint="https://mytestendpoint/" routing-type="Proxy" '
             '--resource-types name="TestResource" endpoint="https://mytestendpoint2/" routing-type="Proxy,Cache" '
             '--resource-provider-name "newrp"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/get/Get a custom resource provider
@try_manual
def step__customresourceprovider_get_get_a_custom_resource_provider(test, rg, rg_2):
    test.cmd('az customproviders custom-resource-provider show '
             '--resource-group "{rg_2}" '
             '--resource-provider-name "newrp"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/get/List all custom resource providers on the resourceGroup
@try_manual
def step__customresourceprovider_get_list_all_custom_resource_providers_on_the_resourcegroup(test, rg, rg_2):
    test.cmd('az customproviders custom-resource-provider list '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/get/List all custom resource providers on the subscription
@try_manual
def step__customresourceprovider_get_list_all_custom_resource_providers_on_the_subscription(test, rg, rg_2):
    test.cmd('az customproviders custom-resource-provider list '
             '-g ""',
             checks=[])


# EXAMPLE: /CustomResourceProvider/patch/Update a custom resource provider
@try_manual
def step__customresourceprovider_patch_update_a_custom_resource_provider(test, rg, rg_2):
    test.cmd('az customproviders custom-resource-provider update '
             '--resource-group "{rg_2}" '
             '--resource-provider-name "newrp"',
             checks=[])


# EXAMPLE: /Associations/delete/Delete an association
@try_manual
def step__associations_delete_delete_an_association(test, rg, rg_2):
    test.cmd('az customproviders association delete '
             '--name "{associationName}" '
             '--scope "scope"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/delete/Delete a custom resource provider
@try_manual
def step__customresourceprovider_delete_delete_a_custom_resource_provider(test, rg, rg_2):
    test.cmd('az customproviders custom-resource-provider delete '
             '--resource-group "{rg_2}" '
             '--resource-provider-name "newrp"',
             checks=[])


@try_manual
def cleanup(test, rg, rg_2):
    pass


@try_manual
def call_scenario(test, rg, rg_2):
    setup(test, rg, rg_2)
    step__associations_put_create_or_update_an_association(test, rg, rg_2)
    step__associations_get_get_all_associations(test, rg, rg_2)
    step__associations_get_get_an_association(test, rg, rg_2)
    step__customresourceprovider_put_create_or_update_the_custom_resource_provider(test, rg, rg_2)
    step__customresourceprovider_get_get_a_custom_resource_provider(test, rg, rg_2)
    step__customresourceprovider_get_list_all_custom_resource_providers_on_the_resourcegroup(test, rg, rg_2)
    step__customresourceprovider_get_list_all_custom_resource_providers_on_the_subscription(test, rg, rg_2)
    step__customresourceprovider_patch_update_a_custom_resource_provider(test, rg, rg_2)
    step__associations_delete_delete_an_association(test, rg, rg_2)
    step__customresourceprovider_delete_delete_a_custom_resource_provider(test, rg, rg_2)
    cleanup(test, rg, rg_2)


@try_manual
class CustomprovidersScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestcustomproviders_appRG'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestcustomproviders_testRG'[:7], key='rg_2', parameter_name='rg_2')
    def test_customproviders(self, rg, rg_2):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'associationName': 'associationName',
        })

        call_scenario(self, rg, rg_2)
        raise_if()
