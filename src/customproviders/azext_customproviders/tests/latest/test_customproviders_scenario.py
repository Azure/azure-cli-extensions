# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg_2, rg):
    pass


# EXAMPLE: /Associations/put/Create or update an association
@try_manual
def step__associations_put(test, rg_2, rg):
    test.cmd('az customproviders association create '
             '--target-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Solution'
             's/applications/applicationName" '
             '--name "{myAssociation}" '
             '--scope "scope"',
             checks=[
                 test.check("targetResourceId", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Micro"
                            "soft.Solutions/applications/applicationName", case_sensitive=False),
                 test.check("name", "{myAssociation}", case_sensitive=False),
             ])
    test.cmd('az customproviders association wait --created '
             '--name "{myAssociation}"',
             checks=[])


# EXAMPLE: /Associations/get/Get all associations
@try_manual
def step__associations_get_get_all_associations(test, rg_2, rg):
    test.cmd('az customproviders association list-all '
             '--scope "scope"',
             checks=[])


# EXAMPLE: /Associations/get/Get an association
@try_manual
def step__associations_get_get_an_association(test, rg_2, rg):
    test.cmd('az customproviders association show '
             '--name "{myAssociation}" '
             '--scope "scope"',
             checks=[
                 test.check("targetResourceId", "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Micro"
                            "soft.Solutions/applications/applicationName", case_sensitive=False),
                 test.check("name", "{myAssociation}", case_sensitive=False),
             ])


# EXAMPLE: /Associations/delete/Delete an association
@try_manual
def step__associations_delete_delete_an_association(test, rg_2, rg):
    test.cmd('az customproviders association delete -y '
             '--name "{myAssociation}" '
             '--scope "scope"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/put/Create or update the custom resource provider
@try_manual
def step__customresourceprovider_put(test, rg_2, rg):
    test.cmd('az customproviders custom-resource-provider create '
             '--resource-group "{rg}" '
             '--location "eastus" '
             '--actions name="TestAction" endpoint="https://mytestendpoint/" routing-type="Proxy" '
             '--resource-types name="TestResource" endpoint="https://mytestendpoint2/" routing-type="Proxy,Cache" '
             '--resource-provider-name "newrp"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/get/Get a custom resource provider
@try_manual
def step__customresourceprovider_get(test, rg_2, rg):
    test.cmd('az customproviders custom-resource-provider show '
             '--resource-group "{rg}" '
             '--resource-provider-name "newrp"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/get/List all custom resource providers on the resourceGroup
@try_manual
def step__customresourceprovider_get2(test, rg_2, rg):
    test.cmd('az customproviders custom-resource-provider list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/get/List all custom resource providers on the subscription
@try_manual
def step__customresourceprovider_get3(test, rg_2, rg):
    test.cmd('az customproviders custom-resource-provider list '
             '-g ""',
             checks=[])


# EXAMPLE: /CustomResourceProvider/patch/Update a custom resource provider
@try_manual
def step__customresourceprovider_patch(test, rg_2, rg):
    test.cmd('az customproviders custom-resource-provider update '
             '--resource-group "{rg}" '
             '--resource-provider-name "newrp"',
             checks=[])


# EXAMPLE: /CustomResourceProvider/delete/Delete a custom resource provider
@try_manual
def step__customresourceprovider_delete(test, rg_2, rg):
    test.cmd('az customproviders custom-resource-provider delete -y '
             '--resource-group "{rg}" '
             '--resource-provider-name "newrp"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test, rg_2, rg):
    pass


# Testcase
@try_manual
def call_scenario(test, rg_2, rg):
    setup(test, rg_2, rg)
    step__associations_put(test, rg_2, rg)
    step__associations_get_get_all_associations(test, rg_2, rg)
    step__associations_get_get_an_association(test, rg_2, rg)
    step__associations_delete_delete_an_association(test, rg_2, rg)
    step__customresourceprovider_put(test, rg_2, rg)
    step__customresourceprovider_get(test, rg_2, rg)
    step__customresourceprovider_get2(test, rg_2, rg)
    step__customresourceprovider_get3(test, rg_2, rg)
    step__customresourceprovider_patch(test, rg_2, rg)
    step__customresourceprovider_delete(test, rg_2, rg)
    cleanup(test, rg_2, rg)


@try_manual
class CustomprovidersScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestcustomproviders_appRG'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestcustomproviders_testRG'[:7], key='rg', parameter_name='rg')
    def test_customproviders(self, rg_2, rg):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myAssociation': 'associationName',
        })

        call_scenario(self, rg_2, rg)
        calc_coverage(__file__)
        raise_if()
