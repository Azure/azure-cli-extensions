# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ExtendedLivySessionRequest(Model):
    """ExtendedLivySessionRequest.

    :param tags:
    :type tags: dict[str, str]
    :param artifact_id:
    :type artifact_id: str
    :param name:
    :type name: str
    :param file:
    :type file: str
    :param class_name:
    :type class_name: str
    :param args:
    :type args: list[str]
    :param jars:
    :type jars: list[str]
    :param files:
    :type files: list[str]
    :param archives:
    :type archives: list[str]
    :param conf:
    :type conf: dict[str, str]
    :param driver_memory:
    :type driver_memory: str
    :param driver_cores:
    :type driver_cores: int
    :param executor_memory:
    :type executor_memory: str
    :param executor_cores:
    :type executor_cores: int
    :param num_executors:
    :type num_executors: int
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
        'artifact_id': {'key': 'artifactId', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'file': {'key': 'file', 'type': 'str'},
        'class_name': {'key': 'className', 'type': 'str'},
        'args': {'key': 'args', 'type': '[str]'},
        'jars': {'key': 'jars', 'type': '[str]'},
        'files': {'key': 'files', 'type': '[str]'},
        'archives': {'key': 'archives', 'type': '[str]'},
        'conf': {'key': 'conf', 'type': '{str}'},
        'driver_memory': {'key': 'driverMemory', 'type': 'str'},
        'driver_cores': {'key': 'driverCores', 'type': 'int'},
        'executor_memory': {'key': 'executorMemory', 'type': 'str'},
        'executor_cores': {'key': 'executorCores', 'type': 'int'},
        'num_executors': {'key': 'numExecutors', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(ExtendedLivySessionRequest, self).__init__(**kwargs)
        self.tags = kwargs.get('tags', None)
        self.artifact_id = kwargs.get('artifact_id', None)
        self.name = kwargs.get('name', None)
        self.file = kwargs.get('file', None)
        self.class_name = kwargs.get('class_name', None)
        self.args = kwargs.get('args', None)
        self.jars = kwargs.get('jars', None)
        self.files = kwargs.get('files', None)
        self.archives = kwargs.get('archives', None)
        self.conf = kwargs.get('conf', None)
        self.driver_memory = kwargs.get('driver_memory', None)
        self.driver_cores = kwargs.get('driver_cores', None)
        self.executor_memory = kwargs.get('executor_memory', None)
        self.executor_cores = kwargs.get('executor_cores', None)
        self.num_executors = kwargs.get('num_executors', None)
