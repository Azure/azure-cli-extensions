# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_footprintmonitoring.generated._client_factory import cf_profile
    footprintmonitoring_profile = CliCommandType(
        operations_tmpl='azext_footprintmonitoring.vendored_sdks.footprintmonitoring.operations._profile_operations#Pro'
        'fileOperations.{}',
        client_factory=cf_profile)
    with self.command_group('footprintmonitoring profile', footprintmonitoring_profile, client_factory=cf_profile,
                            is_experimental=True) as g:
        g.custom_command('list', 'footprintmonitoring_profile_list')
        g.custom_show_command('show', 'footprintmonitoring_profile_show')
        g.custom_command('create', 'footprintmonitoring_profile_create')
        g.custom_command('update', 'footprintmonitoring_profile_update')
        g.custom_command('delete', 'footprintmonitoring_profile_delete')

    from azext_footprintmonitoring.generated._client_factory import cf_measurement_endpoint
    footprintmonitoring_measurement_endpoint = CliCommandType(
        operations_tmpl='azext_footprintmonitoring.vendored_sdks.footprintmonitoring.operations._measurement_endpoint_o'
        'perations#MeasurementEndpointOperations.{}',
        client_factory=cf_measurement_endpoint)
    with self.command_group('footprintmonitoring measurement-endpoint', footprintmonitoring_measurement_endpoint,
                            client_factory=cf_measurement_endpoint, is_experimental=True) as g:
        g.custom_command('list', 'footprintmonitoring_measurement_endpoint_list')
        g.custom_show_command('show', 'footprintmonitoring_measurement_endpoint_show')
        g.custom_command('create', 'footprintmonitoring_measurement_endpoint_create')
        g.custom_command('update', 'footprintmonitoring_measurement_endpoint_update')
        g.custom_command('delete', 'footprintmonitoring_measurement_endpoint_delete')

    from azext_footprintmonitoring.generated._client_factory import cf_measurement_endpoint_condition
    footprintmonitoring_measurement_endpoint_condition = CliCommandType(
        operations_tmpl='azext_footprintmonitoring.vendored_sdks.footprintmonitoring.operations._measurement_endpoint_c'
        'ondition_operations#MeasurementEndpointConditionOperations.{}',
        client_factory=cf_measurement_endpoint_condition)
    with self.command_group('footprintmonitoring measurement-endpoint-condition',
                            footprintmonitoring_measurement_endpoint_condition,
                            client_factory=cf_measurement_endpoint_condition, is_experimental=True) as g:
        g.custom_command('list', 'footprintmonitoring_measurement_endpoint_condition_list')
        g.custom_show_command('show', 'footprintmonitoring_measurement_endpoint_condition_show')
        g.custom_command('create', 'footprintmonitoring_measurement_endpoint_condition_create')
        g.custom_command('update', 'footprintmonitoring_measurement_endpoint_condition_update')
        g.custom_command('delete', 'footprintmonitoring_measurement_endpoint_condition_delete')

    from azext_footprintmonitoring.generated._client_factory import cf_experiment
    footprintmonitoring_experiment = CliCommandType(
        operations_tmpl='azext_footprintmonitoring.vendored_sdks.footprintmonitoring.operations._experiment_operations#'
        'ExperimentOperations.{}',
        client_factory=cf_experiment)
    with self.command_group('footprintmonitoring experiment', footprintmonitoring_experiment,
                            client_factory=cf_experiment, is_experimental=True) as g:
        g.custom_command('list', 'footprintmonitoring_experiment_list')
        g.custom_show_command('show', 'footprintmonitoring_experiment_show')
        g.custom_command('create', 'footprintmonitoring_experiment_create')
        g.custom_command('update', 'footprintmonitoring_experiment_update')
        g.custom_command('delete', 'footprintmonitoring_experiment_delete')
