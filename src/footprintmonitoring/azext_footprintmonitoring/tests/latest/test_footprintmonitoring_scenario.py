# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /profiles/put/profilesCreateOrUpdate
@try_manual
def step__profiles_put_profilescreateorupdate(test, rg):
    test.cmd('az footprintmonitoring profile create '
             '--location "westus2" '
             '--measurement-count 3 '
             '--start-delay-milliseconds 5000 '
             '--tags key1="value1" key2="value2" '
             '--name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /profiles/get/List Footprint profiles in a Resource Group
@try_manual
def step__profiles_get_list_footprint_profiles_in_a_resource_group(test, rg):
    test.cmd('az footprintmonitoring profile list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /profiles/get/List Footprint profiles in a Subscription
@try_manual
def step__profiles_get_list_footprint_profiles_in_a_subscription(test, rg):
    test.cmd('az footprintmonitoring profile list '
             '-g ""',
             checks=[])


# EXAMPLE: /profiles/get/profilesGet
@try_manual
def step__profiles_get_profilesget(test, rg):
    test.cmd('az footprintmonitoring profile show '
             '--name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /profiles/patch/profilesUpdate
@try_manual
def step__profiles_patch_profilesupdate(test, rg):
    test.cmd('az footprintmonitoring profile update '
             '--tags key1="value1" key2="value2" '
             '--name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /experiments/put/experimentsCreateOrUpdate
@try_manual
def step__experiments_put_experimentscreateorupdate(test, rg):
    test.cmd('az footprintmonitoring experiment create '
             '--name "{myExperiment}" '
             '--description "An experiment description." '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /experiments/put/experimentsCreateOrUpdate
@try_manual
def step__experiments_put_experimentscreateorupdate(test, rg):
    test.cmd('az footprintmonitoring experiment create '
             '--name "{myExperiment}" '
             '--description "An experiment description." '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /experiments/get/experimentsGet
@try_manual
def step__experiments_get_experimentsget(test, rg):
    test.cmd('az footprintmonitoring experiment show '
             '--name "{myExperiment}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /experiments/get/experimentsListByProfile
@try_manual
def step__experiments_get_experimentslistbyprofile(test, rg):
    test.cmd('az footprintmonitoring experiment list '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpoints/put/measurementEndpointsCreateOrUpdate
@try_manual
def step__measurementendpoints_put_measurementendpointscreateorupdate(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint create '
             '--name "{myMeasurementEndpoint}" '
             '--endpoint "www.contoso.com" '
             '--experiment-id "664cdec4f07d4e1083c9b3969ee2c49b" '
             '--measurement-type 2 '
             '--object-path "/trans.gif" '
             '--weight 10 '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpoints/put/measurementEndpointsCreateOrUpdate
@try_manual
def step__measurementendpoints_put_measurementendpointscreateorupdate(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint create '
             '--name "{myMeasurementEndpoint}" '
             '--endpoint "www.contoso.com" '
             '--experiment-id "664cdec4f07d4e1083c9b3969ee2c49b" '
             '--measurement-type 2 '
             '--object-path "/trans.gif" '
             '--weight 10 '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpoints/get/measurementEndpointsGet
@try_manual
def step__measurementendpoints_get_measurementendpointsget(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint show '
             '--name "{myMeasurementEndpoint}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpoints/get/measurementEndpointsListByProfile
@try_manual
def step__measurementendpoints_get_measurementendpointslistbyprofile(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint list '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpointConditions/put/measurementEndpointConditionCreateOrUpdate
@try_manual
def step__measurementendpointconditions_put_measurementendpointconditioncreateorupdate(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint-condition create '
             '--condition-name "condition0" '
             '--measurement-endpoint-name "{myMeasurementEndpoint}" '
             '--constant "Edge-Prod-WST" '
             '--operator "MatchValueIgnoreCasing" '
             '--variable "X-FD-EdgeEnvironment" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpointConditions/put/measurementEndpointConditionCreateOrUpdate
@try_manual
def step__measurementendpointconditions_put_measurementendpointconditioncreateorupdate(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint-condition create '
             '--condition-name "condition0" '
             '--measurement-endpoint-name "{myMeasurementEndpoint}" '
             '--constant "Edge-Prod-WST" '
             '--operator "MatchValueIgnoreCasing" '
             '--variable "X-FD-EdgeEnvironment" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpointConditions/get/measurementEndpointConditionGet
@try_manual
def step__measurementendpointconditions_get_measurementendpointconditionget(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint-condition show '
             '--condition-name "condition0" '
             '--measurement-endpoint-name "{myMeasurementEndpoint}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpointConditions/get/measurementEndpointConditionsListByEndpoint
@try_manual
def step__measurementendpointconditions_get_measurementendpointconditionslistbyendpoint(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint-condition list '
             '--measurement-endpoint-name "{myMeasurementEndpoint}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpointConditions/delete/measurementEndpointConditionDelete
@try_manual
def step__measurementendpointconditions_delete_measurementendpointconditiondelete(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint-condition delete '
             '--condition-name "condition0" '
             '--measurement-endpoint-name "{myMeasurementEndpoint}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /experiments/delete/experimentsDelete
@try_manual
def step__experiments_delete_experimentsdelete(test, rg):
    test.cmd('az footprintmonitoring experiment delete '
             '--name "{myExperiment}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /measurementEndpoints/delete/measurementEndpointsDelete
@try_manual
def step__measurementendpoints_delete_measurementendpointsdelete(test, rg):
    test.cmd('az footprintmonitoring measurement-endpoint delete '
             '--name "{myMeasurementEndpoint}" '
             '--profile-name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /profiles/delete/profilesDelete
@try_manual
def step__profiles_delete_profilesdelete(test, rg):
    test.cmd('az footprintmonitoring profile delete '
             '--name "{myProfile}" '
             '--resource-group "{rg}"',
             checks=[])


@try_manual
def cleanup(test, rg):
    pass


@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__profiles_put_profilescreateorupdate(test, rg)
    step__profiles_get_list_footprint_profiles_in_a_resource_group(test, rg)
    step__profiles_get_list_footprint_profiles_in_a_subscription(test, rg)
    step__profiles_get_profilesget(test, rg)
    step__profiles_patch_profilesupdate(test, rg)
    step__experiments_put_experimentscreateorupdate(test, rg)
    step__experiments_put_experimentscreateorupdate(test, rg)
    step__experiments_get_experimentsget(test, rg)
    step__experiments_get_experimentslistbyprofile(test, rg)
    step__measurementendpoints_put_measurementendpointscreateorupdate(test, rg)
    step__measurementendpoints_put_measurementendpointscreateorupdate(test, rg)
    step__measurementendpoints_get_measurementendpointsget(test, rg)
    step__measurementendpoints_get_measurementendpointslistbyprofile(test, rg)
    step__measurementendpointconditions_put_measurementendpointconditioncreateorupdate(test, rg)
    step__measurementendpointconditions_put_measurementendpointconditioncreateorupdate(test, rg)
    step__measurementendpointconditions_get_measurementendpointconditionget(test, rg)
    step__measurementendpointconditions_get_measurementendpointconditionslistbyendpoint(test, rg)
    step__measurementendpointconditions_delete_measurementendpointconditiondelete(test, rg)
    step__experiments_delete_experimentsdelete(test, rg)
    step__measurementendpoints_delete_measurementendpointsdelete(test, rg)
    step__profiles_delete_profilesdelete(test, rg)
    cleanup(test, rg)


@try_manual
class FootprintMonitoringManagementClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestfootprintmonitoring_rgName'[:7], key='rg', parameter_name='rg')
    def test_footprintmonitoring(self, rg):

        self.kwargs.update({
            'myProfile': 'fpProfile1',
            'myMeasurementEndpoint': 'endpoint1',
            'myExperiment': 'fpExp1',
        })

        call_scenario(self, rg)
        raise_if()
