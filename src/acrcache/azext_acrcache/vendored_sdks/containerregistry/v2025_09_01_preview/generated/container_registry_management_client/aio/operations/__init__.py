# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.8, generator: @autorest/python@6.40.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import ArchivesOperations  # type: ignore
from ._operations import ArchiveVersionsOperations  # type: ignore
from ._operations import CacheRulesOperations  # type: ignore
from ._operations import ConnectedRegistriesOperations  # type: ignore
from ._operations import CredentialSetsOperations  # type: ignore
from ._operations import ExportPipelinesOperations  # type: ignore
from ._operations import RegistriesOperations  # type: ignore
from ._operations import ImportPipelinesOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._operations import PipelineRunsOperations  # type: ignore
from ._operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._operations import ReplicationsOperations  # type: ignore
from ._operations import ScopeMapsOperations  # type: ignore
from ._operations import TokensOperations  # type: ignore
from ._operations import WebhooksOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ArchivesOperations",
    "ArchiveVersionsOperations",
    "CacheRulesOperations",
    "ConnectedRegistriesOperations",
    "CredentialSetsOperations",
    "ExportPipelinesOperations",
    "RegistriesOperations",
    "ImportPipelinesOperations",
    "Operations",
    "PipelineRunsOperations",
    "PrivateEndpointConnectionsOperations",
    "ReplicationsOperations",
    "ScopeMapsOperations",
    "TokensOperations",
    "WebhooksOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
