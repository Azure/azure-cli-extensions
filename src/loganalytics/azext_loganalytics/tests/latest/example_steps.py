# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Workspaces/put/WorkspacesCreate
@try_manual
def step_workspace_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspace create '
             '--location "australiasoutheast" '
             '--retention-in-days 30 '
             '--sku name="PerGB2018" '
             '--tags tag1="val1" '
             '--resource-group "{rg_8}" '
             '--name "{myWorkspace9}"',
             checks=[])
    test.cmd('az loganalytics workspace wait --created '
             '--resource-group "{rg_8}" '
             '--name "{myWorkspace9}"',
             checks=checks)


# EXAMPLE: /Workspaces/get/WorkspaceGet
@try_manual
def step_workspace_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspace show '
             '--resource-group "{rg_8}" '
             '--name "{myWorkspace9}"',
             checks=checks)


# EXAMPLE: /Workspaces/get/WorkspacesGet
@try_manual
def step_workspace_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspace list '
             '--resource-group "{rg_8}"',
             checks=checks)


# EXAMPLE: /Workspaces/get/WorkspacesSubscriptionList
@try_manual
def step_workspace_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspace list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Workspaces/patch/WorkspacesPatch
@try_manual
def step_workspace_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspace update '
             '--retention-in-days 30 '
             '--sku name="PerGB2018" '
             '--daily-quota-gb -1 '
             '--resource-group "{rg_8}" '
             '--name "{myWorkspace9}"',
             checks=checks)


# EXAMPLE: /AvailableServiceTiers/get/AvailableServiceTiers
@try_manual
def step_availableservicetier_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics availableservicetier list '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace5}"',
             checks=checks)


# EXAMPLE: /Clusters/put/ClustersCreate
@try_manual
def step_cluster_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics cluster create '
             '--name "{myCluster2}" '
             '--location "australiasoutheast" '
             '--sku name="CapacityReservation" capacity=1000 '
             '--tags tag1="val1" '
             '--resource-group "{rg_8}"',
             checks=[])
    test.cmd('az loganalytics cluster wait --created '
             '--name "{myCluster2}" '
             '--resource-group "{rg_8}"',
             checks=checks)


# EXAMPLE: /Clusters/get/ClustersGet
@try_manual
def step_cluster_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics cluster list '
             '--resource-group "{rg_8}"',
             checks=checks)


# EXAMPLE: /Clusters/get/ClustersSubscriptionList
@try_manual
def step_cluster_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics cluster list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Clusters/patch/ClustersPatch
@try_manual
def step_cluster_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics cluster update '
             '--name "{myCluster2}" '
             '--type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-00000000000/resourcegroups/oiauto'
             'rest6685/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myidentity\\":{{}}}}" '
             '--key-vault-properties key-name="aztest2170cert" key-rsa-size=1024 key-vault-uri="https://aztest2170.vaul'
             't.azure.net" key-version="654ft6c4e63845cbb50fd6fg51540429" '
             '--sku name="CapacityReservation" capacity=1000 '
             '--tags tag1="val1" '
             '--resource-group "{rg_8}"',
             checks=checks)


# EXAMPLE: /LinkedServices/put/LinkedServicesCreate
@try_manual
def step_linkedservice_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedservice create '
             '--name "{myLinkedService}" '
             '--write-access-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg_5}/providers/Microsoft.Op'
             'erationalInsights/clusters/{myCluster}" '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace3}"',
             checks=[])
    test.cmd('az loganalytics linkedservice wait --created '
             '--name "{myLinkedService}" '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /LinkedServices/get/LinkedServicesGet
@try_manual
def step_linkedservice_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedservice show '
             '--name "{myLinkedService}" '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /LinkedServices/get/LinkedServicesListByWorkspace
@try_manual
def step_linkedservice_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedservice list '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /LinkedServices/delete/LinkedServicesDelete
@try_manual
def step_linkedservice_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedservice delete -y '
             '--name "{myLinkedService}" '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /Clusters/delete/ClustersDelete
@try_manual
def step_cluster_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics cluster delete -y '
             '--name "{myCluster2}" '
             '--resource-group "{rg_8}"',
             checks=checks)


# EXAMPLE: /DataExports/put/DataExportCreate
@try_manual
def step_dataexport_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics dataexport create '
             '--name "{myDataExport}" '
             '--resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.EventHub/namesp'
             'aces/test" '
             '--table-names "Heartbeat" '
             '--resource-group "{rg}" '
             '--workspace-name "{myWorkspace}"',
             checks=checks)


# EXAMPLE: /DataExports/get/DataExportGet
@try_manual
def step_dataexport_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics dataexport list '
             '--resource-group "{rg}" '
             '--workspace-name "{myWorkspace}"',
             checks=checks)


# EXAMPLE: /DataExports/delete/DataExportDelete
@try_manual
def step_dataexport_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics dataexport delete -y '
             '--name "{myDataExport}" '
             '--resource-group "{rg}" '
             '--workspace-name "{myWorkspace}"',
             checks=checks)


# EXAMPLE: /DataSources/put/DataSourcesCreate
@try_manual
def step_datasource_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics datasource create '
             '--name "{myDataSource}" '
             '--kind "AzureActivityLog" '
             '--properties "{{\\"LinkedResourceId\\":\\"/subscriptions/{subscription_id}/providers/microsoft.insights/e'
             'venttypes/management\\"}}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=checks)


# EXAMPLE: /DataSources/get/DataSourcesGet
@try_manual
def step_datasource_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics datasource show '
             '--name "{myDataSource}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=checks)


# EXAMPLE: /DataSources/get/DataSourcesListByWorkspace
@try_manual
def step_datasource_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics datasource list '
             '--filter "kind=\'WindowsEvent\'" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=checks)


# EXAMPLE: /DataSources/delete/DataSourcesDelete
@try_manual
def step_datasource_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics datasource delete -y '
             '--name "{myDataSource}" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace2}"',
             checks=checks)


# EXAMPLE: /DeletedWorkspaces/get/WorkspacesGet
@try_manual
def step_deletedworkspace_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics deletedworkspace list '
             '--resource-group "{rg_8}"',
             checks=checks)


# EXAMPLE: /DeletedWorkspaces/get/WorkspacesSubscriptionList
@try_manual
def step_deletedworkspace_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics deletedworkspace list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Gateways/delete/DeleteGateways
@try_manual
def step_gateway_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics gateway delete -y '
             '--gateway-id "00000000-0000-0000-0000-00000000000" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /IntelligencePacks/get/IntelligencePacksList
@try_manual
def step_intelligencepack_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics intelligencepack list '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /IntelligencePacks/post/IntelligencePacksDisable
@try_manual
def step_intelligencepack_disable(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics intelligencepack disable '
             '--name "{myIntelligencePack}" '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /IntelligencePacks/post/IntelligencePacksEnable
@try_manual
def step_intelligencepack_enable(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics intelligencepack enable '
             '--name "{myIntelligencePack}" '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /LinkedStorageAccounts/put/LinkedStorageAccountsCreate
@try_manual
def step_linkedstorageaccount_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedstorageaccount create '
             '--data-source-type "CustomLogs" '
             '--storage-account-ids "/subscriptions/{subscription_id}/resourceGroups/{rg_5}/providers/Microsoft.Storage'
             '/storageAccounts/{sa}" "/subscriptions/{subscription_id}/resourceGroups/{rg_5}/providers/Microsoft.Storag'
             'e/storageAccounts/{sa_2}" '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace4}"',
             checks=checks)


# EXAMPLE: /LinkedStorageAccounts/get/Gets list of linked storage accounts on a workspace.
@try_manual
def step_linkedstorageaccount_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedstorageaccount list '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace4}"',
             checks=checks)


# EXAMPLE: /LinkedStorageAccounts/get/LinkedStorageAccountsGet
@try_manual
def step_linkedstorageaccount_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedstorageaccount show '
             '--data-source-type "CustomLogs" '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace4}"',
             checks=checks)


# EXAMPLE: /LinkedStorageAccounts/delete/LinkedStorageAccountsDelete
@try_manual
def step_linkedstorageaccount_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics linkedstorageaccount delete -y '
             '--data-source-type "CustomLogs" '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace4}"',
             checks=checks)


# EXAMPLE: /ManagementGroups/get/WorkspacesListManagementGroups
@try_manual
def step_managementgroup_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics managementgroup list '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /OperationStatuses/get/Get specific operation status
@try_manual
def step_operationstatuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics operationstatuses show '
             '--async-operation-id "713192d7-503f-477a-9cfe-4efc3ee2bd11" '
             '--location "West US"',
             checks=checks)


# EXAMPLE: /SavedSearches/put/SavedSearchCreateOrUpdate
@try_manual
def step_savedsearch_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics savedsearch create '
             '--category "Saved Search Test Category" '
             '--display-name "Create or Update Saved Search Test" '
             '--function-alias "heartbeat_func" '
             '--function-parameters "a:int=1" '
             '--input-query "Heartbeat | summarize Count() by Computer | take a" '
             '--tags name="Group" value="Computer" '
             '--version 2 '
             '--resource-group "{rg_7}" '
             '--saved-search-id "00000000-0000-0000-0000-00000000000" '
             '--workspace-name "{myWorkspace7}"',
             checks=checks)


# EXAMPLE: /SavedSearches/get/SavedSearchesGet
@try_manual
def step_savedsearch_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics savedsearch show '
             '--resource-group "{rg_7}" '
             '--saved-search-id "00000000-0000-0000-0000-00000000000" '
             '--workspace-name "{myWorkspace7}"',
             checks=checks)


# EXAMPLE: /SavedSearches/get/SavedSearchesList
@try_manual
def step_savedsearch_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics savedsearch list '
             '--resource-group "{rg_7}" '
             '--workspace-name "{myWorkspace7}"',
             checks=checks)


# EXAMPLE: /SavedSearches/delete/SavedSearchesDelete
@try_manual
def step_savedsearch_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics savedsearch delete -y '
             '--resource-group "{rg_7}" '
             '--saved-search-id "00000000-0000-0000-0000-00000000000" '
             '--workspace-name "{myWorkspace7}"',
             checks=checks)


# EXAMPLE: /Schema/post/WorkspacesGetSchema
@try_manual
def step_schema_get(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics schema get '
             '--resource-group "{rg_5}" '
             '--workspace-name "{myWorkspace8}"',
             checks=checks)


# EXAMPLE: /SharedKeys/post/RegenerateSharedKeys
@try_manual
def step_sharedkey_regenerate(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics sharedkey regenerate '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace5}"',
             checks=checks)


# EXAMPLE: /SharedKeys/post/SharedKeysList
@try_manual
def step_sharedkey_get_shared_key(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics sharedkey get-shared-key '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /Tables/get/TablesGet
@try_manual
def step_table_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics table show '
             '--resource-group "{rg_8}" '
             '--name "{myTable}" '
             '--workspace-name "{myWorkspace9}"',
             checks=checks)


# EXAMPLE: /Tables/get/TablesListByWorkspace
@try_manual
def step_table_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics table list '
             '--resource-group "{rg_8}" '
             '--workspace-name "{myWorkspace9}"',
             checks=checks)


# EXAMPLE: /Tables/patch/TablesSet
@try_manual
def step_table_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics table update '
             '--is-troubleshoot-enabled true '
             '--retention-in-days 40 '
             '--resource-group "{rg_8}" '
             '--name "{myTable}" '
             '--workspace-name "{myWorkspace9}"',
             checks=checks)


# EXAMPLE: /StorageInsightConfigs/put/StorageInsightsCreate
@try_manual
def step_storageinsightconfig_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics storageinsightconfig create '
             '--containers "wad-iis-logfiles" '
             '--storage-account id="/subscriptions/{subscription_id}/resourcegroups/{rg_6}/providers/microsoft.storage/'
             'storageaccounts/{sa_3}" key="1234" '
             '--tables "WADWindowsEventLogsTable" "LinuxSyslogVer2v0" '
             '--resource-group "{rg_3}" '
             '--storage-insight-name "AzTestSI1110" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /StorageInsightConfigs/get/StorageInsightsGet
@try_manual
def step_storageinsightconfig_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics storageinsightconfig show '
             '--resource-group "{rg_3}" '
             '--storage-insight-name "AzTestSI1110" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /StorageInsightConfigs/get/StorageInsightsList
@try_manual
def step_storageinsightconfig_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics storageinsightconfig list '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /StorageInsightConfigs/delete/StorageInsightsDelete
@try_manual
def step_storageinsightconfig_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics storageinsightconfig delete -y '
             '--resource-group "{rg_3}" '
             '--storage-insight-name "AzTestSI1110" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /Usages/get/UsagesList
@try_manual
def step_usage_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics usage list '
             '--resource-group "{rg_4}" '
             '--workspace-name "{myWorkspace3}"',
             checks=checks)


# EXAMPLE: /WorkspacePurge/get/WorkspacePurgeOperation
@try_manual
def step_workspacepurge_show_purge_status(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspacepurge show-purge-status '
             '--purge-id "purge-970318e7-b859-4edb-8903-83b1b54d0b74" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /WorkspacePurge/post/WorkspacePurge
@try_manual
def step_workspacepurge_purge(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspacepurge purge '
             '--filters "[{{\\"column\\":\\"TimeGenerated\\",\\"operator\\":\\">\\",\\"value\\":\\"2017-09-01T00:00:00'
             '\\"}}]" '
             '--table "Heartbeat" '
             '--resource-group "{rg_3}" '
             '--workspace-name "{myWorkspace6}"',
             checks=checks)


# EXAMPLE: /Workspaces/delete/WorkspacesDelete
@try_manual
def step_workspace_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az loganalytics workspace delete -y '
             '--resource-group "{rg_8}" '
             '--name "{myWorkspace9}"',
             checks=checks)
