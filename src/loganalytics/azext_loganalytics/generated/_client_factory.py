# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


def cf_loganalytics_cl(cli_ctx, *_):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from azext_loganalytics.vendored_sdks.loganalytics import OperationalInsightsManagementClient
    return get_mgmt_service_client(cli_ctx,
                                   OperationalInsightsManagementClient)


def cf_data_export(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).data_exports


def cf_data_source(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).data_sources


def cf_intelligence_pack(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).intelligence_packs


def cf_linked_service(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).linked_services


def cf_linked_storage_account(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).linked_storage_accounts


def cf_management_group(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).management_groups


def cf_operation_statuses(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).operation_statuses


def cf_shared_key(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).shared_keys


def cf_usage(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).usages


def cf_storage_insight_config(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).storage_insight_configs


def cf_saved_search(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).saved_searches


def cf_available_service_tier(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).available_service_tiers


def cf_gateway(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).gateways


def cf_schema(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).schema


def cf_workspace_purge(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).workspace_purge


def cf_table(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).tables


def cf_cluster(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).clusters


def cf_workspace(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).workspaces


def cf_deleted_workspace(cli_ctx, *_):
    return cf_loganalytics_cl(cli_ctx).deleted_workspaces
