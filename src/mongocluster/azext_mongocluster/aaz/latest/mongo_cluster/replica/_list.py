# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

# pylint: skip-file
# flake8: noqa

from azure.cli.core.aaz import *


@register_command(
    "mongo-cluster replica list",
    is_preview=True,
)
class List(AAZCommand):
    """List all the replicas for the mongo cluster.

    :example: List the replicas linked to a Mongo Cluster resource.
        az mongo-cluster replica list --resource-group TestGroup --mongo-cluster-name primaryMongoCluster
    """

    _aaz_info = {
        "version": "2024-07-01",
        "resources": [
            ["mgmt-plane", "/subscriptions/{}/resourcegroups/{}/providers/microsoft.documentdb/mongoclusters/{}/replicas", "2024-07-01"],
        ]
    }

    AZ_SUPPORT_PAGINATION = True

    def _handler(self, command_args):
        super()._handler(command_args)
        return self.build_paging(self._execute_operations, self._output)

    _args_schema = None

    @classmethod
    def _build_arguments_schema(cls, *args, **kwargs):
        if cls._args_schema is not None:
            return cls._args_schema
        cls._args_schema = super()._build_arguments_schema(*args, **kwargs)

        # define Arg Group ""

        _args_schema = cls._args_schema
        _args_schema.mongo_cluster_name = AAZStrArg(
            options=["-n", "--name", "--mongo-cluster-name"],
            help="The name of the mongo cluster.",
            required=True,
            fmt=AAZStrArgFormat(
                pattern="^[a-z0-9]+(-[a-z0-9]+)*",
                max_length=40,
                min_length=3,
            ),
        )
        _args_schema.resource_group = AAZResourceGroupNameArg(
            help="Name of the resource group.",
            required=True,
        )
        return cls._args_schema

    def _execute_operations(self):
        self.pre_operations()
        self.ReplicasListByParent(ctx=self.ctx)()
        self.post_operations()

    @register_callback
    def pre_operations(self):
        pass

    @register_callback
    def post_operations(self):
        pass

    def _output(self, *args, **kwargs):
        result = self.deserialize_output(self.ctx.vars.instance.value, client_flatten=True)
        next_link = self.deserialize_output(self.ctx.vars.instance.next_link)
        return result, next_link

    class ReplicasListByParent(AAZHttpOperation):
        CLIENT_TYPE = "MgmtClient"

        def __call__(self, *args, **kwargs):
            request = self.make_request()
            session = self.client.send_request(request=request, stream=False, **kwargs)
            if session.http_response.status_code in [200]:
                return self.on_200(session)

            return self.on_error(session.http_response)

        @property
        def url(self):
            return self.client.format_url(
                "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/replicas",
                **self.url_parameters
            )

        @property
        def method(self):
            return "GET"

        @property
        def error_format(self):
            return "MgmtErrorFormat"

        @property
        def url_parameters(self):
            parameters = {
                **self.serialize_url_param(
                    "mongoClusterName", self.ctx.args.mongo_cluster_name,
                    required=True,
                ),
                **self.serialize_url_param(
                    "resourceGroupName", self.ctx.args.resource_group,
                    required=True,
                ),
                **self.serialize_url_param(
                    "subscriptionId", self.ctx.subscription_id,
                    required=True,
                ),
            }
            return parameters

        @property
        def query_parameters(self):
            parameters = {
                **self.serialize_query_param(
                    "api-version", "2024-07-01",
                    required=True,
                ),
            }
            return parameters

        @property
        def header_parameters(self):
            parameters = {
                **self.serialize_header_param(
                    "Accept", "application/json",
                ),
            }
            return parameters

        def on_200(self, session):
            data = self.deserialize_http_content(session)
            self.ctx.set_var(
                "instance",
                data,
                schema_builder=self._build_schema_on_200
            )

        _schema_on_200 = None

        @classmethod
        def _build_schema_on_200(cls):
            if cls._schema_on_200 is not None:
                return cls._schema_on_200

            cls._schema_on_200 = AAZObjectType()

            _schema_on_200 = cls._schema_on_200
            _schema_on_200.next_link = AAZStrType(
                serialized_name="nextLink",
            )
            _schema_on_200.value = AAZListType(
                flags={"required": True},
            )

            value = cls._schema_on_200.value
            value.Element = AAZObjectType()

            _element = cls._schema_on_200.value.Element
            _element.id = AAZStrType(
                flags={"read_only": True},
            )
            _element.name = AAZStrType(
                flags={"read_only": True},
            )
            _element.properties = AAZObjectType()
            _element.system_data = AAZObjectType(
                serialized_name="systemData",
                flags={"read_only": True},
            )
            _ListHelper._build_schema_azure_resourcemanager_commontypes_systemdata_read(_element.system_data)
            _element.type = AAZStrType(
                flags={"read_only": True},
            )

            properties = cls._schema_on_200.value.Element.properties
            properties.administrator = AAZObjectType()
            properties.backup = AAZObjectType()
            properties.cluster_status = AAZStrType(
                serialized_name="clusterStatus",
                flags={"read_only": True},
            )
            properties.compute = AAZObjectType()
            properties.connection_string = AAZStrType(
                serialized_name="connectionString",
                flags={"read_only": True},
            )
            properties.high_availability = AAZObjectType(
                serialized_name="highAvailability",
            )
            properties.infrastructure_version = AAZStrType(
                serialized_name="infrastructureVersion",
                flags={"read_only": True},
            )
            properties.preview_features = AAZListType(
                serialized_name="previewFeatures",
            )
            properties.private_endpoint_connections = AAZListType(
                serialized_name="privateEndpointConnections",
                flags={"read_only": True},
            )
            properties.provisioning_state = AAZStrType(
                serialized_name="provisioningState",
                flags={"read_only": True},
            )
            properties.public_network_access = AAZStrType(
                serialized_name="publicNetworkAccess",
            )
            properties.replica = AAZObjectType(
                flags={"read_only": True},
            )
            properties.server_version = AAZStrType(
                serialized_name="serverVersion",
            )
            properties.sharding = AAZObjectType()
            properties.storage = AAZObjectType()

            administrator = cls._schema_on_200.value.Element.properties.administrator
            administrator.user_name = AAZStrType(
                serialized_name="userName",
            )

            backup = cls._schema_on_200.value.Element.properties.backup
            backup.earliest_restore_time = AAZStrType(
                serialized_name="earliestRestoreTime",
                flags={"read_only": True},
            )

            compute = cls._schema_on_200.value.Element.properties.compute
            compute.tier = AAZStrType()

            high_availability = cls._schema_on_200.value.Element.properties.high_availability
            high_availability.target_mode = AAZStrType(
                serialized_name="targetMode",
            )

            preview_features = cls._schema_on_200.value.Element.properties.preview_features
            preview_features.Element = AAZStrType()

            private_endpoint_connections = cls._schema_on_200.value.Element.properties.private_endpoint_connections
            private_endpoint_connections.Element = AAZObjectType()

            _element = cls._schema_on_200.value.Element.properties.private_endpoint_connections.Element
            _element.id = AAZStrType(
                flags={"read_only": True},
            )
            _element.name = AAZStrType(
                flags={"read_only": True},
            )
            _element.properties = AAZObjectType()
            _element.system_data = AAZObjectType(
                serialized_name="systemData",
                flags={"read_only": True},
            )
            _ListHelper._build_schema_azure_resourcemanager_commontypes_systemdata_read(_element.system_data)
            _element.type = AAZStrType(
                flags={"read_only": True},
            )

            properties = cls._schema_on_200.value.Element.properties.private_endpoint_connections.Element.properties
            properties.group_ids = AAZListType(
                serialized_name="groupIds",
                flags={"read_only": True},
            )
            properties.private_endpoint = AAZObjectType(
                serialized_name="privateEndpoint",
            )
            properties.private_link_service_connection_state = AAZObjectType(
                serialized_name="privateLinkServiceConnectionState",
                flags={"required": True},
            )
            properties.provisioning_state = AAZStrType(
                serialized_name="provisioningState",
                flags={"read_only": True},
            )

            group_ids = cls._schema_on_200.value.Element.properties.private_endpoint_connections.Element.properties.group_ids
            group_ids.Element = AAZStrType()

            private_endpoint = cls._schema_on_200.value.Element.properties.private_endpoint_connections.Element.properties.private_endpoint
            private_endpoint.id = AAZStrType(
                flags={"read_only": True},
            )

            private_link_service_connection_state = cls._schema_on_200.value.Element.properties.private_endpoint_connections.Element.properties.private_link_service_connection_state
            private_link_service_connection_state.actions_required = AAZStrType(
                serialized_name="actionsRequired",
            )
            private_link_service_connection_state.description = AAZStrType()
            private_link_service_connection_state.status = AAZStrType()

            replica = cls._schema_on_200.value.Element.properties.replica
            replica.replication_state = AAZStrType(
                serialized_name="replicationState",
                flags={"read_only": True},
            )
            replica.role = AAZStrType(
                flags={"read_only": True},
            )
            replica.source_resource_id = AAZStrType(
                serialized_name="sourceResourceId",
                flags={"read_only": True},
            )

            sharding = cls._schema_on_200.value.Element.properties.sharding
            sharding.shard_count = AAZIntType(
                serialized_name="shardCount",
            )

            storage = cls._schema_on_200.value.Element.properties.storage
            storage.size_gb = AAZIntType(
                serialized_name="sizeGb",
            )

            return cls._schema_on_200


class _ListHelper:
    """Helper class for List"""

    _schema_azure_resourcemanager_commontypes_systemdata_read = None

    @classmethod
    def _build_schema_azure_resourcemanager_commontypes_systemdata_read(cls, _schema):
        if cls._schema_azure_resourcemanager_commontypes_systemdata_read is not None:
            _schema.created_at = cls._schema_azure_resourcemanager_commontypes_systemdata_read.created_at
            _schema.created_by = cls._schema_azure_resourcemanager_commontypes_systemdata_read.created_by
            _schema.created_by_type = cls._schema_azure_resourcemanager_commontypes_systemdata_read.created_by_type
            _schema.last_modified_at = cls._schema_azure_resourcemanager_commontypes_systemdata_read.last_modified_at
            _schema.last_modified_by = cls._schema_azure_resourcemanager_commontypes_systemdata_read.last_modified_by
            _schema.last_modified_by_type = cls._schema_azure_resourcemanager_commontypes_systemdata_read.last_modified_by_type
            return

        cls._schema_azure_resourcemanager_commontypes_systemdata_read = _schema_azure_resourcemanager_commontypes_systemdata_read = AAZObjectType(
            flags={"read_only": True}
        )

        azure_resourcemanager_commontypes_systemdata_read = _schema_azure_resourcemanager_commontypes_systemdata_read
        azure_resourcemanager_commontypes_systemdata_read.created_at = AAZStrType(
            serialized_name="createdAt",
        )
        azure_resourcemanager_commontypes_systemdata_read.created_by = AAZStrType(
            serialized_name="createdBy",
        )
        azure_resourcemanager_commontypes_systemdata_read.created_by_type = AAZStrType(
            serialized_name="createdByType",
        )
        azure_resourcemanager_commontypes_systemdata_read.last_modified_at = AAZStrType(
            serialized_name="lastModifiedAt",
        )
        azure_resourcemanager_commontypes_systemdata_read.last_modified_by = AAZStrType(
            serialized_name="lastModifiedBy",
        )
        azure_resourcemanager_commontypes_systemdata_read.last_modified_by_type = AAZStrType(
            serialized_name="lastModifiedByType",
        )

        _schema.created_at = cls._schema_azure_resourcemanager_commontypes_systemdata_read.created_at
        _schema.created_by = cls._schema_azure_resourcemanager_commontypes_systemdata_read.created_by
        _schema.created_by_type = cls._schema_azure_resourcemanager_commontypes_systemdata_read.created_by_type
        _schema.last_modified_at = cls._schema_azure_resourcemanager_commontypes_systemdata_read.last_modified_at
        _schema.last_modified_by = cls._schema_azure_resourcemanager_commontypes_systemdata_read.last_modified_by
        _schema.last_modified_by_type = cls._schema_azure_resourcemanager_commontypes_systemdata_read.last_modified_by_type


__all__ = ["List"]
