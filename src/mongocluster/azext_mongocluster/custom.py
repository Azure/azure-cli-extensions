# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from knack.log import get_logger
from .aaz.latest.mongo_cluster import Create as _MongoClusterCreate
from .aaz.latest.mongo_cluster import Promote as _MongoClusterPromote

logger = get_logger(__name__)

def create_replica_cluster(cmd, resource_group, mongo_cluster_name, location, source_resource_id, source_location, no_wait=False):
    class ReplicaCreate(_MongoClusterCreate):
        def pre_operations(self):
            args = self.ctx.args
            args.no_wait = no_wait

    return ReplicaCreate(cli_ctx=cmd.cli_ctx)(command_args={
        "create_mode": "GeoReplica",
        "resource_group": resource_group,
        "mongo_cluster_name": mongo_cluster_name,
        "location": location,
        "replica_source_resource_id": source_resource_id,
        "replica_source_location": source_location
    })

def promote_replica_cluster(cmd, resource_group, mongo_cluster_name, promote_option, promote_mode, no_wait=False):
    class ReplicaPromote(_MongoClusterPromote):
        def pre_operations(self):
            args = self.ctx.args
            args.no_wait = no_wait

    return ReplicaPromote(cli_ctx=cmd.cli_ctx)(command_args={
        "resource_group": resource_group,
        "mongo_cluster_name": mongo_cluster_name,
        "promote_option": promote_option,
        "promote_mode": promote_mode
    })
