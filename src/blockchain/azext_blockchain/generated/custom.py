# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from azure.cli.core.util import sdk_no_wait


def blockchain_member_list(client,
                           resource_group_name=None):
    if resource_group_name:
        return client.list(resource_group_name=resource_group_name)
    return client.list_all()


def blockchain_member_show(client,
                           blockchain_member_name,
                           resource_group_name):
    return client.get(blockchain_member_name=blockchain_member_name,
                      resource_group_name=resource_group_name)


def blockchain_member_create(client,
                             blockchain_member_name,
                             resource_group_name,
                             location=None,
                             tags=None,
                             sku=None,
                             protocol=None,
                             validator_nodes_sku=None,
                             password=None,
                             consortium=None,
                             consortium_management_account_password=None,
                             firewall_rules=None,
                             no_wait=False):
    return sdk_no_wait(no_wait, client.begin_create,
                       blockchain_member_name=blockchain_member_name,
                       resource_group_name=resource_group_name,
                       location=location,
                       tags=tags,
                       sku=sku,
                       protocol=protocol,
                       validator_nodes_sku=validator_nodes_sku,
                       password=password,
                       consortium=consortium,
                       consortium_management_account_password=consortium_management_account_password,
                       firewall_rules=firewall_rules)


def blockchain_member_update(client,
                             blockchain_member_name,
                             resource_group_name,
                             tags=None,
                             password=None,
                             firewall_rules=None,
                             consortium_management_account_password=None):
    return client.update(blockchain_member_name=blockchain_member_name,
                         resource_group_name=resource_group_name,
                         tags=tags,
                         password=password,
                         firewall_rules=firewall_rules,
                         consortium_management_account_password=consortium_management_account_password)


def blockchain_member_delete(client,
                             blockchain_member_name,
                             resource_group_name,
                             no_wait=False):
    return sdk_no_wait(no_wait, client.begin_delete,
                       blockchain_member_name=blockchain_member_name,
                       resource_group_name=resource_group_name)


def blockchain_member_list_api_key(client,
                                   blockchain_member_name,
                                   resource_group_name):
    return client.list_api_key(blockchain_member_name=blockchain_member_name,
                               resource_group_name=resource_group_name)


def blockchain_member_list_consortium_member(client,
                                             blockchain_member_name,
                                             resource_group_name):
    return client.list_consortium_member(blockchain_member_name=blockchain_member_name,
                                         resource_group_name=resource_group_name)


def blockchain_member_regenerate_api_key(client,
                                         blockchain_member_name,
                                         resource_group_name,
                                         key_name=None):
    return client.regenerate_api_key(blockchain_member_name=blockchain_member_name,
                                     resource_group_name=resource_group_name,
                                     key_name=key_name)


def blockchain_consortium_list(client,
                               location):
    return client.list_consortium(location_name=location)


def blockchain_transaction_node_list(client,
                                     blockchain_member_name,
                                     resource_group_name):
    return client.list(blockchain_member_name=blockchain_member_name,
                       resource_group_name=resource_group_name)


def blockchain_transaction_node_show(client,
                                     blockchain_member_name,
                                     transaction_node_name,
                                     resource_group_name):
    return client.get(blockchain_member_name=blockchain_member_name,
                      transaction_node_name=transaction_node_name,
                      resource_group_name=resource_group_name)


def blockchain_transaction_node_create(client,
                                       blockchain_member_name,
                                       transaction_node_name,
                                       resource_group_name,
                                       location=None,
                                       password=None,
                                       firewall_rules=None,
                                       no_wait=False):
    return sdk_no_wait(no_wait, client.begin_create,
                       blockchain_member_name=blockchain_member_name,
                       transaction_node_name=transaction_node_name,
                       resource_group_name=resource_group_name,
                       location=location,
                       password=password,
                       firewall_rules=firewall_rules)


def blockchain_transaction_node_update(client,
                                       blockchain_member_name,
                                       transaction_node_name,
                                       resource_group_name,
                                       password=None,
                                       firewall_rules=None):
    return client.update(blockchain_member_name=blockchain_member_name,
                         transaction_node_name=transaction_node_name,
                         resource_group_name=resource_group_name,
                         password=password,
                         firewall_rules=firewall_rules)


def blockchain_transaction_node_delete(client,
                                       blockchain_member_name,
                                       transaction_node_name,
                                       resource_group_name,
                                       no_wait=False):
    return sdk_no_wait(no_wait, client.begin_delete,
                       blockchain_member_name=blockchain_member_name,
                       transaction_node_name=transaction_node_name,
                       resource_group_name=resource_group_name)


def blockchain_transaction_node_list_api_key(client,
                                             blockchain_member_name,
                                             transaction_node_name,
                                             resource_group_name):
    return client.list_api_key(blockchain_member_name=blockchain_member_name,
                               transaction_node_name=transaction_node_name,
                               resource_group_name=resource_group_name)


def blockchain_transaction_node_regenerate_api_key(client,
                                                   blockchain_member_name,
                                                   transaction_node_name,
                                                   resource_group_name,
                                                   key_name=None,
                                                   value=None):
    return client.regenerate_api_key(blockchain_member_name=blockchain_member_name,
                                     transaction_node_name=transaction_node_name,
                                     resource_group_name=resource_group_name,
                                     key_name=key_name,
                                     value=value)
