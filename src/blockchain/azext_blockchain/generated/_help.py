# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['blockchain member'] = """
    type: group
    short-summary: blockchain member
"""

helps['blockchain member list'] = """
    type: command
    short-summary: Lists the blockchain members.
    examples:
      - name: BlockchainMembers_List
        text: |-
               az blockchain member list --resource-group "mygroup"
"""

helps['blockchain member show'] = """
    type: command
    short-summary: Get details about a blockchain member.
    examples:
      - name: BlockchainMembers_Get
        text: |-
               az blockchain member show --blockchain-member-name "contosemember1" --resource-group "mygroup"
"""

helps['blockchain member create'] = """
    type: command
    short-summary: Create a blockchain member.
    parameters:
      - name: --firewall-rules
        short-summary: Firewall rules of the blockchian member.
        long-summary: |
            Expect value: KEY1=VALUE1 KEY2=VALUE2 ... , available KEYs are: rule-name, start-ip-address, end-ip-address.
    
            Multiple firewall rules can be specified by using more than one `--firewall-rules` argument.
    examples:
      - name: BlockchainMembers_Create
        text: |-
               az blockchain member create --location "southeastasia" --consortium "ContoseConsortium" --consortium-man\
agement-account-password "1234abcdEFG1" --password "1234abcdEFG1" --validator-nodes-sku capacity=2 --protocol "Quorum" \
--blockchain-member-name "contosemember1" --resource-group "mygroup"
"""

helps['blockchain member update'] = """
    type: command
    short-summary: Update a blockchain member.
    parameters:
      - name: --firewall-rules
        short-summary: Firewall rules of the blockchian member.
        long-summary: |
            Expect value: KEY1=VALUE1 KEY2=VALUE2 ... , available KEYs are: rule-name, start-ip-address, end-ip-address.
    
            Multiple firewall rules can be specified by using more than one `--firewall-rules` argument.
    examples:
      - name: BlockchainMembers_Update
        text: |-
               az blockchain member update --consortium-management-account-password "1234abcdEFG1" --password "1234abcd\
EFG1" --name "ContoseMember1" --resource-group "mygroup"
"""

helps['blockchain member delete'] = """
    type: command
    short-summary: Delete a blockchain member.
    examples:
      - name: BlockchainMembers_Delete
        text: |-
               az blockchain member delete --blockchain-member-name "contosemember1" --resource-group "mygroup"
"""

helps['blockchain member list-api-key'] = """
    type: command
    short-summary: Lists the API keys for a blockchain member.
    examples:
      - name: BlockchainMembers_ListApiKeys
        text: |-
               az blockchain member list-api-key --blockchain-member-name "contosemember1" --resource-group "mygroup"
"""

helps['blockchain member list-consortium-member'] = """
    type: command
    short-summary: Lists the consortium members for a blockchain member.
    examples:
      - name: BlockchainMembers_ListConsortiumMembers
        text: |-
               az blockchain member list-consortium-member --blockchain-member-name "contosemember1" --resource-group "\
mygroup"
"""

helps['blockchain member regenerate-api-key'] = """
    type: command
    short-summary: Regenerate the API keys for a blockchain member.
    examples:
      - name: BlockchainMembers_ListRegenerateApiKeys
        text: |-
               az blockchain member regenerate-api-key --key-name "key1" --blockchain-member-name "contosemember1" --re\
source-group "mygroup"
"""

helps['blockchain consortium'] = """
    type: group
    short-summary: blockchain consortium
"""

helps['blockchain consortium list'] = """
    type: command
    short-summary: Lists the available consortiums for a subscription.
    examples:
      - name: Locations_ListConsortiums
        text: |-
               az blockchain consortium list --location-name "southeastasia"
"""

helps['blockchain transaction-node'] = """
    type: group
    short-summary: blockchain transaction-node
"""

helps['blockchain transaction-node list'] = """
    type: command
    short-summary: Lists the transaction nodes for a blockchain member.
    examples:
      - name: TransactionNodes_List
        text: |-
               az blockchain transaction-node list --blockchain-member-name "contosemember1" --resource-group "mygroup"
"""

helps['blockchain transaction-node show'] = """
    type: command
    short-summary: Get the details of the transaction node.
    examples:
      - name: TransactionNodes_Get
        text: |-
               az blockchain transaction-node show --blockchain-member-name "contosemember1" --resource-group "mygroup"\
 --transaction-node-name "txnode2"
"""

helps['blockchain transaction-node create'] = """
    type: command
    short-summary: Create or update the transaction node.
    parameters:
      - name: --firewall-rules
        short-summary: Firewall rules of the blockchian transaction node.
        long-summary: |
            Expect value: KEY1=VALUE1 KEY2=VALUE2 ... , available KEYs are: rule-name, start-ip-address, end-ip-address.
    
            Multiple firewall rules can be specified by using more than one `--firewall-rules` argument.
    examples:
      - name: TransactionNodes_Create
        text: |-
               az blockchain transaction-node create --blockchain-member-name "contosemember1" --resource-group "mygrou\
p" --location "southeastasia" --password "1234abcdEFG1" --transaction-node-name "txnode2"
"""

helps['blockchain transaction-node update'] = """
    type: command
    short-summary: Update the transaction node.
    parameters:
      - name: --firewall-rules
        short-summary: Firewall rules of the blockchian transaction node.
        long-summary: |
            Expect value: KEY1=VALUE1 KEY2=VALUE2 ... , available KEYs are: rule-name, start-ip-address, end-ip-address.
    
            Multiple firewall rules can be specified by using more than one `--firewall-rules` argument.
    examples:
      - name: TransactionNodes_Update
        text: |-
               az blockchain transaction-node update --blockchain-member-name "contosemember1" --resource-group "mygrou\
p" --password "1234abcdEFG1" --transaction-node-name "txnode2"
"""

helps['blockchain transaction-node delete'] = """
    type: command
    short-summary: Delete the transaction node.
    examples:
      - name: TransactionNodes_Delete
        text: |-
               az blockchain transaction-node delete --blockchain-member-name "contosemember1" --resource-group "mygrou\
p" --transaction-node-name "txNode2"
"""

helps['blockchain transaction-node list-api-key'] = """
    type: command
    short-summary: List the API keys for the transaction node.
    examples:
      - name: TransactionNodes_ListApiKeys
        text: |-
               az blockchain transaction-node list-api-key --blockchain-member-name "contosemember1" --resource-group "\
mygroup" --transaction-node-name "txnode2"
"""

helps['blockchain transaction-node regenerate-api-key'] = """
    type: command
    short-summary: Regenerate the API keys for the blockchain member.
    examples:
      - name: TransactionNodes_ListRegenerateApiKeys
        text: |-
               az blockchain transaction-node regenerate-api-key --key-name "key1" --blockchain-member-name "contosemem\
ber1" --resource-group "mygroup" --transaction-node-name "txnode2"
"""
