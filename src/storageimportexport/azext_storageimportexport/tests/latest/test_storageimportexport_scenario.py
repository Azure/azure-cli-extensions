# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if
from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import StorageAccountPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /Jobs/put/Create job
@try_manual
def step__jobs_put_create_job(test, rg):
    test.cmd('az storageimportexport job create '
             '--location "West US" '
             '--backup-drive-manifest true '
             '--diagnostics-path "waimportexport" '
             '--drive-list bit-locker-key="238810-662376-448998-450120-652806-203390-606320-483076" drive-header-hash="'
             '" drive-id="9CA995BB" manifest-file="\\\\DriveManifest.xml" manifest-hash="109B21108597EF36D5785F08303F36'
             '38" '
             '--job-type "Import" '
             '--log-level "Verbose" '
             '--return-address city="Redmond" country-or-region="USA" email="Test@contoso.com" phone="4250000000" posta'
             'l-code="98007" recipient-name="Tets" state-or-province="wa" street-address1="Street1" street-address2="st'
             'reet2" '
             '--storage-account-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.ClassicSto'
             'rage/storageAccounts/{sa}" '
             '--name "{myJob}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Jobs/get/Get job
@try_manual
def step__jobs_get_get_job(test, rg):
    test.cmd('az storageimportexport job show '
             '--name "{myJob}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Locations/get/Get locations
@try_manual
def step__locations_get_get_locations(test, rg):
    test.cmd('az storageimportexport location show '
             '--name "{West US}"',
             checks=[])


# EXAMPLE: /BitLockerKeys/post/List BitLocker Keys for drives in a job
@try_manual
def step__bitlockerkeys_post_list_bitlocker_keys_for_drives_in_a_job(test, rg):
    test.cmd('az storageimportexport bit-locker-key list '
             '--job-name "{myJob}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Jobs/get/List jobs in a resource group
@try_manual
def step__jobs_get_list_jobs_in_a_resource_group(test, rg):
    test.cmd('az storageimportexport job list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Jobs/get/List jobs in a subscription
@try_manual
def step__jobs_get_list_jobs_in_a_subscription(test, rg):
    test.cmd('az storageimportexport job list '
             '-g ""',
             checks=[])


# EXAMPLE: /Locations/get/List locations
@try_manual
def step__locations_get_list_locations(test, rg):
    test.cmd('az storageimportexport location list',
             checks=[])


# EXAMPLE: /Jobs/patch/Update job
@try_manual
def step__jobs_patch_update_job(test, rg):
    test.cmd('az storageimportexport job update '
             '--backup-drive-manifest true '
             '--log-level "Verbose" '
             '--state "" '
             '--name "{myJob}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Jobs/delete/Delete job
@try_manual
def step__jobs_delete_delete_job(test, rg):
    test.cmd('az storageimportexport job delete '
             '--name "{myJob}" '
             '--resource-group "{rg}"',
             checks=[])


@try_manual
def cleanup(test, rg):
    pass


@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__jobs_put_create_job(test, rg)
    step__jobs_get_get_job(test, rg)
    step__locations_get_get_locations(test, rg)
    step__bitlockerkeys_post_list_bitlocker_keys_for_drives_in_a_job(test, rg)
    step__jobs_get_list_jobs_in_a_resource_group(test, rg)
    step__jobs_get_list_jobs_in_a_subscription(test, rg)
    step__locations_get_list_locations(test, rg)
    step__jobs_patch_update_job(test, rg)
    step__jobs_delete_delete_job(test, rg)
    cleanup(test, rg)


@try_manual
class StorageImportExportScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cliteststorageimportexport_myResourceGroup'[:7], key='rg',
                           parameter_name='rg')
    @StorageAccountPreparer(name_prefix='cliteststorageimportexport_test'[:7], key='sa',
                            resource_group_parameter_name='rg')
    def test_storageimportexport(self, rg):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'West US': 'West US',
            'myJob': 'myJob',
        })

        call_scenario(self, rg)
        raise_if()
