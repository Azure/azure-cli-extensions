# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from azure.cli.core.commands import CliCommandType
from azext_cosmosdb_preview.generated._client_factory import (
    cf_database_account,
    cf_database,
    cf_collection,
    cf_collection_region,
    cf_database_account_region,
    cf_percentile_source_target,
    cf_percentile_target,
    cf_percentile,
    cf_collection_partition_region,
    cf_collection_partition,
    cf_partition_key_range_id,
    cf_partition_key_range_id_region,
    cf_graph_resource,
    cf_sqlresource,
    cf_mongo_dbresource,
    cf_table_resource,
    cf_cassandra_resource,
    cf_gremlin_resource,
    cf_cosmosdb_cl,
    cf_cassandra_cluster,
    cf_cassandra_data_center,
    cf_notebook_workspace,
    cf_private_endpoint_connection,
    cf_private_link_resource,
    cf_restorable_database_account,
    cf_restorable_sqldatabase,
    cf_restorable_sqlcontainer,
    cf_restorable_sqlresource,
    cf_restorable_mongodb_database,
    cf_restorable_mongodb_collection,
    cf_restorable_mongodb_resource,
    cf_service,
    cf_data_transfer_job,
)


cosmosdb_ = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._cosmos_db_management_client_operations#CosmosDBManagementClientOperationsMixin.{}',
    client_factory=cf_cosmosdb_cl,
)


cosmosdb_cassandra_cluster = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._cassandra_clusters_operations#CassandraClustersOperations.{}',
    client_factory=cf_cassandra_cluster,
)


cosmosdb_cassandra_data_center = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._cassandra_data_centers_operations#CassandraDataCentersOperations.{}',
    client_factory=cf_cassandra_data_center,
)


cosmosdb_cassandra_resource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._cassandra_resources_operations#CassandraResourcesOperations.{}',
    client_factory=cf_cassandra_resource,
)


cosmosdb_collection = CliCommandType(
    operations_tmpl=(
        'azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._collection_operations#CollectionOperations.{}'
    ),
    client_factory=cf_collection,
)


cosmosdb_collection_partition = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._collection_partition_operations#CollectionPartitionOperations.{}',
    client_factory=cf_collection_partition,
)


cosmosdb_collection_partition_region = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._collection_partition_region_operations#CollectionPartitionRegionOperations.{}',
    client_factory=cf_collection_partition_region,
)


cosmosdb_collection_region = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._collection_region_operations#CollectionRegionOperations.{}',
    client_factory=cf_collection_region,
)


cosmosdb_data_transfer_job = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._data_transfer_jobs_operations#DataTransferJobsOperations.{}',
    client_factory=cf_data_transfer_job,
)


cosmosdb_database = CliCommandType(
    operations_tmpl=(
        'azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._database_operations#DatabaseOperations.{}'
    ),
    client_factory=cf_database,
)


cosmosdb_database_account = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._database_accounts_operations#DatabaseAccountsOperations.{}',
    client_factory=cf_database_account,
)


cosmosdb_database_account_region = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._database_account_region_operations#DatabaseAccountRegionOperations.{}',
    client_factory=cf_database_account_region,
)


cosmosdb_graph_resource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._graph_resources_operations#GraphResourcesOperations.{}',
    client_factory=cf_graph_resource,
)


cosmosdb_gremlin_resource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._gremlin_resources_operations#GremlinResourcesOperations.{}',
    client_factory=cf_gremlin_resource,
)


cosmosdb_mongo_dbresource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._mongo_db_resources_operations#MongoDbResourcesOperations.{}',
    client_factory=cf_mongo_dbresource,
)


cosmosdb_notebook_workspace = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._notebook_workspaces_operations#NotebookWorkspacesOperations.{}',
    client_factory=cf_notebook_workspace,
)


cosmosdb_partition_key_range_id = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._partition_key_range_id_operations#PartitionKeyRangeIdOperations.{}',
    client_factory=cf_partition_key_range_id,
)


cosmosdb_partition_key_range_id_region = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._partition_key_range_id_region_operations#PartitionKeyRangeIdRegionOperations.{}',
    client_factory=cf_partition_key_range_id_region,
)


cosmosdb_percentile = CliCommandType(
    operations_tmpl=(
        'azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._percentile_operations#PercentileOperations.{}'
    ),
    client_factory=cf_percentile,
)


cosmosdb_percentile_source_target = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._percentile_source_target_operations#PercentileSourceTargetOperations.{}',
    client_factory=cf_percentile_source_target,
)


cosmosdb_percentile_target = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._percentile_target_operations#PercentileTargetOperations.{}',
    client_factory=cf_percentile_target,
)


cosmosdb_private_endpoint_connection = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._private_endpoint_connections_operations#PrivateEndpointConnectionsOperations.{}',
    client_factory=cf_private_endpoint_connection,
)


cosmosdb_private_link_resource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._private_link_resources_operations#PrivateLinkResourcesOperations.{}',
    client_factory=cf_private_link_resource,
)


cosmosdb_restorable_database_account = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_database_accounts_operations#RestorableDatabaseAccountsOperations.{}',
    client_factory=cf_restorable_database_account,
)


cosmosdb_restorable_mongodb_collection = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_mongodb_collections_operations#RestorableMongodbCollectionsOperations.{}',
    client_factory=cf_restorable_mongodb_collection,
)


cosmosdb_restorable_mongodb_database = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_mongodb_databases_operations#RestorableMongodbDatabasesOperations.{}',
    client_factory=cf_restorable_mongodb_database,
)


cosmosdb_restorable_mongodb_resource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_mongodb_resources_operations#RestorableMongodbResourcesOperations.{}',
    client_factory=cf_restorable_mongodb_resource,
)


cosmosdb_restorable_sqlcontainer = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_sql_containers_operations#RestorableSqlContainersOperations.{}',
    client_factory=cf_restorable_sqlcontainer,
)


cosmosdb_restorable_sqldatabase = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_sql_databases_operations#RestorableSqlDatabasesOperations.{}',
    client_factory=cf_restorable_sqldatabase,
)


cosmosdb_restorable_sqlresource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._restorable_sql_resources_operations#RestorableSqlResourcesOperations.{}',
    client_factory=cf_restorable_sqlresource,
)


cosmosdb_service = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._service_operations#ServiceOperations.{}',
    client_factory=cf_service,
)


cosmosdb_sqlresource = CliCommandType(
    operations_tmpl=(
        'azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._sql_resources_operations#SqlResourcesOperations.{}'
    ),
    client_factory=cf_sqlresource,
)


cosmosdb_table_resource = CliCommandType(
    operations_tmpl='azext_cosmosdb_preview.vendored_sdks.cosmodb.operations._table_resources_operations#TableResourcesOperations.{}',
    client_factory=cf_table_resource,
)


def load_command_table(self, _):

    with self.command_group('cosmosdb', cosmosdb_, client_factory=cf_cosmosdb_cl, is_experimental=True) as g:
        g.custom_command('location-get', 'cosmosdb_location_get')
        g.custom_command('location-list', 'cosmosdb_location_list')

    with self.command_group(
        'cosmosdb cassandra-cluster', cosmosdb_cassandra_cluster, client_factory=cf_cassandra_cluster
    ) as g:
        g.custom_command('list', 'cosmosdb_cassandra_cluster_list')
        g.custom_show_command('show', 'cosmosdb_cassandra_cluster_show')
        g.custom_command('update', 'cosmosdb_cassandra_cluster_update', supports_no_wait=True)
        g.custom_command('delete', 'cosmosdb_cassandra_cluster_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('create-update', 'cosmosdb_cassandra_cluster_create_update', supports_no_wait=True)
        g.custom_command('fetch-node-status', 'cosmosdb_cassandra_cluster_fetch_node_status', supports_no_wait=True)
        g.custom_command('list-backup', 'cosmosdb_cassandra_cluster_list_backup')
        g.custom_command('request-repair', 'cosmosdb_cassandra_cluster_request_repair', supports_no_wait=True)
        g.custom_command('show-backup', 'cosmosdb_cassandra_cluster_show_backup')
        g.custom_wait_command('wait', 'cosmosdb_cassandra_cluster_show')

    with self.command_group(
        'cosmosdb cassandra-data-center', cosmosdb_cassandra_data_center, client_factory=cf_cassandra_data_center
    ) as g:
        g.custom_command('list', 'cosmosdb_cassandra_data_center_list')
        g.custom_show_command('show', 'cosmosdb_cassandra_data_center_show')
        g.custom_command('update', 'cosmosdb_cassandra_data_center_update', supports_no_wait=True)
        g.custom_command('delete', 'cosmosdb_cassandra_data_center_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('create-update', 'cosmosdb_cassandra_data_center_create_update', supports_no_wait=True)
        g.custom_wait_command('wait', 'cosmosdb_cassandra_data_center_show')

    with self.command_group(
        'cosmosdb cassandra-resource', cosmosdb_cassandra_resource, client_factory=cf_cassandra_resource
    ) as g:
        g.custom_command(
            'create-update-cassandra-keyspace', 'cosmosdb_cassandra_resource_create_update_cassandra_keyspace'
        )
        g.custom_command('create-update-cassandra-table', 'cosmosdb_cassandra_resource_create_update_cassandra_table')
        g.custom_command('create-update-cassandra-view', 'cosmosdb_cassandra_resource_create_update_cassandra_view')
        g.custom_command('delete-cassandra-keyspace', 'cosmosdb_cassandra_resource_delete_cassandra_keyspace')
        g.custom_command('delete-cassandra-table', 'cosmosdb_cassandra_resource_delete_cassandra_table')
        g.custom_command('delete-cassandra-view', 'cosmosdb_cassandra_resource_delete_cassandra_view')
        g.custom_command('list-cassandra-keyspace', 'cosmosdb_cassandra_resource_list_cassandra_keyspace')
        g.custom_command('list-cassandra-table', 'cosmosdb_cassandra_resource_list_cassandra_table')
        g.custom_command('list-cassandra-view', 'cosmosdb_cassandra_resource_list_cassandra_view')
        g.custom_command(
            'migrate-cassandra-keyspace-to-autoscale',
            'cosmosdb_cassandra_resource_migrate_cassandra_keyspace_to_autoscale',
        )
        g.custom_command(
            'migrate-cassandra-keyspace-to-manual-throughput',
            'cosmosdb_cassandra_resource_migrate_cassandra_keyspace_to_manual_throughput',
        )
        g.custom_command(
            'migrate-cassandra-table-to-autoscale', 'cosmosdb_cassandra_resource_migrate_cassandra_table_to_autoscale'
        )
        g.custom_command(
            'migrate-cassandra-table-to-manual-throughput',
            'cosmosdb_cassandra_resource_migrate_cassandra_table_to_manual_throughput',
        )
        g.custom_command(
            'migrate-cassandra-view-to-autoscale', 'cosmosdb_cassandra_resource_migrate_cassandra_view_to_autoscale'
        )
        g.custom_command(
            'migrate-cassandra-view-to-manual-throughput',
            'cosmosdb_cassandra_resource_migrate_cassandra_view_to_manual_throughput',
        )
        g.custom_command('show-cassandra-keyspace', 'cosmosdb_cassandra_resource_show_cassandra_keyspace')
        g.custom_command(
            'show-cassandra-keyspace-throughput', 'cosmosdb_cassandra_resource_show_cassandra_keyspace_throughput'
        )
        g.custom_command('show-cassandra-table', 'cosmosdb_cassandra_resource_show_cassandra_table')
        g.custom_command(
            'show-cassandra-table-throughput', 'cosmosdb_cassandra_resource_show_cassandra_table_throughput'
        )
        g.custom_command('show-cassandra-view', 'cosmosdb_cassandra_resource_show_cassandra_view')
        g.custom_command('show-cassandra-view-throughput', 'cosmosdb_cassandra_resource_show_cassandra_view_throughput')
        g.custom_command(
            'update-cassandra-keyspace-throughput', 'cosmosdb_cassandra_resource_update_cassandra_keyspace_throughput'
        )
        g.custom_command(
            'update-cassandra-table-throughput', 'cosmosdb_cassandra_resource_update_cassandra_table_throughput'
        )
        g.custom_command(
            'update-cassandra-view-throughput', 'cosmosdb_cassandra_resource_update_cassandra_view_throughput'
        )

    with self.command_group('cosmosdb collection', cosmosdb_collection, client_factory=cf_collection) as g:
        g.custom_command('list-metric', 'cosmosdb_collection_list_metric')
        g.custom_command('list-metric-definition', 'cosmosdb_collection_list_metric_definition')
        g.custom_command('list-usage', 'cosmosdb_collection_list_usage')

    with self.command_group(
        'cosmosdb collection-partition', cosmosdb_collection_partition, client_factory=cf_collection_partition
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_collection_partition_list_metric')
        g.custom_command('list-usage', 'cosmosdb_collection_partition_list_usage')

    with self.command_group(
        'cosmosdb collection-partition-region',
        cosmosdb_collection_partition_region,
        client_factory=cf_collection_partition_region,
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_collection_partition_region_list_metric')

    with self.command_group(
        'cosmosdb collection-region', cosmosdb_collection_region, client_factory=cf_collection_region
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_collection_region_list_metric')

    with self.command_group(
        'cosmosdb data-transfer-job', cosmosdb_data_transfer_job, client_factory=cf_data_transfer_job
    ) as g:
        g.custom_command('list', 'cosmosdb_data_transfer_job_list')
        g.custom_show_command('show', 'cosmosdb_data_transfer_job_show')
        g.custom_command('create', 'cosmosdb_data_transfer_job_create')

    with self.command_group('cosmosdb database', cosmosdb_database, client_factory=cf_database) as g:
        g.custom_command('list-metric', 'cosmosdb_database_list_metric')
        g.custom_command('list-metric-definition', 'cosmosdb_database_list_metric_definition')
        g.custom_command('list-usage', 'cosmosdb_database_list_usage')

    with self.command_group(
        'cosmosdb database-account', cosmosdb_database_account, client_factory=cf_database_account
    ) as g:
        g.custom_command('list', 'cosmosdb_database_account_list')
        g.custom_show_command('show', 'cosmosdb_database_account_show')
        g.custom_command('create', 'cosmosdb_database_account_create', supports_no_wait=True)
        g.custom_command('update', 'cosmosdb_database_account_update', supports_no_wait=True)
        g.custom_command('delete', 'cosmosdb_database_account_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('check-name-exist', 'cosmosdb_database_account_check_name_exist')
        g.custom_command(
            'failover-priority-change', 'cosmosdb_database_account_failover_priority_change', supports_no_wait=True
        )
        g.custom_command('list-connection-string', 'cosmosdb_database_account_list_connection_string')
        g.custom_command('list-key', 'cosmosdb_database_account_list_key')
        g.custom_command('list-metric', 'cosmosdb_database_account_list_metric')
        g.custom_command('list-metric-definition', 'cosmosdb_database_account_list_metric_definition')
        g.custom_command('list-read-only-key', 'cosmosdb_database_account_list_read_only_key')
        g.custom_command('list-usage', 'cosmosdb_database_account_list_usage')
        g.custom_command('offline-region', 'cosmosdb_database_account_offline_region', supports_no_wait=True)
        g.custom_command('online-region', 'cosmosdb_database_account_online_region', supports_no_wait=True)
        g.custom_command('regenerate-key', 'cosmosdb_database_account_regenerate_key', supports_no_wait=True)
        g.custom_command('show-read-only-key', 'cosmosdb_database_account_show_read_only_key')
        g.custom_wait_command('wait', 'cosmosdb_database_account_show')

    with self.command_group(
        'cosmosdb database-account-region', cosmosdb_database_account_region, client_factory=cf_database_account_region
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_database_account_region_list_metric')

    with self.command_group('cosmosdb graph-resource', cosmosdb_graph_resource, client_factory=cf_graph_resource) as g:
        g.custom_command('create-update-graph', 'cosmosdb_graph_resource_create_update_graph')
        g.custom_command('delete-graph-resource', 'cosmosdb_graph_resource_delete_graph_resource')
        g.custom_command('list-graph', 'cosmosdb_graph_resource_list_graph')
        g.custom_command('show-graph', 'cosmosdb_graph_resource_show_graph')

    with self.command_group(
        'cosmosdb gremlin-resource', cosmosdb_gremlin_resource, client_factory=cf_gremlin_resource
    ) as g:
        g.custom_command('create-update-gremlin-database', 'cosmosdb_gremlin_resource_create_update_gremlin_database')
        g.custom_command('create-update-gremlin-graph', 'cosmosdb_gremlin_resource_create_update_gremlin_graph')
        g.custom_command('delete-gremlin-database', 'cosmosdb_gremlin_resource_delete_gremlin_database')
        g.custom_command('delete-gremlin-graph', 'cosmosdb_gremlin_resource_delete_gremlin_graph')
        g.custom_command('list-gremlin-database', 'cosmosdb_gremlin_resource_list_gremlin_database')
        g.custom_command('list-gremlin-graph', 'cosmosdb_gremlin_resource_list_gremlin_graph')
        g.custom_command(
            'migrate-gremlin-database-to-autoscale', 'cosmosdb_gremlin_resource_migrate_gremlin_database_to_autoscale'
        )
        g.custom_command(
            'migrate-gremlin-database-to-manual-throughput',
            'cosmosdb_gremlin_resource_migrate_gremlin_database_to_manual_throughput',
        )
        g.custom_command(
            'migrate-gremlin-graph-to-autoscale', 'cosmosdb_gremlin_resource_migrate_gremlin_graph_to_autoscale'
        )
        g.custom_command(
            'migrate-gremlin-graph-to-manual-throughput',
            'cosmosdb_gremlin_resource_migrate_gremlin_graph_to_manual_throughput',
        )
        g.custom_command('show-gremlin-database', 'cosmosdb_gremlin_resource_show_gremlin_database')
        g.custom_command(
            'show-gremlin-database-throughput', 'cosmosdb_gremlin_resource_show_gremlin_database_throughput'
        )
        g.custom_command('show-gremlin-graph', 'cosmosdb_gremlin_resource_show_gremlin_graph')
        g.custom_command('show-gremlin-graph-throughput', 'cosmosdb_gremlin_resource_show_gremlin_graph_throughput')
        g.custom_command(
            'update-gremlin-database-throughput', 'cosmosdb_gremlin_resource_update_gremlin_database_throughput'
        )
        g.custom_command('update-gremlin-graph-throughput', 'cosmosdb_gremlin_resource_update_gremlin_graph_throughput')

    with self.command_group(
        'cosmosdb mongo-db-resource', cosmosdb_mongo_dbresource, client_factory=cf_mongo_dbresource
    ) as g:
        g.custom_command(
            'create-update-mongo-db-collection', 'cosmosdb_mongo_db_resource_create_update_mongo_db_collection'
        )
        g.custom_command(
            'create-update-mongo-db-database', 'cosmosdb_mongo_db_resource_create_update_mongo_db_database'
        )
        g.custom_command('delete-mongo-db-collection', 'cosmosdb_mongo_db_resource_delete_mongo_db_collection')
        g.custom_command('delete-mongo-db-database', 'cosmosdb_mongo_db_resource_delete_mongo_db_database')
        g.custom_command('list-mongo-db-collection', 'cosmosdb_mongo_db_resource_list_mongo_db_collection')
        g.custom_command('list-mongo-db-database', 'cosmosdb_mongo_db_resource_list_mongo_db_database')
        g.custom_command(
            'migrate-mongo-db-collection-to-autoscale',
            'cosmosdb_mongo_db_resource_migrate_mongo_db_collection_to_autoscale',
        )
        g.custom_command(
            'migrate-mongo-db-collection-to-manual-throughput',
            'cosmosdb_mongo_db_resource_migrate_mongo_db_collection_to_manual_throughput',
        )
        g.custom_command(
            'migrate-mongo-db-database-to-autoscale',
            'cosmosdb_mongo_db_resource_migrate_mongo_db_database_to_autoscale',
        )
        g.custom_command(
            'migrate-mongo-db-database-to-manual-throughput',
            'cosmosdb_mongo_db_resource_migrate_mongo_db_database_to_manual_throughput',
        )
        g.custom_command('show-mongo-db-collection', 'cosmosdb_mongo_db_resource_show_mongo_db_collection')
        g.custom_command(
            'show-mongo-db-collection-throughput', 'cosmosdb_mongo_db_resource_show_mongo_db_collection_throughput'
        )
        g.custom_command('show-mongo-db-database', 'cosmosdb_mongo_db_resource_show_mongo_db_database')
        g.custom_command(
            'show-mongo-db-database-throughput', 'cosmosdb_mongo_db_resource_show_mongo_db_database_throughput'
        )
        g.custom_command(
            'update-mongo-db-collection-throughput', 'cosmosdb_mongo_db_resource_update_mongo_db_collection_throughput'
        )
        g.custom_command(
            'update-mongo-db-database-throughput', 'cosmosdb_mongo_db_resource_update_mongo_db_database_throughput'
        )

    with self.command_group(
        'cosmosdb notebook-workspace', cosmosdb_notebook_workspace, client_factory=cf_notebook_workspace
    ) as g:
        g.custom_command('list', 'cosmosdb_notebook_workspace_list')
        g.custom_show_command('show', 'cosmosdb_notebook_workspace_show')
        g.custom_command('create', 'cosmosdb_notebook_workspace_create', supports_no_wait=True)
        g.custom_command('update', 'cosmosdb_notebook_workspace_update', supports_no_wait=True)
        g.custom_command('delete', 'cosmosdb_notebook_workspace_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('list-connection-info', 'cosmosdb_notebook_workspace_list_connection_info')
        g.custom_command(
            'regenerate-auth-token', 'cosmosdb_notebook_workspace_regenerate_auth_token', supports_no_wait=True
        )
        g.custom_command('start', 'cosmosdb_notebook_workspace_start', supports_no_wait=True)
        g.custom_wait_command('wait', 'cosmosdb_notebook_workspace_show')

    with self.command_group(
        'cosmosdb partition-key-range-id', cosmosdb_partition_key_range_id, client_factory=cf_partition_key_range_id
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_partition_key_range_id_list_metric')

    with self.command_group(
        'cosmosdb partition-key-range-id-region',
        cosmosdb_partition_key_range_id_region,
        client_factory=cf_partition_key_range_id_region,
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_partition_key_range_id_region_list_metric')

    with self.command_group('cosmosdb percentile', cosmosdb_percentile, client_factory=cf_percentile) as g:
        g.custom_command('list-metric', 'cosmosdb_percentile_list_metric')

    with self.command_group(
        'cosmosdb percentile-source-target',
        cosmosdb_percentile_source_target,
        client_factory=cf_percentile_source_target,
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_percentile_source_target_list_metric')

    with self.command_group(
        'cosmosdb percentile-target', cosmosdb_percentile_target, client_factory=cf_percentile_target
    ) as g:
        g.custom_command('list-metric', 'cosmosdb_percentile_target_list_metric')

    with self.command_group(
        'cosmosdb private-endpoint-connection',
        cosmosdb_private_endpoint_connection,
        client_factory=cf_private_endpoint_connection,
    ) as g:
        g.custom_command('list', 'cosmosdb_private_endpoint_connection_list')
        g.custom_show_command('show', 'cosmosdb_private_endpoint_connection_show')
        g.custom_command('create', 'cosmosdb_private_endpoint_connection_create', supports_no_wait=True)
        g.generic_update_command(
            'update',
            supports_no_wait=True,
            custom_func_name='cosmosdb_private_endpoint_connection_update',
            setter_name='begin_create_or_update',
        )
        g.custom_command(
            'delete', 'cosmosdb_private_endpoint_connection_delete', supports_no_wait=True, confirmation=True
        )
        g.custom_wait_command('wait', 'cosmosdb_private_endpoint_connection_show')

    with self.command_group(
        'cosmosdb private-link-resource', cosmosdb_private_link_resource, client_factory=cf_private_link_resource
    ) as g:
        g.custom_command('list', 'cosmosdb_private_link_resource_list')
        g.custom_show_command('show', 'cosmosdb_private_link_resource_show')

    with self.command_group(
        'cosmosdb restorable-database-account',
        cosmosdb_restorable_database_account,
        client_factory=cf_restorable_database_account,
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_database_account_list')
        g.custom_show_command('show', 'cosmosdb_restorable_database_account_show')

    with self.command_group(
        'cosmosdb restorable-mongodb-collection',
        cosmosdb_restorable_mongodb_collection,
        client_factory=cf_restorable_mongodb_collection,
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_mongodb_collection_list')

    with self.command_group(
        'cosmosdb restorable-mongodb-database',
        cosmosdb_restorable_mongodb_database,
        client_factory=cf_restorable_mongodb_database,
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_mongodb_database_list')

    with self.command_group(
        'cosmosdb restorable-mongodb-resource',
        cosmosdb_restorable_mongodb_resource,
        client_factory=cf_restorable_mongodb_resource,
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_mongodb_resource_list')

    with self.command_group(
        'cosmosdb restorable-sql-container', cosmosdb_restorable_sqlcontainer, client_factory=cf_restorable_sqlcontainer
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_sql_container_list')

    with self.command_group(
        'cosmosdb restorable-sql-database', cosmosdb_restorable_sqldatabase, client_factory=cf_restorable_sqldatabase
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_sql_database_list')

    with self.command_group(
        'cosmosdb restorable-sql-resource', cosmosdb_restorable_sqlresource, client_factory=cf_restorable_sqlresource
    ) as g:
        g.custom_command('list', 'cosmosdb_restorable_sql_resource_list')

    with self.command_group('cosmosdb service', cosmosdb_service, client_factory=cf_service) as g:
        g.custom_command('list', 'cosmosdb_service_list')
        g.custom_show_command('show', 'cosmosdb_service_show')
        g.custom_command('create', 'cosmosdb_service_create', supports_no_wait=True)
        g.custom_command('delete', 'cosmosdb_service_delete', supports_no_wait=True, confirmation=True)
        g.custom_wait_command('wait', 'cosmosdb_service_show')

    with self.command_group('cosmosdb sql-resource', cosmosdb_sqlresource, client_factory=cf_sqlresource) as g:
        g.custom_command('create-update-sql-container', 'cosmosdb_sql_resource_create_update_sql_container')
        g.custom_command('create-update-sql-database', 'cosmosdb_sql_resource_create_update_sql_database')
        g.custom_command('create-update-sql-role-assignment', 'cosmosdb_sql_resource_create_update_sql_role_assignment')
        g.custom_command('create-update-sql-role-definition', 'cosmosdb_sql_resource_create_update_sql_role_definition')
        g.custom_command(
            'create-update-sql-stored-procedure', 'cosmosdb_sql_resource_create_update_sql_stored_procedure'
        )
        g.custom_command('create-update-sql-trigger', 'cosmosdb_sql_resource_create_update_sql_trigger')
        g.custom_command(
            'create-update-sql-user-defined-function', 'cosmosdb_sql_resource_create_update_sql_user_defined_function'
        )
        g.custom_command('delete-sql-container', 'cosmosdb_sql_resource_delete_sql_container')
        g.custom_command('delete-sql-database', 'cosmosdb_sql_resource_delete_sql_database')
        g.custom_command('delete-sql-role-assignment', 'cosmosdb_sql_resource_delete_sql_role_assignment')
        g.custom_command('delete-sql-role-definition', 'cosmosdb_sql_resource_delete_sql_role_definition')
        g.custom_command('delete-sql-stored-procedure', 'cosmosdb_sql_resource_delete_sql_stored_procedure')
        g.custom_command('delete-sql-trigger', 'cosmosdb_sql_resource_delete_sql_trigger')
        g.custom_command('delete-sql-user-defined-function', 'cosmosdb_sql_resource_delete_sql_user_defined_function')
        g.custom_command('list-sql-container', 'cosmosdb_sql_resource_list_sql_container')
        g.custom_command('list-sql-database', 'cosmosdb_sql_resource_list_sql_database')
        g.custom_command('list-sql-role-assignment', 'cosmosdb_sql_resource_list_sql_role_assignment')
        g.custom_command('list-sql-role-definition', 'cosmosdb_sql_resource_list_sql_role_definition')
        g.custom_command('list-sql-stored-procedure', 'cosmosdb_sql_resource_list_sql_stored_procedure')
        g.custom_command('list-sql-trigger', 'cosmosdb_sql_resource_list_sql_trigger')
        g.custom_command('list-sql-user-defined-function', 'cosmosdb_sql_resource_list_sql_user_defined_function')
        g.custom_command(
            'migrate-sql-container-to-autoscale', 'cosmosdb_sql_resource_migrate_sql_container_to_autoscale'
        )
        g.custom_command(
            'migrate-sql-container-to-manual-throughput',
            'cosmosdb_sql_resource_migrate_sql_container_to_manual_throughput',
        )
        g.custom_command('migrate-sql-database-to-autoscale', 'cosmosdb_sql_resource_migrate_sql_database_to_autoscale')
        g.custom_command(
            'migrate-sql-database-to-manual-throughput',
            'cosmosdb_sql_resource_migrate_sql_database_to_manual_throughput',
        )
        g.custom_command(
            'retrieve-continuou-backup-information', 'cosmosdb_sql_resource_retrieve_continuou_backup_information'
        )
        g.custom_command('show-sql-container', 'cosmosdb_sql_resource_show_sql_container')
        g.custom_command('show-sql-container-throughput', 'cosmosdb_sql_resource_show_sql_container_throughput')
        g.custom_command('show-sql-database', 'cosmosdb_sql_resource_show_sql_database')
        g.custom_command('show-sql-database-throughput', 'cosmosdb_sql_resource_show_sql_database_throughput')
        g.custom_command('show-sql-role-assignment', 'cosmosdb_sql_resource_show_sql_role_assignment')
        g.custom_command('show-sql-role-definition', 'cosmosdb_sql_resource_show_sql_role_definition')
        g.custom_command('show-sql-stored-procedure', 'cosmosdb_sql_resource_show_sql_stored_procedure')
        g.custom_command('show-sql-trigger', 'cosmosdb_sql_resource_show_sql_trigger')
        g.custom_command('show-sql-user-defined-function', 'cosmosdb_sql_resource_show_sql_user_defined_function')
        g.custom_command('update-sql-container-throughput', 'cosmosdb_sql_resource_update_sql_container_throughput')
        g.custom_command('update-sql-database-throughput', 'cosmosdb_sql_resource_update_sql_database_throughput')

    with self.command_group('cosmosdb table-resource', cosmosdb_table_resource, client_factory=cf_table_resource) as g:
        g.custom_command('create-update-table', 'cosmosdb_table_resource_create_update_table')
        g.custom_command('delete-table', 'cosmosdb_table_resource_delete_table')
        g.custom_command('list-table', 'cosmosdb_table_resource_list_table')
        g.custom_command('migrate-table-to-autoscale', 'cosmosdb_table_resource_migrate_table_to_autoscale')
        g.custom_command(
            'migrate-table-to-manual-throughput', 'cosmosdb_table_resource_migrate_table_to_manual_throughput'
        )
        g.custom_command('show-table', 'cosmosdb_table_resource_show_table')
        g.custom_command('show-table-throughput', 'cosmosdb_table_resource_show_table_throughput')
        g.custom_command('update-table-throughput', 'cosmosdb_table_resource_update_table_throughput')
