# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class OsProfile(Model):
    """Defines the resource properties.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param computer_name: Gets or sets computer name.
    :type computer_name: str
    :param admin_username: Gets or sets administrator username.
    :type admin_username: str
    :param admin_password: Gets or sets administrator password.
    :type admin_password: str
    :ivar os_type: Gets or sets the type of the os. Possible values include:
     'Windows', 'Linux', 'Other'
    :vartype os_type: str or
     ~azure.mgmt.vmware.v2020_10_01_preview.models.OsType
    :ivar os_name: Gets or sets os name.
    :vartype os_name: str
    :ivar tools_running_status: Gets or sets the current running status of
     VMware Tools running in the guest operating system.
    :vartype tools_running_status: str
    :ivar tools_version_status: Gets or sets the current version status of
     VMware Tools installed in the guest operating system.
    :vartype tools_version_status: str
    :ivar tools_version: Gets or sets the current version of VMware Tools.
    :vartype tools_version: str
    """

    _validation = {
        'os_type': {'readonly': True},
        'os_name': {'readonly': True},
        'tools_running_status': {'readonly': True},
        'tools_version_status': {'readonly': True},
        'tools_version': {'readonly': True},
    }

    _attribute_map = {
        'computer_name': {'key': 'computerName', 'type': 'str'},
        'admin_username': {'key': 'adminUsername', 'type': 'str'},
        'admin_password': {'key': 'adminPassword', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
        'os_name': {'key': 'osName', 'type': 'str'},
        'tools_running_status': {'key': 'toolsRunningStatus', 'type': 'str'},
        'tools_version_status': {'key': 'toolsVersionStatus', 'type': 'str'},
        'tools_version': {'key': 'toolsVersion', 'type': 'str'},
    }

    def __init__(self, *, computer_name: str=None, admin_username: str=None, admin_password: str=None, **kwargs) -> None:
        super(OsProfile, self).__init__(**kwargs)
        self.computer_name = computer_name
        self.admin_username = admin_username
        self.admin_password = admin_password
        self.os_type = None
        self.os_name = None
        self.tools_running_status = None
        self.tools_version_status = None
        self.tools_version = None
