# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class InventoryItemProperties(Model):
    """Defines the resource properties.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: ResourcePoolInventoryItem, VirtualMachineInventoryItem,
    VirtualMachineTemplateInventoryItem, VirtualNetworkInventoryItem

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :param managed_resource_id: Gets or sets the tracked resource id
     corresponding to the inventory resource.
    :type managed_resource_id: str
    :param mo_ref_id: Gets or sets the MoRef (Managed Object Reference) ID for
     the inventory item.
    :type mo_ref_id: str
    :param mo_name: Gets or sets the vCenter Managed Object name for the
     inventory item.
    :type mo_name: str
    :ivar provisioning_state: Gets or sets the provisioning state.
    :vartype provisioning_state: str
    :param inventory_type: Required. Constant filled by server.
    :type inventory_type: str
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'inventory_type': {'required': True},
    }

    _attribute_map = {
        'managed_resource_id': {'key': 'managedResourceId', 'type': 'str'},
        'mo_ref_id': {'key': 'moRefId', 'type': 'str'},
        'mo_name': {'key': 'moName', 'type': 'str'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'inventory_type': {'key': 'inventoryType', 'type': 'str'},
    }

    _subtype_map = {
        'inventory_type': {'ResourcePool': 'ResourcePoolInventoryItem', 'VirtualMachine': 'VirtualMachineInventoryItem', 'VirtualMachineTemplate': 'VirtualMachineTemplateInventoryItem', 'VirtualNetwork': 'VirtualNetworkInventoryItem'}
    }

    def __init__(self, *, managed_resource_id: str=None, mo_ref_id: str=None, mo_name: str=None, **kwargs) -> None:
        super(InventoryItemProperties, self).__init__(**kwargs)
        self.managed_resource_id = managed_resource_id
        self.mo_ref_id = mo_ref_id
        self.mo_name = mo_name
        self.provisioning_state = None
        self.inventory_type = None
