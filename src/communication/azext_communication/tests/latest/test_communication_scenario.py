# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg_2, rg):
    pass


# EXAMPLE: /CommunicationService/put/Create or update resource
@try_manual
def step__communicationservice_put(test, rg_2, rg):
    test.cmd('az communication service create '
             '--name "{myCommunicationService}" '
             '--location "Global" '
             '--data-location "United States" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("name", "{myCommunicationService}", case_sensitive=False),
                 test.check("location", "Global", case_sensitive=False),
                 test.check("dataLocation", "United States", case_sensitive=False),
             ])
    test.cmd('az communication service wait --created '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /CommunicationService/get/Get resource
@try_manual
def step__communicationservice_get_get_resource(test, rg_2, rg):
    test.cmd('az communication service show '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("name", "{myCommunicationService}", case_sensitive=False),
                 test.check("location", "Global", case_sensitive=False),
                 test.check("dataLocation", "United States", case_sensitive=False),
             ])


# EXAMPLE: /CommunicationService/get/List by resource group
@try_manual
def step__communicationservice_get(test, rg_2, rg):
    test.cmd('az communication service list '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /CommunicationService/get/List by subscription
@try_manual
def step__communicationservice_get2(test, rg_2, rg):
    test.cmd('az communication service list '
             '-g ""',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /CommunicationService/patch/Update resource
@try_manual
def step__communicationservice_patch_update_resource(test, rg_2, rg):
    test.cmd('az communication service update '
             '--name "{myCommunicationService}" '
             '--tags newTag="newVal" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("name", "{myCommunicationService}", case_sensitive=False),
                 test.check("location", "Global", case_sensitive=False),
                 test.check("dataLocation", "United States", case_sensitive=False),
                 test.check("tags.newTag", "newVal", case_sensitive=False),
             ])


# EXAMPLE: /CommunicationService/post/Link notification hub
@try_manual
def step__communicationservice_post(test, rg_2, rg):
    test.cmd('az communication service link-notification-hub '
             '--name "{myCommunicationService}" '
             '--connection-string "Endpoint=sb://MyNamespace.servicebus.windows.net/;SharedAccessKey=abcd1234" '
             '--resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.NotificationHub'
             's/namespaces/MyNamespace/notificationHubs/MyHub" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /CommunicationService/post/List keys
@try_manual
def step__communicationservice_post_list_keys(test, rg_2, rg):
    test.cmd('az communication service list-key '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /CommunicationService/post/Regenerate key
@try_manual
def step__communicationservice_post_regenerate_key(test, rg_2, rg):
    test.cmd('az communication service regenerate-key '
             '--name "{myCommunicationService}" '
             '--key-type "Primary" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /CommunicationService/delete/Delete resource
@try_manual
def step__communicationservice_delete_delete_resource(test, rg_2, rg):
    test.cmd('az communication service delete -y '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /OperationStatuses/get/Get OperationStatus
@try_manual
def step__operationstatuses_get_get_operationstatus(test, rg_2, rg):
    test.cmd('az communication status show '
             '--operation-id "db5f291f-284d-46e9-9152-d5c83f7c14b8" '
             '--location "westus2"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test, rg_2, rg):
    pass


# Testcase
@try_manual
def call_scenario(test, rg_2, rg):
    setup(test, rg_2, rg)
    step__communicationservice_put(test, rg_2, rg)
    step__communicationservice_get_get_resource(test, rg_2, rg)
    step__communicationservice_get(test, rg_2, rg)
    step__communicationservice_get2(test, rg_2, rg)
    step__communicationservice_patch_update_resource(test, rg_2, rg)
    step__communicationservice_post(test, rg_2, rg)
    step__communicationservice_post_list_keys(test, rg_2, rg)
    step__communicationservice_post_regenerate_key(test, rg_2, rg)
    step__communicationservice_delete_delete_resource(test, rg_2, rg)
    step__operationstatuses_get_get_operationstatus(test, rg_2, rg)
    cleanup(test, rg_2, rg)


@try_manual
class CommunicationServiceManagementClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestcommunication_MyOtherResourceGroup'[:7], key='rg_2', parameter_name=''
                           'rg_2')
    @ResourceGroupPreparer(name_prefix='clitestcommunication_MyResourceGroup'[:7], key='rg', parameter_name='rg')
    def test_communication(self, rg_2, rg):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myCommunicationService': 'MyCommunicationResource',
        })

        call_scenario(self, rg_2, rg)
        calc_coverage(__file__)
        raise_if()
