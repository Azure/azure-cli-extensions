# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /EmailCommunicationService/put/Create or update resource
@try_manual
def step_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication email create '
             '--name "{myEmailCommunicationService}" '
             '--location "Global" '
             '--data-location "United States" '
             '--resource-group "{rg}"',
             checks=checks)
    test.cmd('az communication email wait --created '
             '--name "{myEmailCommunicationService}" '
             '--resource-group "{rg}"')


# EXAMPLE: /EmailCommunicationService/get/Get resource
@try_manual
def step_show(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication email show '
             '--name "{myEmailCommunicationService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EmailCommunicationService/get/List by resource group
@try_manual
def step_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication email list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EmailCommunicationService/get/List by resource group alternative command
@try_manual
def step_list2(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication email list '
             '-g "{rg}"',
             checks=checks)


# EXAMPLE: /EmailCommunicationService/patch/Update resource
@try_manual
def step_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication email update '
             '--name "{myEmailCommunicationService}" '
             '--tags newTag="newVal" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EmailCommunicationService/delete/Delete resource
@try_manual
def step_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication email delete -y '
             '--name "{myEmailCommunicationService}" '
             '--resource-group "{rg}"',
             checks=checks)
