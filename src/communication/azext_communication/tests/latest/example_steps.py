# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /CommunicationService/put/Create or update resource
@try_manual
def step_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication create '
             '--name "{myCommunicationService}" '
             '--location "Global" '
             '--data-location "United States" '
             '--resource-group "{rg}"',
             checks=checks)
    test.cmd('az communication wait --created '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"')


# EXAMPLE: /CommunicationService/get/Get resource
@try_manual
def step_show(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication show '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/get/List by resource group
@try_manual
def step_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/get/List by subscription
@try_manual
def step_list2(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication list '
             '-g "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/patch/Update resource
@try_manual
def step_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication update '
             '--name "{myCommunicationService}" '
             '--tags newTag="newVal" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/post/Link notification hub
@try_manual
def step_link_notification_hub(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication link-notification-hub '
             '--name "{myCommunicationService}" '
             '--connection-string "Endpoint=sb://MyNamespace.servicebus.windows.net/;SharedAccessKey=abcd1234" '
             '--resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.NotificationHub'
             's/namespaces/MyNamespace/notificationHubs/MyHub" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/post/List keys
@try_manual
def step_list_key(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication list-key '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/post/Regenerate key
@try_manual
def step_regenerate_key(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication regenerate-key '
             '--name "{myCommunicationService}" '
             '--key-type "Primary" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CommunicationService/delete/Delete resource
@try_manual
def step_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az communication delete -y '
             '--name "{myCommunicationService}" '
             '--resource-group "{rg}"',
             checks=checks)

