# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

from ._configuration import MicrosoftStorageSyncConfiguration
from .operations import OperationOperations
from .operations import StorageSyncServiceOperations
from .operations import PrivateLinkResourceOperations
from .operations import PrivateEndpointConnectionOperations
from .operations import SyncGroupOperations
from .operations import CloudEndpointOperations
from .operations import ServerEndpointOperations
from .operations import RegisteredServerOperations
from .operations import WorkflowOperations
from .operations import OperationStatusOperations
from . import models


class MicrosoftStorageSync(object):
    """Microsoft Storage Sync Service API.

    :ivar operation: OperationOperations operations
    :vartype operation: azure.mgmt.storagesync.operations.OperationOperations
    :ivar storage_sync_service: StorageSyncServiceOperations operations
    :vartype storage_sync_service: azure.mgmt.storagesync.operations.StorageSyncServiceOperations
    :ivar private_link_resource: PrivateLinkResourceOperations operations
    :vartype private_link_resource: azure.mgmt.storagesync.operations.PrivateLinkResourceOperations
    :ivar private_endpoint_connection: PrivateEndpointConnectionOperations operations
    :vartype private_endpoint_connection: azure.mgmt.storagesync.operations.PrivateEndpointConnectionOperations
    :ivar sync_group: SyncGroupOperations operations
    :vartype sync_group: azure.mgmt.storagesync.operations.SyncGroupOperations
    :ivar cloud_endpoint: CloudEndpointOperations operations
    :vartype cloud_endpoint: azure.mgmt.storagesync.operations.CloudEndpointOperations
    :ivar server_endpoint: ServerEndpointOperations operations
    :vartype server_endpoint: azure.mgmt.storagesync.operations.ServerEndpointOperations
    :ivar registered_server: RegisteredServerOperations operations
    :vartype registered_server: azure.mgmt.storagesync.operations.RegisteredServerOperations
    :ivar workflow: WorkflowOperations operations
    :vartype workflow: azure.mgmt.storagesync.operations.WorkflowOperations
    :ivar operation_status: OperationStatusOperations operations
    :vartype operation_status: azure.mgmt.storagesync.operations.OperationStatusOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        subscription_id,  # type: str
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = MicrosoftStorageSyncConfiguration(credential, subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.operation = OperationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.storage_sync_service = StorageSyncServiceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_resource = PrivateLinkResourceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_endpoint_connection = PrivateEndpointConnectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.sync_group = SyncGroupOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.cloud_endpoint = CloudEndpointOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.server_endpoint = ServerEndpointOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.registered_server = RegisteredServerOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.workflow = WorkflowOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operation_status = OperationStatusOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> MicrosoftStorageSync
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
