# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if
from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import StorageAccountPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg, rg_2):
    pass


# EXAMPLE: StorageSyncServices_Create
@try_manual
def step_storagesyncservices_create(test, rg, rg_2):
    test.cmd('az storagesync storage-sync-service create '
             '--location "WestUS" '
             '--incoming-traffic-policy "AllowAllTraffic" '
             '--resource-group "{rg_2}" '
             '--name "{SampleStorageSyncService_1}"',
             checks=[])
    test.cmd('az storagesync storage-sync-service wait --created '
             '--resource-group "{rg_2}" '
             '--name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: SyncGroups_Create
@try_manual
def step_syncgroups_create(test, rg, rg_2):
    test.cmd('az storagesync sync-group create '
             '--properties "{{}}" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: RegisteredServers_Create
@try_manual
def step_registeredservers_create(test, rg, rg_2):
    test.cmd('az storagesync registered-server create '
             '--agent-version "1.0.277.0" '
             '--last-heart-beat "\\"2017-08-08T18:29:06.470652Z\\"" '
             '--server-certificate "\\"MIIDFjCCAf6gAwIBAgIQQS+DS8uhc4VNzUkTw7wbRjANBgkqhkiG9w0BAQ0FADAzMTEwLwYDVQQDEyhh'
             'bmt1c2hiLXByb2QzLnJlZG1vbmQuY29ycC5taWNyb3NvZnQuY29tMB4XDTE3MDgwMzE3MDQyNFoXDTE4MDgwNDE3MDQyNFowMzExMC8GA'
             '1UEAxMoYW5rdXNoYi1wcm9kMy5yZWRtb25kLmNvcnAubWljcm9zb2Z0LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL'
             'DRvV4gmsIy6jGDPiHsXmvgVP749NNP7DopdlbHaNhjFmYINHl0uWylyaZmgJrROt2mnxN/zEyJtGnqYHlzUr4xvGq/qV5pqgdB9tag/sw'
             '9i22gfe9PRZ0FmSOZnXMbLYgLiDFqLtut5gHcOuWMj03YnkfoBEKlFBxWbagvW2yxz/Sxi9OVSJOKCaXra0RpcIHrO/KFl6ho2eE1/7Yk'
             'mfa8hZvSdoPd5gHdLiQcMB/pxq+mWp1fI6c8vFZoDu7Atn+NXTzYPKUxKzaisF12TsaKpohUsJpbB3Wocb0F5frn614D2pg14ERB5otjA'
             'MWw1m65csQWPI6dP8KIYe0+QPkCAwEAAaMmMCQwIgYDVR0lAQH/BBgwFgYIKwYBBQUHAwIGCisGAQQBgjcKAwwwDQYJKoZIhvcNAQENBQ'
             'ADggEBAA4RhVIBkw34M1RwakJgHvtjsOFxF1tVQA941NtLokx1l2Z8+GFQkcG4xpZSt+UN6wLerdCbnNhtkCErWUDeaT0jxk4g71Ofex7'
             'iM04crT4iHJr8mi96/XnhnkTUs+GDk12VgdeeNEczMZz+8Mxw9dJ5NCnYgTwO0SzGlclRsDvjzkLo8rh2ZG6n/jKrEyNXXo+hOqhupij0'
             'QbRP2Tvexdfw201kgN1jdZify8XzJ8Oi0bTS0KpJf2pNPOlooK2bjMUei9ANtEdXwwfVZGWvVh6tJjdv6k14wWWJ1L7zhA1IIVb1J+sQU'
             'zJji5iX0DrezjTz1Fg+gAzITaA/WsuujlM=\\"" '
             '--server-osversion "10.0.14393.0" '
             '--server-role "Standalone" '
             '--resource-group "{rg_2}" '
             '--properties-server-id "\\"080d4133-bdb5-40a0-96a0-71a6057bfe9a\\"" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_Create
@try_manual
def step_cloudendpoints_create(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint create '
             '--name "{SampleCloudEndpoint_1}" '
             '--azure-file-share-name "cvcloud-afscv-0719-058-a94a1354-a1fd-4e9a-9a50-919fad8c4ba4" '
             '--friendly-name "ankushbsubscriptionmgmtmab" '
             '--storage-account-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.S'
             'torage/storageAccounts/{sa}" '
             '--storage-account-tenant-id "\\"72f988bf-86f1-41af-91ab-2d7cd011db47\\"" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])
    test.cmd('az storagesync cloud-endpoint wait --created '
             '--name "{SampleCloudEndpoint_1}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: ServerEndpoints_Create
@try_manual
def step_serverendpoints_create(test, rg, rg_2):
    test.cmd('az storagesync server-endpoint create '
             '--cloud-tiering "off" '
             '--initial-download-policy "NamespaceThenModifiedFiles" '
             '--local-cache-mode "UpdateLocallyCachedFiles" '
             '--offline-data-transfer "on" '
             '--offline-data-transfer-share-name "myfileshare" '
             '--server-local-path "D:\\\\SampleServerEndpoint_1" '
             '--server-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.StorageS'
             'ync/storageSyncServices/{SampleStorageSyncService_1}/registeredServers/{080d4133-bdb5-40a0-96a0-71a6057bf'
             'e9a}" '
             '--tier-files-older-than-days 0 '
             '--volume-free-space-percent 100 '
             '--resource-group "{rg_2}" '
             '--name "{SampleServerEndpoint_1}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])
    test.cmd('az storagesync server-endpoint wait --created '
             '--resource-group "{rg_2}" '
             '--name "{SampleServerEndpoint_1}"',
             checks=[])


# EXAMPLE: ServerEndpoints_Get
@try_manual
def step_serverendpoints_get(test, rg, rg_2):
    test.cmd('az storagesync server-endpoint show '
             '--resource-group "{rg_2}" '
             '--name "{SampleServerEndpoint_1}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_Get
@try_manual
def step_cloudendpoints_get(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint show '
             '--name "{SampleCloudEndpoint_1}" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: ServerEndpoints_ListBySyncGroup
@try_manual
def step_serverendpoints_listbysyncgroup(test, rg, rg_2):
    test.cmd('az storagesync server-endpoint list '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_ListBySyncGroup
@try_manual
def step_cloudendpoints_listbysyncgroup(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint list '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: RegisteredServers_Get
@try_manual
def step_registeredservers_get(test, rg, rg_2):
    test.cmd('az storagesync registered-server show '
             '--resource-group "{rg_2}" '
             '--server-id "080d4133-bdb5-40a0-96a0-71a6057bfe9a" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: Workflows_Get
@try_manual
def step_workflows_get(test, rg, rg_2):
    test.cmd('az storagesync workflow show '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--workflow-id "828219ea-083e-48b5-89ea-8fd9991b2e75"',
             checks=[])


# EXAMPLE: SyncGroups_Get
@try_manual
def step_syncgroups_get(test, rg, rg_2):
    test.cmd('az storagesync sync-group show '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: Workflows_Get
@try_manual
def step_workflows_get(test, rg, rg_2):
    test.cmd('az storagesync workflow show '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--workflow-id "828219ea-083e-48b5-89ea-8fd9991b2e75"',
             checks=[])


# EXAMPLE: RegisteredServers_ListByStorageSyncService
@try_manual
def step_registeredservers_listbystoragesyncservice(test, rg, rg_2):
    test.cmd('az storagesync registered-server list '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: SyncGroups_ListByStorageSyncService
@try_manual
def step_syncgroups_listbystoragesyncservice(test, rg, rg_2):
    test.cmd('az storagesync sync-group list '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: Workflows_ListByStorageSyncService
@try_manual
def step_workflows_listbystoragesyncservice(test, rg, rg_2):
    test.cmd('az storagesync workflow list '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: StorageSyncServices_Get
@try_manual
def step_storagesyncservices_get(test, rg, rg_2):
    test.cmd('az storagesync storage-sync-service show '
             '--resource-group "{rg_2}" '
             '--name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: StorageSyncServices_ListByResourceGroup
@try_manual
def step_storagesyncservices_listbyresourcegroup(test, rg, rg_2):
    test.cmd('az storagesync storage-sync-service list '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: StorageSyncServices_ListBySubscription
@try_manual
def step_storagesyncservices_listbysubscription(test, rg, rg_2):
    test.cmd('az storagesync storage-sync-service list '
             '-g ""',
             checks=[])


# EXAMPLE: Operations_List
@try_manual
def step_operations_list(test, rg, rg_2):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: CloudEndpoints_TriggerChangeDetection
@try_manual
def step_cloudendpoints_triggerchangedetection(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint trigger-change-detection '
             '--name "{SampleCloudEndpoint_1}" '
             '--change-detection-mode "Recursive" '
             '--directory-path "NewDirectory" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_restoreheartbeat
@try_manual
def step_cloudendpoints_restoreheartbeat(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint restoreheartbeat '
             '--name "{SampleCloudEndpoint_1}" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: ServerEndpoints_recallAction
@try_manual
def step_serverendpoints_recallaction(test, rg, rg_2):
    test.cmd('az storagesync server-endpoint recall-action '
             '--pattern "" '
             '--recall-path "" '
             '--resource-group "{rg_2}" '
             '--name "{SampleServerEndpoint_1}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_PostRestore
@try_manual
def step_cloudendpoints_postrestore(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint post-restore '
             '--name "{SampleCloudEndpoint_1}" '
             '--azure-file-share-uri "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare'
             '" '
             '--restore-file-spec path="text1.txt" isdir=false '
             '--restore-file-spec path="MyDir" isdir=true '
             '--restore-file-spec path="MyDir/SubDir" isdir=false '
             '--restore-file-spec path="MyDir/SubDir/File1.pdf" isdir=false '
             '--source-azure-file-share-uri "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFi'
             'leShare" '
             '--status "Succeeded" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_PreRestore
@try_manual
def step_cloudendpoints_prerestore(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint pre-restore '
             '--name "{SampleCloudEndpoint_1}" '
             '--azure-file-share-uri "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare'
             '" '
             '--restore-file-spec path="text1.txt" isdir=false '
             '--restore-file-spec path="MyDir" isdir=true '
             '--restore-file-spec path="MyDir/SubDir" isdir=false '
             '--restore-file-spec path="MyDir/SubDir/File1.pdf" isdir=false '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_PostBackup
@try_manual
def step_cloudendpoints_postbackup(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint post-backup '
             '--name "{SampleCloudEndpoint_1}" '
             '--azure-file-share "https://sampleserver.file.core.test-cint.azure-test.net/sampleFileShare" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_PreBackup
@try_manual
def step_cloudendpoints_prebackup(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint pre-backup '
             '--name "{SampleCloudEndpoint_1}" '
             '--azure-file-share "https://sampleserver.file.core.test-cint.azure-test.net/sampleFileShare" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: ServerEndpoints_Update
@try_manual
def step_serverendpoints_update(test, rg, rg_2):
    test.cmd('az storagesync server-endpoint update '
             '--cloud-tiering "off" '
             '--local-cache-mode "UpdateLocallyCachedFiles" '
             '--offline-data-transfer "off" '
             '--tier-files-older-than-days 0 '
             '--volume-free-space-percent 100 '
             '--resource-group "{rg_2}" '
             '--name "{SampleServerEndpoint_1}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: RegisteredServers_triggerRollover
@try_manual
def step_registeredservers_triggerrollover(test, rg, rg_2):
    test.cmd('az storagesync registered-server trigger-rollover '
             '--server-certificate "\\"MIIDFjCCAf6gAwIBAgIQQS+DS8uhc4VNzUkTw7wbRjANBgkqhkiG9w0BAQ0FADAzMTEwLwYDVQQDEyhh'
             'bmt1c2hiLXByb2QzLnJlZG1vbmQuY29ycC5taWNyb3NvZnQuY29tMB4XDTE3MDgwMzE3MDQyNFoXDTE4MDgwNDE3MDQyNFowMzExMC8GA'
             '1UEAxMoYW5rdXNoYi1wcm9kMy5yZWRtb25kLmNvcnAubWljcm9zb2Z0LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL'
             'DRvV4gmsIy6jGDPiHsXmvgVP749NNP7DopdlbHaNhjFmYINHl0uWylyaZmgJrROt2mnxN/zEyJtGnqYHlzUr4xvGq/qV5pqgdB9tag/sw'
             '9i22gfe9PRZ0FmSOZnXMbLYgLiDFqLtut5gHcOuWMj03YnkfoBEKlFBxWbagvW2yxz/Sxi9OVSJOKCaXra0RpcIHrO/KFl6ho2eE1/7Yk'
             'mfa8hZvSdoPd5gHdLiQcMB/pxq+mWp1fI6c8vFZoDu7Atn+NXTzYPKUxKzaisF12TsaKpohUsJpbB3Wocb0F5frn614D2pg14ERB5otjA'
             'MWw1m65csQWPI6dP8KIYe0+QPkCAwEAAaMmMCQwIgYDVR0lAQH/BBgwFgYIKwYBBQUHAwIGCisGAQQBgjcKAwwwDQYJKoZIhvcNAQENBQ'
             'ADggEBAA4RhVIBkw34M1RwakJgHvtjsOFxF1tVQA941NtLokx1l2Z8+GFQkcG4xpZSt+UN6wLerdCbnNhtkCErWUDeaT0jxk4g71Ofex7'
             'iM04crT4iHJr8mi96/XnhnkTUs+GDk12VgdeeNEczMZz+8Mxw9dJ5NCnYgTwO0SzGlclRsDvjzkLo8rh2ZG6n/jKrEyNXXo+hOqhupij0'
             'QbRP2Tvexdfw201kgN1jdZify8XzJ8Oi0bTS0KpJf2pNPOlooK2bjMUei9ANtEdXwwfVZGWvVh6tJjdv6k14wWWJ1L7zhA1IIVb1J+sQU'
             'zJji5iX0DrezjTz1Fg+gAzITaA/WsuujlM=\\"" '
             '--resource-group "{rg_2}" '
             '--server-id "d166ca76-dad2-49df-b409-12345642d730" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: Workflows_Abort
@try_manual
def step_workflows_abort(test, rg, rg_2):
    test.cmd('az storagesync workflow abort '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--workflow-id "7ffd50b3-5574-478d-9ff2-9371bc42ce68"',
             checks=[])


# EXAMPLE: StorageSyncServices_Update
@try_manual
def step_storagesyncservices_update(test, rg, rg_2):
    test.cmd('az storagesync storage-sync-service update '
             '--incoming-traffic-policy "AllowAllTraffic" '
             '--tags Dept="IT" Environment="Test" '
             '--resource-group "{rg_2}" '
             '--name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: StorageSyncServiceCheckNameAvailability_AlreadyExists
@try_manual
def step_storagesyncservicechecknameavailability_alreadyexists(test, rg, rg_2):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: StorageSyncServiceCheckNameAvailability_Available
@try_manual
def step_storagesyncservicechecknameavailability_available(test, rg, rg_2):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: ServerEndpoints_Delete
@try_manual
def step_serverendpoints_delete(test, rg, rg_2):
    test.cmd('az storagesync server-endpoint delete '
             '--resource-group "{rg_2}" '
             '--name "{SampleServerEndpoint_1}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: CloudEndpoints_Delete
@try_manual
def step_cloudendpoints_delete(test, rg, rg_2):
    test.cmd('az storagesync cloud-endpoint delete '
             '--name "{SampleCloudEndpoint_1}" '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--sync-group-name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: RegisteredServers_Delete
@try_manual
def step_registeredservers_delete(test, rg, rg_2):
    test.cmd('az storagesync registered-server delete '
             '--resource-group "{rg_2}" '
             '--server-id "41166691-ab03-43e9-ab3e-0330eda162ac" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}"',
             checks=[])


# EXAMPLE: SyncGroups_Delete
@try_manual
def step_syncgroups_delete(test, rg, rg_2):
    test.cmd('az storagesync sync-group delete '
             '--resource-group "{rg_2}" '
             '--storage-sync-service-name "{SampleStorageSyncService_1}" '
             '--name "{SampleSyncGroup_1}"',
             checks=[])


# EXAMPLE: StorageSyncServices_Delete
@try_manual
def step_storagesyncservices_delete(test, rg, rg_2):
    test.cmd('az storagesync storage-sync-service delete '
             '--resource-group "{rg_2}" '
             '--name "{SampleStorageSyncService_1}"',
             checks=[])


@try_manual
def cleanup(test, rg, rg_2):
    pass


@try_manual
def call_scenario(test, rg, rg_2):
    setup(test, rg, rg_2)
    step_storagesyncservices_create(test, rg, rg_2)
    step_syncgroups_create(test, rg, rg_2)
    step_registeredservers_create(test, rg, rg_2)
    step_cloudendpoints_create(test, rg, rg_2)
    step_serverendpoints_create(test, rg, rg_2)
    step_serverendpoints_get(test, rg, rg_2)
    step_cloudendpoints_get(test, rg, rg_2)
    step_serverendpoints_listbysyncgroup(test, rg, rg_2)
    step_cloudendpoints_listbysyncgroup(test, rg, rg_2)
    step_registeredservers_get(test, rg, rg_2)
    step_workflows_get(test, rg, rg_2)
    step_syncgroups_get(test, rg, rg_2)
    step_workflows_get(test, rg, rg_2)
    step_registeredservers_listbystoragesyncservice(test, rg, rg_2)
    step_syncgroups_listbystoragesyncservice(test, rg, rg_2)
    step_workflows_listbystoragesyncservice(test, rg, rg_2)
    step_storagesyncservices_get(test, rg, rg_2)
    step_storagesyncservices_listbyresourcegroup(test, rg, rg_2)
    step_storagesyncservices_listbysubscription(test, rg, rg_2)
    step_operations_list(test, rg, rg_2)
    step_cloudendpoints_triggerchangedetection(test, rg, rg_2)
    step_cloudendpoints_restoreheartbeat(test, rg, rg_2)
    step_serverendpoints_recallaction(test, rg, rg_2)
    step_cloudendpoints_postrestore(test, rg, rg_2)
    step_cloudendpoints_prerestore(test, rg, rg_2)
    step_cloudendpoints_postbackup(test, rg, rg_2)
    step_cloudendpoints_prebackup(test, rg, rg_2)
    step_serverendpoints_update(test, rg, rg_2)
    step_registeredservers_triggerrollover(test, rg, rg_2)
    step_workflows_abort(test, rg, rg_2)
    step_storagesyncservices_update(test, rg, rg_2)
    step_storagesyncservicechecknameavailability_alreadyexists(test, rg, rg_2)
    step_storagesyncservicechecknameavailability_available(test, rg, rg_2)
    step_serverendpoints_delete(test, rg, rg_2)
    step_cloudendpoints_delete(test, rg, rg_2)
    step_registeredservers_delete(test, rg, rg_2)
    step_syncgroups_delete(test, rg, rg_2)
    step_storagesyncservices_delete(test, rg, rg_2)
    cleanup(test, rg, rg_2)


@try_manual
class MicrosoftStorageSyncScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cliteststoragesync_tminienv59svc'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='cliteststoragesync_SampleResourceGroup_1'[:7], key='rg_2', parameter_name='rg_2'
                           '')
    @StorageAccountPreparer(name_prefix='cliteststoragesync_tminienv59storage'[:7], key='sa',
                            resource_group_parameter_name='rg')
    def test_storagesync(self, rg, rg_2):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'SampleStorageSyncService_1': 'SampleStorageSyncService_1',
            'SampleSyncGroup_1': 'SampleSyncGroup_1',
            'SampleCloudEndpoint_1': 'SampleCloudEndpoint_1',
            '080d4133-bdb5-40a0-96a0-71a6057bfe9a': '080d4133-bdb5-40a0-96a0-71a6057bfe9a',
            'SampleServerEndpoint_1': 'SampleServerEndpoint_1',
        })

        call_scenario(self, rg, rg_2)
        raise_if()
