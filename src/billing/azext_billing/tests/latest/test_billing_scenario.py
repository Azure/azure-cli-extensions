# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .example_steps import step_account_show
from .example_steps import step_account_list
from .example_steps import step_account_list2
from .example_steps import step_account_list3
from .example_steps import step_account_show2
from .example_steps import step_account_update
from .example_steps import step_agreement_show
from .example_steps import step_agreement_list
from .example_steps import step_profile_create
from .example_steps import step_profile_show
from .example_steps import step_profile_list
from .example_steps import step_profile_list2
from .example_steps import step_profile_show2
from .example_steps import step_balance_show
from .example_steps import step_role_assignment_list
from .example_steps import step_role_assignment_list2
from .example_steps import step_role_assignment_list3
from .example_steps import step_role_assignment_delete
from .example_steps import step_role_assignment_delete2
from .example_steps import step_role_definition_list
from .example_steps import step_role_definition_list2
from .example_steps import step_role_definition_list3
from .example_steps import step_customer_show
from .example_steps import step_customer_list
from .example_steps import step_customer_list2
from .example_steps import step_customer_show2
from .example_steps import step_permission_list
from .example_steps import step_permission_list2
from .example_steps import step_permission_list3
from .example_steps import step_property_show
from .example_steps import step_property_update
from .example_steps import step_role_assignment_delete3
from .example_steps import step_subscription_show
from .example_steps import step_subscription_list
from .example_steps import step_subscription_list2
from .example_steps import step_subscription_list3
from .example_steps import step_subscription_list4
from .example_steps import step_subscription_update
from .example_steps import step_subscription_move
from .example_steps import step_subscription_validate_move
from .example_steps import step_subscription_validate_move2
from .example_steps import step_instruction_create
from .example_steps import step_instruction_show
from .example_steps import step_instruction_list
from .example_steps import step_invoice_list
from .example_steps import step_invoice_list2
from .example_steps import step_invoice_list3
from .example_steps import step_invoice_show
from .example_steps import step_invoice_show2
from .example_steps import step_invoice_list4
from .example_steps import step_invoice_list5
from .example_steps import step_invoice_show3
from .example_steps import step_invoice_show4
from .example_steps import step_invoice_section_create
from .example_steps import step_invoice_section_show
from .example_steps import step_invoice_section_list
from .example_steps import step_policy_update
from .example_steps import step_product_show
from .example_steps import step_product_list
from .example_steps import step_product_list2
from .example_steps import step_product_list3
from .example_steps import step_product_update
from .example_steps import step_product_move
from .example_steps import step_product_validate_move
from .example_steps import step_product_validate_move2
from .example_steps import step_transaction_list
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test):
    setup_scenario(test)
    step_account_show(test, checks=[])
    step_account_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_account_list2(test, checks=[])
    step_account_list3(test, checks=[])
    step_account_show2(test, checks=[])
    step_account_update(test, checks=[
        test.check("name", "{myBillingAccount}", case_sensitive=False),
        test.check("displayName", "Test Account", case_sensitive=False),
        test.check("soldTo.addressLine1", "Test Address 1", case_sensitive=False),
        test.check("soldTo.city", "Redmond", case_sensitive=False),
        test.check("soldTo.companyName", "Contoso", case_sensitive=False),
        test.check("soldTo.country", "US", case_sensitive=False),
        test.check("soldTo.firstName", "Test", case_sensitive=False),
        test.check("soldTo.lastName", "User", case_sensitive=False),
        test.check("soldTo.postalCode", "12345", case_sensitive=False),
        test.check("soldTo.region", "WA", case_sensitive=False),
    ])
    step_agreement_show(test, checks=[])
    step_agreement_list(test, checks=[])
    step_profile_create(test, checks=[
        test.check("billTo.addressLine1", "Test Address 1", case_sensitive=False),
        test.check("billTo.city", "Redmond", case_sensitive=False),
        test.check("billTo.country", "US", case_sensitive=False),
        test.check("billTo.firstName", "Test", case_sensitive=False),
        test.check("billTo.lastName", "User", case_sensitive=False),
        test.check("billTo.postalCode", "12345", case_sensitive=False),
        test.check("billTo.region", "WA", case_sensitive=False),
        test.check("displayName", "Finance", case_sensitive=False),
        test.check("invoiceEmailOptIn", True),
        test.check("poNumber", "ABC12345", case_sensitive=False),
    ])
    step_profile_show(test, checks=[
        test.check("name", "{myBillingProfile}", case_sensitive=False),
        test.check("invoiceEmailOptIn", True),
        test.check("poNumber", "ABC12345", case_sensitive=False),
    ])
    step_profile_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_profile_list2(test, checks=[])
    step_profile_show2(test, checks=[
        test.check("name", "{myBillingProfile}", case_sensitive=False),
        test.check("invoiceEmailOptIn", True),
        test.check("poNumber", "ABC12345", case_sensitive=False),
    ])
    step_balance_show(test, checks=[])
    step_role_assignment_list(test, checks=[])
    step_role_assignment_list2(test, checks=[])
    step_role_assignment_list3(test, checks=[])
    step_role_assignment_delete(test, checks=[])
    step_role_assignment_delete2(test, checks=[])
    step_role_definition_list(test, checks=[])
    step_role_definition_list2(test, checks=[])
    step_role_definition_list3(test, checks=[])
    step_customer_show(test, checks=[])
    step_customer_list(test, checks=[])
    step_customer_list2(test, checks=[])
    step_customer_show2(test, checks=[])
    step_permission_list(test, checks=[])
    step_permission_list2(test, checks=[])
    step_permission_list2(test, checks=[])
    step_permission_list3(test, checks=[])
    step_property_show(test, checks=[])
    step_property_update(test, checks=[])
    step_role_assignment_delete3(test, checks=[])
    step_subscription_show(test, checks=[])
    step_subscription_list(test, checks=[])
    step_subscription_list2(test, checks=[])
    step_subscription_list3(test, checks=[])
    step_subscription_list4(test, checks=[])
    step_subscription_update(test, checks=[])
    step_subscription_move(test, checks=[])
    step_subscription_validate_move(test, checks=[])
    step_subscription_validate_move2(test, checks=[])
    step_instruction_create(test, checks=[
        test.check("name", "{myInstruction}", case_sensitive=False),
        test.check("amount", 5000),
        test.check("endDate", "2020-12-30T21:26:47.997Z", case_sensitive=False),
        test.check("startDate", "2019-12-30T21:26:47.997Z", case_sensitive=False),
    ])
    step_instruction_show(test, checks=[
        test.check("name", "{myInstruction}", case_sensitive=False),
        test.check("amount", 5000),
        test.check("endDate", "2020-12-30T21:26:47.997Z", case_sensitive=False),
        test.check("startDate", "2019-12-30T21:26:47.997Z", case_sensitive=False),
    ])
    step_instruction_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_invoice_list(test, checks=[])
    step_invoice_list2(test, checks=[])
    step_invoice_list3(test, checks=[])
    step_invoice_show(test, checks=[])
    step_invoice_show2(test, checks=[])
    step_invoice_list4(test, checks=[])
    step_invoice_list5(test, checks=[])
    step_invoice_show3(test, checks=[])
    step_invoice_show4(test, checks=[])
    step_invoice_section_create(test, checks=[
        test.check("name", "{myInvoiceSection}", case_sensitive=False),
        test.check("displayName", "invoiceSection1", case_sensitive=False),
        test.check("labels.costCategory", "Support", case_sensitive=False),
        test.check("labels.pcCode", "A123456", case_sensitive=False),
    ])
    step_invoice_section_show(test, checks=[
        test.check("name", "{myInvoiceSection}", case_sensitive=False),
        test.check("displayName", "invoiceSection1", case_sensitive=False),
        test.check("labels.costCategory", "Support", case_sensitive=False),
        test.check("labels.pcCode", "A123456", case_sensitive=False),
    ])
    step_invoice_section_list(test, checks=[
        test.check('length(@)', 1),
    ])
    step_policy_update(test, checks=[])
    step_product_show(test, checks=[])
    step_product_list(test, checks=[])
    step_product_list2(test, checks=[])
    step_product_list3(test, checks=[])
    step_product_list3(test, checks=[])
    step_product_update(test, checks=[
        test.check("autoRenew", "Off", case_sensitive=False),
        test.check("name", "{myProduct}", case_sensitive=False),
    ])
    step_product_move(test, checks=[])
    step_product_validate_move(test, checks=[])
    step_product_validate_move2(test, checks=[])
    step_transaction_list(test, checks=[])
    cleanup_scenario(test)


# Test class for Scenario
@try_manual
class BillingScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(BillingScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'myBillingAccount': '{billingAccountName}',
            'myBillingProfile': '{billingProfileName}',
            'myCustomer': '{customerName}',
            'myInvoiceSection': '{invoiceSectionName}',
            'myProduct': '{productName}',
            'myInvoice': '{invoiceName}',
            'myBillingRoleAssignment': '{billingRoleAssignmentName}',
            'myAgreement': '{agreementName}',
            'myInstruction': '{instructionName}',
        })


    def test_billing_Scenario(self):
        call_scenario(self)
        calc_coverage(__file__)
        raise_if()

