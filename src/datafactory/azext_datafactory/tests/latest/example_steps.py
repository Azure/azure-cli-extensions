# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

# pylint: disable=unused-argument


from .. import try_manual


# EXAMPLE: /Factories/put/Factories_CreateOrUpdate
@try_manual
def step_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory create '
             '--location "East US" '
             '--name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Factories/get/Factories_Get
@try_manual
def step_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory show '
             '--name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Factories/get/Factories_List
@try_manual
def step_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Factories/get/Factories_ListByResourceGroup
@try_manual
def step_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Factories/patch/Factories_Update
@try_manual
def step_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory update '
             '--name "{myFactory}" '
             '--tags exampleTag="exampleValue" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Factories/post/Factories_ConfigureFactoryRepo
@try_manual
def step_configure_factory_repo(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory configure-factory-repo '
             '--factory-resource-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DataFacto'
             'ry/factories/{myFactory}" '
             '--factory-vsts-configuration account-name="ADF" collaboration-branch="master" last-commit-id="" '
             'project-name="project" repository-name="repo" root-folder="/" tenant-id="" '
             '--location "East US"',
             checks=checks)


# EXAMPLE: /Factories/post/Factories_GetDataPlaneAccess
@try_manual
def step_get_data_plane_access(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory get-data-plane-access '
             '--name "{myFactory}" '
             '--access-resource-path "" '
             '--expire-time "2018-11-10T09:46:20.2659347Z" '
             '--permissions "r" '
             '--profile-name "DefaultProfile" '
             '--start-time "2018-11-10T02:46:20.2659347Z" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Factories/post/Factories_GetGitHubAccessToken
@try_manual
def step_get_git_hub_access_token(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory get-git-hub-access-token '
             '--name "{myFactory}" '
             '--git-hub-access-code "some" '
             '--git-hub-access-token-base-url "some" '
             '--git-hub-client-id "some" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ActivityRuns/post/ActivityRuns_QueryByPipelineRun
@try_manual
def step_activity_run_query_by_pipeline_run(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory activity-run query-by-pipeline-run '
             '--factory-name "{myFactory}" '
             '--last-updated-after "2018-06-16T00:36:44.3345758Z" '
             '--last-updated-before "2018-06-16T00:49:48.3686473Z" '
             '--resource-group "{rg}" '
             '--run-id "2f7fdb90-5df1-4b8e-ac2f-064cfa58202b"',
             checks=checks)


# EXAMPLE: /Datasets/put/Datasets_Create
@try_manual
def step_dataset_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory dataset create '
             '--properties "{{\\"type\\":\\"AzureBlob\\",\\"linkedServiceName\\":{{\\"type\\":\\"LinkedServiceReference'
             '\\",\\"referenceName\\":\\"{myLinkedService}\\"}},\\"parameters\\":{{\\"MyFileName\\":{{\\"type\\":\\"Str'
             'ing\\"}},\\"MyFolderPath\\":{{\\"type\\":\\"String\\"}}}},\\"typeProperties\\":{{\\"format\\":{{\\"type\\'
             '":\\"TextFormat\\"}},\\"fileName\\":{{\\"type\\":\\"Expression\\",\\"value\\":\\"@dataset().MyFileName\\"'
             '}},\\"folderPath\\":{{\\"type\\":\\"Expression\\",\\"value\\":\\"@dataset().MyFolderPath\\"}}}}}}" '
             '--name "{myDataset}" '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Datasets/put/Datasets_Update
@try_manual
def step_dataset_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory dataset update '
             '--description "Example description" '
             '--linked-service-name "{{\\"type\\":\\"LinkedServiceReference\\",\\"referenceName\\":\\"{myLinkedService}'
             '\\"}}" '
             '--parameters "{{\\"MyFileName\\":{{\\"type\\":\\"String\\"}},\\"MyFolderPath\\":{{\\"type\\":\\"String\\"'
             '}}}}" '
             '--name "{myDataset}" '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Datasets/get/Datasets_Get
@try_manual
def step_dataset_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory dataset show '
             '--name "{myDataset}" '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Datasets/get/Datasets_ListByFactory
@try_manual
def step_dataset_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory dataset list '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Datasets/delete/Datasets_Delete
@try_manual
def step_dataset_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory dataset delete -y '
             '--name "{myDataset}" '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/put/IntegrationRuntimes_Create
@try_manual
def step_integration_runtime_self_hosted_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime self-hosted create '
             '--factory-name "{myFactory}" '
             '--description "A selfhosted integration runtime" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/get/IntegrationRuntimes_Get
@try_manual
def step_integration_runtime_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime show '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/get/IntegrationRuntimes_ListByFactory
@try_manual
def step_integration_runtime_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime list '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/patch/IntegrationRuntimes_Update
@try_manual
def step_integration_runtime_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime update '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}" '
             '--auto-update "Off" '
             '--update-delay-offset "\\"PT3H\\""',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_CreateLinkedIntegrationRuntime
@try_manual
def step_integration_runtime_linked(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime linked-integration-runtime create '
             '--name "bfa92911-9fb6-4fbe-8f23-beae87bc1c83" '
             '--location "West US" '
             '--data-factory-name "e9955d6d-56ea-4be3-841c-52a12c1a9981" '
             '--subscription-id "061774c7-4b5a-4159-a55b-365581830283" '
             '--factory-name "{myFactory}" '
             '--integration-runtime-name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_GetConnectionInfo
@try_manual
def step_integration_runtime_get_connection_info(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime get-connection-info '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_GetMonitoringData
@try_manual
def step_integration_runtime_get_monitoring_data(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime get-monitoring-data '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_GetStatus
@try_manual
def step_integration_runtime_get_status(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime get-status '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_ListAuthKeys
@try_manual
def step_integration_runtime_list_auth_key(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime list-auth-key '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_RegenerateAuthKey
@try_manual
def step_integration_runtime_regenerate_auth_key(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime regenerate-auth-key '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--key-name "authKey2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_Start
@try_manual
def step_integration_runtime_start(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime start '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_Stop
@try_manual
def step_integration_runtime_stop(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime stop '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_SyncCredentials
@try_manual
def step_integration_runtime_sync_credentials(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime sync-credentials '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/post/IntegrationRuntimes_Upgrade
@try_manual
def step_integration_runtime_remove_link(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime remove-link '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--linked-factory-name "exampleFactoryName-linked" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimeNodes/get/IntegrationRuntimeNodes_Get
@try_manual
def step_integration_runtime_node_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime-node show '
             '--factory-name "{myFactory}" '
             '--integration-runtime-name "{myIntegrationRuntime}" '
             '--node-name "Node_1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimeNodes/patch/IntegrationRuntimeNodes_Update
@try_manual
def step_integration_runtime_node_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime-node update '
             '--factory-name "{myFactory}" '
             '--integration-runtime-name "{myIntegrationRuntime}" '
             '--node-name "Node_1" '
             '--resource-group "{rg}" '
             '--concurrent-jobs-limit 2',
             checks=checks)


# EXAMPLE: /IntegrationRuntimeNodes/post/IntegrationRuntimeNodes_GetIpAddress
@try_manual
def step_integration_runtime_node_get_ip_address(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime-node get-ip-address '
             '--factory-name "{myFactory}" '
             '--integration-runtime-name "{myIntegrationRuntime}" '
             '--node-name "Node_1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimeNodes/delete/IntegrationRuntimesNodes_Delete
@try_manual
def step_integration_runtime_node_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime-node delete -y '
             '--factory-name "{myFactory}" '
             '--integration-runtime-name "{myIntegrationRuntime}" '
             '--node-name "Node_1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IntegrationRuntimes/delete/IntegrationRuntimes_Delete
@try_manual
def step_integration_runtime_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory integration-runtime delete -y '
             '--factory-name "{myFactory}" '
             '--name "{myIntegrationRuntime}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LinkedServices/put/LinkedServices_Create
@try_manual
def step_linked_service_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory linked-service create '
             '--factory-name "{myFactory}" '
             '--properties "{{\\"type\\":\\"AzureStorage\\",\\"typeProperties\\":{{\\"connectionString\\":{{\\"type\\":'
             '\\"SecureString\\",\\"value\\":\\"DefaultEndpointsProtocol=https;AccountName=examplestorageaccount;Accoun'
             'tKey=<storage key>\\"}}}}}}" '
             '--name "{myLinkedService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LinkedServices/put/LinkedServices_Update
@try_manual
def step_linked_service_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory linked-service update '
             '--factory-name "{myFactory}" '
             '--description "Example description" '
             '--name "{myLinkedService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LinkedServices/get/LinkedServices_Get
@try_manual
def step_linked_service_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory linked-service show '
             '--factory-name "{myFactory}" '
             '--name "{myLinkedService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LinkedServices/get/LinkedServices_ListByFactory
@try_manual
def step_linked_service_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory linked-service list '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LinkedServices/delete/LinkedServices_Delete
@try_manual
def step_linked_service_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory linked-service delete -y '
             '--factory-name "{myFactory}" '
             '--name "{myLinkedService}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineRuns/get/PipelineRuns_Get
@try_manual
def step_pipeline_run_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline-run show '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--run-id "2f7fdb90-5df1-4b8e-ac2f-064cfa58202b"',
             checks=checks)


# EXAMPLE: /PipelineRuns/post/PipelineRuns_Cancel
@try_manual
def step_pipeline_run_cancel(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline-run cancel '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--run-id "16ac5348-ff82-4f95-a80d-638c1d47b721"',
             checks=checks)


# EXAMPLE: /PipelineRuns/post/PipelineRuns_QueryByFactory
@try_manual
def step_pipeline_run_query_by_factory(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline-run query-by-factory '
             '--factory-name "{myFactory}" '
             '--filters operand="PipelineName" operator="Equals" values="{myPipeline}" '
             '--last-updated-after "2018-06-16T00:36:44.3345758Z" '
             '--last-updated-before "2018-06-16T00:49:48.3686473Z" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pipelines/put/Pipelines_Create
@try_manual
def step_pipeline_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline create '
             '--factory-name "{myFactory}" '
             '--pipeline "{{\\"activities\\":[{{\\"name\\":\\"ExampleForeachActivity\\",\\"type\\":\\"ForEach\\",\\"typ'
             'eProperties\\":{{\\"activities\\":[{{\\"name\\":\\"ExampleCopyActivity\\",\\"type\\":\\"Copy\\",\\"inputs'
             '\\":[{{\\"type\\":\\"DatasetReference\\",\\"parameters\\":{{\\"MyFileName\\":\\"examplecontainer.csv\\",'
             '\\"MyFolderPath\\":\\"examplecontainer\\"}},\\"referenceName\\":\\"{myDataset}\\"}}],\\"outputs\\":[{{\\"'
             'type\\":\\"DatasetReference\\",\\"parameters\\":{{\\"MyFileName\\":{{\\"type\\":\\"Expression\\",\\"value'
             '\\":\\"@item()\\"}},\\"MyFolderPath\\":\\"examplecontainer\\"}},\\"referenceName\\":\\"{myDataset}\\"}}],'
             '\\"typeProperties\\":{{\\"dataIntegrationUnits\\":32,\\"sink\\":{{\\"type\\":\\"BlobSink\\"}},\\"source\\'
             '":{{\\"type\\":\\"BlobSource\\"}}}}}}],\\"isSequential\\":true,\\"items\\":{{\\"type\\":\\"Expression\\",'
             '\\"value\\":\\"@pipeline().parameters.OutputBlobNameList\\"}}}}}}],\\"parameters\\":{{\\"JobId\\":{{\\"ty'
             'pe\\":\\"String\\"}},\\"OutputBlobNameList\\":{{\\"type\\":\\"Array\\"}}}},\\"variables\\":{{\\"TestVaria'
             'bleArray\\":{{\\"type\\":\\"Array\\"}}}},\\"runDimensions\\":{{\\"JobId\\":{{\\"type\\":\\"Expression\\",'
             '\\"value\\":\\"@pipeline().parameters.JobId\\"}}}},\\"duration\\":\\"0.00:10:00\\"}}" '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pipelines/put/Pipelines_Update
@try_manual
def step_pipeline_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline update '
             '--factory-name "{myFactory}" '
             '--description "Example description" '
             '--activities "[{{\\"name\\":\\"ExampleForeachActivity\\",\\"type\\":\\"ForEach\\",\\"typeProperties\\":{{'
             '\\"activities\\":[{{\\"name\\":\\"ExampleCopyActivity\\",\\"type\\":\\"Copy\\",\\"inputs\\":[{{\\"type\\"'
             ':\\"DatasetReference\\",\\"parameters\\":{{\\"MyFileName\\":\\"examplecontainer.csv\\",\\"MyFolderPath\\"'
             ':\\"examplecontainer\\"}},\\"referenceName\\":\\"{myDataset}\\"}}],\\"outputs\\":[{{\\"type\\":\\"Dataset'
             'Reference\\",\\"parameters\\":{{\\"MyFileName\\":{{\\"type\\":\\"Expression\\",\\"value\\":\\"@item()\\"}'
             '},\\"MyFolderPath\\":\\"examplecontainer\\"}},\\"referenceName\\":\\"{myDataset}\\"}}],\\"typeProperties'
             '\\":{{\\"dataIntegrationUnits\\":32,\\"sink\\":{{\\"type\\":\\"BlobSink\\"}},\\"source\\":{{\\"type\\":\\'
             '"BlobSource\\"}}}}}}],\\"isSequential\\":true,\\"items\\":{{\\"type\\":\\"Expression\\",\\"value\\":\\"@p'
             'ipeline().parameters.OutputBlobNameList\\"}}}}}}]" '
             '--parameters "{{\\"OutputBlobNameList\\":{{\\"type\\":\\"Array\\"}}}}" '
             '--duration "0.00:10:00" '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pipelines/get/Pipelines_Get
@try_manual
def step_pipeline_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline show '
             '--factory-name "{myFactory}" '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pipelines/get/Pipelines_ListByFactory
@try_manual
def step_pipeline_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline list '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pipelines/post/Pipelines_CreateRun
@try_manual
def step_pipeline_create_run(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline create-run '
             '--factory-name "{myFactory}" '
             '--parameters "{{\\"OutputBlobNameList\\":[\\"exampleoutput.csv\\"]}}" '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Pipelines/delete/Pipelines_Delete
@try_manual
def step_pipeline_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory pipeline delete -y '
             '--factory-name "{myFactory}" '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Triggers/put/Triggers_Create
@try_manual
def step_trigger_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger create '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--properties "{{\\"type\\":\\"ScheduleTrigger\\",\\"pipelines\\":[{{\\"parameters\\":{{\\"OutputBlobNameL'
             'ist\\":[\\"exampleoutput.csv\\"]}},\\"pipelineReference\\":{{\\"type\\":\\"PipelineReference\\",\\"refere'
             'nceName\\":\\"{myPipeline}\\"}}}}],\\"typeProperties\\":{{\\"recurrence\\":{{\\"endTime\\":\\"2018-06-16T'
             '00:55:13.8441801Z\\",\\"frequency\\":\\"Minute\\",\\"interval\\":4,\\"startTime\\":\\"2018-06-16T00:39:13'
             '.8441801Z\\",\\"timeZone\\":\\"UTC\\"}}}}}}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/put/Triggers_Update
@try_manual
def step_trigger_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger update '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--description "Example description" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/get/Triggers_Get
@try_manual
def step_trigger_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger show '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/get/Triggers_ListByFactory
@try_manual
def step_trigger_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger list '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Triggers/post/Triggers_GetEventSubscriptionStatus
@try_manual
def step_trigger_get_event_subscription_status(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger get-event-subscription-status '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/post/Triggers_QueryByFactory
@try_manual
def step_trigger_query_by_factory(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger query-by-factory '
             '--factory-name "{myFactory}" '
             '--parent-trigger-name "{myTrigger}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Triggers/post/Triggers_Start
@try_manual
def step_trigger_start(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger start '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/post/Triggers_Stop
@try_manual
def step_trigger_stop(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger stop '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/post/Triggers_SubscribeToEvents
@try_manual
def step_trigger_subscribe_to_event(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger subscribe-to-event '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/post/Triggers_UnsubscribeFromEvents
@try_manual
def step_trigger_unsubscribe_from_event(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger unsubscribe-from-event '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /TriggerRuns/post/TriggerRuns_QueryByFactory
@try_manual
def step_trigger_run_query_by_factory(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger-run query-by-factory '
             '--factory-name "{myFactory}" '
             '--filters operand="TriggerName" operator="Equals" values="{myTrigger}" '
             '--last-updated-after "2018-06-16T00:36:44.3345758Z" '
             '--last-updated-before "2018-06-16T00:49:48.3686473Z" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /TriggerRuns/post/Triggers_Cancel
@try_manual
def step_trigger_run_cancel(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger-run cancel '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--run-id "2f7fdb90-5df1-4b8e-ac2f-064cfa58202b" '
             '--trigger-name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /TriggerRuns/post/Triggers_Rerun
@try_manual
def step_trigger_run_rerun(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger-run rerun '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--run-id "2f7fdb90-5df1-4b8e-ac2f-064cfa58202b" '
             '--trigger-name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Triggers/delete/Triggers_Delete
@try_manual
def step_trigger_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory trigger delete -y '
             '--factory-name "{myFactory}" '
             '--resource-group "{rg}" '
             '--name "{myTrigger}"',
             checks=checks)


# EXAMPLE: /Factories/delete/Factories_Delete
@try_manual
def step_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az datafactory delete -y '
             '--name "{myFactory}" '
             '--resource-group "{rg}"',
             checks=checks)
