# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals option_length_too_long


def load_command_table(self, _):

    with self.command_group('network manager') as g:
        g.custom_command('create', 'network_manager_create')
        g.custom_command('update', 'network_manager_update')

    with self.command_group('network manager connect-config') as g:
        g.custom_command('create', 'network_manager_connect_config_create')
        g.custom_command('update', 'network_manager_connect_config_update')

    with self.command_group('network manager security-admin-config rule-collection rule') as g:
        g.custom_command('create', 'network_manager_admin_rule_create')
        g.custom_command('update', 'network_manager_admin_rule_update')

    with self.command_group('network manager security-admin-config rule-collection') as g:
        g.custom_command('create', 'network_manager_admin_rule_collection_create')
        g.custom_command('update', 'network_manager_admin_rule_collection_update')

    with self.command_group("network manager group static-member"):
        from .custom import GroupStaticMemberCreate
        self.command_table["network manager group static-member create"] = GroupStaticMemberCreate(loader=self)

    with self.command_group("network manager scope-connection"):
        from .custom import ScopeConnectionCreate
        self.command_table["network manager scope-connection create"] = ScopeConnectionCreate(loader=self)

    with self.command_group("network manager connection subscription"):
        from .custom import ConnectionSubscriptionCreate
        self.command_table["network manager connection subscription create"] = ConnectionSubscriptionCreate(loader=self)

    with self.command_group("network manager connection management-group"):
        from .custom import ConnectionManagementGroupCreate
        self.command_table["network manager connection management-group create"] = ConnectionManagementGroupCreate(loader=self)
