# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_portal.generated._client_factory import cf_dashboard
    portal_dashboard = CliCommandType(
        operations_tmpl='azext_portal.vendored_sdks.portal.operations._dashboard_operations#DashboardOperations.{}',
        client_factory=cf_dashboard)
    with self.command_group('portal dashboard', portal_dashboard, client_factory=cf_dashboard,
                            is_experimental=True) as g:
        g.custom_command('list', 'portal_dashboard_list')
        g.custom_show_command('show', 'portal_dashboard_show')
        g.custom_command('create', 'portal_dashboard_create')
        g.custom_command('update', 'portal_dashboard_update')
        g.custom_command('delete', 'portal_dashboard_delete', confirmation=True)

    from azext_portal.generated._client_factory import cf_tenant_configuration
    portal_tenant_configuration = CliCommandType(
        operations_tmpl='azext_portal.vendored_sdks.portal.operations._tenant_configuration_operations#TenantConfigurat'
        'ionOperations.{}',
        client_factory=cf_tenant_configuration)
    with self.command_group('portal tenant-configuration', portal_tenant_configuration,
                            client_factory=cf_tenant_configuration, is_experimental=True) as g:
        g.custom_command('list', 'portal_tenant_configuration_list')
        g.custom_show_command('show', 'portal_tenant_configuration_show')
        g.custom_command('create', 'portal_tenant_configuration_create')
        g.custom_command('delete', 'portal_tenant_configuration_delete', confirmation=True)

    from azext_portal.generated._client_factory import cf_list_tenant_configuration_violation
    portal_list_tenant_configuration_violation = CliCommandType(
        operations_tmpl='azext_portal.vendored_sdks.portal.operations._list_tenant_configuration_violation_operations#L'
        'istTenantConfigurationViolationOperations.{}',
        client_factory=cf_list_tenant_configuration_violation)
    with self.command_group('portal list-tenant-configuration-violation', portal_list_tenant_configuration_violation,
                            client_factory=cf_list_tenant_configuration_violation, is_experimental=True) as g:
        g.custom_command('list', 'portal_list_tenant_configuration_violation_list')
