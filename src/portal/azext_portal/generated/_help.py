# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['portal dashboard'] = """
    type: group
    short-summary: portal dashboard
"""

helps['portal dashboard list'] = """
    type: command
    short-summary: "Gets all the Dashboards within a resource group. And Gets all the dashboards within a \
subscription."
    examples:
      - name: List all custom resource providers on the resourceGroup
        text: |-
               az portal dashboard list --resource-group "testRG"
      - name: List all custom resource providers on the subscription
        text: |-
               az portal dashboard list
"""

helps['portal dashboard show'] = """
    type: command
    short-summary: "Gets the Dashboard."
    examples:
      - name: Get a Dashboard
        text: |-
               az portal dashboard show --name "testDashboard" --resource-group "testRG"
"""

helps['portal dashboard create'] = """
    type: command
    short-summary: "Create a Dashboard."
    examples:
      - name: Create or update a Dashboard
        text: |-
               az portal dashboard create --location "eastus" --lenses "[{\\"order\\":1,\\"parts\\":[{\\"position\\":{\
\\"colSpan\\":3,\\"rowSpan\\":4,\\"x\\":1,\\"y\\":2}},{\\"position\\":{\\"colSpan\\":6,\\"rowSpan\\":6,\\"x\\":5,\\"y\\\
":5}}]},{\\"order\\":2,\\"parts\\":[]}]" --metadata "{\\"metadata\\":{\\"ColSpan\\":2,\\"RowSpan\\":1,\\"X\\":4,\\"Y\\"\
:3}}" --tags aKey="aValue" anotherKey="anotherValue" --name "testDashboard" --resource-group "testRG"
"""

helps['portal dashboard update'] = """
    type: command
    short-summary: "Updates an existing Dashboard."
    examples:
      - name: Update a Dashboard
        text: |-
               az portal dashboard update --tags aKey="bValue" anotherKey="anotherValue2" --name "testDashboard" \
--resource-group "testRG"
"""

helps['portal dashboard delete'] = """
    type: command
    short-summary: "Deletes the Dashboard."
    examples:
      - name: Delete a Dashboard
        text: |-
               az portal dashboard delete --name "testDashboard" --resource-group "testRG"
"""

helps['portal tenant-configuration'] = """
    type: group
    short-summary: portal tenant-configuration
"""

helps['portal tenant-configuration list'] = """
    type: command
    short-summary: "Gets list of the tenant configurations."
    examples:
      - name: Get list of Tenant configurations
        text: |-
               az portal tenant-configuration list
"""

helps['portal tenant-configuration show'] = """
    type: command
    short-summary: "Gets the tenant configuration."
    examples:
      - name: Get Tenant configuration
        text: |-
               az portal tenant-configuration show
"""

helps['portal tenant-configuration create'] = """
    type: command
    short-summary: "Create the tenant configuration. If configuration already exists - update it. User has to be a \
Tenant Admin for this operation."
    examples:
      - name: Create or update Tenant configuration
        text: |-
               az portal tenant-configuration create --enforce-private-markdown-storage true
"""

helps['portal tenant-configuration delete'] = """
    type: command
    short-summary: "Delete the tenant configuration. User has to be a Tenant Admin for this operation."
    examples:
      - name: Delete Tenant configuration
        text: |-
               az portal tenant-configuration delete
"""

helps['portal list-tenant-configuration-violation'] = """
    type: group
    short-summary: portal list-tenant-configuration-violation
"""

helps['portal list-tenant-configuration-violation list'] = """
    type: command
    short-summary: "Gets list of items that violate tenant's configuration."
    examples:
      - name: Get list of of items that violate tenant's configuration
        text: |-
               az portal list-tenant-configuration-violation list
"""
