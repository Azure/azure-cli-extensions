# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azext_attestation.manual._validators import validate_provider_resource_id

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_attestation.generated._client_factory import cf_attestation_provider
    from azext_attestation.manual._client_factory import cf_policy_certificates, cf_policy

    attestation_attestation_provider = CliCommandType(
        operations_tmpl='azext_attestation.vendored_sdks.attestation.operations._attestation_provider_operations#Attest'
        'ationProviderOperations.{}',
        client_factory=cf_attestation_provider)

    attestation_provider_doc_template = 'azext_attestation.vendored_sdks.azure_mgmt_attestation.operations.' \
                                        '_attestation_provider_operations#AttestationProviderOperations.{}'

    policy_certificates_data_tmpl = 'azext_attestation.vendored_sdks.azure_attestation.operations.' \
                                    '_policy_certificates_operations#PolicyCertificatesOperations.{}'
    policy_certificates_data_sdk = CliCommandType(
        operations_tmpl=policy_certificates_data_tmpl,
        client_factory=cf_policy_certificates)

    policy_data_tmpl = 'azext_attestation.vendored_sdks.azure_attestation.operations.' \
                       '_policy_operations#PolicyOperations.{}'
    policy_data_sdk = CliCommandType(
        operations_tmpl=policy_data_tmpl,
        client_factory=cf_policy)

    with self.command_group('attestation', attestation_attestation_provider,
                            client_factory=cf_attestation_provider, is_experimental=True) as g:
        g.custom_command('list', 'attestation_attestation_provider_list',
                         doc_string_source=attestation_provider_doc_template.format('list'))
        g.custom_show_command('show', 'attestation_attestation_provider_show', validator=validate_provider_resource_id,
                              doc_string_source=attestation_provider_doc_template.format('get'))
        g.custom_command('create', 'attestation_attestation_provider_create',
                         doc_string_source=attestation_provider_doc_template.format('create'))
        g.custom_command('update', 'attestation_attestation_provider_update',
                         doc_string_source=attestation_provider_doc_template.format('update'))
        g.custom_command('delete', 'attestation_attestation_provider_delete', confirmation=True,
                         validator=validate_provider_resource_id,
                         doc_string_source=attestation_provider_doc_template.format('delete'))
        g.custom_command('get-default-by-location', 'attestation_attestation_provider_get_default_by_location',
                         doc_string_source=attestation_provider_doc_template.format('get_default_by_location'))
        g.custom_command('list-default', 'attestation_attestation_provider_list_default',
                         doc_string_source=attestation_provider_doc_template.format('list_default'))

    with self.command_group('attestation signer', policy_certificates_data_sdk, client_factory=cf_policy_certificates,
                            is_experimental=True) as g:
        g.custom_command('add', 'add_signer', validator=validate_provider_resource_id,
                         doc_string_source=policy_certificates_data_tmpl.format('add'))
        g.custom_command('remove', 'remove_signer', validator=validate_provider_resource_id,
                         doc_string_source=policy_certificates_data_tmpl.format('remove'))
        g.custom_command('list', 'list_signers', validator=validate_provider_resource_id,
                         doc_string_source=policy_certificates_data_tmpl.format('get'))

    with self.command_group('attestation policy', policy_data_sdk, client_factory=cf_policy,
                            is_experimental=True) as g:
        g.custom_command('set', 'set_policy', validator=validate_provider_resource_id,
                         doc_string_source=policy_data_tmpl.format('set'))
        g.custom_command('reset', 'reset_policy', validator=validate_provider_resource_id,
                         doc_string_source=policy_data_tmpl.format('reset'))
        g.custom_show_command('show', 'get_policy', validator=validate_provider_resource_id,
                              doc_string_source=policy_data_tmpl.format('get'))
