# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['attestation attestation-provider'] = """
    type: group
    short-summary: attestation attestation-provider
"""

helps['attestation attestation-provider list'] = """
    type: command
    short-summary: Returns a list of attestation providers in a subscription.
    examples:
      - name: AttestationProviders_ListByResourceGroup
        text: |-
               az attestation attestation-provider list --resource-group "testrg1"
"""

helps['attestation attestation-provider show'] = """
    type: command
    short-summary: Get the status of Attestation Provider.
    examples:
      - name: AttestationProviders_Get
        text: |-
               az attestation attestation-provider show --provider-name "myattestationprovider" --resource-group "MyRes\
ourceGroup"
"""

helps['attestation attestation-provider create'] = """
    type: command
    short-summary: Creates or updates the Attestation Provider.
    parameters:
      - name: --policy-signing-certificates-keys
        short-summary: The value of the "keys" parameter is an array of JWK values.  Bydefault, the order of the JWK va\
lues within the array does not implyan order of preference among them, although applications of JWK Setscan choose to a\
ssign a meaning to the order for their purposes, ifdesired.
        long-summary: |
            Usage: --policy-signing-certificates-keys alg=XX crv=XX d=XX dp=XX dq=XX e=XX k=XX kid=XX kty=XX n=XX p=XX \
q=XX qi=XX use=XX x=XX x5-c=XX y=XX

            alg: Required. The "alg" (algorithm) parameter identifies the algorithm intended foruse with the key.  The \
values used should either be registered in theIANA "JSON Web Signature and Encryption Algorithms" registryestablished b\
y [JWA] or be a value that contains a Collision-Resistant Name.
            crv: The "crv" (curve) parameter identifies the curve type
            d: RSA private exponent or ECC private key
            dp: RSA Private Key Parameter
            dq: RSA Private Key Parameter
            e: RSA public exponent, in Base64
            k: Symmetric key
            kid: Required. The "kid" (key ID) parameter is used to match a specific key.  Thisis used, for instance, to\
 choose among a set of keys within a JWK Setduring key rollover.  The structure of the "kid" value isunspecified.  When\
 "kid" values are used within a JWK Set, differentkeys within the JWK Set SHOULD use distinct "kid" values.  (Oneexampl\
e in which different keys might use the same "kid" value is ifthey have different "kty" (key type) values but are consi\
dered to beequivalent alternatives by the application using them.)  The "kid"value is a case-sensitive string.
            kty: Required. The "kty" (key type) parameter identifies the cryptographic algorithmfamily used with the ke\
y, such as "RSA" or "EC". "kty" values shouldeither be registered in the IANA "JSON Web Key Types" registryestablished \
by [JWA] or be a value that contains a Collision-Resistant Name.  The "kty" value is a case-sensitive string.
            n: RSA modulus, in Base64
            p: RSA secret prime
            q: RSA secret prime, with p < q
            qi: RSA Private Key Parameter
            use: Required. Use ("public key use") identifies the intended use ofthe public key. The "use" parameter is \
employed to indicate whethera public key is used for encrypting data or verifying the signatureon data. Values are comm\
only "sig" (signature) or "enc" (encryption).
            x: X coordinate for the Elliptic Curve point
            x5-c: The "x5c" (X.509 certificate chain) parameter contains a chain of oneor more PKIX certificates [RFC52\
80].  The certificate chain isrepresented as a JSON array of certificate value strings.  Eachstring in the array is a b\
ase64-encoded (Section 4 of [RFC4648] --not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.The PKIX cert\
ificate containing the key value MUST be the firstcertificate.
            y: Y coordinate for the Elliptic Curve point

            Multiple actions can be specified by using more than one --policy-signing-certificates-keys argument.
    examples:
      - name: AttestationProviders_Create
        text: |-
               az attestation attestation-provider create --provider-name "myattestationprovider" --resource-group "MyR\
esourceGroup"
"""

helps['attestation attestation-provider delete'] = """
    type: command
    short-summary: Delete Attestation Service.
    examples:
      - name: AttestationProviders_Delete
        text: |-
               az attestation attestation-provider delete --provider-name "myattestationprovider" --resource-group "sam\
ple-resource-group"
"""
