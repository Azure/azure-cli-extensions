# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os

from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import ScenarioTest


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


class AttestationMgmtScenarioTest(ScenarioTest):
    def _create(self, rg):
        self.kwargs['cert_path'] = os.path.join(TEST_DIR, 'policySigningCerts.pem')
        self.cmd('az attestation create '
                 '--name "{myattestation}" '
                 '--resource-group "{rg}" '
                 '--location "eastus2" '
                 '--tags aKey=aValue anotherKey=anotherValue '
                 '--certs-input-path "{cert_path}"',
                 checks=[
                     self.check('name', '{myattestation}'),
                     self.check('resourceGroup', rg),
                     self.check('location', 'eastus2'),
                     self.check('tags', '{\'aKey\': \'aValue\', \'anotherKey\': \'anotherValue\'}')
                 ])

    def _get(self, rg):
        self.cmd('az attestation show '
                 '--name "{myattestation}" '
                 '--resource-group "{rg}"',
                 checks=[
                     self.check('name', '{myattestation}'),
                     self.check('resourceGroup', rg),
                     self.check('location', 'eastus2')
                 ])

    def _list_by_resource_group(self, rg):
        self.cmd('az attestation list '
                 '--resource-group "{rg}"',
                 checks=self.check('value[0].name', self.kwargs.get('myattestation', '')))

    def _delete(self, rg):
        self.cmd('az attestation delete '
                 '--name "{myattestation}" '
                 '--resource-group "{rg}" '
                 '--yes')
        self.cmd('az attestation list '
                 '--resource-group "{rg}"',
                 checks=self.check('length(value)', 0))

    @ResourceGroupPreparer(name_prefix='cli_test_att')
    def test_attestation_mgmt(self, resource_group):
        self.kwargs.update({
            'myattestation': self.create_random_name(prefix='clitestatt', length=24)
        })

        self._create(resource_group)
        self._get(resource_group)
        self._list_by_resource_group(resource_group)
        self._delete(resource_group)

"""
class AttestationSignerScenarioTest(ScenarioTest):
    @ResourceGroupPreparer(name_prefix='cli_test_att_signer')
    def test_attestation_signer(self, resource_group):
        self.kwargs.update({
            'att_name': self.create_random_name(prefix='clitestattsigner', length=24),
            'loc': 'eastus',
        })
"""