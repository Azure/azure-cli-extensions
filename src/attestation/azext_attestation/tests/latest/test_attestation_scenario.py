# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg):
    test.kwargs.update({
        'signer_cert_file': os.path.join(TEST_DIR, 'CreateProvider_SingleSignerCert.pem'),
        'new_signer_jwt_file': os.path.join(TEST_DIR, 'AddOrDeleteSignerCert_JWT.txt')
    })


# EXAMPLE: /AttestationProviders/put/AttestationProviders_Create
@try_manual
def step__attestationproviders_put(test, rg):
    test.cmd('az attestation create -l westus '
             '-n "myattestationprovider" '
             '--resource-group "{rg}"',
             checks=[
                 test.check('name', 'myattestationprovider'),
                 test.check('status', 'Ready'),
                 test.check('trustModel', 'AAD')
             ])


# EXAMPLE: /AttestationProviders/get/AttestationProviders_Get
@try_manual
def step__attestationproviders_get(test, rg):
    test.cmd('az attestation show '
             '-n "myattestationprovider" '
             '--resource-group "{rg}"',
             checks=[
                 test.check('name', 'myattestationprovider'),
                 test.check('status', 'Ready')
             ])


# EXAMPLE: /AttestationProviders/get/AttestationProviders_ListByResourceGroup
@try_manual
def step__attestationproviders_get2(test, rg):
    test.cmd('az attestation list '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(value)', 1),
                 test.check('value[0].name', 'myattestationprovider'),
                 test.check('value[0].status', 'Ready')
             ])


# EXAMPLE: /AttestationProviders/get/AttestationProviders_List
@try_manual
def step__attestationproviders_get3(test, rg):
    test.cmd('az attestation list')


# EXAMPLE: /AttestationProviders/patch/AttestationProviders_Update
@try_manual
def step__attestationproviders_patch(test, rg):
    test.cmd('az attestation update '
             '-n "myattestationprovider" '
             '--resource-group "{rg}" '
             '--tags Property1="Value1" Property2="Value2" Property3="Value3"',
             checks=[
                 test.check('tags.Property1', 'Value1'),
                 test.check('tags.Property2', 'Value2'),
                 test.check('tags.Property3', 'Value3')
             ])


# EXAMPLE: /AttestationProviders/delete/AttestationProviders_Delete
@try_manual
def step__attestationproviders_delete(test, rg):
    test.cmd('az attestation delete -y '
             '-n "myattestationprovider" '
             '--resource-group "{rg}"')


@try_manual
def test_provider_with_signer(test, rg):
    test.cmd('az attestation create -l westus -n myatt -g {rg} --certs-input-path {signer_cert_file}', checks=[
        test.check('name', 'myatt'),
        test.check('status', 'Ready'),
        test.check('trustModel', 'Isolated')
    ])

    test.cmd('az attestation signer list -n myatt -g {rg}', checks=[
        test.check('CertificateCount', 1),
        test.check('Certificates[0].use', 'sig'),
        test.exists('Certificates[0].alg'),
        test.exists('Certificates[0].kty'),
        test.exists('Certificates[0].x5c'),
        test.exists('JKU'),
        test.exists('Jwt'),
        test.exists('Algorithm')
    ])

    with open(test.kwargs['new_signer_jwt_file']) as f:
        test.kwargs['new_signer_jwt'] = f.read()

    test.cmd('az attestation signer add -n myatt -g {rg} --signer {new_signer_jwt}',
             checks=test.check('CertificateCount', 2))

    test.cmd('az attestation signer remove -n myatt -g {rg} --signer {new_signer_jwt}',
             checks=test.check('CertificateCount', 1))


# Env cleanup
@try_manual
def cleanup(test, rg):
    pass


# Testcase
@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__attestationproviders_put(test, rg)
    step__attestationproviders_get(test, rg)
    step__attestationproviders_get2(test, rg)
    step__attestationproviders_get3(test, rg)
    step__attestationproviders_patch(test, rg)
    step__attestationproviders_delete(test, rg)
    cleanup(test, rg)


@try_manual
class AttestationManagementClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestattestation_testrg1'[:7], key='rg', parameter_name='rg')
    def test_attestation(self, rg):
        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()
