# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Alerts/get/BillingAccountAlerts
@try_manual
def step_alert_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Alerts/get/BillingProfileAlerts
@try_manual
def step_alert_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Alerts/get/DepartmentAlerts
@try_manual
def step_alert_list3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/departments/123"',
             checks=checks)


# EXAMPLE: /Alerts/get/EnrollmentAccountAlerts
@try_manual
def step_alert_list4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Alerts/get/ExternalBillingAccountAlerts
@try_manual
def step_alert_list_external(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list-external '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalBillingAccounts"',
             checks=checks)


# EXAMPLE: /Alerts/get/ExternalSubscriptionAlerts
@try_manual
def step_alert_list_external2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list-external '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalSubscriptions"',
             checks=checks)


# EXAMPLE: /Alerts/get/InvoiceSectionAlerts
@try_manual
def step_alert_list5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Alerts/get/ResourceGroupAlerts
@try_manual
def step_alert_list6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer"',
             checks=checks)


# EXAMPLE: /Alerts/get/SubscriptionAlerts
@try_manual
def step_alert_list7(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert list '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Alerts/patch/ResourceGroupAlerts
@try_manual
def step_alert_dismiss(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert dismiss '
             '--alert-id "22222222-2222-2222-2222-222222222222" '
             '--status "Dismissed" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer"',
             checks=checks)


# EXAMPLE: /Alerts/patch/SubscriptionAlerts
@try_manual
def step_alert_dismiss2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement alert dismiss '
             '--alert-id "22222222-2222-2222-2222-222222222222" '
             '--status "Dismissed" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingAccountDimensionsList-Legacy
@try_manual
def step_dimension_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/100"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingAccountDimensionsList-Modern
@try_manual
def step_dimension_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingAccountDimensionsListExpandAndTop-Legacy
@try_manual
def step_dimension_list3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/100"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingAccountDimensionsListExpandAndTop-Modern
@try_manual
def step_dimension_list4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingAccountDimensionsListWithFilter-Legacy
@try_manual
def step_dimension_list5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/100"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingAccountDimensionsListWithFilter-Modern
@try_manual
def step_dimension_list6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingProfileDimensionsList-Modern
@try_manual
def step_dimension_list7(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingProfileDimensionsListExpandAndTop-Modern
@try_manual
def step_dimension_list8(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Dimensions/get/BillingProfileDimensionsListWithFilter-Modern
@try_manual
def step_dimension_list9(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Dimensions/get/CustomerDimensionsList-Modern
@try_manual
def step_dimension_list10(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678"',
             checks=checks)


# EXAMPLE: /Dimensions/get/CustomerDimensionsListExpandAndTop-Modern
@try_manual
def step_dimension_list11(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678"',
             checks=checks)


# EXAMPLE: /Dimensions/get/CustomerDimensionsListWithFilter-Modern
@try_manual
def step_dimension_list12(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678"',
             checks=checks)


# EXAMPLE: /Dimensions/get/DepartmentDimensionsList-Legacy
@try_manual
def step_dimension_list13(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/departments/123"',
             checks=checks)


# EXAMPLE: /Dimensions/get/DepartmentDimensionsListExpandAndTop-Legacy
@try_manual
def step_dimension_list14(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/departments/123"',
             checks=checks)


# EXAMPLE: /Dimensions/get/DepartmentDimensionsListWithFilter-Legacy
@try_manual
def step_dimension_list15(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/departments/123"',
             checks=checks)


# EXAMPLE: /Dimensions/get/EnrollmentAccountDimensionsList-Legacy
@try_manual
def step_dimension_list16(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Dimensions/get/EnrollmentAccountDimensionsListExpandAndTop-Legacy
@try_manual
def step_dimension_list17(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Dimensions/get/EnrollmentAccountDimensionsListWithFilter-Legacy
@try_manual
def step_dimension_list18(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Dimensions/get/ExternalBillingAccountDimensionList
@try_manual
def step_dimension_by_external_cloud_provider_type(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension by-external-cloud-provider-type '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalBillingAccounts"',
             checks=checks)


# EXAMPLE: /Dimensions/get/ExternalSubscriptionDimensionList
@try_manual
def step_dimension_by_external_cloud_provider_type2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension by-external-cloud-provider-type '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalSubscriptions"',
             checks=checks)


# EXAMPLE: /Dimensions/get/InvoiceSectionDimensionsList-Modern
@try_manual
def step_dimension_list19(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Dimensions/get/InvoiceSectionDimensionsListExpandAndTop-Modern
@try_manual
def step_dimension_list20(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Dimensions/get/InvoiceSectionDimensionsListWithFilter-Modern
@try_manual
def step_dimension_list21(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Dimensions/get/ManagementGroupDimensionsList-Legacy
@try_manual
def step_dimension_list22(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--scope "providers/Microsoft.Management/managementGroups/MyMgId"',
             checks=checks)


# EXAMPLE: /Dimensions/get/ManagementGroupDimensionsListExpandAndTop-Legacy
@try_manual
def step_dimension_list23(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "providers/Microsoft.Management/managementGroups/MyMgId"',
             checks=checks)


# EXAMPLE: /Dimensions/get/ManagementGroupDimensionsListWithFilter-Legacy
@try_manual
def step_dimension_list24(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--filter "properties/category eq \'resourceId\'" '
             '--top 5 '
             '--scope "providers/Microsoft.Management/managementGroups/MyMgId"',
             checks=checks)


# EXAMPLE: /Dimensions/get/ResourceGroupDimensionsList-Legacy
@try_manual
def step_dimension_list25(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/system.orlando"',
             checks=checks)


# EXAMPLE: /Dimensions/get/SubscriptionDimensionsList-Legacy
@try_manual
def step_dimension_list26(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement dimension list '
             '--expand "properties/data" '
             '--top 5 '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Exports/put/BillingAccountCreateOrUpdateExport
@try_manual
def step_export_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export create '
             '--name "{myExport}" '
             '--type "Usage" '
             '--aggregation "{{\\"costSum\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--configuration columns="Date" columns="MeterId" columns="InstanceId" columns="ResourceLocation" '
             'columns="PreTaxCost" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--grouping name="SubscriptionName" type="Dimension" '
             '--grouping name="Environment" type="Tag" '
             '--timeframe "MonthToDate" '
             '--destination container="exports" resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/provi'
             'ders/Microsoft.Storage/storageAccounts/{sa}" root-folder-path="ad-hoc" '
             '--recurrence "Weekly" '
             '--recurrence-period from="2018-06-01T00:00:00Z" to="2018-10-31T00:00:00Z" '
             '--status "Active" '
             '--scope "providers/Microsoft.Billing/billingAccounts/123456"',
             checks=checks)


# EXAMPLE: /Exports/put/DepartmentCreateOrUpdateExport
@try_manual
def step_export_create2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export create '
             '--name "{myExport}" '
             '--type "Usage" '
             '--aggregation "{{\\"costSum\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--configuration columns="Date" columns="MeterId" columns="InstanceId" columns="ResourceLocation" '
             'columns="PreTaxCost" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--grouping name="SubscriptionName" type="Dimension" '
             '--grouping name="Environment" type="Tag" '
             '--timeframe "MonthToDate" '
             '--destination container="exports" resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/provi'
             'ders/Microsoft.Storage/storageAccounts/{sa}" root-folder-path="ad-hoc" '
             '--recurrence "Weekly" '
             '--recurrence-period from="2018-06-01T00:00:00Z" to="2018-10-31T00:00:00Z" '
             '--status "Active" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12/departments/1234"',
             checks=checks)


# EXAMPLE: /Exports/put/EnrollmentAccountCreateOrUpdateExport
@try_manual
def step_export_create3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export create '
             '--name "{myExport}" '
             '--type "Usage" '
             '--aggregation "{{\\"costSum\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--configuration columns="Date" columns="MeterId" columns="InstanceId" columns="ResourceLocation" '
             'columns="PreTaxCost" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--grouping name="SubscriptionName" type="Dimension" '
             '--grouping name="Environment" type="Tag" '
             '--timeframe "MonthToDate" '
             '--destination container="exports" resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/provi'
             'ders/Microsoft.Storage/storageAccounts/{sa}" root-folder-path="ad-hoc" '
             '--recurrence "Weekly" '
             '--recurrence-period from="2018-06-01T00:00:00Z" to="2018-10-31T00:00:00Z" '
             '--status "Active" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Exports/put/ManagementGroupCreateOrUpdateExport
@try_manual
def step_export_create4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export create '
             '--name "{myExport}" '
             '--type "Usage" '
             '--aggregation "{{\\"costSum\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--configuration columns="Date" columns="MeterId" columns="InstanceId" columns="ResourceLocation" '
             'columns="PreTaxCost" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--grouping name="SubscriptionName" type="Dimension" '
             '--grouping name="Environment" type="Tag" '
             '--timeframe "MonthToDate" '
             '--destination container="exports" resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/provi'
             'ders/Microsoft.Storage/storageAccounts/{sa}" root-folder-path="ad-hoc" '
             '--recurrence "Weekly" '
             '--recurrence-period from="2018-06-01T00:00:00Z" to="2018-10-31T00:00:00Z" '
             '--status "Active" '
             '--scope "providers/Microsoft.Management/managementGroups/TestMG"',
             checks=checks)


# EXAMPLE: /Exports/put/ResourceGroupCreateOrUpdateExport
@try_manual
def step_export_create5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export create '
             '--name "{myExport}" '
             '--type "Usage" '
             '--aggregation "{{\\"costSum\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--configuration columns="Date" columns="MeterId" columns="InstanceId" columns="ResourceLocation" '
             'columns="PreTaxCost" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--grouping name="SubscriptionName" type="Dimension" '
             '--grouping name="Environment" type="Tag" '
             '--timeframe "MonthToDate" '
             '--destination container="exports" resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/provi'
             'ders/Microsoft.Storage/storageAccounts/{sa}" root-folder-path="ad-hoc" '
             '--recurrence "Weekly" '
             '--recurrence-period from="2018-06-01T00:00:00Z" to="2018-10-31T00:00:00Z" '
             '--status "Active" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Exports/put/SubscriptionCreateOrUpdateExport
@try_manual
def step_export_create6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export create '
             '--name "{myExport}" '
             '--type "Usage" '
             '--aggregation "{{\\"costSum\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--configuration columns="Date" columns="MeterId" columns="InstanceId" columns="ResourceLocation" '
             'columns="PreTaxCost" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--grouping name="SubscriptionName" type="Dimension" '
             '--grouping name="Environment" type="Tag" '
             '--timeframe "MonthToDate" '
             '--destination container="exports" resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/provi'
             'ders/Microsoft.Storage/storageAccounts/{sa}" root-folder-path="ad-hoc" '
             '--recurrence "Weekly" '
             '--recurrence-period from="2018-06-01T00:00:00Z" to="2018-10-31T00:00:00Z" '
             '--status "Active" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Exports/get/BillingAccountExecutionHistoryExport
@try_manual
def step_export_show_execution_history(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show-execution-history '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/123456"',
             checks=checks)


# EXAMPLE: /Exports/get/BillingAccountExport
@try_manual
def step_export_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/123456"',
             checks=checks)


# EXAMPLE: /Exports/get/BillingAccountExportList
@try_manual
def step_export_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export list '
             '--scope "providers/Microsoft.Billing/billingAccounts/123456"',
             checks=checks)


# EXAMPLE: /Exports/get/DepartmentExecutionHistoryExport
@try_manual
def step_export_show_execution_history2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show-execution-history '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12/departments/1234"',
             checks=checks)


# EXAMPLE: /Exports/get/DepartmentExport
@try_manual
def step_export_show2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12/departments/1234"',
             checks=checks)


# EXAMPLE: /Exports/get/DepartmentExportList
@try_manual
def step_export_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export list '
             '--scope "providers/Microsoft.Billing/billingAccounts/12/departments/123"',
             checks=checks)


# EXAMPLE: /Exports/get/EnrollmentAccountExecutionHistoryExport
@try_manual
def step_export_show_execution_history3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show-execution-history '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Exports/get/EnrollmentAccountExport
@try_manual
def step_export_show3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Exports/get/EnrollmentAccountExportList
@try_manual
def step_export_list3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export list '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Exports/get/ManagementGroupExecutionHistoryExport
@try_manual
def step_export_show_execution_history4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show-execution-history '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Management/managementGroups/TestMG"',
             checks=checks)


# EXAMPLE: /Exports/get/ManagementGroupExport
@try_manual
def step_export_show4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Management/managementGroups/TestMG"',
             checks=checks)


# EXAMPLE: /Exports/get/ManagementGroupExportList
@try_manual
def step_export_list4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export list '
             '--scope "providers/Microsoft.Management/managementGroups/TestMG"',
             checks=checks)


# EXAMPLE: /Exports/get/ResourceGroupExecutionHistoryExport
@try_manual
def step_export_show_execution_history5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show-execution-history '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Exports/get/ResourceGroupExport
@try_manual
def step_export_show5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Exports/get/ResourceGroupExportList
@try_manual
def step_export_list5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export list '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Exports/get/SubscriptionExecutionHistoryExport
@try_manual
def step_export_show_execution_history6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show-execution-history '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Exports/get/SubscriptionExport
@try_manual
def step_export_show6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export show '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Exports/get/SubscriptionExportList
@try_manual
def step_export_list6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export list '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Exports/post/BillingAccountExecuteExport
@try_manual
def step_export_execute(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export execute '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/123456"',
             checks=checks)


# EXAMPLE: /Exports/post/DepartmentExecuteExport
@try_manual
def step_export_execute2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export execute '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12/departments/1234"',
             checks=checks)


# EXAMPLE: /Exports/post/EnrollmentAccountExecuteExport
@try_manual
def step_export_execute3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export execute '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Exports/post/ManagementGroupExecuteExport
@try_manual
def step_export_execute4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export execute '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Management/managementGroups/TestMG"',
             checks=checks)


# EXAMPLE: /Exports/post/ResourceGroupExecuteExport
@try_manual
def step_export_execute5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export execute '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Exports/post/SubscriptionExecuteExport
@try_manual
def step_export_execute6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export execute '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Exports/delete/BillingAccountDeleteExport
@try_manual
def step_export_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export delete -y '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/123456"',
             checks=checks)


# EXAMPLE: /Exports/delete/DepartmentDeleteExport
@try_manual
def step_export_delete2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export delete -y '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12/departments/1234"',
             checks=checks)


# EXAMPLE: /Exports/delete/EnrollmentAccountDeleteExport
@try_manual
def step_export_delete3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export delete -y '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Exports/delete/ManagementGroupDeleteExport
@try_manual
def step_export_delete4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export delete -y '
             '--name "{myExport}" '
             '--scope "providers/Microsoft.Management/managementGroups/TestMG"',
             checks=checks)


# EXAMPLE: /Exports/delete/ResourceGroupDeleteExport
@try_manual
def step_export_delete5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export delete -y '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Exports/delete/SubscriptionDeleteExport
@try_manual
def step_export_delete6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement export delete -y '
             '--name "{myExport}" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Forecast/post/BillingAccountForecast
@try_manual
def step_forecast_usage(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Forecast/post/BillingProfileForecast
@try_manual
def step_forecast_usage2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Forecast/post/DepartmentForecast
@try_manual
def step_forecast_usage3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/departments/123"',
             checks=checks)


# EXAMPLE: /Forecast/post/EnrollmentAccountForecast
@try_manual
def step_forecast_usage4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Forecast/post/ExternalBillingAccountForecast
@try_manual
def step_forecast_external_cloud_provider_usage(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast external-cloud-provider-usage '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalBillingAccounts" '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate"',
             checks=checks)


# EXAMPLE: /Forecast/post/ExternalSubscriptionForecast
@try_manual
def step_forecast_external_cloud_provider_usage2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast external-cloud-provider-usage '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalSubscriptions" '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate"',
             checks=checks)


# EXAMPLE: /Forecast/post/InvoiceSectionForecast
@try_manual
def step_forecast_usage5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Forecast/post/ResourceGroupForecast
@try_manual
def step_forecast_usage6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer"',
             checks=checks)


# EXAMPLE: /Forecast/post/SubscriptionForecast
@try_manual
def step_forecast_usage7(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement forecast usage '
             '--type "Usage" '
             '--query-filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operat'
             'or\\":\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environmen'
             't\\",\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":'
             '\\"ResourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--include-actual-cost false '
             '--include-fresh-partial-cost false '
             '--timeframe "MonthToDate" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /GenerateReservationDetailsReport/post/ReservationDetails
@try_manual
def step_generate_reservation_detail(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement generate-reservation-detail-report by-billing-account-id '
             '--billing-account-id "9845612" '
             '--end-date "2020-01-30" '
             '--start-date "2020-01-01"',
             checks=checks)


# EXAMPLE: /Query/post/BillingAccountQuery-Legacy
@try_manual
def step_query_usage(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/70664866"',
             checks=checks)


# EXAMPLE: /Query/post/BillingAccountQuery-Modern
@try_manual
def step_query_usage2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Query/post/BillingAccountQueryGrouping-Legacy
@try_manual
def step_query_usage3(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/70664866"',
             checks=checks)


# EXAMPLE: /Query/post/BillingAccountQueryGrouping-Modern
@try_manual
def step_query_usage4(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789"',
             checks=checks)


# EXAMPLE: /Query/post/BillingProfileQuery-Modern
@try_manual
def step_query_usage5(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Query/post/BillingProfileQueryGrouping-Modern
@try_manual
def step_query_usage6(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579"',
             checks=checks)


# EXAMPLE: /Query/post/CustomerQuery-Modern
@try_manual
def step_query_usage7(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678"',
             checks=checks)


# EXAMPLE: /Query/post/CustomerQueryGrouping-Modern
@try_manual
def step_query_usage8(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/customers/5678"',
             checks=checks)


# EXAMPLE: /Query/post/DepartmentQuery-Legacy
@try_manual
def step_query_usage9(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/departments/123"',
             checks=checks)


# EXAMPLE: /Query/post/DepartmentQueryGrouping-Legacy
@try_manual
def step_query_usage10(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/departments/123"',
             checks=checks)


# EXAMPLE: /Query/post/EnrollmentAccountQuery-Legacy
@try_manual
def step_query_usage11(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Query/post/EnrollmentAccountQueryGrouping-Legacy
@try_manual
def step_query_usage12(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/100/enrollmentAccounts/456"',
             checks=checks)


# EXAMPLE: /Query/post/ExternalBillingAccountQueryList
@try_manual
def step_query_usage_by_external_cloud_provider_type(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage-by-external-cloud-provider-type '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalBillingAccounts" '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate"',
             checks=checks)


# EXAMPLE: /Query/post/ExternalSubscriptionsQuery
@try_manual
def step_query_usage_by_external_cloud_provider_type2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage-by-external-cloud-provider-type '
             '--external-cloud-provider-id "100" '
             '--external-cloud-provider-type "externalSubscriptions" '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate"',
             checks=checks)


# EXAMPLE: /Query/post/InvoiceSectionQuery-Modern
@try_manual
def step_query_usage13(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Query/post/InvoiceSectionQueryGrouping-Modern
@try_manual
def step_query_usage14(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Billing/billingAccounts/12345:6789/billingProfiles/13579/invoiceSections/987'
             '6"',
             checks=checks)


# EXAMPLE: /Query/post/ManagementGroupQuery-Legacy
@try_manual
def step_query_usage15(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "providers/Microsoft.Management/managementGroups/MyMgId"',
             checks=checks)


# EXAMPLE: /Query/post/ManagementGroupQueryGrouping-Legacy
@try_manual
def step_query_usage16(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "providers/Microsoft.Management/managementGroups/MyMgId"',
             checks=checks)


# EXAMPLE: /Query/post/ResourceGroupQuery-Legacy
@try_manual
def step_query_usage17(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer"',
             checks=checks)


# EXAMPLE: /Query/post/ResourceGroupQueryGrouping-Legacy
@try_manual
def step_query_usage18(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceType" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ScreenSharingTest-peer"',
             checks=checks)


# EXAMPLE: /Query/post/SubscriptionQuery-Legacy
@try_manual
def step_query_usage19(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--filter "{{\\"and\\":[{{\\"or\\":[{{\\"dimensions\\":{{\\"name\\":\\"ResourceLocation\\",\\"operator\\":'
             '\\"In\\",\\"values\\":[\\"East US\\",\\"West Europe\\"]}}}},{{\\"tags\\":{{\\"name\\":\\"Environment\\",'
             '\\"operator\\":\\"In\\",\\"values\\":[\\"UAT\\",\\"Prod\\"]}}}}]}},{{\\"dimensions\\":{{\\"name\\":\\"Res'
             'ourceGroup\\",\\"operator\\":\\"In\\",\\"values\\":[\\"API\\"]}}}}]}}" '
             '--timeframe "MonthToDate" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Query/post/SubscriptionQueryGrouping-Legacy
@try_manual
def step_query_usage20(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement query usage '
             '--type "Usage" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--grouping name="ResourceGroup" type="Dimension" '
             '--timeframe "TheLastMonth" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000"',
             checks=checks)


# EXAMPLE: /Settings/put/CreateOrUpdateSetting
@try_manual
def step_setting_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement setting create '
             '--cache name="72f988bf-86f1-41af-91ab-2d7cd011db47" channel="Modern" id="/providers/Microsoft.Management/'
             'managementGroups/72f988bf-86f1-41af-91ab-2d7cd011db47" parent="/providers/Microsoft.Management/management'
             'Groups/acm" status="enabled" subchannel="NotApplicable" '
             '--scope "/subscriptions/{subscription_id}" '
             '--start-on "LastUsed" '
             '--name "{mySetting}"',
             checks=checks)


# EXAMPLE: /Settings/get/SettingList
@try_manual
def step_setting_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement setting list',
             checks=checks)


# EXAMPLE: /Settings/get/Settings
@try_manual
def step_setting_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement setting show '
             '--name "{mySetting}"',
             checks=checks)


# EXAMPLE: /Settings/delete/DeleteSetting
@try_manual
def step_setting_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement setting delete -y '
             '--name "{mySetting2}"',
             checks=checks)


# EXAMPLE: /Views/put/CreateOrUpdatePrivateView
@try_manual
def step_view_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view create '
             '--e-tag "\\"1d4ff9fe66f1d10\\"" '
             '--accumulated "true" '
             '--chart "Table" '
             '--display-name "swagger Example" '
             '--kpis type="Forecast" enabled=true id=null '
             '--kpis type="Budget" enabled=true id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Micr'
             'osoft.Consumption/budgets/swaggerDemo" '
             '--metric "ActualCost" '
             '--pivots name="ServiceName" type="Dimension" '
             '--pivots name="MeterCategory" type="Dimension" '
             '--pivots name="swaggerTagKey" type="TagKey" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--granularity "Daily" '
             '--sorting name="UsageDate" direction="Ascending" '
             '--timeframe "MonthToDate" '
             '--name "{myView}"',
             checks=checks)


# EXAMPLE: /Views/put/ResourceGroupCreateOrUpdateView
@try_manual
def step_view_create2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view create '
             '--e-tag "\\"1d4ff9fe66f1d10\\"" '
             '--accumulated "true" '
             '--chart "Table" '
             '--display-name "swagger Example" '
             '--kpis type="Forecast" enabled=true id=null '
             '--kpis type="Budget" enabled=true id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Micr'
             'osoft.Consumption/budgets/swaggerDemo" '
             '--metric "ActualCost" '
             '--pivots name="ServiceName" type="Dimension" '
             '--pivots name="MeterCategory" type="Dimension" '
             '--pivots name="swaggerTagKey" type="TagKey" '
             '--aggregation "{{\\"totalCost\\":{{\\"name\\":\\"PreTaxCost\\",\\"function\\":\\"Sum\\"}}}}" '
             '--granularity "Daily" '
             '--sorting name="UsageDate" direction="Ascending" '
             '--timeframe "MonthToDate" '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG" '
             '--name "{myView}"',
             checks=checks)


# EXAMPLE: /Views/get/PrivateView
@try_manual
def step_view_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view show '
             '--name "{myView}"',
             checks=checks)


# EXAMPLE: /Views/get/PrivateViewList
@try_manual
def step_view_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view list',
             checks=checks)


# EXAMPLE: /Views/get/ResourceGroupView
@try_manual
def step_view_show2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view show '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG" '
             '--name "{myView}"',
             checks=checks)


# EXAMPLE: /Views/get/ResourceGroupViewList
@try_manual
def step_view_list2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view list '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG"',
             checks=checks)


# EXAMPLE: /Views/delete/DeletePrivateView
@try_manual
def step_view_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view delete -y '
             '--name "{myView2}"',
             checks=checks)


# EXAMPLE: /Views/delete/ResourceGroupDeleteView
@try_manual
def step_view_delete2(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az costmanagement view delete -y '
             '--scope "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MYDEVTESTRG" '
             '--name "{myView2}"',
             checks=checks)

