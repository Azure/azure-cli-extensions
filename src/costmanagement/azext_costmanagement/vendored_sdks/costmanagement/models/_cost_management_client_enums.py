# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class AccumulatedType(str, Enum):
    """Show costs accumulated over time.
    """

    true = "true"
    false = "false"

class ChartType(str, Enum):
    """Chart type of the main view in Cost Analysis. Required.
    """

    area = "Area"
    line = "Line"
    stacked_column = "StackedColumn"
    grouped_column = "GroupedColumn"
    table = "Table"

class ExecutionStatus(str, Enum):
    """The status of the export execution.
    """

    queued = "Queued"
    in_progress = "InProgress"
    completed = "Completed"
    failed = "Failed"
    timeout = "Timeout"
    new_data_not_available = "NewDataNotAvailable"
    data_not_available = "DataNotAvailable"

class ExecutionType(str, Enum):
    """The type of the export execution.
    """

    on_demand = "OnDemand"
    scheduled = "Scheduled"

class ExportType(str, Enum):
    """The type of the query.
    """

    usage = "Usage"
    actual_cost = "ActualCost"
    amortized_cost = "AmortizedCost"

class ExternalCloudProviderType(str, Enum):

    external_subscriptions = "externalSubscriptions"
    external_billing_accounts = "externalBillingAccounts"

class ForecastTimeframeType(str, Enum):
    """The time frame for pulling data for the forecast. If custom, then a specific time period must
    be provided.
    """

    month_to_date = "MonthToDate"
    billing_month_to_date = "BillingMonthToDate"
    the_last_month = "TheLastMonth"
    the_last_billing_month = "TheLastBillingMonth"
    week_to_date = "WeekToDate"
    custom = "Custom"

class ForecastType(str, Enum):
    """The type of the forecast.
    """

    usage = "Usage"
    actual_cost = "ActualCost"
    amortized_cost = "AmortizedCost"

class KpiType(str, Enum):
    """KPI type (Forecast, Budget).
    """

    forecast = "Forecast"
    budget = "Budget"

class MetricType(str, Enum):
    """Metric to use when displaying costs.
    """

    actual_cost = "ActualCost"
    amortized_cost = "AmortizedCost"
    ahub = "AHUB"

class OperatorType(str, Enum):
    """The operator to use for comparison.
    """

    in_enum = "In"
    contains = "Contains"

class PivotType(str, Enum):
    """Data type to show in view.
    """

    dimension = "Dimension"
    tag_key = "TagKey"

class QueryColumnType(str, Enum):
    """The type of the column in the export.
    """

    tag = "Tag"
    dimension = "Dimension"

class RecurrenceType(str, Enum):
    """The schedule recurrence.
    """

    daily = "Daily"
    weekly = "Weekly"
    monthly = "Monthly"
    annually = "Annually"

class ReportConfigColumnType(str, Enum):
    """The type of the column in the report.
    """

    tag = "Tag"
    dimension = "Dimension"

class ReportConfigSortingDirection(str, Enum):
    """Direction of sort.
    """

    ascending = "Ascending"
    descending = "Descending"

class ReportGranularityType(str, Enum):
    """The granularity of rows in the report.
    """

    daily = "Daily"
    monthly = "Monthly"

class ReportTimeframeType(str, Enum):
    """The time frame for pulling data for the report. If custom, then a specific time period must be
    provided.
    """

    week_to_date = "WeekToDate"
    month_to_date = "MonthToDate"
    year_to_date = "YearToDate"
    custom = "Custom"

class StatusType(str, Enum):
    """The status of the schedule. Whether active or not. If inactive, the export's scheduled
    execution is paused.
    """

    active = "Active"
    inactive = "Inactive"

class TimeframeType(str, Enum):
    """The time frame for pulling data for the query. If custom, then a specific time period must be
    provided.
    """

    month_to_date = "MonthToDate"
    billing_month_to_date = "BillingMonthToDate"
    the_last_month = "TheLastMonth"
    the_last_billing_month = "TheLastBillingMonth"
    week_to_date = "WeekToDate"
    custom = "Custom"
