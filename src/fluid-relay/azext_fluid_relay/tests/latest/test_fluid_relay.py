# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.testsdk import *


class FluidRelayScenario(ScenarioTest):
    # TODO: add tests here
    
    @ResourceGroupPreparer(name_prefix='cli_test_fluid_relay', location='westus2')
    def test_fluid_relay_scenario(self, resource_group):
        self.kwargs.update({
            'subscription_id': self.get_subscription_id(),
            'server_name1': 'testfr1',
            'server_name2': 'testfr2',
            'server_name3': 'testfr3',
            'identity_name1': 'id1',
            'identity_name2': 'id2',
        })

        self.kwargs['id1'] = self.cmd('identity create -n {identity_name1} -g {rg} --query id').get_output_in_json()
        self.kwargs['id2'] = self.cmd('identity create -n {identity_name2} -g {rg} --query id').get_output_in_json()
        self.cmd('fluid-relay server create -n {server_name1} -l westus2 -g {rg} --sku standard '
                 '--identity type="SystemAssigned"',
                 checks=[self.check('identity.type', 'SystemAssigned'),
                         self.check('name', 'testfr1'),
                         self.check('provisioningState', 'Succeeded')])
        self.cmd('fluid-relay server update -n {server_name1} -g {rg} --tags category=sales',
                 self.check('tags.category', 'sales'))

        self.cmd('fluid-relay server create -n {server_name2} -l westus2 -g {rg} --sku standard --tags category=sales '
                 '--identity \"{{type:\'SystemAssigned, UserAssigned\',user-assigned-identities:{{"/subscriptions/0b1f6471-1bf0-4dda-aec3-cb9272f09590/resourceGroups/{rg}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1","/subscriptions/0b1f6471-1bf0-4dda-aec3-cb9272f09590/resourceGroups/{rg}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id2"}}}}\"',
                 checks=[self.check('identity.type', 'SystemAssigned, UserAssigned'),
                         self.check('name', 'testfr2'),
                         self.check('provisioningState', 'Succeeded')]
                 )
        self.cmd('fluid-relay server update -n {server_name2} -g {rg} --tags category=sales',
                 self.check('tags.category', 'sales'))

        from azure.core.exceptions import HttpResponseError
        with self.assertRaisesRegex(HttpResponseError, 'CMK is temporarily not available and it is not allowed to enable CMK on new Fluid Relay resource for now.'):
            self.cmd('fluid-relay server create -n {server_name3} -l westus2 -g {rg} --sku basic '
                     '--key-identity \"{{identity-type:"UserAssigned",user-assigned-identities:{id1}}}\" '
                     '--key-url="https://contosovault.vault.azure.net/keys/contosokek" --tags category=sales '
                     '--identity \"{{type:"UserAssigned",user-assigned-identities:{{{id1}}}}}\"')

        self.cmd('fluid-relay server list -g {rg}', checks=self.check('length(@)', 2))
        self.cmd('fluid-relay server list --subscription {subscription_id}')
        self.cmd('fluid-relay server list-key -g {rg} --server-name {server_name1}',
                 checks=self.check('length(@)', 2))
        self.cmd('fluid-relay server list-key -g {rg} --server-name {server_name2}',
                 checks=self.check('length(@)', 2))
        self.cmd('fluid-relay server regenerate-key -g {rg} --server-name {server_name1} --key-name key1',
                 checks=self.check('length(@)', 2))
        self.cmd('fluid-relay server regenerate-key -g {rg} --server-name {server_name2} --key-name key1',
                 checks=self.check('length(@)', 2))
        self.cmd('fluid-relay server show -g {rg} -n {server_name1}',
                 checks=[self.check('identity.type', 'SystemAssigned'),
                         self.check('name', 'testfr1')])
        self.cmd('fluid-relay server show -g {rg} -n {server_name2}',
                 checks=[self.check('identity.type', 'SystemAssigned, UserAssigned'),
                         self.check('name', 'testfr2')]
                 )

        self.cmd('fluid-relay container list -g {rg} --server-name {server_name1}', checks=self.check('length(@)', 0))
        self.cmd('fluid-relay container list -g {rg} --server-name {server_name2}', checks=self.check('length(@)', 0))

        self.cmd('fluid-relay server delete -n {server_name1} -g {rg} -y')
        self.cmd('fluid-relay server delete -n {server_name2} -g {rg} -y')

        self.cmd('fluid-relay server list -g {rg}', checks=self.check('length(@)', 0))
        self.cmd('fluid-relay server list --subscription {subscription_id}')
