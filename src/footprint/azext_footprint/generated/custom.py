# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def footprint_profile_list(client,
                           resource_group_name=None):
    if resource_group_name:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list_by_subscription()


def footprint_profile_show(client,
                           resource_group_name,
                           profile_name):
    return client.get(resource_group_name=resource_group_name,
                      profile_name=profile_name)


def footprint_profile_create(client,
                             resource_group_name,
                             profile_name,
                             start_delay_milliseconds,
                             measurement_count,
                             tags=None,
                             location=None,
                             description=None,
                             cold_path_sampling_percentage_rate=None,
                             reporting_endpoints=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   tags=tags,
                                   location=location,
                                   description=description,
                                   start_delay_milliseconds=start_delay_milliseconds,
                                   measurement_count=measurement_count,
                                   cold_path_sampling_percentage_rate=cold_path_sampling_percentage_rate,
                                   reporting_endpoints=reporting_endpoints)


def footprint_profile_update(client,
                             resource_group_name,
                             profile_name,
                             tags=None):
    return client.update(resource_group_name=resource_group_name,
                         profile_name=profile_name,
                         tags=tags)


def footprint_profile_delete(client,
                             resource_group_name,
                             profile_name):
    return client.delete(resource_group_name=resource_group_name,
                         profile_name=profile_name)


def footprint_measurement_endpoint_list(client,
                                        resource_group_name,
                                        profile_name):
    return client.list_by_profile(resource_group_name=resource_group_name,
                                  profile_name=profile_name)


def footprint_measurement_endpoint_show(client,
                                        resource_group_name,
                                        profile_name,
                                        measurement_endpoint_name):
    return client.get(resource_group_name=resource_group_name,
                      profile_name=profile_name,
                      measurement_endpoint_name=measurement_endpoint_name)


def footprint_measurement_endpoint_create(client,
                                          resource_group_name,
                                          profile_name,
                                          measurement_endpoint_name,
                                          endpoint,
                                          measurement_type,
                                          weight,
                                          description=None,
                                          experiment_id=None,
                                          object_path=None,
                                          start_time_utc=None,
                                          end_time_utc=None,
                                          hot_path_sampling_percentage_rate=None,
                                          warm_path_sampling_percentage_rate=None,
                                          cold_path_sampling_percentage_rate_override=None,
                                          metadata=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   measurement_endpoint_name=measurement_endpoint_name,
                                   description=description,
                                   endpoint=endpoint,
                                   measurement_type=measurement_type,
                                   weight=weight,
                                   experiment_id=experiment_id,
                                   object_path=object_path,
                                   start_time_utc=start_time_utc,
                                   end_time_utc=end_time_utc,
                                   hot_path_sampling_percentage_rate=hot_path_sampling_percentage_rate,
                                   warm_path_sampling_percentage_rate=warm_path_sampling_percentage_rate,
                                   cold_path_sampling_percentage_rate_override=cold_path_sampling_percentage_rate_override,
                                   metadata=metadata)


def footprint_measurement_endpoint_update(client,
                                          resource_group_name,
                                          profile_name,
                                          measurement_endpoint_name,
                                          endpoint,
                                          measurement_type,
                                          weight,
                                          description=None,
                                          experiment_id=None,
                                          object_path=None,
                                          start_time_utc=None,
                                          end_time_utc=None,
                                          hot_path_sampling_percentage_rate=None,
                                          warm_path_sampling_percentage_rate=None,
                                          cold_path_sampling_percentage_rate_override=None,
                                          metadata=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   measurement_endpoint_name=measurement_endpoint_name,
                                   description=description,
                                   endpoint=endpoint,
                                   measurement_type=measurement_type,
                                   weight=weight,
                                   experiment_id=experiment_id,
                                   object_path=object_path,
                                   start_time_utc=start_time_utc,
                                   end_time_utc=end_time_utc,
                                   hot_path_sampling_percentage_rate=hot_path_sampling_percentage_rate,
                                   warm_path_sampling_percentage_rate=warm_path_sampling_percentage_rate,
                                   cold_path_sampling_percentage_rate_override=cold_path_sampling_percentage_rate_override,
                                   metadata=metadata)


def footprint_measurement_endpoint_delete(client,
                                          resource_group_name,
                                          profile_name,
                                          measurement_endpoint_name):
    return client.delete(resource_group_name=resource_group_name,
                         profile_name=profile_name,
                         measurement_endpoint_name=measurement_endpoint_name)


def footprint_measurement_endpoint_condition_list(client,
                                                  resource_group_name,
                                                  profile_name,
                                                  measurement_endpoint_name):
    return client.list_by_measurement_endpoint(resource_group_name=resource_group_name,
                                               profile_name=profile_name,
                                               measurement_endpoint_name=measurement_endpoint_name)


def footprint_measurement_endpoint_condition_show(client,
                                                  resource_group_name,
                                                  profile_name,
                                                  measurement_endpoint_name,
                                                  condition_name):
    return client.get(resource_group_name=resource_group_name,
                      profile_name=profile_name,
                      measurement_endpoint_name=measurement_endpoint_name,
                      condition_name=condition_name)


def footprint_measurement_endpoint_condition_create(client,
                                                    resource_group_name,
                                                    profile_name,
                                                    measurement_endpoint_name,
                                                    condition_name,
                                                    variable,
                                                    operator,
                                                    constant):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   measurement_endpoint_name=measurement_endpoint_name,
                                   condition_name=condition_name,
                                   type="RequestHeader",
                                   variable=variable,
                                   operator=operator,
                                   constant=constant)


def footprint_measurement_endpoint_condition_update(client,
                                                    resource_group_name,
                                                    profile_name,
                                                    measurement_endpoint_name,
                                                    condition_name,
                                                    variable,
                                                    operator,
                                                    constant):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   measurement_endpoint_name=measurement_endpoint_name,
                                   condition_name=condition_name,
                                   type="RequestHeader",
                                   variable=variable,
                                   operator=operator,
                                   constant=constant)


def footprint_measurement_endpoint_condition_delete(client,
                                                    resource_group_name,
                                                    profile_name,
                                                    measurement_endpoint_name,
                                                    condition_name):
    return client.delete(resource_group_name=resource_group_name,
                         profile_name=profile_name,
                         measurement_endpoint_name=measurement_endpoint_name,
                         condition_name=condition_name)


def footprint_experiment_list(client,
                              resource_group_name,
                              profile_name):
    return client.list_by_profile(resource_group_name=resource_group_name,
                                  profile_name=profile_name)


def footprint_experiment_show(client,
                              resource_group_name,
                              profile_name,
                              experiment_name):
    return client.get(resource_group_name=resource_group_name,
                      profile_name=profile_name,
                      experiment_name=experiment_name)


def footprint_experiment_create(client,
                                resource_group_name,
                                profile_name,
                                experiment_name,
                                description=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   experiment_name=experiment_name,
                                   description=description)


def footprint_experiment_update(client,
                                resource_group_name,
                                profile_name,
                                experiment_name,
                                description=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   profile_name=profile_name,
                                   experiment_name=experiment_name,
                                   description=description)


def footprint_experiment_delete(client,
                                resource_group_name,
                                profile_name,
                                experiment_name):
    return client.delete(resource_group_name=resource_group_name,
                         profile_name=profile_name,
                         experiment_name=experiment_name)
