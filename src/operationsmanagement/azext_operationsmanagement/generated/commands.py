# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_operationsmanagement.generated._client_factory import cf_solution
    operationsmanagement_solution = CliCommandType(
        operations_tmpl='azext_operationsmanagement.vendored_sdks.operationsmanagement.operations._solution_operations#'
        'SolutionOperations.{}',
        client_factory=cf_solution)
    with self.command_group('operationsmanagement solution', operationsmanagement_solution, client_factory=cf_solution,
                             is_experimental=True) as g:
        g.custom_command('list', 'operationsmanagement_solution_list')
        g.custom_show_command('show', 'operationsmanagement_solution_show')
        g.custom_command('create', 'operationsmanagement_solution_create', supports_no_wait=True)
        g.custom_command('update', 'operationsmanagement_solution_update', supports_no_wait=True)
        g.custom_command('delete', 'operationsmanagement_solution_delete', supports_no_wait=True)
        g.custom_wait_command('wait', 'operationsmanagement_solution_show')

    from azext_operationsmanagement.generated._client_factory import cf_management_association
    operationsmanagement_management_association = CliCommandType(
        operations_tmpl='azext_operationsmanagement.vendored_sdks.operationsmanagement.operations._management_associati'
        'on_operations#ManagementAssociationOperations.{}',
        client_factory=cf_management_association)
    with self.command_group('operationsmanagement management-association', operationsmanagement_management_association,
                             client_factory=cf_management_association, is_experimental=True) as g:
        g.custom_command('list', 'operationsmanagement_management_association_list')
        g.custom_show_command('show', 'operationsmanagement_management_association_show')
        g.custom_command('create', 'operationsmanagement_management_association_create')
        g.custom_command('update', 'operationsmanagement_management_association_update')
        g.custom_command('delete', 'operationsmanagement_management_association_delete')

    from azext_operationsmanagement.generated._client_factory import cf_management_configuration
    operationsmanagement_management_configuration = CliCommandType(
        operations_tmpl='azext_operationsmanagement.vendored_sdks.operationsmanagement.operations._management_configura'
        'tion_operations#ManagementConfigurationOperations.{}',
        client_factory=cf_management_configuration)
    with self.command_group('operationsmanagement management-configuration',
                            operationsmanagement_management_configuration, client_factory=cf_management_configuration,
                            is_experimental=True) as g:
        g.custom_command('list', 'operationsmanagement_management_configuration_list')
        g.custom_show_command('show', 'operationsmanagement_management_configuration_show')
        g.custom_command('create', 'operationsmanagement_management_configuration_create')
        g.custom_command('update', 'operationsmanagement_management_configuration_update')
        g.custom_command('delete', 'operationsmanagement_management_configuration_delete')
