# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['operationsmanagement solution'] = """
    type: group
    short-summary: operationsmanagement solution
"""

helps['operationsmanagement solution list'] = """
    type: command
    short-summary: "Retrieves the solution list. It will retrieve both first party and third party solutions"
    examples:
      - name: SolutionList
        text: |-
               az operationsmanagement solution list --resource-group "rg1"
"""

helps['operationsmanagement solution show'] = """
    type: command
    short-summary: "Retrieves the user solution."
    examples:
      - name: SolutionGet
        text: |-
               az operationsmanagement solution show --resource-group "rg1" --name "solution1"
"""

helps['operationsmanagement solution create'] = """
    type: command
    short-summary: "Creates or updates the Solution."
    parameters:
      - name: --plan
        short-summary: "Plan for solution object supported by the OperationsManagement resource provider."
        long-summary: |
            Usage: --plan name=XX publisher=XX promotion-code=XX product=XX

            name: name of the solution to be created. For Microsoft published solution it should be in the format of \
solutionType(workspaceName). SolutionType part is case sensitive. For third party solution, it can be anything.
            publisher: Publisher name. For gallery solution, it is Microsoft.
            promotion-code: promotionCode, Not really used now, can you left as empty
            product: name of the solution to enabled/add. For Microsoft published gallery solution it should be in the \
format of OMSGallery/:code:`<solutionType>`. This is case sensitive
      - name: --properties
        short-summary: "Properties for solution object supported by the OperationsManagement resource provider."
        long-summary: |
            Usage: --properties workspace-resource-id=XX contained-resources=XX referenced-resources=XX

            workspace-resource-id: Required. The azure resourceId for the workspace where the solution will be \
deployed/enabled.
            contained-resources: The azure resources that will be contained within the solutions. They will be locked \
and gets deleted automatically when the solution is deleted.
            referenced-resources: The resources that will be referenced from this solution. Deleting any of those \
solution out of band will break the solution.
    examples:
      - name: SolutionCreate
        text: |-
               az operationsmanagement solution create --location "East US" --plan name="name1" product="product1" \
promotion-code="promocode1" publisher="publisher1" --properties contained-resources="/subscriptions/sub2/resourceGroups\
/rg2/providers/provider1/resources/resource1" contained-resources="/subscriptions/sub2/resourceGroups/rg2/providers/pro\
vider2/resources/resource2" referenced-resources="/subscriptions/sub2/resourceGroups/rg2/providers/provider1/resources/\
resource2" referenced-resources="/subscriptions/sub2/resourceGroups/rg2/providers/provider2/resources/resource3" \
workspace-resource-id="/subscriptions/sub2/resourceGroups/rg2/providers/Microsoft.OperationalInsights/workspaces/ws1" \
--resource-group "rg1" --name "solution1"
"""

helps['operationsmanagement solution update'] = """
    type: command
    short-summary: "Patch a Solution. Only updating tags supported."
    examples:
      - name: SolutionUpdate
        text: |-
               az operationsmanagement solution update --tags Dept="IT" Environment="Test" --resource-group "rg1" \
--name "solution1"
"""

helps['operationsmanagement solution delete'] = """
    type: command
    short-summary: "Deletes the solution in the subscription."
    examples:
      - name: SolutionDelete
        text: |-
               az operationsmanagement solution delete --resource-group "rg1" --name "solution1"
"""

helps['operationsmanagement solution wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the operationsmanagement solution is met.
    examples:
      - name: Pause executing next line of CLI script until the operationsmanagement solution is successfully created.
        text: |-
               az operationsmanagement solution wait --resource-group "rg1" --name "solution1" --created
      - name: Pause executing next line of CLI script until the operationsmanagement solution is successfully updated.
        text: |-
               az operationsmanagement solution wait --resource-group "rg1" --name "solution1" --updated
      - name: Pause executing next line of CLI script until the operationsmanagement solution is successfully deleted.
        text: |-
               az operationsmanagement solution wait --resource-group "rg1" --name "solution1" --deleted
"""

helps['operationsmanagement management-association'] = """
    type: group
    short-summary: operationsmanagement management-association
"""

helps['operationsmanagement management-association list'] = """
    type: command
    short-summary: "Retrieves the ManagementAssociations list."
    examples:
      - name: SolutionList
        text: |-
               az operationsmanagement management-association list
"""

helps['operationsmanagement management-association show'] = """
    type: command
    short-summary: "Retrieves the user ManagementAssociation."
    examples:
      - name: SolutionGet
        text: |-
               az operationsmanagement management-association show --name "managementAssociation1" --provider-name \
"providerName" --resource-group "rg1" --resource-name "resourceName" --resource-type "resourceType"
"""

helps['operationsmanagement management-association create'] = """
    type: command
    short-summary: "Creates or updates the ManagementAssociation."
    examples:
      - name: SolutionCreate
        text: |-
               az operationsmanagement management-association create --name "managementAssociation1" --location "East \
US" --application-id "/subscriptions/sub1/resourcegroups/rg1/providers/Microsoft.Appliance/Appliances/appliance1" \
--provider-name "providerName" --resource-group "rg1" --resource-name "resourceName" --resource-type "resourceType"
"""

helps['operationsmanagement management-association update'] = """
    type: command
    short-summary: "Creates or updates the ManagementAssociation."
"""

helps['operationsmanagement management-association delete'] = """
    type: command
    short-summary: "Deletes the ManagementAssociation in the subscription."
    examples:
      - name: SolutionDelete
        text: |-
               az operationsmanagement management-association delete --name "managementAssociationName" \
--provider-name "providerName" --resource-group "rg1" --resource-name "resourceName" --resource-type "resourceType"
"""

helps['operationsmanagement management-configuration'] = """
    type: group
    short-summary: operationsmanagement management-configuration
"""

helps['operationsmanagement management-configuration list'] = """
    type: command
    short-summary: "Retrieves the ManagementConfigurations list."
    examples:
      - name: SolutionList
        text: |-
               az operationsmanagement management-configuration list
"""

helps['operationsmanagement management-configuration show'] = """
    type: command
    short-summary: "Retrieves the user ManagementConfiguration."
    examples:
      - name: SolutionGet
        text: |-
               az operationsmanagement management-configuration show --name "managementConfigurationName" \
--resource-group "rg1"
"""

helps['operationsmanagement management-configuration create'] = """
    type: command
    short-summary: "Creates or updates the ManagementConfiguration."
    parameters:
      - name: --parameters
        short-summary: "Parameters to run the ARM template"
        long-summary: |
            Usage: --parameters name=XX value=XX

            name: name of the parameter.
            value: value for the parameter. In Jtoken

            Multiple actions can be specified by using more than one --parameters argument.
    examples:
      - name: ManagementConfigurationCreate
        text: |-
               az operationsmanagement management-configuration create --name "managementConfiguration1" --parameters \
location="East US" --resource-group "rg1"
"""

helps['operationsmanagement management-configuration update'] = """
    type: command
    short-summary: "Creates or updates the ManagementConfiguration."
    parameters:
      - name: --parameters
        short-summary: "Parameters to run the ARM template"
        long-summary: |
            Usage: --parameters name=XX value=XX

            name: name of the parameter.
            value: value for the parameter. In Jtoken

            Multiple actions can be specified by using more than one --parameters argument.
"""

helps['operationsmanagement management-configuration delete'] = """
    type: command
    short-summary: "Deletes the ManagementConfiguration in the subscription."
    examples:
      - name: ManagementConfigurationDelete
        text: |-
               az operationsmanagement management-configuration delete --name "managementConfigurationName" \
--resource-group "rg1"
"""
