# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /ManagementAssociations/put/SolutionCreate
@try_manual
def step_management_association_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-association create '
             '--name "{myManagementAssociation}" '
             '--location "East US" '
             '--application-id "/subscriptions/{subscription_id}/resourcegroups/{rg}/providers/Microsoft.Appliance/Appl'
             'iances/appliance1" '
             '--provider-name "providerName" '
             '--resource-group "{rg}" '
             '--resource-name "resourceName" '
             '--resource-type "resourceType"',
             checks=checks)


# EXAMPLE: /ManagementAssociations/get/SolutionGet
@try_manual
def step_management_association_show(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-association show '
             '--name "{myManagementAssociation}" '
             '--provider-name "providerName" '
             '--resource-group "{rg}" '
             '--resource-name "resourceName" '
             '--resource-type "resourceType"',
             checks=checks)


# EXAMPLE: /ManagementAssociations/get/SolutionList
@try_manual
def step_management_association_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-association list',
             checks=checks)


# EXAMPLE: /ManagementAssociations/delete/SolutionDelete
@try_manual
def step_management_association_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-association delete -y '
             '--name "{myManagementAssociation2}" '
             '--provider-name "providerName" '
             '--resource-group "{rg}" '
             '--resource-name "resourceName" '
             '--resource-type "resourceType"',
             checks=checks)


# EXAMPLE: /ManagementConfigurations/put/ManagementConfigurationCreate
@try_manual
def step_management_configuration_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-configuration create '
             '--name "{myManagementConfiguration2}" '
             '--location "East US" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ManagementConfigurations/get/SolutionGet
@try_manual
def step_management_configuration_show(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-configuration show '
             '--name "{myManagementConfiguration}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /ManagementConfigurations/get/SolutionList
@try_manual
def step_management_configuration_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-configuration list',
             checks=checks)


# EXAMPLE: /ManagementConfigurations/delete/ManagementConfigurationDelete
@try_manual
def step_management_configuration_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement management-configuration delete -y '
             '--name "{myManagementConfiguration}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Solutions/put/SolutionCreate
@try_manual
def step_solution_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement solution create '
             '--location "East US" '
             '--plan name="name1" product="product1" promotion-code="promocode1" publisher="publisher1" '
             '--properties contained-resources="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/provid'
             'er1/resources/resource1" contained-resources="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/prov'
             'iders/provider2/resources/resource2" referenced-resources="/subscriptions/{subscription_id}/resourceGroup'
             's/{rg_2}/providers/provider1/resources/resource2" referenced-resources="/subscriptions/{subscription_id}/'
             'resourceGroups/{rg_2}/providers/provider2/resources/resource3" workspace-resource-id="/subscriptions/{sub'
             'scription_id}/resourceGroups/{rg_2}/providers/Microsoft.OperationalInsights/workspaces/ws1" '
             '--resource-group "{rg}" '
             '--name "{mySolution}"',
             checks=checks)


# EXAMPLE: /Solutions/get/SolutionGet
@try_manual
def step_solution_show(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement solution show '
             '--resource-group "{rg}" '
             '--name "{mySolution}"',
             checks=checks)


# EXAMPLE: /Solutions/get/SolutionList
@try_manual
def step_solution_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement solution list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Solutions/patch/SolutionUpdate
@try_manual
def step_solution_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement solution update '
             '--tags Dept="IT" Environment="Test" '
             '--resource-group "{rg}" '
             '--name "{mySolution}"',
             checks=checks)


# EXAMPLE: /Solutions/delete/SolutionDelete
@try_manual
def step_solution_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az operationsmanagement solution delete -y '
             '--resource-group "{rg}" '
             '--name "{mySolution}"',
             checks=checks)

