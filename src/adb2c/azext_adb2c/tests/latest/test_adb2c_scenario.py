# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_tenant_create
from .example_steps import step_tenant_list
from .example_steps import step_tenant_list2
from .example_steps import step_tenant_update
from .example_steps import step_tenant_show
from .example_steps import step_tenant_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg, rg_2):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg, rg_2):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg, rg_2):
    setup_scenario(test, rg, rg_2)
    # STEP NOT FOUND: Check name availability - available
    # STEP NOT FOUND: Check name availability - taken
    step_tenant_create(test, rg, rg_2, checks=[])
    step_tenant_list(test, rg, rg_2, checks=[])
    step_tenant_list2(test, rg, rg_2, checks=[])
    step_tenant_update(test, rg, rg_2, checks=[])
    step_tenant_show(test, rg, rg_2, checks=[])
    step_tenant_delete(test, rg, rg_2, checks=[])
    cleanup_scenario(test, rg, rg_2)


# Test class for Scenario
@try_manual
class Adb2cScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(Adb2cScenarioTest, self).__init__(*args, **kwargs)


    @ResourceGroupPreparer(name_prefix='clitestadb2c_contosoResourceGroup'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestadb2c_rg1'[:7], key='rg_2', parameter_name='rg_2')
    def test_adb2c_Scenario(self, rg, rg_2):
        call_scenario(self, rg, rg_2)
        calc_coverage(__file__)
        raise_if()

