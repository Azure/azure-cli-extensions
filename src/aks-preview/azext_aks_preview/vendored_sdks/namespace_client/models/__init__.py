# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.8.4, generator: @autorest/python@5.16.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

try:
    from ._models_py3 import ArcListUserCredentialProperties
    from ._models_py3 import CredentialResult
    from ._models_py3 import CredentialResults
    from ._models_py3 import ErrorDefinition
    from ._models_py3 import ErrorResponse
    from ._models_py3 import HybridConnectionConfig
    from ._models_py3 import Namespace
    from ._models_py3 import NamespaceList
    from ._models_py3 import ProxyResource
    from ._models_py3 import Resource
    from ._models_py3 import ResourceProviderOperation
    from ._models_py3 import ResourceProviderOperationDisplay
    from ._models_py3 import ResourceProviderOperationList
    from ._models_py3 import SystemData
except (SyntaxError, ImportError):
    from ._models import ArcListUserCredentialProperties  # type: ignore
    from ._models import CredentialResult  # type: ignore
    from ._models import CredentialResults  # type: ignore
    from ._models import ErrorDefinition  # type: ignore
    from ._models import ErrorResponse  # type: ignore
    from ._models import HybridConnectionConfig  # type: ignore
    from ._models import Namespace  # type: ignore
    from ._models import NamespaceList  # type: ignore
    from ._models import ProxyResource  # type: ignore
    from ._models import Resource  # type: ignore
    from ._models import ResourceProviderOperation  # type: ignore
    from ._models import ResourceProviderOperationDisplay  # type: ignore
    from ._models import ResourceProviderOperationList  # type: ignore
    from ._models import SystemData  # type: ignore

from ._namespace_client_enums import (
    AuthenticationMethod,
    CreatedByType,
    Enum0,
    Enum1,
)
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk
__all__ = [
    'ArcListUserCredentialProperties',
    'CredentialResult',
    'CredentialResults',
    'ErrorDefinition',
    'ErrorResponse',
    'HybridConnectionConfig',
    'Namespace',
    'NamespaceList',
    'ProxyResource',
    'Resource',
    'ResourceProviderOperation',
    'ResourceProviderOperationDisplay',
    'ResourceProviderOperationList',
    'SystemData',
    'AuthenticationMethod',
    'CreatedByType',
    'Enum0',
    'Enum1',
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()