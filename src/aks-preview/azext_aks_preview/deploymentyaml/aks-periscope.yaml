apiVersion: v1
kind: Namespace
metadata:
  name: aks-periscope
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: diagnostics.aks-periscope.azure.github.com
spec:
  group: aks-periscope.azure.github.com
  names:
    kind: Diagnostic
    plural: diagnostics
    shortNames:
    - apd
    singular: diagnostic
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            dns:
              type: string
            networkoutbound:
              type: string
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-periscope-service-account
  namespace: aks-periscope
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aks-periscope-role
rules:
- apiGroups:
  - ""
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - aks-periscope.azure.github.com
  resources:
  - diagnostics
  verbs:
  - get
  - watch
  - list
  - create
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - access.smi-spec.io
  - specs.smi-spec.io
  - split.smi-spec.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aks-periscope-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aks-periscope-role
subjects:
- kind: ServiceAccount
  name: aks-periscope-service-account
  namespace: aks-periscope
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aks-periscope-role-binding-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: aks-periscope-service-account
  namespace: aks-periscope
---
apiVersion: v1
data:
  DIAGNOSTIC_CONTAINERLOGS_LIST: kube-system
kind: ConfigMap
metadata:
  name: containerlogs-config
  namespace: aks-periscope
---
apiVersion: v1
data:
  DIAGNOSTIC_KUBEOBJECTS_LIST: kube-system/pod kube-system/service kube-system/deployment
kind: ConfigMap
metadata:
  name: kubeobjects-config
  namespace: aks-periscope
---
apiVersion: v1
data:
  DIAGNOSTIC_NODELOGS_LIST: /var/log/azure/cluster-provision.log /var/log/cloud-init.log
kind: ConfigMap
metadata:
  name: nodelogs-config
  namespace: aks-periscope
---
apiVersion: v1
data:
  AZURE_BLOB_SAS_KEY: # <saskey, base64 encoded>
kind: Secret
metadata:
  name: azureblob-secret
  namespace: aks-periscope
type: Opaque
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: aks-periscope
  name: aks-periscope
  namespace: aks-periscope
spec:
  selector:
    matchLabels:
      app: aks-periscope
  template:
    metadata:
      labels:
        app: aks-periscope
    spec:
      containers:
      - env:
        - name: AZURE_BLOB_ACCOUNT_NAME
          value: # <accountName, string>
        - name: AZURE_BLOB_CONTAINER_NAME
          value: # <containerName, string>
        envFrom:
        - configMapRef:
            name: containerlogs-config
        - configMapRef:
            name: kubeobjects-config
        - configMapRef:
            name: nodelogs-config
        - secretRef:
            name: azureblob-secret
        image: mcr.microsoft.com/aks/periscope:v0.6
        imagePullPolicy: Always
        name: aks-periscope
        resources:
          limits:
            cpu: 1000m
            memory: 2000Mi
          requests:
            cpu: 250m
            memory: 500Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /run/systemd/resolve
          name: resolvlog
        - mountPath: /etchostlogs
          name: etcvmlog
      hostPID: true
      nodeSelector:
        beta.kubernetes.io/os: linux
      serviceAccountName: aks-periscope-service-account
      volumes:
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /run/systemd/resolve
        name: resolvlog
      - name: etcvmlog
        hostPath:
          path: /etc
