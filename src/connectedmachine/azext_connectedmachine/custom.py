# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wildcard-import
# pylint: disable=unused-wildcard-import

from .aaz.latest.connectedmachine.license_profile import Create as _ProfileCreate
from .aaz.latest.connectedmachine.license_profile import Update as _ProfileUpdate
from .aaz.latest.connectedmachine.license_profile import Show as _ProfileShow

# hide license_profile_name from user and always set it to be 'Default', this applies for both license-profile create, update and show
class ProfileCreate(_ProfileCreate):

    def _build_arguments_schema(cls, *args, **kwargs):
        args_schema = super()._build_arguments_schema(*args, **kwargs)

        # pylint: disable=protected-access
        args_schema.license_profile_name._required = False
        args_schema.license_profile_name._registered = False

        return args_schema

    def pre_operations(self):
        args = self.ctx.args
        args.license_profile_name = "Default"

class ProfileUpdate(_ProfileUpdate):

    def _build_arguments_schema(cls, *args, **kwargs):
        args_schema = super()._build_arguments_schema(*args, **kwargs)

        # pylint: disable=protected-access
        args_schema.license_profile_name._required = False
        args_schema.license_profile_name._registered = False

        return args_schema

    def pre_operations(self):
        args = self.ctx.args
        args.license_profile_name = "Default"

class ProfileShow(_ProfileShow):

    def _build_arguments_schema(cls, *args, **kwargs):
        args_schema = super()._build_arguments_schema(*args, **kwargs)

        # pylint: disable=protected-access
        args_schema.license_profile_name._required = False
        args_schema.license_profile_name._registered = False

        return args_schema

    def pre_operations(self):
        args = self.ctx.args
        args.license_profile_name = "Default"
