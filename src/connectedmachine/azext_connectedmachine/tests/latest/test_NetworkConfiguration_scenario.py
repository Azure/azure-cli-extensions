# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_show
from .example_steps import step_list
from .example_steps import step_extension_create
from .example_steps import step_extension_list
from .example_steps import step_extension_show
from .example_steps import step_extension_update
from .example_steps import step_upgrade_extension
from .example_steps import step_extension_delete
from .example_steps import step_delete
from .. import (
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))

class NetworkConfigurationScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cli_test_networkconfiguration')
    def test_netowrk_configuration(self):
        rand_string = 'test'
        self.kwargs.update({
            'machine': 'testmachine',
            'rg': 'az-sdk-test',
            'scope': 'scope-' + rand_string,
            'vnet': 'vnet-' + rand_string,
            'subnet': 'subnet-' + rand_string,
            'private_endpoint': 'pe-' + rand_string,
            'private_endpoint_connection': 'pec-' + rand_string,
            'location': 'eastus2euap',
            'customScriptName': 'custom-' + rand_string,
            'subscription': 'e6fe6705-4c9c-4b54-81d2-e455780e20b8',
            'perimeter': 'perimeter' + rand_string,
        })

        # Prepare network
        self.cmd('az group create -n {rg} -l {location}',
                    checks=self.check('name', '{rg}'))

        # Prepare network
        self.cmd('az network vnet create -n {vnet} -g {rg} -l {location} --subnet-name {subnet}',
                    checks=self.check('length(newVNet.subnets)', 1))
        self.cmd('az network vnet subnet update -n {subnet} --vnet-name {vnet} -g {rg} '
                    '--disable-private-endpoint-network-policies true',
                    checks=self.check('privateEndpointNetworkPolicies', 'Disabled'))

        # Create a private link scope
        self.cmd('az connectedmachine private-link-scope create '
                '--location "{location}" '
                '--resource-group "{rg}" '
                '--scope-name "{scope}"',
                checks=[
                    self.check('name','{scope}'),
                    self.check('properties.publicNetworkAccess','Disabled')
                ])

        # network configuration
        self.kwargs['resource_uri'] = 'subscriptions/' + self.kwargs['subscription'] + '/resourceGroups/' + self.kwargs['rg'] + '/providers/Microsoft.HybridCompute/machines/' + self.kwargs['machine']
        self.kwargs['resource_id'] = '/subscriptions/' + self.kwargs['subscription'] + '/resourceGroups/' + self.kwargs['rg'] + '/providers/Microsoft.HybridCompute/privateLinkScopes/' + self.kwargs['scope']
        self.cmd('az connectedmachine network-configuration create '
                '--resource-uri "{resource_uri}" '
                '--location "{location}" '
                '--resource-id "{resource_id}"',
                checks=[])   
            
        self.cmd('az connectedmachine network-configuration show '
                '--resource-uri "{resource_uri}"',
                checks=[])

        self.cmd('az connectedmachine network-configuration update '
                '--resource-uri "{resource_uri}" '
                '--resource-id "{resource_id}"',
                checks=[]) 

        # network security perimeter configuration
        # self.cmd('az connectedmachine private-link-scope network-security-perimeter-configuration list '
        #         '--resource-group "{rg}" '
        #         '--scope-name "{scope}" '
        #         '--subscription "{subscription}"',
        #         checks=[])

        # self.cmd('az connectedmachine private-link-scope network-security-perimeter-configuration show '
        #         '--resource-group "{rg}" '
        #         '--scope-name "{scope}" '
        #         '--subscription "{subscription}" '
        #         '--perimeter-name "{perimeter}"',
        #         checks=[])  

        # self.cmd('az connectedmachine private-link-scope network-security-perimeter-configuration reconcile '
        #         '--resource-group "{rg}" '
        #         '--scope-name "{scope}" '
        #         '--subscription "{subscription}" '
        #         '--perimeter-name "{perimeter}"',
        #         checks=[])  