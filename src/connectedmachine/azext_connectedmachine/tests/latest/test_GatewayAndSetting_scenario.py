# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os, json
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_private_link_resource_list
from .example_steps import step_private_link_scope_create
from .example_steps import step_private_link_scope_update
from .example_steps import step_private_link_scope_show
from .example_steps import step_private_link_scope_list
from .example_steps import step_private_link_scope_list2
from .example_steps import step_private_link_scope_update_tag
from .example_steps import step_private_endpoint_connection_update
from .example_steps import step_private_endpoint_connection_list
from .example_steps import step_private_endpoint_connection_show
from .example_steps import step_private_endpoint_connection_delete
from .example_steps import step_private_link_scope_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)
from azure.cli.testsdk.scenario_tests import (
    live_only
)

TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


class GatewayAndSettingScenarioTest(ScenarioTest):
    @live_only()
    @ResourceGroupPreparer(name_prefix='cli_test_gateway_and_setting')
    def test_run_command(self):
        rand_string = 'test'
        self.kwargs.update({
            'machine': 'testmachine2',
            'rg': 'manojamp',
            'location': 'eastus2',
            'subscription': 'b24cc8ee-df4f-48ac-94cf-46edf36b0fae',
            'runcommand': 'myRunCommand',
            'gatewayName': 'amkgw1',
            'newResourceGroup': 'ytongtest3',
        })

        parameters_string = '''[{"name":"param1","value":"value1"}]'''
        self.kwargs['parameters'] = json.dumps(parameters_string)

        self.cmd('az arc gateway create '
                '--resource-group "{rg}" '
                '--location "{location}" '
                '--name "{gatewayName}" '
                '--allowed-features *',
                checks=[
                    self.check('name', '{gatewayName}')
                ])
        
        self.cmd('az arc gateway list',
                checks=[
                    self.check('length(@)', 5)
                ])

        self.cmd('az arc gateway show '
                '--resource-group "{rg}" '
                '--name "{gatewayName}"',
                checks=[
                    self.check('length(@)', 10)
                ])

        self.cmd('az connectedmachine setting update '
                '--resource-group "JMRG1" '
                '--subscription "Tailwind Traders" '
                '--base-provider "Microsoft.HybridCompute" '
                '--base-resource-type "machines" '
                '--base-resource-name "workloadServer" '
                '--settings-resource-name "default" '
                '--gateway-resource-id "/subscriptions/b24cc8ee-df4f-48ac-94cf-46edf36b0fae/resourceGroups/manojamp/providers/Microsoft.HybridCompute/gateways/amkgw1" '              
                '--name "default"',
                checks=[]) 

        self.cmd('az arc gateway update '
                '--resource-group "{rg}" '
                '--name "{gatewayName}"',
                checks=[
                    self.check('resourceGroup','{newResourceGroup}')
                ])

        self.cmd('az arc gateway delete '
                '--resource-group "{rg}" '
                '--name "{runcommand}" --yes',
                checks=[])
