# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_private_link_resource_list
from .example_steps import step_private_link_scope_create
from .example_steps import step_private_link_scope_update
from .example_steps import step_private_link_scope_show
from .example_steps import step_private_link_scope_list
from .example_steps import step_private_link_scope_list2
from .example_steps import step_private_link_scope_update_tag
from .example_steps import step_private_endpoint_connection_update
from .example_steps import step_private_endpoint_connection_list
from .example_steps import step_private_endpoint_connection_show
from .example_steps import step_private_endpoint_connection_delete
from .example_steps import step_private_link_scope_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))

class ProductFeature(object):
    def __init__(self, name, subscriptionStatus):
        self.name = name
        self.subscriptionStatus = subscriptionStatus

class ESULicenseScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cli_test_esulicense')
    def test_esu_license(self):
        rand_string = 'test'
        self.kwargs.update({
            'machine': 'testmachine',
            'rg': 'az-sdk-test',
            'scope': 'scope-' + rand_string,
            'vnet': 'vnet-' + rand_string,
            'subnet': 'subnet-' + rand_string,
            'private_endpoint': 'pe-' + rand_string,
            'private_endpoint_connection': 'pec-' + rand_string,
            'location': 'eastus2euap',
            'custom_script': 'custom-' + rand_string,
            'subscription': 'e6fe6705-4c9c-4b54-81d2-e455780e20b8',
            'runcommand': 'myRunCommand',
            'license': 'myLicense',
            'license_profile': 'default',
        })

        self.cmd('az connectedmachine license create '
                '--resource-group "{rg}" '
                '--location "{location}" '
                '--subscription "{subscription}" '
                '--license-name "{license}" '
                '--license-type "ESU" '
                '--license-details "{{\\"state\\":\\"Activated\\", \\"target\\":\\"Windows Server 2012\\", \\"edition\\":\\"Datacenter\\", \\"type\\":\\"pCore\\", \\"processors\\":16}}"',
                checks=[
                    self.check('id', '/subscriptions/{subscription}/resourceGroups/{rg}/providers/Microsoft.HybridCompute/licenses/{license}')
                ])

        self.cmd('az connectedmachine license list '
                '--subscription "{subscription}"',
                checks=[]) 

        self.cmd('az connectedmachine license list '
                '--resource-group "{rg}"',
                checks=[
                    self.check('length(@)', 1)
                ])

        self.cmd('az connectedmachine license show '
                '--resource-group "{rg}" '
                '--subscription "{subscription}" '
                '--license-name "{license}"',
                checks=[
                    self.check('id', '/subscriptions/{subscription}/resourceGroups/{rg}/providers/Microsoft.HybridCompute/licenses/{license}')
                ])    

        self.cmd('az connectedmachine license update '
                '--resource-group "{rg}" '
                '--subscription "{subscription}" '
                '--license-name "{license}" '
                '--license-type "ESU" '
                '--license-details "{{\\"state\\":\\"Activated\\", \\"target\\":\\"Windows Server 2012\\", \\"edition\\":\\"Datacenter\\", \\"type\\":\\"pCore\\", \\"processors\\":32}}"',
                checks=[
                    self.check('licenseDetails.processors', 32)
                ])

        # self.cmd('az connectedmachine license validate '
        #         '--location "{location}" '
        #         '--subscription "{subscription}" '
        #         '--license-name "{license}" '
        #         '--license-type "ESU" '
        #         '--license-details "{{\\"state\\":\\"Activated\\", \\"target\\":\\"Windows Server 2012\\", \\"edition\\":\\"Datacenter\\", \\"type\\":\\"pCore\\", \\"processors\\":16}}"',
        #         checks=[])

        self.cmd('az connectedmachine license delete '
                '--subscription "{subscription}" '
                '--resource-group "{rg}" '
                '--license-name "{license}" --yes',
                checks=[])

        # # license profile
        self.kwargs['license_id'] = '/subscriptions/{subscription}/resourceGroups/{rg}/providers/Microsoft.HybridCompute/licenses/{license}'
        
        temp = []
        temp.append(ProductFeature('HotPatching', 'Enabled'))
        self.kwargs['product_feature'] = temp

        # self.cmd('az connectedmachine license-profile create '
        #         '--subscription "{subscription}" '
        #         '--resource-group "{rg}" '
        #         '--machine-name "{machine}" '
        #         '--license-profile-name "{license_profile}" '
        #         '--location "{location}" '
        #         '--software-assurance-customer true '
        #         '--assigned-license {license_id} '
        #         '--subscription-status "Enabled" '
        #         '--product-features New-Object System.Collections.Generic.List[PSObject]'
        #         '--product-type "WindowsServer"',
        #         checks=[])
        
        self.cmd('az connectedmachine license-profile show '
                '--resource-group "{rg}" '
                '--subscription "{subscription}" '
                '--license-profile-name "{license_profile}" '
                '--machine-name "{machine}"',
                checks=[
                    self.check('id', "/subscriptions/{subscription}/resourceGroups/{rg}/providers/Microsoft.HybridCompute/machines/{machine}/license_profiles/default")
                ])

        self.cmd('az connectedmachine license-profile list '
                '--resource-group "{rg}" '
                '--subscription "{subscription}" '
                '--machine-name "{machine}"',
                checks=[
                    self.check('id', "/subscriptions/{subscription}/resourceGroups/{rg}/providers/Microsoft.HybridCompute/machines/{machine}/license_profiles/default")
                ])

        # self.cmd('az connectedmachine license-profile update '
        #         '--resource-group "{rg}" '
        #         '--subscription "{subscription}" '
        #         '--license-profile-name "{license_profile}" '
        #         '--software-assurance-customer true '
        #         '--assigned-license "{license_id}"'
        #         '--subscription-status "Unknown" '
        #         '--product-type "WindowsServer" '
        #         '--product-features {product_feature} '
        #         '--machine-name "{machine}"',
        #         checks=[])
        
        self.cmd('az connectedmachine license-profile update '
                '--resource-group "{rg}" '
                '--license-profile-name "{license_profile}" '
                '--machine-name "{machine}"',
                checks=[])

        # self.cmd('az connectedmachine license-profile delete '
        #         '--resource-group "{rg}" '
        #         '--subscription "{subscription}" '
        #         '--license-profile-name "{license_profile}" '
        #         '--machine-name "{machine}" --yes',
        #         checks=[])