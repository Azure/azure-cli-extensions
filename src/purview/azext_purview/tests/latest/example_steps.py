# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Accounts/put/Accounts_CreateOrUpdate
@try_manual
def step_account_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account create '
             '--location "West US 2" '
             '--managed-resource-group-name "custom-rgname" '
             '--sku name="Standard" capacity=4 '
             '--name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az purview account wait --created '
             '--name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Accounts/get/Accounts_Get
@try_manual
def step_account_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account show '
             '--name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Accounts/get/Accounts_ListByResourceGroup
@try_manual
def step_account_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Accounts/get/Accounts_ListBySubscription
@try_manual
def step_account_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Accounts/patch/Accounts_Update
@try_manual
def step_account_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account update '
             '--name "{myAccount}" '
             '--tags newTag="New tag value." '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Accounts/post/Accounts_AddRootCollectionAdmin
@try_manual
def step_account_add_root_collection_admin(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account add-root-collection-admin '
             '--name "{myAccount}" '
             '--object-id "7e8de0e7-2bfc-4e1f-9659-2a5785e4356f" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Accounts/post/Accounts_ListKeys
@try_manual
def step_account_list_key(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account list-key '
             '--name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DefaultAccounts/get/DefaultAccounts_Get
@try_manual
def step_default_account_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview default-account show '
             '--scope "12345678-1234-1234-12345678abc" '
             '--scope-tenant-id "12345678-1234-1234-12345678abc" '
             '--scope-type "Tenant"',
             checks=checks)


# EXAMPLE: /DefaultAccounts/post/DefaultAccounts_Remove
@try_manual
def step_default_account_remove(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview default-account remove '
             '--scope "12345678-1234-1234-12345678abc" '
             '--scope-tenant-id "12345678-1234-1234-12345678abc" '
             '--scope-type "Tenant"',
             checks=checks)


# EXAMPLE: /DefaultAccounts/post/DefaultAccounts_Set
@try_manual
def step_default_account_set(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview default-account set '
             '--account-name "{myAccount2}" '
             '--resource-group "{rg_2}" '
             '--scope "12345678-1234-1234-12345678abc" '
             '--scope-tenant-id "12345678-1234-1234-12345678abc" '
             '--scope-type "Tenant" '
             '--subscription-id "12345678-1234-1234-12345678aaa"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/put/PrivateEndpointConnections_CreateOrUpdate
@try_manual
def step_private_endpoint_connection_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview private-endpoint-connection create '
             '--account-name "{myAccount}" '
             '--name "{myPrivateEndpointConnection}" '
             '--resource-group "{rg}" '
             '--private-link-service-connection-state description="Approved by johndoe@company.com" status="Approved"',
             checks=[])
    test.cmd('az purview private-endpoint-connection wait --created '
             '--account-name "{myAccount}" '
             '--name "{myPrivateEndpointConnection}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/get/PrivateEndpointConnections_Get
@try_manual
def step_private_endpoint_connection_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview private-endpoint-connection show '
             '--account-name "{myAccount}" '
             '--name "{myPrivateEndpointConnection}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/get/PrivateEndpointConnections_ListByAccount
@try_manual
def step_private_endpoint_connection_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview private-endpoint-connection list '
             '--account-name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/delete/PrivateEndpointConnections_Delete
@try_manual
def step_private_endpoint_connection_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview private-endpoint-connection delete -y '
             '--account-name "{myAccount}" '
             '--name "{myPrivateEndpointConnection}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PrivateLinkResources/get/PrivateLinkResources_GetByGroupId
@try_manual
def step_private_link_resource_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview private-link-resource show '
             '--account-name "{myAccount}" '
             '--group-id "group1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PrivateLinkResources/get/PrivateLinkResources_ListByAccount
@try_manual
def step_private_link_resource_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview private-link-resource list '
             '--account-name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Accounts/delete/Accounts_Delete
@try_manual
def step_account_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az purview account delete -y '
             '--name "{myAccount}" '
             '--resource-group "{rg}"',
             checks=checks)
