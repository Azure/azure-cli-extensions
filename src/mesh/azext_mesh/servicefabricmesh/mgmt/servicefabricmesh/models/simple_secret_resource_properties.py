# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .secret_resource_properties import SecretResourceProperties


class SimpleSecretResourceProperties(SecretResourceProperties):
    """Describes the properties of a secret resource whose value is provided
    explicitly as plaintext. The secret resource may have multiple values, each
    being uniquely versioned. The secret value of each version is stored
    encrypted, and delivered as plaintext into the context of applications
    referencing it.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar provisioning_state: State of the resource.
    :vartype provisioning_state: str
    :param kind: Constant filled by server.
    :type kind: str
    :param description: Description of the secret resource.
    :type description: str
    :param content_type: The type of the content stored in the secret value.
     The value of this property is opaque to Service Fabric. Once set, the
     value of this property cannot be changed.
    :type content_type: str
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'kind': {'required': True},
    }

    def __init__(self, description=None, content_type=None):
        super(SimpleSecretResourceProperties, self).__init__(description=description, content_type=content_type)
        self.kind = 'simple'
