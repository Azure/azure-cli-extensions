# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class ApplicationResourceDescription(Resource):
    """This type describes an application resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Azure resource identifier.
    :vartype id: str
    :ivar name: Azure resource name.
    :vartype name: str
    :ivar type: Azure resource type.
    :vartype type: str
    :param location: Resource location.
    :type location: str
    :param tags: Resource tags.
    :type tags: dict[str, str]
    :param description: User readable description of the application.
    :type description: str
    :param debug_params: Internal use.
    :type debug_params: str
    :param services: describes the services in the application.
    :type services: list[~azure.seabreeze.models.ServiceResourceDescription]
    :param health_state: Describes the health state of an application
     resource. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error',
     'Unknown'
    :type health_state: str or ~azure.seabreeze.models.HealthState
    :ivar status: Status of the application resource. Possible values include:
     'Invalid', 'Ready', 'Upgrading', 'Creating', 'Deleting', 'Failed'
    :vartype status: str or ~azure.seabreeze.models.ApplicationResourceStatus
    :ivar service_names: Names of the services in the application.
    :vartype service_names: list[str]
    :ivar provisioning_state: Azure resource provisioning state
    :vartype provisioning_state: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'status': {'readonly': True},
        'service_names': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'debug_params': {'key': 'properties.debugParams', 'type': 'str'},
        'services': {'key': 'properties.services', 'type': '[ServiceResourceDescription]'},
        'health_state': {'key': 'properties.healthState', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'str'},
        'service_names': {'key': 'properties.serviceNames', 'type': '[str]'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
    }

    def __init__(self, location, tags=None, description=None, debug_params=None, services=None, health_state=None):
        super(ApplicationResourceDescription, self).__init__(location=location, tags=tags)
        self.description = description
        self.debug_params = debug_params
        self.services = services
        self.health_state = health_state
        self.status = None
        self.service_names = None
        self.provisioning_state = None
