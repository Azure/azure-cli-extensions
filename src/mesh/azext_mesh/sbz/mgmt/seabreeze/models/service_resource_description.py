# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .proxy_resource import ProxyResource


class ServiceResourceDescription(ProxyResource):
    """This type describes a volume resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Azure resource identifier.
    :vartype id: str
    :ivar name: Azure resource name.
    :vartype name: str
    :ivar type: Azure resource type.
    :vartype type: str
    :param location: Resource location.
    :type location: str
    :param os_type: The Operating system type required by the code in service.
     . Possible values include: 'windows', 'linux'
    :type os_type: str or ~azure.seabreeze.models.OperatingSystemTypes
    :param code_packages: Describes the set of code packages that forms the
     service. A code package describes the container and the properties for
     running it. All the code packages are started together on the same host
     and share the same context (network, process etc.).
    :type code_packages:
     list[~azure.seabreeze.models.ContainerCodePackageProperties]
    :param network_refs: The names of the private networks that this service
     needs to be part of.
    :type network_refs: list[~azure.seabreeze.models.NetworkRef]
    :param description: User readable description of the service.
    :type description: str
    :param replica_count: The number of replicas of the service to create.
     Defaults to 1 if not specified.
    :type replica_count: int
    :param health_state: The health state of a resource such as Application,
     Service, Replica etc. Possible values include: 'Invalid', 'Ok', 'Warning',
     'Error', 'Unknown'
    :type health_state: str or ~azure.seabreeze.models.HealthState
    :ivar status: Represents the status of the service. Possible values
     include: 'Unknown', 'Active', 'Upgrading', 'Deleting', 'Creating',
     'Failed'
    :vartype status: str or ~azure.seabreeze.models.enum
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'os_type': {'required': True},
        'code_packages': {'required': True},
        'status': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'os_type': {'key': 'properties.osType', 'type': 'str'},
        'code_packages': {'key': 'properties.codePackages', 'type': '[ContainerCodePackageProperties]'},
        'network_refs': {'key': 'properties.networkRefs', 'type': '[NetworkRef]'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'replica_count': {'key': 'properties.replicaCount', 'type': 'int'},
        'health_state': {'key': 'properties.healthState', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'str'},
    }

    def __init__(self, location, os_type, code_packages, network_refs=None, description=None, replica_count=None, health_state=None):
        super(ServiceResourceDescription, self).__init__(location=location)
        self.os_type = os_type
        self.code_packages = code_packages
        self.network_refs = network_refs
        self.description = description
        self.replica_count = replica_count
        self.health_state = health_state
        self.status = None
