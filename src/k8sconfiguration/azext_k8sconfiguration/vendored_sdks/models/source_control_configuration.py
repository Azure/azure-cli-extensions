# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .proxy_resource import ProxyResource
from .helm_operator_properties import HelmOperatorProperties

class SourceControlConfiguration(ProxyResource):
    """The SourceControl Configuration object.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :param repository_url: Url of the SourceControl Repository.
    :type repository_url: str
    :param operator_namespace: The namespace to which this operator is
     installed to. Maximum of 253 lower case alphanumeric characters, hyphen
     and period only. Default value: "default" .
    :type operator_namespace: str
    :param operator_instance_name: Instance name of the operator - identifying
     the specific configuration.
    :type operator_instance_name: str
    :param operator_type: Type of the operator. Possible values include:
     'Flux'
    :type operator_type: str or
     ~azure.mgmt.k8sconfiguration.models.OperatorType
    :param operator_params: Any Parameters for the Operator instance in string
     format.
    :type operator_params: str
    :param operator_scope: Scope at which the operator will be installed.
     Possible values include: 'cluster', 'namespace'. Default value: "cluster"
     .
    :type operator_scope: str or
     ~azure.mgmt.k8sconfiguration.models.OperatorScope
    :ivar repository_public_key: Public Key associated with this SourceControl
     configuration (either generated within the cluster or provided by the
     user).
    :vartype repository_public_key: str
    :param enable_helm_operator: Option to enable Helm Operator for this git
     configuration. Possible values include: 'true', 'false'
    :type enable_helm_operator: str or
     ~azure.mgmt.k8sconfiguration.models.EnableHelmOperator
    :param helm_operator_properties: Properties for Helm operator.
    :type helm_operator_properties:
     ~azure.mgmt.k8sconfiguration.models.HelmOperatorProperties
    :ivar provisioning_state: The provisioning state of the resource provider.
     Possible values include: 'Accepted', 'Deleting', 'Running', 'Succeeded',
     'Failed'
    :vartype provisioning_state: str or
     ~azure.mgmt.k8sconfiguration.models.ProvisioningState
    :ivar compliance_status: Compliance Status of the Configuration
    :vartype compliance_status:
     ~azure.mgmt.k8sconfiguration.models.ComplianceStatus
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'repository_public_key': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'compliance_status': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'repository_url': {'key': 'properties.repositoryUrl', 'type': 'str'},
        'operator_namespace': {'key': 'properties.operatorNamespace', 'type': 'str'},
        'operator_instance_name': {'key': 'properties.operatorInstanceName', 'type': 'str'},
        'operator_type': {'key': 'properties.operatorType', 'type': 'str'},
        'operator_params': {'key': 'properties.operatorParams', 'type': 'str'},
        'operator_scope': {'key': 'properties.operatorScope', 'type': 'str'},
        'repository_public_key': {'key': 'properties.repositoryPublicKey', 'type': 'str'},
        'enable_helm_operator': {'key': 'properties.enableHelmOperator', 'type': 'str'},
        'helm_operator_properties': {'key': 'properties.helmOperatorProperties', 'type': 'HelmOperatorProperties'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'compliance_status': {'key': 'properties.complianceStatus', 'type': 'ComplianceStatus'},
    }

    def __init__(self, **kwargs):
        super(SourceControlConfiguration, self).__init__(**kwargs)
        self.repository_url = kwargs.get('repository_url', None)
        self.operator_namespace = kwargs.get('operator_namespace', "default")
        self.operator_instance_name = kwargs.get('operator_instance_name', None)
        self.operator_type = kwargs.get('operator_type', None)
        self.operator_params = kwargs.get('operator_params', None)
        self.operator_scope = kwargs.get('operator_scope', "cluster")
        self.repository_public_key = None
        self.enable_helm_operator = kwargs.get('enable_helm_operator', None)
        self.helm_operator_properties = kwargs.get('helm_operator_properties', None)
        self.provisioning_state = None
        self.compliance_status = None
