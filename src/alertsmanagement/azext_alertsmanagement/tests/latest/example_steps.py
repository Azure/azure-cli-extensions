# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long


from .. import try_manual


# EXAMPLE: /AlertProcessingRules/put/Create or update a rule that adds an action group to all alerts in a subscription
@try_manual
def step_alert_processing_rule_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule create '
             '--location "Global" '
             '--description "Add ActionGroup1 to all alerts in the subscription" '
             '--actions actionGroupIds="/subscriptions/{subscription_id}/resourcegroups/{rg_2}/providers/microsoft.insi'
             'ghts/actiongroups/ActionGroup1" action-type="AddActionGroups" '
             '--enabled true '
             '--scopes "/subscriptions/{subscription_id}" '
             '--name "{myAlertProcessingRule2}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/put/Create or update a rule that adds two action groups to all Sev0 and Sev1 alerts in two resource groups
@try_manual
def step_alert_processing_rule_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule create '
             '--location "Global" '
             '--description "Add AGId1 and AGId2 to all Sev0 and Sev1 alerts in these resourceGroups" '
             '--actions actionGroupIds="/subscriptions/{subscription_id}/resourcegroups/{rg_2}/providers/microsoft.insi'
             'ghts/actiongroups/AGId1" actionGroupIds="/subscriptions/{subscription_id}/resourcegroups/{rg_2}/providers'
             '/microsoft.insights/actiongroups/AGId2" action-type="AddActionGroups" '
             '--conditions field="Severity" operator="Equals" values="sev0" values="sev1" '
             '--enabled true '
             '--scopes "/subscriptions/{subscription_id}/resourceGroups/{rg_2}" "/subscriptions/{subscription_id}/resou'
             'rceGroups/{rg_3}" '
             '--name "{myAlertProcessingRule3}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/put/Create or update a rule that removes all action groups from alerts on a specific VM during a one-off maintenance window (1800-2000 at a specific date, Pacific Standard Time)
@try_manual
def step_alert_processing_rule_create3(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule create '
             '--location "Global" '
             '--description "Removes all ActionGroups from all Alerts on VMName during the maintenance window" '
             '--actions action-type="RemoveAllActionGroups" '
             '--enabled true '
             '--effective-from "2021-04-15T18:00:00" '
             '--effective-until "2021-04-15T20:00:00" '
             '--time-zone "Pacific Standard Time" '
             '--scopes "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Compute/virtualMachi'
             'nes/VMName" '
             '--name "{myAlertProcessingRule4}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/put/Create or update a rule that removes all action groups from all alerts in a subscription coming from a specific alert rule
@try_manual
def step_alert_processing_rule_create4(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule create '
             '--location "Global" '
             '--description "Removes all ActionGroups from all Alerts that fire on above AlertRule" '
             '--actions action-type="RemoveAllActionGroups" '
             '--conditions field="AlertRuleId" operator="Equals" values="/subscriptions/{subscription_id}/resourceGroup'
             's/{rg_4}/providers/microsoft.insights/activityLogAlerts/RuleName" '
             '--enabled true '
             '--scopes "/subscriptions/{subscription_id}" '
             '--name "{myAlertProcessingRule5}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/put/Create or update a rule that removes all action groups from all alerts on any VM in two resource groups during a recurring maintenance window (2200-0400 every Sat and Sun, India Standard Time)
@try_manual
def step_alert_processing_rule_create5(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule create '
             '--location "Global" '
             '--description "Remove all ActionGroups from all Vitual machine Alerts during the recurring maintenance" '
             '--actions action-type="RemoveAllActionGroups" '
             '--conditions field="TargetResourceType" operator="Equals" values="microsoft.compute/virtualmachines" '
             '--enabled true '
             '--recurrences daysOfWeek="Saturday" daysOfWeek="Sunday" end-time="04:00:00" recurrence-type="Weekly" '
             'start-time="22:00:00" '
             '--time-zone "India Standard Time" '
             '--scopes "/subscriptions/{subscription_id}/resourceGroups/{rg_2}" "/subscriptions/{subscription_id}/resou'
             'rceGroups/{rg_3}" '
             '--name "{myAlertProcessingRule6}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/put/Create or update a rule that removes all action groups outside business hours (Mon-Fri 09:00-17:00, Eastern Standard Time)
@try_manual
def step_alert_processing_rule_create6(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule create '
             '--location "Global" '
             '--description "Remove all ActionGroups outside business hours" '
             '--actions action-type="RemoveAllActionGroups" '
             '--enabled true '
             '--recurrences end-time="09:00:00" recurrence-type="Daily" start-time="17:00:00" '
             '--recurrences daysOfWeek="Saturday" daysOfWeek="Sunday" recurrence-type="Weekly" '
             '--time-zone "Eastern Standard Time" '
             '--scopes "/subscriptions/{subscription_id}" '
             '--name "{myAlertProcessingRule7}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/get/GetAlertProcessingRuleById
@try_manual
def step_alert_processing_rule_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule show '
             '--name "{myAlertProcessingRule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/get/GetAlertProcessingRulesResourceGroupWide
@try_manual
def step_alert_processing_rule_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/get/GetAlertProcessingRulesSubscriptionWide
@try_manual
def step_alert_processing_rule_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule list '
             '-g ""',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/patch/PatchAlertProcessingRule
@try_manual
def step_alert_processing_rule_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule update '
             '--name "{myAlertProcessingRule8}" '
             '--enabled false '
             '--tags key1="value1" key2="value2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AlertProcessingRules/delete/DeleteAlertProcessingRule
@try_manual
def step_alert_processing_rule_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert-processing-rule delete -y '
             '--name "{myAlertProcessingRule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Alerts/get/GetById
@try_manual
def step_alert_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert show '
             '--alert-id "66114d64-d9d9-478b-95c9-b789d6502100"',
             checks=checks)


# EXAMPLE: /Alerts/get/ListAlerts
@try_manual
def step_alert_show_all(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert show-all',
             checks=checks)


# EXAMPLE: /Alerts/get/MonService
@try_manual
def step_alert_meta_data(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert meta-data',
             checks=checks)


# EXAMPLE: /Alerts/get/Resolve
@try_manual
def step_alert_show_history(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert show-history '
             '--alert-id "66114d64-d9d9-478b-95c9-b789d6502100"',
             checks=checks)


# EXAMPLE: /Alerts/get/Summary
@try_manual
def step_alert_show_summary(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert show-summary '
             '--groupby "severity,alertState"',
             checks=checks)


# EXAMPLE: /Alerts/post/Resolve
@try_manual
def step_alert_change_state(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement alert change-state '
             '--alert-id "66114d64-d9d9-478b-95c9-b789d6502100" '
             '--new-state "Acknowledged"',
             checks=checks)


# EXAMPLE: /SmartGroups/get/Get
@try_manual
def step_smart_group_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement smart-group show '
             '--smart-group-id "603675da-9851-4b26-854a-49fc53d32715"',
             checks=checks)


# EXAMPLE: /SmartGroups/get/List
@try_manual
def step_smart_group_show_all(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement smart-group show-all',
             checks=checks)


# EXAMPLE: /SmartGroups/get/Resolve
@try_manual
def step_smart_group_show_history(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement smart-group show-history '
             '--smart-group-id "a808445e-bb38-4751-85c2-1b109ccc1059"',
             checks=checks)


# EXAMPLE: /SmartGroups/post/changestate
@try_manual
def step_smart_group_change_state(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az alertsmanagement smart-group change-state '
             '--new-state "Acknowledged" '
             '--smart-group-id "a808445e-bb38-4751-85c2-1b109ccc1059"',
             checks=checks)
