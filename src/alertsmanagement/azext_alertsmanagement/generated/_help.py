# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['alertsmanagement'] = '''
    type: group
    short-summary: Manage Alerts
'''

helps['alertsmanagement alert-processing-rule'] = """
    type: group
    short-summary: Manage alert processing rule with alertsmanagement
"""

helps['alertsmanagement alert-processing-rule list'] = """
    type: command
    short-summary: "List all alert processing rules in a resource group. And List all alert processing rules in a \
subscription."
    examples:
      - name: GetAlertProcessingRulesResourceGroupWide
        text: |-
               az alertsmanagement alert-processing-rule list --resource-group "alertscorrelationrg"
      - name: GetAlertProcessingRulesSubscriptionWide
        text: |-
               az alertsmanagement alert-processing-rule list
"""

helps['alertsmanagement alert-processing-rule show'] = """
    type: command
    short-summary: "Get an alert processing rule by name."
    examples:
      - name: GetAlertProcessingRuleById
        text: |-
               az alertsmanagement alert-processing-rule show --name "DailySuppression" --resource-group \
"alertscorrelationrg"
"""

helps['alertsmanagement alert-processing-rule create'] = """
    type: command
    short-summary: "Create an alert processing rule."
    parameters:
      - name: --conditions
        short-summary: "Conditions on which alerts will be filtered."
        long-summary: |
            Usage: --conditions field=XX operator=XX values=XX

            field: Field for a given condition.
            operator: Operator for a given condition.
            values: List of values to match for a given condition.

            Multiple actions can be specified by using more than one --conditions argument.
      - name: --actions
        short-summary: "Actions to be applied."
        long-summary: |
            Usage: --actions action-type=XX

            action-type: Required. Action that should be applied.

            Multiple actions can be specified by using more than one --actions argument.
      - name: --recurrences
        short-summary: "List of recurrences."
        long-summary: |
            Usage: --recurrences recurrence-type=XX start-time=XX end-time=XX

            recurrence-type: Required. Specifies when the recurrence should be applied.
            start-time: Start time for recurrence.
            end-time: End time for recurrence.

            Multiple actions can be specified by using more than one --recurrences argument.
    examples:
      - name: Create or update a rule that adds an action group to all alerts in a subscription
        text: |-
               az alertsmanagement alert-processing-rule create --location "Global" --description "Add ActionGroup1 to \
all alerts in the subscription" --actions actionGroupIds="/subscriptions/subId1/resourcegroups/RGId1/providers/microsof\
t.insights/actiongroups/ActionGroup1" action-type="AddActionGroups" --enabled true --scopes "/subscriptions/subId1" \
--name "AddActionGroupToSubscription" --resource-group "alertscorrelationrg"
      - name: Create or update a rule that adds two action groups to all Sev0 and Sev1 alerts in two resource groups
        text: |-
               az alertsmanagement alert-processing-rule create --location "Global" --description "Add AGId1 and AGId2 \
to all Sev0 and Sev1 alerts in these resourceGroups" --actions actionGroupIds="/subscriptions/subId1/resourcegroups/RGI\
d1/providers/microsoft.insights/actiongroups/AGId1" actionGroupIds="/subscriptions/subId1/resourcegroups/RGId1/provider\
s/microsoft.insights/actiongroups/AGId2" action-type="AddActionGroups" --conditions field="Severity" operator="Equals" \
values="sev0" values="sev1" --enabled true --scopes "/subscriptions/subId1/resourceGroups/RGId1" \
"/subscriptions/subId1/resourceGroups/RGId2" --name "AddActionGroupsBySeverity" --resource-group "alertscorrelationrg"
      - name: Create or update a rule that removes all action groups from alerts on a specific VM during a one-off maintenance window (1800-2000 at a specific date, Pacific Standard Time)
        text: |-
               az alertsmanagement alert-processing-rule create --location "Global" --description "Removes all \
ActionGroups from all Alerts on VMName during the maintenance window" --actions action-type="RemoveAllActionGroups" \
--enabled true --effective-from "2021-04-15T18:00:00" --effective-until "2021-04-15T20:00:00" --time-zone "Pacific \
Standard Time" --scopes "/subscriptions/subId1/resourceGroups/RGId1/providers/Microsoft.Compute/virtualMachines/VMName"\
 --name "RemoveActionGroupsMaintenanceWindow" --resource-group "alertscorrelationrg"
      - name: Create or update a rule that removes all action groups from all alerts in a subscription coming from a specific alert rule
        text: |-
               az alertsmanagement alert-processing-rule create --location "Global" --description "Removes all \
ActionGroups from all Alerts that fire on above AlertRule" --actions action-type="RemoveAllActionGroups" --conditions \
field="AlertRuleId" operator="Equals" values="/subscriptions/suubId1/resourceGroups/Rgid2/providers/microsoft.insights/\
activityLogAlerts/RuleName" --enabled true --scopes "/subscriptions/subId1" --name "RemoveActionGroupsSpecificAlertRule\
" --resource-group "alertscorrelationrg"
      - name: Create or update a rule that removes all action groups from all alerts on any VM in two resource groups during a recurring maintenance window (2200-0400 every Sat and Sun, India Standard Time)
        text: |-
               az alertsmanagement alert-processing-rule create --location "Global" --description "Remove all \
ActionGroups from all Vitual machine Alerts during the recurring maintenance" --actions action-type="RemoveAllActionGro\
ups" --conditions field="TargetResourceType" operator="Equals" values="microsoft.compute/virtualmachines" --enabled \
true --recurrences daysOfWeek="Saturday" daysOfWeek="Sunday" end-time="04:00:00" recurrence-type="Weekly" \
start-time="22:00:00" --time-zone "India Standard Time" --scopes "/subscriptions/subId1/resourceGroups/RGId1" \
"/subscriptions/subId1/resourceGroups/RGId2" --name "RemoveActionGroupsRecurringMaintenance" --resource-group \
"alertscorrelationrg"
      - name: Create or update a rule that removes all action groups outside business hours (Mon-Fri 09:00-17:00, Eastern Standard Time)
        text: |-
               az alertsmanagement alert-processing-rule create --location "Global" --description "Remove all \
ActionGroups outside business hours" --actions action-type="RemoveAllActionGroups" --enabled true --recurrences \
end-time="09:00:00" recurrence-type="Daily" start-time="17:00:00" --recurrences daysOfWeek="Saturday" \
daysOfWeek="Sunday" recurrence-type="Weekly" --time-zone "Eastern Standard Time" --scopes "/subscriptions/subId1" \
--name "RemoveActionGroupsOutsideBusinessHours" --resource-group "alertscorrelationrg"
"""

helps['alertsmanagement alert-processing-rule update'] = """
    type: command
    short-summary: "Enable, disable, or update tags for an alert processing rule."
    examples:
      - name: PatchAlertProcessingRule
        text: |-
               az alertsmanagement alert-processing-rule update --name "WeeklySuppression" --enabled false --tags \
key1="value1" key2="value2" --resource-group "alertscorrelationrg"
"""

helps['alertsmanagement alert-processing-rule delete'] = """
    type: command
    short-summary: "Delete an alert processing rule."
    examples:
      - name: DeleteAlertProcessingRule
        text: |-
               az alertsmanagement alert-processing-rule delete --name "DailySuppression" --resource-group \
"alertscorrelationrg"
"""

helps['alertsmanagement alert'] = """
    type: group
    short-summary: Manage alert with alertsmanagement
"""

helps['alertsmanagement alert show'] = """
    type: command
    short-summary: "Get information related to a specific alert."
    examples:
      - name: GetById
        text: |-
               az alertsmanagement alert show --alert-id "66114d64-d9d9-478b-95c9-b789d6502100"
"""

helps['alertsmanagement alert change-state'] = """
    type: command
    short-summary: "Change the state of an alert."
    examples:
      - name: Resolve
        text: |-
               az alertsmanagement alert change-state --alert-id "66114d64-d9d9-478b-95c9-b789d6502100" --new-state \
"Acknowledged"
"""

helps['alertsmanagement alert meta-data'] = """
    type: command
    short-summary: "List alerts meta data information based on value of identifier parameter."
    examples:
      - name: MonService
        text: |-
               az alertsmanagement alert meta-data
"""

helps['alertsmanagement alert show-all'] = """
    type: command
    short-summary: "List all existing alerts, where the results can be filtered on the basis of multiple parameters \
(e.g. time range). The results can then be sorted on the basis specific fields, with the default being \
lastModifiedDateTime."
    examples:
      - name: ListAlerts
        text: |-
               az alertsmanagement alert show-all
"""

helps['alertsmanagement alert show-history'] = """
    type: command
    short-summary: "Get the history of an alert, which captures any monitor condition changes (Fired/Resolved) and \
alert state changes (New/Acknowledged/Closed)."
    examples:
      - name: Resolve
        text: |-
               az alertsmanagement alert show-history --alert-id "66114d64-d9d9-478b-95c9-b789d6502100"
"""

helps['alertsmanagement alert show-summary'] = """
    type: command
    short-summary: "Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' \
returns the count of alerts for each severity)."
    examples:
      - name: Summary
        text: |-
               az alertsmanagement alert show-summary --groupby "severity,alertState"
"""

helps['alertsmanagement smart-group'] = """
    type: group
    short-summary: Manage smart group with alertsmanagement
"""

helps['alertsmanagement smart-group show'] = """
    type: command
    short-summary: "Get information related to a specific Smart Group."
    examples:
      - name: Get
        text: |-
               az alertsmanagement smart-group show --smart-group-id "603675da-9851-4b26-854a-49fc53d32715"
"""

helps['alertsmanagement smart-group change-state'] = """
    type: command
    short-summary: "Change the state of a Smart Group."
    examples:
      - name: changestate
        text: |-
               az alertsmanagement smart-group change-state --new-state "Acknowledged" --smart-group-id \
"a808445e-bb38-4751-85c2-1b109ccc1059"
"""

helps['alertsmanagement smart-group show-all'] = """
    type: command
    short-summary: "List all the Smart Groups within a specified subscription."
    examples:
      - name: List
        text: |-
               az alertsmanagement smart-group show-all
"""

helps['alertsmanagement smart-group show-history'] = """
    type: command
    short-summary: "Get the history a smart group, which captures any Smart Group state changes \
(New/Acknowledged/Closed) ."
    examples:
      - name: Resolve
        text: |-
               az alertsmanagement smart-group show-history --smart-group-id "a808445e-bb38-4751-85c2-1b109ccc1059"
"""
