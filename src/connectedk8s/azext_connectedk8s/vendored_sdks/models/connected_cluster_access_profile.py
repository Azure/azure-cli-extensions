# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ConnectedClusterAccessProfile(Model):
    """ConnectedClusterAccessProfile.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar type: Required. Type of the resource on which the credentials are
     requested. Default value: "Microsoft.Kubernetes/connectedClusters" .
    :vartype type: str
    :param location: Required. Location of the cluster
    :type location: str
    :param kube_config: Required. Base64 Encoded kubeconfig for accessing
     target cluster
    :type kube_config: str
    :param aad_access_profile: Required.
    :type aad_access_profile:
     ~azure.mgmt.hybridkubernetes.models.ConnectedClusterAADAccessProfile
    """

    _validation = {
        'type': {'required': True, 'constant': True},
        'location': {'required': True},
        'kube_config': {'required': True},
        'aad_access_profile': {'required': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'kube_config': {'key': 'properties.kubeConfig', 'type': 'str'},
        'aad_access_profile': {'key': 'properties.aadAccessProfile', 'type': 'ConnectedClusterAADAccessProfile'},
    }

    type = "Microsoft.Kubernetes/connectedClusters"

    def __init__(self, **kwargs):
        super(ConnectedClusterAccessProfile, self).__init__(**kwargs)
        self.location = kwargs.get('location', None)
        self.kube_config = kwargs.get('kube_config', None)
        self.aad_access_profile = kwargs.get('aad_access_profile', None)
