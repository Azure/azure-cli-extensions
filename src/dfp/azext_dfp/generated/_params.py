# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    tags_type,
    resource_group_name_type,
    get_location_type
)
from azure.cli.core.commands.validators import get_default_location_from_resource_group
from azext_dfp.action import AddAdministration


def load_arguments(self, _):

    with self.argument_context('dfp instance list') as c:
        c.argument('resource_group_name', resource_group_name_type)

    with self.argument_context('dfp instance create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('instance_name', options_list=['--name', '-n', '--instance-name'], type=str, help='The name of the '
                   'DFP instances. It must be a minimum of 3 characters, and a maximum of 63.')
        c.argument('location', arg_type=get_location_type(self.cli_ctx), required=False,
                   validator=get_default_location_from_resource_group)
        c.argument('tags', tags_type)
        c.argument('administration', action=AddAdministration, nargs='+', help='A collection of DFP instance '
                   'administrators')

    with self.argument_context('dfp instance update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('instance_name', options_list=['--name', '-n', '--instance-name'], type=str, help='The name of the '
                   'DFP instance. It must be at least 3 characters in length, and no more than 63.', id_part='name')
        c.argument('tags', tags_type)
        c.argument('administration', action=AddAdministration, nargs='+', help='A collection of DFP instance '
                   'administrators')

    with self.argument_context('dfp instance delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('instance_name', options_list=['--name', '-n', '--instance-name'], type=str, help='The name of the '
                   'DFP instance. It must be at least 3 characters in length, and no more than 63.', id_part='name')

    with self.argument_context('dfp instance show-detail') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('instance_name', options_list=['--name', '-n', '--instance-name'], type=str, help='The name of the '
                   'instance. It must be a minimum of 3 characters, and a maximum of 63.', id_part='name')
