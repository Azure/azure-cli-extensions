# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if
from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import StorageAccountPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg, rg_2, rg_3, rg_4, rg_5):
    pass


# EXAMPLE: JobsCreate
@try_manual
def step_jobscreate(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job create '
             '--name "{SdkJob952}" '
             '--location "westus" '
             '--transfer-type "ImportToAzure" '
             '--details "{{\\"contactDetails\\":{{\\"contactName\\":\\"Public SDK Test\\",\\"emailList\\":[\\"testing@m'
             'icrosoft.com\\"],\\"phone\\":\\"1234567890\\",\\"phoneExtension\\":\\"1234\\"}},\\"dataImportDetails\\":['
             '{{\\"accountDetails\\":{{\\"dataAccountType\\":\\"StorageAccount\\",\\"storageAccountId\\":\\"/subscripti'
             'ons/{subscription_id}/resourcegroups/{rg}/providers/Microsoft.Storage/storageAccounts/{sa}\\"}}}}],\\"job'
             'DetailsType\\":\\"DataBox\\",\\"shippingAddress\\":{{\\"addressType\\":\\"Commercial\\",\\"city\\":\\"San'
             ' Francisco\\",\\"companyName\\":\\"Microsoft\\",\\"country\\":\\"US\\",\\"postalCode\\":\\"94107\\",\\"st'
             'ateOrProvince\\":\\"CA\\",\\"streetAddress1\\":\\"16 TOWNSEND ST\\",\\"streetAddress2\\":\\"Unit 1\\"}}}}'
             '" '
             '--sku name="DataBox" '
             '--resource-group "{rg_4}"',
             checks=[])


# EXAMPLE: JobsGet5
@try_manual
def step_jobsget5(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: JobsGet4
@try_manual
def step_jobsget4(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: JobsGet3
@try_manual
def step_jobsget3(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: JobsGet2
@try_manual
def step_jobsget2(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: JobsGet1
@try_manual
def step_jobsget1(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: JobsGet
@try_manual
def step_jobsget(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job show '
             '--expand "details" '
             '--name "{SdkJob952}" '
             '--resource-group "{rg_4}"',
             checks=[])


# EXAMPLE: JobsListByResourceGroup
@try_manual
def step_jobslistbyresourcegroup(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job list '
             '--resource-group "{rg_4}"',
             checks=[])


# EXAMPLE: JobsList
@try_manual
def step_jobslist(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job list '
             '-g ""',
             checks=[])


# EXAMPLE: OperationsGet
@try_manual
def step_operationsget(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: ServiceValidateInputsByResourceGroup
@try_manual
def step_servicevalidateinputsbyresourcegroup(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: AvailableSkusByResourceGroup
@try_manual
def step_availableskusbyresourcegroup(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: BookShipmentPickupPost
@try_manual
def step_bookshipmentpickuppost(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job book-shipment-pick-up '
             '--name "{Jobs_2}" '
             '--resource-group "{rg_5}" '
             '--end-time "2019-09-22T18:30:00Z" '
             '--shipment-location "Front desk" '
             '--start-time "2019-09-20T18:30:00Z"',
             checks=[])


# EXAMPLE: JobsListCredentials
@try_manual
def step_jobslistcredentials(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job list-credentials '
             '--name "{Jobs_2}" '
             '--resource-group "{rg_5}"',
             checks=[])


# EXAMPLE: JobsCancelPost
@try_manual
def step_jobscancelpost(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job cancel '
             '--reason "CancelTest" '
             '--name "{SdkJob952}" '
             '--resource-group "{rg_4}"',
             checks=[])


# EXAMPLE: JobsPatch
@try_manual
def step_jobspatch(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job update '
             '--name "{SdkJob952}" '
             '--details "{{\\"contactDetails\\":{{\\"contactName\\":\\"Update Job\\",\\"emailList\\":[\\"testing@micros'
             'oft.com\\"],\\"phone\\":\\"1234567890\\",\\"phoneExtension\\":\\"1234\\"}},\\"shippingAddress\\":{{\\"add'
             'ressType\\":\\"Commercial\\",\\"city\\":\\"San Francisco\\",\\"companyName\\":\\"Microsoft\\",\\"country'
             '\\":\\"US\\",\\"postalCode\\":\\"94107\\",\\"stateOrProvince\\":\\"CA\\",\\"streetAddress1\\":\\"16 TOWNS'
             'END ST\\",\\"streetAddress2\\":\\"Unit 1\\"}}}}" '
             '--resource-group "{rg_4}"',
             checks=[])


# EXAMPLE: ServiceRegionConfiguration
@try_manual
def step_serviceregionconfiguration(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: ValidateAddressPost
@try_manual
def step_validateaddresspost(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox service validate-address '
             '--location "westus" '
             '--device-type "DataBox" '
             '--shipping-address address-type="Commercial" city="San Francisco" company-name="Microsoft" country="US" p'
             'ostal-code="94107" state-or-province="CA" street-address1="16 TOWNSEND ST" street-address2="Unit 1" '
             '--validation-type "ValidateAddress"',
             checks=[])


# EXAMPLE: ServiceValidateInputs
@try_manual
def step_servicevalidateinputs(test, rg, rg_2, rg_3, rg_4, rg_5):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: AvailableSkusPost
@try_manual
def step_availableskuspost(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox service list-available-sku-by-resource-group '
             '--country "US" '
             '--location "westus" '
             '--transfer-type "ImportToAzure" '
             '--location "westus" '
             '--resource-group "{rg_5}"',
             checks=[])


# EXAMPLE: JobsDelete
@try_manual
def step_jobsdelete(test, rg, rg_2, rg_3, rg_4, rg_5):
    test.cmd('az databox job delete '
             '--name "{SdkJob952}" '
             '--resource-group "{rg_4}"',
             checks=[])


@try_manual
def cleanup(test, rg, rg_2, rg_3, rg_4, rg_5):
    pass


@try_manual
def call_scenario(test, rg, rg_2, rg_3, rg_4, rg_5):
    setup(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobscreate(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsget5(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsget4(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsget3(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsget2(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsget1(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsget(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobslistbyresourcegroup(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobslist(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_operationsget(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_servicevalidateinputsbyresourcegroup(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_availableskusbyresourcegroup(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_bookshipmentpickuppost(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobslistcredentials(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobscancelpost(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobspatch(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_serviceregionconfiguration(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_validateaddresspost(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_servicevalidateinputs(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_availableskuspost(test, rg, rg_2, rg_3, rg_4, rg_5)
    step_jobsdelete(test, rg, rg_2, rg_3, rg_4, rg_5)
    cleanup(test, rg, rg_2, rg_3, rg_4, rg_5)


@try_manual
class DataBoxManagementClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestdatabox_databoxbvt'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_databoxbvt1'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_akvenkat'[:7], key='rg_3', parameter_name='rg_3')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg5154'[:7], key='rg_4', parameter_name='rg_4')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_bvttoolrg6'[:7], key='rg_5', parameter_name='rg_5')
    @StorageAccountPreparer(name_prefix='clitestdatabox_databoxbvttestaccount'[:7], key='sa',
                            resource_group_parameter_name='rg')
    @StorageAccountPreparer(name_prefix='clitestdatabox_databoxbvttestaccount2'[:7], key='sa_2',
                            resource_group_parameter_name='rg_2')
    @StorageAccountPreparer(name_prefix='clitestdatabox_aaaaaa2'[:7], key='sa_3',
                            resource_group_parameter_name='rg_3')
    def test_databox(self, rg, rg_2, rg_3, rg_4, rg_5):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'SdkJob952': 'SdkJob952',
            'Jobs_2': 'TJ-636646322037905056',
        })

        call_scenario(self, rg, rg_2, rg_3, rg_4, rg_5)
        raise_if()
