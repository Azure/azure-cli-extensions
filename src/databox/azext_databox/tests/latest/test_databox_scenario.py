# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from azure.cli.testsdk import StorageAccountPreparer
from .example_steps import step_job_create
from .example_steps import step_job_show
from .example_steps import step_job_list2
from .example_steps import step_job_list
from .example_steps import step_job_book_shipment_pick_up
from .example_steps import step_job_list_credentials
from .example_steps import step_job_cancel
from .example_steps import step_job_update
from .example_steps import step_service_validate_address
from .example_steps import step_service_list_available_sku_by_resource_group
from .example_steps import step_job_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14,
                   rg_15):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14,
                     rg_15):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15):
    setup_scenario(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15)
    step_job_create(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                    checks=[
        test.check("name", "{myJob}", case_sensitive=False),
        test.check("location", "westus", case_sensitive=False),
        test.check("transferType", "ImportToAzure", case_sensitive=False),
        test.check("sku.name", "DataBox", case_sensitive=False),
    ])
    # STEP NOT FOUND: JobsGet6
    # STEP NOT FOUND: JobsGet5
    # STEP NOT FOUND: JobsGet4
    # STEP NOT FOUND: JobsGet3
    # STEP NOT FOUND: JobsGet2
    # STEP NOT FOUND: JobsGet1
    step_job_show(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                  checks=[
        test.check("name", "{myJob}", case_sensitive=False),
        test.check("location", "westus", case_sensitive=False),
        test.check("transferType", "ImportToAzure", case_sensitive=False),
        test.check("sku.name", "DataBox", case_sensitive=False),
    ])
    step_job_list2(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                   checks=[
        test.check('length(@)', 1),
    ])
    step_job_list(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                  checks=[
        test.check('length(@)', 8),
    ])
    # STEP NOT FOUND: OperationsGet
    # STEP NOT FOUND: ServiceValidateInputsByResourceGroup
    # STEP NOT FOUND: AvailableSkusByResourceGroup
    step_job_book_shipment_pick_up(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12,
                                   rg_13, rg_14, rg_15, checks=[])
    step_job_list_credentials(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15, checks=[])
    step_job_cancel(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                    checks=[])
    step_job_update(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                    checks=[
        test.check("name", "{myJob}", case_sensitive=False),
    ])
    # STEP NOT FOUND: ServiceRegionConfiguration
    step_service_validate_address(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13,
                                  rg_14, rg_15, checks=[])
    # STEP NOT FOUND: ServiceValidateInputs
    step_service_list_available_sku_by_resource_group(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10,
                                                      rg_11, rg_12, rg_13, rg_14, rg_15, checks=[])
    step_job_delete(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15,
                    checks=[])
    # STEP NOT FOUND: JobMitigate
    cleanup_scenario(test, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14,
                     rg_15)


# Test class for Scenario
@try_manual
class DataboxScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(DataboxScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myJob': 'SdkJob952',
            'myJob2': 'SdkJob1735',
            'myJob3': 'TJx-637505258985313014',
            'myJob4': 'SdkJob6429',
            'myJob5': 'SdkJob9640',
            'myJob6': 'SdkJob6599',
            'myJob7': 'SdkJob5337',
            'myJob8': 'SdkJob2965',
            'myJob9': 'TJ-636646322037905056',
            'myJob10': 'SdkJob8367',
        })


    @ResourceGroupPreparer(name_prefix='clitestdatabox_databoxbvt'[:7], key='rg_5', parameter_name='rg_5')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_databoxbvt1'[:7], key='rg_6', parameter_name='rg_6')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_akvenkat'[:7], key='rg_9', parameter_name='rg_9')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg5154'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg7937'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_dmstestresource'[:7], key='rg_3', parameter_name='rg_3')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg8091'[:7], key='rg_4', parameter_name='rg_4')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg7478'[:7], key='rg_7', parameter_name='rg_7')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg608'[:7], key='rg_8', parameter_name='rg_8')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg7552'[:7], key='rg_10', parameter_name='rg_10')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg9765'[:7], key='rg_11', parameter_name='rg_11')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_bvttoolrg6'[:7], key='rg_12', parameter_name='rg_12')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg9836'[:7], key='rg_13', parameter_name='rg_13')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg4981'[:7], key='rg_14', parameter_name='rg_14')
    @ResourceGroupPreparer(name_prefix='clitestdatabox_SdkRg6861'[:7], key='rg_15', parameter_name='rg_15')
    @StorageAccountPreparer(name_prefix='clitestdatabox_databoxbvttestaccount'[:7], key='sa',
                            resource_group_parameter_name='rg_5')
    @StorageAccountPreparer(name_prefix='clitestdatabox_databoxbvttestaccount2'[:7], key='sa_2',
                            resource_group_parameter_name='rg_6')
    @StorageAccountPreparer(name_prefix='clitestdatabox_aaaaaa2'[:7], key='sa_3',
                            resource_group_parameter_name='rg_9')
    def test_databox_Scenario(self, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13,
                              rg_14, rg_15):
        call_scenario(self, rg_5, rg_6, rg_9, rg, rg_2, rg_3, rg_4, rg_7, rg_8, rg_10, rg_11, rg_12, rg_13, rg_14, rg_15)
        calc_coverage(__file__)
        raise_if()

