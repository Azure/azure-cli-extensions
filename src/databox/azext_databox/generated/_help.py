# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['databox job'] = """
    type: group
    short-summary: databox job
"""

helps['databox job list'] = """
    type: command
    short-summary: Lists all the jobs available under the subscription.
    examples:
      - name: JobsListByResourceGroup
        text: |-
               az databox job list --resource-group "SdkRg4981"
"""

helps['databox job show'] = """
    type: command
    short-summary: Gets information about the specified job.
    examples:
      - name: JobsGet
        text: |-
               az databox job show --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981"
      - name: JobsGet1
        text: |-
               az databox job show --expand "details" --name "SdkJob3970" --resource-group "SdkRg4981"
      - name: JobsGet2
        text: |-
               az databox job show --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981"
      - name: JobsGet3
        text: |-
               az databox job show --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981"
      - name: JobsGet4
        text: |-
               az databox job show --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981"
      - name: JobsGet5
        text: |-
               az databox job show --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981"
"""

helps['databox job create'] = """
    type: command
    short-summary: Creates a new job with the specified parameters. Existing job cannot be updated with this API and sh\
ould instead be updated with the Update job API.
    parameters:
      - name: --sku
        short-summary: The sku type.
        long-summary: |
            Usage: --sku name=XX display-name=XX family=XX

            name: Required. The sku name.
            display-name: The display name of the sku.
            family: The sku family.
    examples:
      - name: JobsCreate
        text: |-
               az databox job create --name "SdkJob3971" --location "westus" --details "{\\"contactDetails\\":{\\"conta\
ctName\\":\\"Public SDK Test\\",\\"emailList\\":[\\"testing@microsoft.com\\"],\\"phone\\":\\"1234567890\\",\\"phoneExte\
nsion\\":\\"1234\\"},\\"destinationAccountDetails\\":[{\\"dataDestinationType\\":\\"StorageAccount\\",\\"storageAccount\
Id\\":\\"/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourcegroups/databoxbvt/providers/Microsoft.Storage/stor\
ageAccounts/databoxbvttestaccount\\"}],\\"jobDetailsType\\":\\"DataBox\\",\\"shippingAddress\\":{\\"addressType\\":\\"C\
ommercial\\",\\"city\\":\\"San Francisco\\",\\"companyName\\":\\"Microsoft\\",\\"country\\":\\"US\\",\\"postalCode\\":\
\\"94107\\",\\"stateOrProvince\\":\\"CA\\",\\"streetAddress1\\":\\"16 TOWNSEND ST\\",\\"streetAddress2\\":\\"Unit 1\\"}\
}" --sku name="DataBox" --resource-group "SdkRg4981"
"""

helps['databox job update'] = """
    type: command
    short-summary: Updates the properties of an existing job.
    parameters:
      - name: --destination-account-details
        short-summary: Destination account details.
        long-summary: |
            Usage: --destination-account-details data-destination-type=XX account-id=XX share-password=XX

            data-destination-type: Required. Data Destination Type.
            account-id: Arm Id of the destination where the data has to be moved.
            share-password: Share password to be shared by all shares in SA.

            Multiple actions can be specified by using more than one --destination-account-details argument.
    examples:
      - name: JobsPatch
        text: |-
               az databox job update --name "SdkJob3971" --details "{\\"contactDetails\\":{\\"contactName\\":\\"Update \
Job\\",\\"emailList\\":[\\"testing@microsoft.com\\"],\\"phone\\":\\"1234567890\\",\\"phoneExtension\\":\\"1234\\"},\\"s\
hippingAddress\\":{\\"addressType\\":\\"Commercial\\",\\"city\\":\\"San Francisco\\",\\"companyName\\":\\"Microsoft\\",\
\\"country\\":\\"US\\",\\"postalCode\\":\\"94107\\",\\"stateOrProvince\\":\\"CA\\",\\"streetAddress1\\":\\"16 TOWNSEND \
ST\\",\\"streetAddress2\\":\\"Unit 1\\"}}" --resource-group "SdkRg4981"
"""

helps['databox job delete'] = """
    type: command
    short-summary: Deletes a job.
    examples:
      - name: JobsDelete
        text: |-
               az databox job delete --name "SdkJob3971" --resource-group "SdkRg4981"
"""

helps['databox job book-shipment-pick-up'] = """
    type: command
    short-summary: Book shipment pick up.
    examples:
      - name: BookShipmentPickupPost
        text: |-
               az databox job book-shipment-pick-up --name "TJ-636646322037905056" --resource-group "bvttoolrg6" --end-\
time "2019-09-22T18:30:00Z" --shipment-location "Front desk" --start-time "2019-09-20T18:30:00Z"
"""

helps['databox job cancel'] = """
    type: command
    short-summary: CancelJob.
    examples:
      - name: JobsCancelPost
        text: |-
               az databox job cancel --reason "CancelTest" --name "SdkJob3971" --resource-group "SdkRg4981"
"""

helps['databox job list-credentials'] = """
    type: command
    short-summary: This method gets the unencrypted secrets related to the job.
    examples:
      - name: JobsListCredentials
        text: |-
               az databox job list-credentials --name "TJ-636646322037905056" --resource-group "bvttoolrg6"
"""

helps['databox job wait'] = """
    type: command
    short-summary: Place the CLI in a waiting state until a condition of the databox job is met.
    examples:
      - name: Pause executing next line of CLI script until the databox job is successfully created.
        text: |-
               az databox job wait --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981" --created
      - name: Pause executing next line of CLI script until the databox job is successfully updated.
        text: |-
               az databox job wait --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981" --updated
      - name: Pause executing next line of CLI script until the databox job is successfully deleted.
        text: |-
               az databox job wait --expand "details" --name "SdkJob3971" --resource-group "SdkRg4981" --deleted
"""

helps['databox service'] = """
    type: group
    short-summary: databox service
"""

helps['databox service list-available-sku'] = """
    type: command
    short-summary: This method provides the list of available skus for the given subscription and location.
    examples:
      - name: AvailableSkusPost
        text: |-
               az databox service list-available-sku --country "US" --location "westus" --location "westus"
"""

helps['databox service list-available-sku-by-resource-group'] = """
    type: command
    short-summary: This method provides the list of available skus for the given subscription, resource group and locat\
ion.
    examples:
      - name: AvailableSkusByResourceGroup
        text: |-
               az databox service list-available-sku-by-resource-group --country "US" --location "westus" --location "w\
estus" --resource-group "SdkRg9836"
"""

helps['databox service region-configuration'] = """
    type: command
    short-summary: This API provides configuration details specific to given region/location.
    parameters:
      - name: --data-box-schedule-availability-request
        short-summary: Request body to get the availability for scheduling data box orders orders.
        long-summary: |
            Usage: --data-box-schedule-availability-request storage-location=XX sku-name=XX

            storage-location: Required. Location for data transfer. For locations check: https://management.azure.com/s\
ubscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
            sku-name: Required. Sku Name for which the order is to be scheduled.
      - name: --disk-schedule-availability-request
        short-summary: Request body to get the availability for scheduling disk orders.
        long-summary: |
            Usage: --disk-schedule-availability-request expected-data-size-in-terabytes=XX storage-location=XX sku-name\
=XX

            expected-data-size-in-terabytes: Required. The expected size of the data, which needs to be transferred in \
this job, in terabytes.
            storage-location: Required. Location for data transfer. For locations check: https://management.azure.com/s\
ubscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
            sku-name: Required. Sku Name for which the order is to be scheduled.
      - name: --heavy-schedule-availability-request
        short-summary: Request body to get the availability for scheduling heavy orders.
        long-summary: |
            Usage: --heavy-schedule-availability-request storage-location=XX sku-name=XX

            storage-location: Required. Location for data transfer. For locations check: https://management.azure.com/s\
ubscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
            sku-name: Required. Sku Name for which the order is to be scheduled.
    examples:
      - name: ServiceRegionConfiguration
        text: |-
               az databox service region-configuration --location "westus" --schedule-availability-request "{\\"skuName\
\\":\\"DataBox\\",\\"storageLocation\\":\\"westus\\"}"
"""

helps['databox service validate-address'] = """
    type: command
    short-summary: [DEPRECATED NOTICE: This operation will soon be removed] This method validates the customer shipping\
 address and provide alternate addresses if any.
    parameters:
      - name: --shipping-address
        short-summary: Shipping address of the customer.
        long-summary: |
            Usage: --shipping-address street-address1=XX street-address2=XX street-address3=XX city=XX state-or-provinc\
e=XX country=XX postal-code=XX zip-extended-code=XX company-name=XX address-type=XX

            street-address1: Required. Street Address line 1.
            street-address2: Street Address line 2.
            street-address3: Street Address line 3.
            city: Name of the City.
            state-or-province: Name of the State or Province.
            country: Required. Name of the Country.
            postal-code: Required. Postal code.
            zip-extended-code: Extended Zip Code.
            company-name: Name of the company.
            address-type: Type of address.
    examples:
      - name: ValidateAddressPost
        text: |-
               az databox service validate-address --location "westus" --device-type "DataBox" --shipping-address addre\
ss-type="Commercial" city="San Francisco" company-name="Microsoft" country="US" postal-code="94107" state-or-province="\
CA" street-address1="16 TOWNSEND ST" street-address2="Unit 1" --validation-type "ValidateAddress"
"""

helps['databox service validate-input'] = """
    type: command
    short-summary: This method does all necessary pre-job creation validation under subscription.
    parameters:
      - name: --create-job-validations
        short-summary: It does all pre-job creation validations.
        long-summary: |
            Usage: --create-job-validations individual-request-details=XX

            individual-request-details: Required. List of request details contain validationType and its request as key\
 and value respectively.
    examples:
      - name: ServiceValidateInputs
        text: |-
               az databox service validate-input --location "westus" --validation-request "{\\"individualRequestDetails\
\\":[{\\"destinationAccountDetails\\":[{\\"dataDestinationType\\":\\"StorageAccount\\",\\"storageAccountId\\":\\"/subsc\
riptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourcegroups/databoxbvt/providers/Microsoft.Storage/storageAccounts/dat\
aboxbvttestaccount\\"}],\\"location\\":\\"westus\\",\\"validationType\\":\\"ValidateDataDestinationDetails\\"},{\\"devi\
ceType\\":\\"DataBox\\",\\"shippingAddress\\":{\\"addressType\\":\\"Commercial\\",\\"city\\":\\"San Francisco\\",\\"com\
panyName\\":\\"Microsoft\\",\\"country\\":\\"US\\",\\"postalCode\\":\\"94107\\",\\"stateOrProvince\\":\\"CA\\",\\"stree\
tAddress1\\":\\"16 TOWNSEND ST\\",\\"streetAddress2\\":\\"Unit 1\\"},\\"validationType\\":\\"ValidateAddress\\"}],\\"va\
lidationCategory\\":\\"JobCreationValidation\\"}"
"""

helps['databox service validate-input-by-resource-group'] = """
    type: command
    short-summary: This method does all necessary pre-job creation validation under resource group.
    parameters:
      - name: --create-job-validations
        short-summary: It does all pre-job creation validations.
        long-summary: |
            Usage: --create-job-validations individual-request-details=XX

            individual-request-details: Required. List of request details contain validationType and its request as key\
 and value respectively.
    examples:
      - name: ServiceValidateInputsByResourceGroup
        text: |-
               az databox service validate-input-by-resource-group --location "westus" --resource-group "SdkRg9836" --v\
alidation-request "{\\"individualRequestDetails\\":[{\\"destinationAccountDetails\\":[{\\"dataDestinationType\\":\\"Sto\
rageAccount\\",\\"storageAccountId\\":\\"/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourcegroups/databoxbvt/\
providers/Microsoft.Storage/storageAccounts/databoxbvttestaccount\\"}],\\"location\\":\\"westus\\",\\"validationType\\"\
:\\"ValidateDataDestinationDetails\\"},{\\"deviceType\\":\\"DataBox\\",\\"shippingAddress\\":{\\"addressType\\":\\"Comm\
ercial\\",\\"city\\":\\"San Francisco\\",\\"companyName\\":\\"Microsoft\\",\\"country\\":\\"US\\",\\"postalCode\\":\\"9\
4107\\",\\"stateOrProvince\\":\\"CA\\",\\"streetAddress1\\":\\"16 TOWNSEND ST\\",\\"streetAddress2\\":\\"Unit 1\\"},\\"\
validationType\\":\\"ValidateAddress\\"}],\\"validationCategory\\":\\"JobCreationValidation\\"}"
"""
