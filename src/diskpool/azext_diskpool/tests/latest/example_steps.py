# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /DiskPools/put/Create or Update Disk Pool
@try_manual
def step_create_required(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool create '
             '--availability-zones "{zone}" '
             '--subnet-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetw'
             'orks/{vn}/subnets/default" '
             '--tier "Basic" '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az disk-pool wait --created '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


@try_manual
def step_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool create '
             '--location "{location}" '
             '--availability-zones "{zone}" '
             '--disks "{myDisk1}" '
             '--disks "{myDisk2}" '
             '--subnet-id "{subnet}" '
             '--tier "Basic" '
             '--tags "{tag}" '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az disk-pool wait --created '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/get/Get Disk Pool
@try_manual
def step_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool show '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/put/Create or Update Disk pool
@try_manual
def step_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool create '
             '--location "westus" '
             '--availability-zones "1" '
             '--disks "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/disks/vm-name_D'
             'ataDisk_0" '
             '--disks "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/disks/vm-name_D'
             'ataDisk_1" '
             '--subnet-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetw'
             'orks/{vn}/subnets/default" '
             '--sku name="Basic_V0" tier="Basic" '
             '--tags key="value" '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az disk-pool wait --created '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/get/Get Disk pool
@try_manual
def step_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool show '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/get/Get Disk Pool outbound network dependencies
@try_manual
def step_list_outbound_network_dependency_endpoint(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool list-outbound-network-dependency-endpoint '
             '--name "{myDiskPool2}" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /DiskPools/get/List Disk Pools
@try_manual
def step_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/get/List Disk Pools by subscription
@try_manual
def step_list2(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool list '
             '-g ""',
             checks=checks)


# EXAMPLE: /IscsiTargets/put/Create or Update iSCSI Target
@try_manual
def step_iscsi_target_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target create '
             '--disk-pool-name "{myDiskPool}" '
             '--acl-mode "Dynamic" '
             '--luns name="lun0" managed-disk-azure-resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/p'
             'roviders/Microsoft.Compute/disks/vm-name_DataDisk_1" '
             '--target-iqn "iqn.2005-03.org.iscsi:server1" '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az disk-pool iscsi-target wait --created '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IscsiTargets/get/Get iSCSI Target
@try_manual
def step_iscsi_target_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target show '
             '--disk-pool-name "{myDiskPool}" '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/patch/Update Disk Pool
@try_manual
def step_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool update '
             '--name "{myDiskPool}" '
             '--location "westus" '
             '--availability-zones "1" '
             '--disks "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/disks/vm-name_D'
             'ataDisk_0" '
             '--disks "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/disks/vm-name_D'
             'ataDisk_1" '
             '--subnet-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Network/virtualNetw'
             'orks/{vn}/subnets/default" '
             '--tags key="value" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/patch/Update Disk pool
@try_manual
def step_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool update '
             '--name "{myDiskPool}" '
             '--disks "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/disks/vm-name_D'
             'ataDisk_0" '
             '--disks "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.Compute/disks/vm-name_D'
             'ataDisk_1" '
             '--tags key="value" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/post/Deallocate Disk Pool
@try_manual
def step_stop(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool stop '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/post/Start Disk Pool
@try_manual
def step_start(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool start '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/delete/Delete Disk pool
@try_manual
def step_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool delete -y '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPoolZones/get/List Disk Pool Skus
@try_manual
def step_list3(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool-zone list '
             '--location "eastus"',
             checks=checks)


# EXAMPLE: /IscsiTargets/put/Create or Update iSCSI Target
@try_manual
def step_iscsi_target_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target create '
             '--disk-pool-name "{myDiskPool}" '
             '--acl-mode "Dynamic" '
             '--luns name="lun0" managed-disk-azure-resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/p'
             'roviders/Microsoft.Compute/disks/vm-name_DataDisk_1" '
             '--target-iqn "iqn.2005-03.org.iscsi:server1" '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az disk-pool iscsi-target wait --created '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IscsiTargets/get/Get iSCSI Target
@try_manual
def step_iscsi_target_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target show '
             '--disk-pool-name "{myDiskPool}" '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IscsiTargets/get/List Disk Pools by Resource Group
@try_manual
def step_iscsi_target_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target list '
             '--disk-pool-name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DiskPools/delete/Delete Disk Pool
@try_manual
def step_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool delete -y '
             '--name "{myDiskPool}" '
             '--resource-group "{rg}"',
             checks=checks)

# EXAMPLE: /IscsiTargets/patch/Update iSCSI Target
@try_manual
def step_iscsi_target_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target update '
             '--disk-pool-name "{myDiskPool}" '
             '--name "{myIscsiTarget}" '
             '--luns name="lun0" managed-disk-azure-resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/p'
             'roviders/Microsoft.Compute/disks/vm-name_DataDisk_1" '
             '--static-acls initiator-iqn="iqn.2005-03.org.iscsi:client" mapped-luns="lun0" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IscsiTargets/delete/Delete iSCSI Target
@try_manual
def step_iscsi_target_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target delete -y '
             '--disk-pool-name "{myDiskPool}" '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=checks)

# EXAMPLE: /IscsiTargets/patch/Update iSCSI Target
@try_manual
def step_iscsi_target_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target update '
             '--disk-pool-name "{myDiskPool}" '
             '--name "{myIscsiTarget}" '
             '--luns name="lun0" managed-disk-azure-resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/p'
             'roviders/Microsoft.Compute/disks/vm-name_DataDisk_1" '
             '--static-acls initiator-iqn="iqn.2005-03.org.iscsi:client" mapped-luns="lun0" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /IscsiTargets/delete/Delete iSCSI Target
@try_manual
def step_iscsi_target_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az disk-pool iscsi-target delete -y '
             '--disk-pool-name "{myDiskPool}" '
             '--name "{myIscsiTarget}" '
             '--resource-group "{rg}"',
             checks=checks)

