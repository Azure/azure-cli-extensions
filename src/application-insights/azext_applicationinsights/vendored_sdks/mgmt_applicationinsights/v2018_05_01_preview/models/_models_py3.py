# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ApplicationInsightsComponentProactiveDetectionConfiguration(Model):
    """A ProactiveDetection configuration definition.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Azure resource Id
    :vartype id: str
    :param name: Azure resource name
    :type name: str
    :ivar type: Azure resource type
    :vartype type: str
    :param location: Resource location
    :type location: str
    :ivar name1: The rule name
    :vartype name1: str
    :param enabled: A flag that indicates whether this rule is enabled by the
     user
    :type enabled: bool
    :param send_emails_to_subscription_owners: A flag that indicated whether
     notifications on this rule should be sent to subscription owners
    :type send_emails_to_subscription_owners: bool
    :param custom_emails: Custom email addresses for this rule notifications
    :type custom_emails: list[str]
    :ivar last_updated_time: The last time this rule was updated
    :vartype last_updated_time: str
    :param rule_definitions: Static definitions of the ProactiveDetection
     configuration rule (same values for all components).
    :type rule_definitions:
     ~azure.mgmt.applicationinsights.v2018_05_01_preview.models.ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions
    """

    _validation = {
        'id': {'readonly': True},
        'type': {'readonly': True},
        'name1': {'readonly': True},
        'last_updated_time': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'name1': {'key': 'properties.Name', 'type': 'str'},
        'enabled': {'key': 'properties.Enabled', 'type': 'bool'},
        'send_emails_to_subscription_owners': {'key': 'properties.SendEmailsToSubscriptionOwners', 'type': 'bool'},
        'custom_emails': {'key': 'properties.CustomEmails', 'type': '[str]'},
        'last_updated_time': {'key': 'properties.LastUpdatedTime', 'type': 'str'},
        'rule_definitions': {'key': 'properties.RuleDefinitions', 'type': 'ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions'},
    }

    def __init__(self, *, name: str=None, location: str=None, enabled: bool=None, send_emails_to_subscription_owners: bool=None, custom_emails=None, rule_definitions=None, **kwargs) -> None:
        super(ApplicationInsightsComponentProactiveDetectionConfiguration, self).__init__(**kwargs)
        self.id = None
        self.name = name
        self.type = None
        self.location = location
        self.name1 = None
        self.enabled = enabled
        self.send_emails_to_subscription_owners = send_emails_to_subscription_owners
        self.custom_emails = custom_emails
        self.last_updated_time = None
        self.rule_definitions = rule_definitions


class ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions(Model):
    """Static definitions of the ProactiveDetection configuration rule (same
    values for all components).

    :param name: The rule name
    :type name: str
    :param display_name: The rule name as it is displayed in UI
    :type display_name: str
    :param description: The rule description
    :type description: str
    :param help_url: URL which displays additional info about the proactive
     detection rule
    :type help_url: str
    :param is_hidden: A flag indicating whether the rule is hidden (from the
     UI)
    :type is_hidden: bool
    :param is_enabled_by_default: A flag indicating whether the rule is
     enabled by default
    :type is_enabled_by_default: bool
    :param is_in_preview: A flag indicating whether the rule is in preview
    :type is_in_preview: bool
    :param supports_email_notifications: A flag indicating whether email
     notifications are supported for detections for this rule
    :type supports_email_notifications: bool
    """

    _attribute_map = {
        'name': {'key': 'Name', 'type': 'str'},
        'display_name': {'key': 'DisplayName', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'help_url': {'key': 'HelpUrl', 'type': 'str'},
        'is_hidden': {'key': 'IsHidden', 'type': 'bool'},
        'is_enabled_by_default': {'key': 'IsEnabledByDefault', 'type': 'bool'},
        'is_in_preview': {'key': 'IsInPreview', 'type': 'bool'},
        'supports_email_notifications': {'key': 'SupportsEmailNotifications', 'type': 'bool'},
    }

    def __init__(self, *, name: str=None, display_name: str=None, description: str=None, help_url: str=None, is_hidden: bool=None, is_enabled_by_default: bool=None, is_in_preview: bool=None, supports_email_notifications: bool=None, **kwargs) -> None:
        super(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions, self).__init__(**kwargs)
        self.name = name
        self.display_name = display_name
        self.description = description
        self.help_url = help_url
        self.is_hidden = is_hidden
        self.is_enabled_by_default = is_enabled_by_default
        self.is_in_preview = is_in_preview
        self.supports_email_notifications = supports_email_notifications


class CloudError(Model):
    """CloudError.
    """

    _attribute_map = {
    }
