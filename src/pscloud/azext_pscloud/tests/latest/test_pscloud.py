# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.testsdk import *


class PscloudScenario(ScenarioTest):
    # TODO: add tests here
    def test_pscloud_reservation_crud(self):
        self.cmd("az pscloud list", checks=[
                     self.greater_than('length(@)', 0)
                 ])
        self.cmd("az pscloud show --resource-group aaa --reservation-name cliTestReservationCUS", checks=[
            self.check('reservationInternalId', '4bd52cb0-745a-11f0-ae52-b65160902b53')
        ])

    def test_pscloud_storagepool_create(self):
        """Test pscloud pool create command"""
        # Create storagepool command with proper JSON quoting for vnet-injection
        create_storagepool_cmd = """az pscloud pool create --resource-group aaa --storage-pool-name cliTestSPCUS --location "Central US" --availability-zone "1" --vnet-injection '{{"subnet-id":"/subscriptions/3490e0a3-59fd-4ed4-baed-873d4e401b99/resourceGroups/pure-cli-testing-vnet/providers/Microsoft.Network/virtualNetworks/pure-cli-vnet/subnets/delg-subnet","vnet-id":"/subscriptions/3490e0a3-59fd-4ed4-baed-873d4e401b99/resourceGroups/pure-cli-testing-vnet/providers/Microsoft.Network/virtualNetworks/pure-cli-vnet"}}' --provisioned-bandwidth 992 --reservation-id "/subscriptions/3490e0a3-59fd-4ed4-baed-873d4e401b99/resourceGroups/aaa/providers/PureStorage.Block/reservations/cliTestReservationCUS" --system-assigned --debug"""

        # Execute the create command
        self.cmd(create_storagepool_cmd)

    def test_pscloud_storagepool_get(self):
        """Test pool show, list commands with basic field checks"""

        # 1. Test storagepool show
        self.cmd(
            "az pscloud pool show --resource-group 06June2025 --storage-pool-name mochauhan-bug255",
            checks=[
                self.exists('id'),
                self.exists('name'),
                self.exists('location'),
                self.exists('vnetInjection'),
                self.exists('provisionedBandwidthMbPerSec')
            ]
        )

        # 2. Test storagepool list
        self.cmd(
            "az pscloud pool list",
            checks=[
                self.greater_than('length(@)', 0)
            ]
        )

    def test_pscloud_storagepool_postAction(self):
        # 3. Test storagepool get-health-status
        self.cmd(
            "az pscloud pool get-health-status --resource-group aaa --storage-pool-name cliTestSPCUS",
            checks=[
                self.exists('health'),
                self.exists('health.bandwidthUsage'),
                self.exists('health.iopsUsage'),
                self.exists('health.space')
            ]
        )    
        self.cmd(
            "az pscloud pool get-avs-status --resource-group aaa --storage-pool-name cliTestSPCUS",
            checks=[
                self.exists('currentConnectionStatus')
            ]
        )

    def test_pscloud_storagepool_update(self):
        """Test pscloud pool update command"""
        # Test updating provisioned bandwidth
        self.cmd(
            "az pscloud pool update --resource-group aaa --name cliTestSPCUS --provisioned-bandwidth 1094"
        )
    def test_pscloud_storagepool_delete(self):
        """Test pscloud pool delete command"""
        # Test deleting a storage pool
        self.cmd(
            "az pscloud pool delete --resource-group aaa --storage-pool-name cliTestSPCUS --yes"
        )    
    pass
