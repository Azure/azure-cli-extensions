# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /ApplyUpdates/put/ApplyUpdates_CreateOrUpdate
@try_manual
def step__applyupdates_put_applyupdates_createorupdate(test, rg):
    test.cmd('az maintenance applyupdate create '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtest1" '
             '--resource-type "virtualMachineScaleSets"',
             checks=[])


# EXAMPLE: /ApplyUpdates/put/ApplyUpdates_CreateOrUpdateParent
@try_manual
def step__applyupdates_put_applyupdates_createorupdateparent(test, rg):
    test.cmd('az maintenance applyupdate create '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdvm1" '
             '--resource-parent-name "smdtest1" '
             '--resource-parent-type "virtualMachineScaleSets" '
             '--resource-type "virtualMachines"',
             checks=[])


# EXAMPLE: /ApplyUpdates/get/ApplyUpdates_Get
@try_manual
def step__applyupdates_get_applyupdates_get(test, rg):
    test.cmd('az maintenance applyupdate show '
             '--name "{myApplyUpdate}" '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtest1" '
             '--resource-type "virtualMachineScaleSets"',
             checks=[])


# EXAMPLE: /ApplyUpdates/get/ApplyUpdates_GetParent
@try_manual
def step__applyupdates_get_applyupdates_getparent(test, rg):
    test.cmd('az maintenance applyupdate get-parent '
             '--name "{myApplyUpdate}" '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdvm1" '
             '--resource-parent-name "smdtest1" '
             '--resource-parent-type "virtualMachineScaleSets" '
             '--resource-type "virtualMachines"',
             checks=[])


# EXAMPLE: /MaintenanceConfigurations/put/MaintenanceConfigurations_CreateOrUpdateForResource
@try_manual
def step__maintenanceconfigurations_put_maintenanceconfigurations_createorupdateforresource(test, rg):
    test.cmd('az maintenance configuration create '
             '--location "westus2" '
             '--maintenance-scope "OSImage" '
             '--maintenance-window-duration "05:00" '
             '--maintenance-window-expiration-date-time "9999-12-31 00:00" '
             '--maintenance-window-recur-every "Day" '
             '--maintenance-window-start-date-time "2020-04-30 08:00" '
             '--maintenance-window-time-zone "Pacific Standard Time" '
             '--namespace "Microsoft.Maintenance" '
             '--visibility "Custom" '
             '--resource-group "{rg}" '
             '--resource-name "{myMaintenanceConfiguration2}"',
             checks=[])


# EXAMPLE: /MaintenanceConfigurations/get/MaintenanceConfigurations_GetForResource
@try_manual
def step__maintenanceconfigurations_get_maintenanceconfigurations_getforresource(test, rg):
    test.cmd('az maintenance configuration show '
             '--resource-group "{rg}" '
             '--resource-name "{myMaintenanceConfiguration2}"',
             checks=[])


# EXAMPLE: /MaintenanceConfigurations/get/MaintenanceConfigurations_List
@try_manual
def step__maintenanceconfigurations_get_maintenanceconfigurations_list(test, rg):
    test.cmd('az maintenance configuration list',
             checks=[])


# EXAMPLE: /MaintenanceConfigurations/patch/MaintenanceConfigurations_UpdateForResource
@try_manual
def step__maintenanceconfigurations_patch_maintenanceconfigurations_updateforresource(test, rg):
    test.cmd('az maintenance configuration update '
             '--location "westus2" '
             '--maintenance-scope "OSImage" '
             '--maintenance-window-duration "05:00" '
             '--maintenance-window-expiration-date-time "9999-12-31 00:00" '
             '--maintenance-window-recur-every "Month Third Sunday" '
             '--maintenance-window-start-date-time "2020-04-30 08:00" '
             '--maintenance-window-time-zone "Pacific Standard Time" '
             '--namespace "Microsoft.Maintenance" '
             '--visibility "Custom" '
             '--resource-group "{rg}" '
             '--resource-name "{myMaintenanceConfiguration2}"',
             checks=[])


# EXAMPLE: /ConfigurationAssignments/put/ConfigurationAssignments_CreateOrUpdate
@try_manual
def step__configurationassignments_put_configurationassignments_createorupdate(test, rg):
    test.cmd('az maintenance assignment create '
             '--maintenance-configuration-id "/subscriptions/{subscription_id}/resourcegroups/{rg}/providers/Microsoft.'
             'Maintenance/maintenanceConfigurations/{myMaintenanceConfiguration2}" '
             '--name "{myConfigurationAssignment2}" '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtest1" '
             '--resource-type "virtualMachineScaleSets"',
             checks=[])


# EXAMPLE: /ConfigurationAssignments/put/ConfigurationAssignments_CreateOrUpdateParent
@try_manual
def step__configurationassignments_put_configurationassignments_createorupdateparent(test, rg):
    test.cmd('az maintenance assignment create '
             '--maintenance-configuration-id "/subscriptions/{subscription_id}/resourcegroups/{rg}/providers/Microsoft.'
             'Maintenance/maintenanceConfigurations/{myMaintenanceConfiguration}" '
             '--name "{myConfigurationAssignment}" '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdvm1" '
             '--resource-parent-name "smdtest1" '
             '--resource-parent-type "virtualMachineScaleSets" '
             '--resource-type "virtualMachines"',
             checks=[])


# EXAMPLE: /ConfigurationAssignments/get/ConfigurationAssignments_List
@try_manual
def step__configurationassignments_get_configurationassignments_list(test, rg):
    test.cmd('az maintenance assignment list '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtest1" '
             '--resource-type "virtualMachineScaleSets"',
             checks=[])


# EXAMPLE: /ConfigurationAssignments/get/ConfigurationAssignments_ListParent
@try_manual
def step__configurationassignments_get_configurationassignments_listparent(test, rg):
    test.cmd('az maintenance assignment list-parent '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtestvm1" '
             '--resource-parent-name "smdtest1" '
             '--resource-parent-type "virtualMachineScaleSets" '
             '--resource-type "virtualMachines"',
             checks=[])


# EXAMPLE: /ConfigurationAssignments/delete/ConfigurationAssignments_DeleteParent
@try_manual
def step__configurationassignments_delete_configurationassignments_deleteparent(test, rg):
    test.cmd('az maintenance assignment delete -y '
             '--name "{myConfigurationAssignment2}" '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdvm1" '
             '--resource-parent-name "smdtest1" '
             '--resource-parent-type "virtualMachineScaleSets" '
             '--resource-type "virtualMachines"',
             checks=[])


# EXAMPLE: /PublicMaintenanceConfigurations/get/PublicMaintenanceConfigurations_GetForResource
@try_manual
def step__publicmaintenanceconfigurations_get_publicmaintenanceconfigurations_getforresource(test, rg):
    test.cmd('az maintenance public-configuration show '
             '--resource-name "{myMaintenanceConfiguration2}"',
             checks=[])


# EXAMPLE: /PublicMaintenanceConfigurations/get/PublicMaintenanceConfigurations_List
@try_manual
def step__publicmaintenanceconfigurations_get_publicmaintenanceconfigurations_list(test, rg):
    test.cmd('az maintenance public-configuration list',
             checks=[])


# EXAMPLE: /Updates/get/Updates_List
@try_manual
def step__updates_get_updates_list(test, rg):
    test.cmd('az maintenance update list '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtest1" '
             '--resource-type "virtualMachineScaleSets"',
             checks=[])


# EXAMPLE: /Updates/get/Updates_ListParent
@try_manual
def step__updates_get_updates_listparent(test, rg):
    test.cmd('az maintenance update list-parent '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "1" '
             '--resource-parent-name "smdtest1" '
             '--resource-parent-type "virtualMachineScaleSets" '
             '--resource-type "virtualMachines"',
             checks=[])


# EXAMPLE: /ConfigurationAssignments/delete/ConfigurationAssignments_Delete
@try_manual
def step__configurationassignments_delete_configurationassignments_delete(test, rg):
    test.cmd('az maintenance assignment delete -y '
             '--name "{myConfigurationAssignment2}" '
             '--provider-name "Microsoft.Compute" '
             '--resource-group "{rg}" '
             '--resource-name "smdtest1" '
             '--resource-type "virtualMachineScaleSets"',
             checks=[])


# EXAMPLE: /MaintenanceConfigurations/delete/MaintenanceConfigurations_DeleteForResource
@try_manual
def step__maintenanceconfigurations_delete_maintenanceconfigurations_deleteforresource(test, rg):
    test.cmd('az maintenance configuration delete -y '
             '--resource-group "{rg}" '
             '--resource-name "example1"',
             checks=[])


@try_manual
def cleanup(test, rg):
    pass


@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__applyupdates_put_applyupdates_createorupdate(test, rg)
    step__applyupdates_put_applyupdates_createorupdateparent(test, rg)
    step__applyupdates_get_applyupdates_get(test, rg)
    step__applyupdates_get_applyupdates_getparent(test, rg)
    step__maintenanceconfigurations_put_maintenanceconfigurations_createorupdateforresource(test, rg)
    step__maintenanceconfigurations_get_maintenanceconfigurations_getforresource(test, rg)
    step__maintenanceconfigurations_get_maintenanceconfigurations_list(test, rg)
    step__maintenanceconfigurations_patch_maintenanceconfigurations_updateforresource(test, rg)
    step__configurationassignments_put_configurationassignments_createorupdate(test, rg)
    step__configurationassignments_put_configurationassignments_createorupdateparent(test, rg)
    step__configurationassignments_get_configurationassignments_list(test, rg)
    step__configurationassignments_get_configurationassignments_listparent(test, rg)
    step__configurationassignments_delete_configurationassignments_deleteparent(test, rg)
    step__publicmaintenanceconfigurations_get_publicmaintenanceconfigurations_getforresource(test, rg)
    step__publicmaintenanceconfigurations_get_publicmaintenanceconfigurations_list(test, rg)
    step__updates_get_updates_list(test, rg)
    step__updates_get_updates_listparent(test, rg)
    step__configurationassignments_delete_configurationassignments_delete(test, rg)
    step__maintenanceconfigurations_delete_maintenanceconfigurations_deleteforresource(test, rg)
    cleanup(test, rg)


@try_manual
class MaintenanceClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestmaintenance_examplerg'[:7], key='rg', parameter_name='rg')
    def test_maintenance(self, rg):

        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'e9b9685d-78e4-44c4-a81c-64a14f9b87b6': 'e9b9685d-78e4-44c4-a81c-64a14f9b87b6',
            'policy1': 'policy1',
            'MaintenanceConfigurations_2': 'configuration1',
            'workervmConfiguration': 'workervmConfiguration',
            'ConfigurationAssignments_2': 'workervmPolicy',
        })

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()
