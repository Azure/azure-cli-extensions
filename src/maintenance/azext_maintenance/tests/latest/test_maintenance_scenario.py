# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_applyupdate_for_resource_group_list
from .example_steps import step_applyupdate_create
from .example_steps import step_applyupdate_create2
from .example_steps import step_applyupdate_show
from .example_steps import step_applyupdate_show_parent
from .example_steps import step_applyupdate_list
from .example_steps import step_configuration_create
from .example_steps import step_configuration_show
from .example_steps import step_configuration_list
from .example_steps import step_configuration_update
from .example_steps import step_assignment_create
from .example_steps import step_assignment_create2
from .example_steps import step_assignment_list
from .example_steps import step_assignment_list_parent
from .example_steps import step_assignment_delete
from .example_steps import step_assignment_delete2
from .example_steps import step_configuration_delete
from .example_steps import step_configuration_for_resource_group_list
from .example_steps import step_public_configuration_show
from .example_steps import step_public_configuration_list
from .example_steps import step_update_list
from .example_steps import step_update_list_parent
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg):
    setup_scenario(test, rg)
    step_applyupdate_for_resource_group_list(test, rg, checks=[])
    step_applyupdate_create(test, rg, checks=[])
    step_applyupdate_create2(test, rg, checks=[])
    step_applyupdate_show(test, rg, checks=[])
    step_applyupdate_show_parent(test, rg, checks=[])
    step_applyupdate_list(test, rg, checks=[])
    step_configuration_create(test, rg, checks=[])
    step_configuration_show(test, rg, checks=[])
    step_configuration_list(test, rg, checks=[])
    step_configuration_update(test, rg, checks=[])
    step_assignment_create(test, rg, checks=[
        test.check("maintenanceConfigurationId", "/subscriptions/{subscription_id}/resourcegroups/{rg}/providers/Micros"
                   "oft.Maintenance/maintenanceConfigurations/{myMaintenanceConfiguration2}", case_sensitive=False),
        test.check("name", "{myConfigurationAssignment2}", case_sensitive=False),
    ])
    step_assignment_create2(test, rg, checks=[
        test.check("maintenanceConfigurationId", "/subscriptions/{subscription_id}/resourcegroups/{rg}/providers/Micros"
                   "oft.Maintenance/maintenanceConfigurations/{myMaintenanceConfiguration}", case_sensitive=False),
        test.check("name", "{myConfigurationAssignment}", case_sensitive=False),
    ])
    step_assignment_list(test, rg, checks=[
        test.check('length(@)', 1),
    ])
    step_assignment_list_parent(test, rg, checks=[])
    step_assignment_delete(test, rg, checks=[])
    step_assignment_delete2(test, rg, checks=[])
    step_configuration_delete(test, rg, checks=[])
    step_configuration_for_resource_group_list(test, rg, checks=[])
    step_public_configuration_show(test, rg, checks=[])
    step_public_configuration_list(test, rg, checks=[])
    step_update_list(test, rg, checks=[])
    step_update_list_parent(test, rg, checks=[])
    cleanup_scenario(test, rg)


# Test class for Scenario
@try_manual
class MaintenanceScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(MaintenanceScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'MaintenanceConfigurations_2': 'configuration1',
            'myApplyUpdate': 'e9b9685d-78e4-44c4-a81c-64a14f9b87b6',
            'myMaintenanceConfiguration': 'policy1',
            'myMaintenanceConfiguration2': 'configuration2',
            'myConfigurationAssignment': 'workervmPolicy2',
            'myConfigurationAssignment2': 'workervmConfiguration2',
            'HSProbeSettings': '{"protocol": "https", "port": "80", "requestPath": "/"}'
        })

    @ResourceGroupPreparer(name_prefix='clitestmaintenance_examplerg'[:7], key='rg', parameter_name='rg')
    def test_maintenance_Scenario(self, rg):
        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()
