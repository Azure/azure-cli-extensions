# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from azure.cli.core.commands import CliCommandType
from azext_maintenance.generated._client_factory import (
    cf_public_maintenance_configuration,
    cf_apply_update,
    cf_configuration_assignment,
    cf_maintenance_configuration,
    cf_update,
)


maintenance_apply_update = CliCommandType(
    operations_tmpl=(
        'azext_maintenance.vendored_sdks.maintenance.operations._apply_updates_operations#ApplyUpdatesOperations.{}'
    ),
    client_factory=cf_apply_update,
)


maintenance_configuration_assignment = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._configuration_assignments_operations#ConfigurationAssignmentsOperations.{}',
    client_factory=cf_configuration_assignment,
)


maintenance_maintenance_configuration = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._maintenance_configurations_operations#MaintenanceConfigurationsOperations.{}',
    client_factory=cf_maintenance_configuration,
)


maintenance_public_maintenance_configuration = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._public_maintenance_configurations_operations#PublicMaintenanceConfigurationsOperations.{}',
    client_factory=cf_public_maintenance_configuration,
)


maintenance_update = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._updates_operations#UpdatesOperations.{}',
    client_factory=cf_update,
)


def load_command_table(self, _):

    with self.command_group('maintenance applyupdate', maintenance_apply_update, client_factory=cf_apply_update) as g:
        g.custom_command('list', 'maintenance_applyupdate_list')
        g.custom_show_command('show', 'maintenance_applyupdate_show')
        g.custom_command('create', 'maintenance_applyupdate_create')
        g.custom_command('update', 'maintenance_applyupdate_update')
        g.custom_command('create-or-update-parent', 'maintenance_applyupdate_create_or_update_parent')
        g.custom_command('show-parent', 'maintenance_applyupdate_show_parent')

    with self.command_group(
        'maintenance assignment', maintenance_configuration_assignment, client_factory=cf_configuration_assignment
    ) as g:
        g.custom_command('list', 'maintenance_assignment_list')
        g.custom_show_command('show', 'maintenance_assignment_show')
        g.custom_command('create', 'maintenance_assignment_create')
        g.generic_update_command(
            'update', custom_func_name='maintenance_assignment_update', setter_arg_name='configuration_assignment'
        )
        g.custom_command('delete', 'maintenance_assignment_delete', confirmation=True)
        g.custom_command('create-or-update-parent', 'maintenance_assignment_create_or_update_parent')
        g.custom_command('delete-parent', 'maintenance_assignment_delete_parent')
        g.custom_command('list-parent', 'maintenance_assignment_list_parent')
        g.custom_command('show-parent', 'maintenance_assignment_show_parent')

    with self.command_group(
        'maintenance configuration', maintenance_maintenance_configuration, client_factory=cf_maintenance_configuration
    ) as g:
        g.custom_command('list', 'maintenance_configuration_list')
        g.custom_show_command('show', 'maintenance_configuration_show')
        g.custom_command('create', 'maintenance_configuration_create')
        g.custom_command('update', 'maintenance_configuration_update')
        g.custom_command('delete', 'maintenance_configuration_delete', confirmation=True)

    with self.command_group(
        'maintenance public-configuration',
        maintenance_public_maintenance_configuration,
        client_factory=cf_public_maintenance_configuration,
    ) as g:
        g.custom_command('list', 'maintenance_public_configuration_list')
        g.custom_show_command('show', 'maintenance_public_configuration_show')

    with self.command_group('maintenance update', maintenance_update, client_factory=cf_update) as g:
        g.custom_command('list', 'maintenance_update_list')
        g.custom_command('list-parent', 'maintenance_update_list_parent')

    with self.command_group('maintenance', is_experimental=True):
        pass
