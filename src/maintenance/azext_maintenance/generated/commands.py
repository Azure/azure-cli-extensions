# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from azure.cli.core.commands import CliCommandType
from azext_maintenance.generated._client_factory import (
    cf_public_maintenance_configuration,
    cf_apply_update,
    cf_configuration_assignment,
    cf_maintenance_configuration,
    cf_update,
)


maintenance_apply_update = CliCommandType(
    operations_tmpl=(
        'azext_maintenance.vendored_sdks.maintenance.operations._apply_updates_operations#ApplyUpdatesOperations.{}'
    ),
    client_factory=cf_apply_update,
)


maintenance_configuration_assignment = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._configuration_assignments_operations#ConfigurationAssignmentsOperations.{}',
    client_factory=cf_configuration_assignment,
)


maintenance_maintenance_configuration = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._maintenance_configurations_operations#MaintenanceConfigurationsOperations.{}',
    client_factory=cf_maintenance_configuration,
)


maintenance_public_maintenance_configuration = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._public_maintenance_configurations_operations#PublicMaintenanceConfigurationsOperations.{}',
    client_factory=cf_public_maintenance_configuration,
)


maintenance_update = CliCommandType(
    operations_tmpl='azext_maintenance.vendored_sdks.maintenance.operations._updates_operations#UpdatesOperations.{}',
    client_factory=cf_update,
)


def load_command_table(self, _):
    pass
