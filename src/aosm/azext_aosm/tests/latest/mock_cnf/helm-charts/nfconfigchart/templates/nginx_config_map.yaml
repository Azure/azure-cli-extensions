apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
# This writes the nginx config file to the ConfigMap and deployment.yaml mounts it as a volume 
# to the right place.
data:
  default.conf: |
    log_format client '$remote_addr - $remote_user $request_time $upstream_response_time '
                    '[$time_local] "$request" $status $body_bytes_sent $request_body "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    server {
        listen       80;
        listen       5222;
        listen  [::]:80;
        server_name  localhost;

        access_log  /var/log/nginx/host.access.log  client;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            error_page 405 =200 $uri;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location = /nf-config/v1/config {  
            #access_log logs/uaa_access.log client;
            # add the proper port or IP address if Nginx is not on 127.0.0.1:80
            # This results in a Bad Gateway.  We could pass it back to the nf-agent
            # but haven't worked out how to put a body in it here.
            proxy_pass http://127.0.0.1:8123/nf-status/v1/report;
            error_page 405 =200 $uri;
        }
        
        location = /post_thing {
            # turn off logging here to avoid double logging
            access_log off;
            error_page 405 =200 $uri;
        }

        location = /nf-config/v1/delete {
            #access_log logs/uaa_access.log client;
            # add the proper port or IP address if Nginx is not on 127.0.0.1:80
            proxy_pass http://127.0.0.1:8123/nf-status/v1/report;
            error_page 405 =200 $uri;
        }
    }
