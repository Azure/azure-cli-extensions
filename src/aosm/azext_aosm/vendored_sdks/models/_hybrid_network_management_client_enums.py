# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class ApplicationEnablement(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The application enablement.
    """

    UNKNOWN = "Unknown"
    ENABLED = "Enabled"
    DISABLED = "Disabled"

class ArtifactManifestState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact manifest state.
    """

    UNKNOWN = "Unknown"
    UPLOADING = "Uploading"
    UPLOADED = "Uploaded"
    VALIDATING = "Validating"
    VALIDATION_FAILED = "ValidationFailed"
    SUCCEEDED = "Succeeded"

class ArtifactReplicationStrategy(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The replication strategy.
    """

    UNKNOWN = "Unknown"
    SINGLE_REPLICATION = "SingleReplication"
    GEO_REPLICATION = "GeoReplication"

class ArtifactState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact state.
    """

    UNKNOWN = "Unknown"
    PREVIEW = "Preview"
    ACTIVE = "Active"
    DEPRECATED = "Deprecated"

class ArtifactStoreType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact store type.
    """

    UNKNOWN = "Unknown"
    AZURE_CONTAINER_REGISTRY = "AzureContainerRegistry"
    AZURE_STORAGE_ACCOUNT = "AzureStorageAccount"

class ArtifactType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact type.
    """

    UNKNOWN = "Unknown"
    OCI_ARTIFACT = "OCIArtifact"
    VHD_IMAGE_FILE = "VhdImageFile"
    ARM_TEMPLATE = "ArmTemplate"
    IMAGE_FILE = "ImageFile"

class AzureArcKubernetesArtifactType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact type.
    """

    UNKNOWN = "Unknown"
    HELM_PACKAGE = "HelmPackage"

class AzureCoreArtifactType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact type.
    """

    UNKNOWN = "Unknown"
    VHD_IMAGE_FILE = "VhdImageFile"
    ARM_TEMPLATE = "ArmTemplate"

class AzureCoreDelegatedArtifactType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact type.
    """

    UNKNOWN = "Unknown"
    IMAGE_FILE = "ImageFile"

class AzureOperatorNexusArtifactType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The artifact type.
    """

    UNKNOWN = "Unknown"
    IMAGE_FILE = "ImageFile"
    ARM_TEMPLATE = "ArmTemplate"

class ClusterType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The cluster type.
    """

    AZURE_KUBERNETES_SERVICE = "AzureKubernetesService"
    ARC_CONNECTED_K8_S = "ArcConnectedK8s"
    HYBRID_AKS = "HybridAKS"

class ConfigurationGenerationType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The configuration generation type.
    """

    UNKNOWN = "Unknown"
    HANDLEBAR_TEMPLATE = "HandlebarTemplate"

class ContainerizedNetworkFunctionNFVIType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The network function type.
    """

    UNKNOWN = "Unknown"
    AZURE_ARC_KUBERNETES = "AzureArcKubernetes"

class CreatedByType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The type of identity that created the resource.
    """

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"

class CredentialType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The credential type.
    """

    UNKNOWN = "Unknown"
    AZURE_CONTAINER_REGISTRY_SCOPED_TOKEN = "AzureContainerRegistryScopedToken"
    AZURE_STORAGE_ACCOUNT_TOKEN = "AzureStorageAccountToken"

class DelegatedNetworkFunctionNFVIType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The network function type.
    """

    UNKNOWN = "Unknown"
    AZURE_CORE = "AzureCore"

class HttpMethod(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The http method of the request.
    """

    UNKNOWN = "Unknown"
    POST = "Post"
    PUT = "Put"
    GET = "Get"
    PATCH = "Patch"
    DELETE = "Delete"

class ManagedServiceIdentityType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Type of managed service identity (where both SystemAssigned and UserAssigned types are
    allowed).
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"

class NetworkFunctionPublisherArtifactType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Network Function publisher artifact type.
    """

    UNKNOWN = "Unknown"
    HELM_PACKAGE = "HelmPackage"
    VHD_IMAGE_FILE = "VhdImageFile"
    ARM_TEMPLATE = "ArmTemplate"
    IMAGE_FILE = "ImageFile"

class NetworkFunctionType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The network function type.
    """

    UNKNOWN = "Unknown"
    VIRTUAL_NETWORK_FUNCTION = "VirtualNetworkFunction"
    CONTAINERIZED_NETWORK_FUNCTION = "ContainerizedNetworkFunction"
    DELEGATED_NETWORK_FUNCTION = "DelegatedNetworkFunction"

class NFVIType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The NFVI type.
    """

    UNKNOWN = "Unknown"
    AZURE_ARC_KUBERNETES = "AzureArcKubernetes"
    AZURE_CORE = "AzureCore"
    AZURE_OPERATOR_NEXUS = "AzureOperatorNexus"

class ProvisioningState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The current provisioning state.
    """

    UNKNOWN = "Unknown"
    SUCCEEDED = "Succeeded"
    ACCEPTED = "Accepted"
    DELETING = "Deleting"
    FAILED = "Failed"
    CANCELED = "Canceled"
    DELETED = "Deleted"
    CONVERGING = "Converging"

class PublisherScope(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Publisher Scope.
    """

    UNKNOWN = "Unknown"
    PUBLIC = "Public"
    PRIVATE = "Private"

class TemplateType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The template type.
    """

    UNKNOWN = "Unknown"
    ARM_TEMPLATE = "ArmTemplate"

class Type(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The resource element template type.
    """

    UNKNOWN = "Unknown"
    ARM_RESOURCE_DEFINITION = "ArmResourceDefinition"
    CONFIGURATION_DEFINITION = "ConfigurationDefinition"
    NETWORK_FUNCTION_DEFINITION = "NetworkFunctionDefinition"

class VersionState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The configuration group schema state.
    """

    UNKNOWN = "Unknown"
    PREVIEW = "Preview"
    ACTIVE = "Active"
    DEPRECATED = "Deprecated"
    VALIDATING = "Validating"
    VALIDATION_FAILED = "ValidationFailed"

class VirtualNetworkFunctionNFVIType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The network function type.
    """

    UNKNOWN = "Unknown"
    AZURE_CORE = "AzureCore"
    AZURE_OPERATOR_NEXUS = "AzureOperatorNexus"
