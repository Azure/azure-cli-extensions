# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    APIServerAccessProfile,
    AgentProfile,
    AutoUpgradeNodeImageSelection,
    AutoUpgradeProfile,
    AutoUpgradeProfileListResult,
    AutoUpgradeProfileStatus,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    Fleet,
    FleetCredentialResult,
    FleetCredentialResults,
    FleetHubProfile,
    FleetListResult,
    FleetManagedNamespace,
    FleetManagedNamespaceListResult,
    FleetManagedNamespacePatch,
    FleetManagedNamespaceStatus,
    FleetMember,
    FleetMemberListResult,
    FleetMemberStatus,
    FleetMemberUpdate,
    FleetPatch,
    FleetStatus,
    FleetUpdateStrategy,
    FleetUpdateStrategyListResult,
    Gate,
    GateConfiguration,
    GateListResult,
    GatePatch,
    GatePatchProperties,
    GateTarget,
    GenerateResponse,
    ManagedClusterUpdate,
    ManagedClusterUpgradeSpec,
    ManagedNamespaceProperties,
    ManagedServiceIdentity,
    MemberUpdateStatus,
    MetaV1LabelSelector,
    MetaV1LabelSelectorRequirement,
    NetworkPolicy,
    NodeImageSelection,
    NodeImageSelectionStatus,
    NodeImageVersion,
    Operation,
    OperationDisplay,
    OperationListResult,
    PlacementProfile,
    PlacementV1Affinity,
    PlacementV1ClusterAffinity,
    PlacementV1ClusterResourcePlacementSpec,
    PlacementV1ClusterSelector,
    PlacementV1ClusterSelectorTerm,
    PlacementV1PlacementPolicy,
    PlacementV1PropertySelector,
    PlacementV1PropertySelectorRequirement,
    PlacementV1Toleration,
    PropagationPolicy,
    ProxyResource,
    Resource,
    ResourceQuota,
    SkipProperties,
    SkipTarget,
    SystemData,
    TrackedResource,
    UpdateGroup,
    UpdateGroupStatus,
    UpdateRun,
    UpdateRunGateStatus,
    UpdateRunGateTargetProperties,
    UpdateRunListResult,
    UpdateRunStatus,
    UpdateRunStrategy,
    UpdateStage,
    UpdateStageStatus,
    UpdateStatus,
    UserAssignedIdentity,
    WaitStatus,
)

from ._container_service_fleet_mgmt_client_enums import (  # type: ignore
    ActionType,
    AdoptionPolicy,
    AutoUpgradeLastTriggerStatus,
    AutoUpgradeNodeImageSelectionType,
    AutoUpgradeProfileProvisioningState,
    CreatedByType,
    DeletePolicy,
    FleetManagedNamespaceProvisioningState,
    FleetMemberProvisioningState,
    FleetProvisioningState,
    FleetUpdateStrategyProvisioningState,
    GateProvisioningState,
    GateState,
    GateType,
    LabelSelectorOperator,
    ManagedClusterUpgradeType,
    ManagedServiceIdentityType,
    NodeImageSelectionType,
    Origin,
    PlacementType,
    PolicyRule,
    PropagationType,
    PropertySelectorOperator,
    TaintEffect,
    TargetType,
    Timing,
    TolerationOperator,
    UpdateRunProvisioningState,
    UpdateState,
    UpgradeChannel,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "APIServerAccessProfile",
    "AgentProfile",
    "AutoUpgradeNodeImageSelection",
    "AutoUpgradeProfile",
    "AutoUpgradeProfileListResult",
    "AutoUpgradeProfileStatus",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "Fleet",
    "FleetCredentialResult",
    "FleetCredentialResults",
    "FleetHubProfile",
    "FleetListResult",
    "FleetManagedNamespace",
    "FleetManagedNamespaceListResult",
    "FleetManagedNamespacePatch",
    "FleetManagedNamespaceStatus",
    "FleetMember",
    "FleetMemberListResult",
    "FleetMemberStatus",
    "FleetMemberUpdate",
    "FleetPatch",
    "FleetStatus",
    "FleetUpdateStrategy",
    "FleetUpdateStrategyListResult",
    "Gate",
    "GateConfiguration",
    "GateListResult",
    "GatePatch",
    "GatePatchProperties",
    "GateTarget",
    "GenerateResponse",
    "ManagedClusterUpdate",
    "ManagedClusterUpgradeSpec",
    "ManagedNamespaceProperties",
    "ManagedServiceIdentity",
    "MemberUpdateStatus",
    "MetaV1LabelSelector",
    "MetaV1LabelSelectorRequirement",
    "NetworkPolicy",
    "NodeImageSelection",
    "NodeImageSelectionStatus",
    "NodeImageVersion",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "PlacementProfile",
    "PlacementV1Affinity",
    "PlacementV1ClusterAffinity",
    "PlacementV1ClusterResourcePlacementSpec",
    "PlacementV1ClusterSelector",
    "PlacementV1ClusterSelectorTerm",
    "PlacementV1PlacementPolicy",
    "PlacementV1PropertySelector",
    "PlacementV1PropertySelectorRequirement",
    "PlacementV1Toleration",
    "PropagationPolicy",
    "ProxyResource",
    "Resource",
    "ResourceQuota",
    "SkipProperties",
    "SkipTarget",
    "SystemData",
    "TrackedResource",
    "UpdateGroup",
    "UpdateGroupStatus",
    "UpdateRun",
    "UpdateRunGateStatus",
    "UpdateRunGateTargetProperties",
    "UpdateRunListResult",
    "UpdateRunStatus",
    "UpdateRunStrategy",
    "UpdateStage",
    "UpdateStageStatus",
    "UpdateStatus",
    "UserAssignedIdentity",
    "WaitStatus",
    "ActionType",
    "AdoptionPolicy",
    "AutoUpgradeLastTriggerStatus",
    "AutoUpgradeNodeImageSelectionType",
    "AutoUpgradeProfileProvisioningState",
    "CreatedByType",
    "DeletePolicy",
    "FleetManagedNamespaceProvisioningState",
    "FleetMemberProvisioningState",
    "FleetProvisioningState",
    "FleetUpdateStrategyProvisioningState",
    "GateProvisioningState",
    "GateState",
    "GateType",
    "LabelSelectorOperator",
    "ManagedClusterUpgradeType",
    "ManagedServiceIdentityType",
    "NodeImageSelectionType",
    "Origin",
    "PlacementType",
    "PolicyRule",
    "PropagationType",
    "PropertySelectorOperator",
    "TaintEffect",
    "TargetType",
    "Timing",
    "TolerationOperator",
    "UpdateRunProvisioningState",
    "UpdateState",
    "UpgradeChannel",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
