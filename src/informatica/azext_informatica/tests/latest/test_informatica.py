# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.testsdk import (ScenarioTest, ResourceGroupPreparer)
from azure.cli.testsdk.scenario_tests import AllowLargeResponse

class InformaticaScenario(ScenarioTest):
    @AllowLargeResponse(size_kb=10240)
    @ResourceGroupPreparer(name_prefix='cli_test_informatica', location="westus2")
    def test_informatica(self, resource_group):
        self.kwargs.update({
            'name': 'test1',
            'location': 'westus2',
            'sku': 'standard',
            'capacity': '1',
            'tier': 'standard',
            'type': 'Standard',
            'resource_group': 'srallurirg',
            'subscription': 'ce37d538-dfa3-49c3-b3cd-149b4b7db48a'
        })

        # # Check Name Availability
        # self.cmd('informatica check-name-availability --name {name} --location {location}', checks=[
        #     self.check('nameAvailable', True)
        # ])

        # # Create Informatica
        # self.cmd('informatica create --name {name} --location {location} --sku {sku} --capacity {capacity} --tier {tier} --resource-group {resource_group}', checks=[
        #     self.check('name', '{name}'),
        #     self.check('location', '{location}'),
        #     self.check('sku', '{sku}'),
        #     self.check('capacity', '{capacity}'),
        #     self.check('tier', '{tier}'),
        #     self.check('type', '{type}'),
        #     self.check('provisioningState', 'Succeeded')
        # ])

        # # Get Informatica
        # self.cmd('informatica show --name {name} --resource-group {resource_group}', checks=[
        #     self.check('name', '{name}'),
        #     self.check('location', '{location}'),
        #     self.check('capacity', '{capacity}'),
        #     self.check('tier', '{tier}'),
        #     self.check('type', '{type}'),
        #     self.check('provisioningState', 'Succeeded')
        # ])

        # List Informatica
        self.cmd('az informatica list --subscription {subscription} --resource-group {resource_group}')

        # # Update Informatica
        # self.cmd('informatica update --name {name} --resource-group {resource_group} --tags tag1=test1', checks=[
        #     self.check('name', '{name}'),
        #     self.check('location', '{location}'),
        #     self.check('sku', '{sku}'),
        #     self.check('capacity', '{capacity}'),
        #     self.check('tier', '{tier}'),
        #     self.check('type', '{type}'),
        #     self.check('tags.tag1', 'test1')
        # ])

        # # Delete Informatica
        # self.cmd('informatica delete --name {name} --resource-group {resource_group} --yes')
