# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup
@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /Organization/put/Organization_Create
@try_manual
def step__organization_put_organization_create(test, rg):
    test.cmd('az confluent organization create '
             '--location "West US" '
             '--offer-detail id="string" plan-id="string" plan-name="string" publisher-id="string" term-unit="string" '
             '--user-detail email-address="contoso@microsoft.com" first-name="string" last-name="string" '
             '--tags Environment="Dev" '
             '--name "{myOrganization}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "West US", case_sensitive=False),
                 test.check("userDetail.emailAddress", "contoso@microsoft.com", case_sensitive=False),
                 test.check("userDetail.firstName", "string", case_sensitive=False),
                 test.check("userDetail.lastName", "string", case_sensitive=False),
                 test.check("tags.Environment", "Dev", case_sensitive=False),
                 test.check("name", "{myOrganization}", case_sensitive=False),
             ])
    test.cmd('az confluent organization wait --created '
             '--name "{myOrganization}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: /Organization/get/Organization_Get
@try_manual
def step__organization_get_organization_get(test, rg):
    test.cmd('az confluent organization show '
             '--name "{myOrganization}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "West US", case_sensitive=False),
                 test.check("userDetail.emailAddress", "contoso@microsoft.com", case_sensitive=False),
                 test.check("userDetail.firstName", "string", case_sensitive=False),
                 test.check("userDetail.lastName", "string", case_sensitive=False),
                 test.check("tags.Environment", "Dev", case_sensitive=False),
                 test.check("name", "{myOrganization}", case_sensitive=False),
             ])


# EXAMPLE: /Organization/get/Organization_ListByResourceGroup
@try_manual
def step__organization_get(test, rg):
    test.cmd('az confluent organization list '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /Organization/get/Organization_ListBySubscription
@try_manual
def step__organization_get2(test, rg):
    test.cmd('az confluent organization list '
             '-g ""',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /Organization/patch/Confluent_Update
@try_manual
def step__organization_patch_confluent_update(test, rg):
    test.cmd('az confluent organization update '
             '--tags client="dev-client" env="dev" '
             '--name "{myOrganization}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "West US", case_sensitive=False),
                 test.check("userDetail.emailAddress", "contoso@microsoft.com", case_sensitive=False),
                 test.check("userDetail.firstName", "string", case_sensitive=False),
                 test.check("userDetail.lastName", "string", case_sensitive=False),
                 test.check("name", "{myOrganization}", case_sensitive=False),
             ])


# EXAMPLE: /Organization/delete/Confluent_Delete
@try_manual
def step__organization_delete_confluent_delete(test, rg):
    test.cmd('az confluent organization delete -y '
             '--name "{myOrganization}" '
             '--resource-group "{rg}"',
             checks=[])


# Env cleanup
@try_manual
def cleanup(test, rg):
    pass


# Testcase
@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__organization_put_organization_create(test, rg)
    step__organization_get_organization_get(test, rg)
    step__organization_get(test, rg)
    step__organization_get2(test, rg)
    step__organization_patch_confluent_update(test, rg)
    step__organization_delete_confluent_delete(test, rg)
    cleanup(test, rg)


@try_manual
class ConfluentManagementClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestconfluent_myResourceGroup'[:7], key='rg', parameter_name='rg')
    def test_confluent(self, rg):

        self.kwargs.update({
            'myOrganization': 'myOrganization',
        })

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()
