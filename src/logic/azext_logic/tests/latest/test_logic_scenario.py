# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .preparers import VirtualNetworkPreparer
from .example_steps import step_integration_account_create
from .example_steps import step_integration_account_show
from .example_steps import step_integration_account_list
from .example_steps import step_integration_account_list2
from .example_steps import step_integration_account_update
from .example_steps import step_integration_account_list_key_vault_key
from .example_steps import step_integration_account_list_callback_url
from .example_steps import step_integration_account_log_tracking_event
from .example_steps import step_integration_account_regenerate_access_key
from .example_steps import step_integration_account_agreement_create
from .example_steps import step_integration_account_agreement_show
from .example_steps import step_integration_account_agreement_list
from .example_steps import step_integration_account_agreement
from .example_steps import step_integration_account_agreement_delete
from .example_steps import step_integration_account_assembly_create
from .example_steps import step_integration_account_assembly_show
from .example_steps import step_integration_account_assembly_list
from .example_steps import step_integration_account_assembly
from .example_steps import step_integration_account_assembly_delete
from .example_steps import step_integration_account_batch
from .example_steps import step_integration_account_batch_configuration_show
from .example_steps import step_integration_account_batch_configuration_list
from .example_steps import step_integration_account_batch2
from .example_steps import step_integration_account_certificate_create
from .example_steps import step_integration_account_certificate_show
from .example_steps import step_integration_account_certificate_list
from .example_steps import step_integration_account_certificate_delete
from .example_steps import step_integration_account_map_create
from .example_steps import step_integration_account_map_show
from .example_steps import step_integration_account_map_list
from .example_steps import step_integration_account_map
from .example_steps import step_integration_account_map_delete
from .example_steps import step_integration_account_partner_create
from .example_steps import step_integration_account_partner_show
from .example_steps import step_integration_account_partner_list
from .example_steps import step_integration_account_partner
from .example_steps import step_integration_account_partner_delete
from .example_steps import step_integration_account_schema_create
from .example_steps import step_integration_account_schema_show
from .example_steps import step_integration_account_schema_list
from .example_steps import step_integration_account_schema
from .example_steps import step_integration_account_schema_delete
from .example_steps import step_integration_account_session_create
from .example_steps import step_integration_account_session_list
from .example_steps import step_integration_account_session_show
from .example_steps import step_integration_account_session_delete
from .example_steps import step_integration_account_delete
from .example_steps import step_integration_service_environment_create
from .example_steps import step_integration_service_environment_show
from .example_steps import step_integration_service_environment_list
from .example_steps import step_integration_service_environment_list2
from .example_steps import step_integration_service_environment_update
from .example_steps import step_integration_service_environment_restart
from .example_steps import step_integration_service_environment
from .example_steps import step_integration_service_environment2
from .example_steps import step_integration_service_environment3
from .example_steps import step_integration_service_environment4
from .example_steps import step_integration_service_environment5
from .example_steps import step_integration_service_environment_sku_list
from .example_steps import step_integration_service_environment_delete
from .example_steps import step_workflow_create
from .example_steps import step_workflow_show
from .example_steps import step_workflow_list
from .example_steps import step_workflow_list2
from .example_steps import step_workflow_update
from .example_steps import step_workflow_disable
from .example_steps import step_workflow_enable
from .example_steps import step_workflow_generate_upgraded_definition
from .example_steps import step_workflow_list_callback_url
from .example_steps import step_workflow_list_swagger
from .example_steps import step_workflow_move
from .example_steps import step_workflow_regenerate_access_key
from .example_steps import step_workflow_validate_by_location
from .example_steps import step_workflow_run_action_repetition_show
from .example_steps import step_workflow_run_action_repetition_list
from .example_steps import step_workflow_run_action
from .example_steps import step_workflow_run_action2
from .example_steps import step_workflow_run_action3
from .example_steps import step_workflow_run_action_request_history_show
from .example_steps import step_workflow_run_action_request_history_list
from .example_steps import step_workflow_run_action_show
from .example_steps import step_workflow_run_action_list
from .example_steps import step_workflow_run_action_list_expression_trace
from .example_steps import step_workflow_run_action_scope_repetition_show
from .example_steps import step_workflow_run_action_scope_repetition_list
from .example_steps import step_workflow_run_operation_show
from .example_steps import step_workflow_run_show
from .example_steps import step_workflow_run_list
from .example_steps import step_workflow_run_cancel
from .example_steps import step_workflow_trigger_history_show
from .example_steps import step_workflow_trigger_history_list
from .example_steps import step_workflow_trigger_history_resubmit
from .example_steps import step_workflow_trigger_show
from .example_steps import step_workflow_trigger_show_schema_json
from .example_steps import step_workflow_trigger_list
from .example_steps import step_workflow_trigger_list_callback_url
from .example_steps import step_workflow_trigger_reset
from .example_steps import step_workflow_trigger_run
from .example_steps import step_workflow_trigger_set_state
from .example_steps import step_workflow_version_show
from .example_steps import step_workflow_version_list
from .example_steps import step_workflow_version_trigger_list_callback_url
from .example_steps import step_workflow_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg, rg_2, rg_3):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg, rg_2, rg_3):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg, rg_2, rg_3):
    setup_scenario(test, rg, rg_2, rg_3)
    step_integration_account_create(test, rg, rg_2, rg_3, checks=[
        test.check("location", "westus", case_sensitive=False),
        test.check("sku.name", "Standard", case_sensitive=False),
        test.check("name", "{myIntegrationAccount2}", case_sensitive=False),
    ])
    step_integration_account_show(test, rg, rg_2, rg_3, checks=[
        test.check("location", "westus", case_sensitive=False),
        test.check("sku.name", "Standard", case_sensitive=False),
    ])
    step_integration_account_list(test, rg, rg_2, rg_3, checks=[
        test.check('length(@)', 1),
    ])
    step_integration_account_list2(test, rg, rg_2, rg_3, checks=[
        test.check('length(@)', 1),
    ])
    step_integration_account_update(test, rg, rg_2, rg_3, checks=[
        test.check("location", "westus", case_sensitive=False),
        test.check("sku.name", "Standard", case_sensitive=False),
        test.check("name", "{myIntegrationAccount2}", case_sensitive=False),
    ])
    step_integration_account_list_key_vault_key(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_list_callback_url(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_log_tracking_event(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_regenerate_access_key(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_agreement_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_agreement_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_agreement_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_agreement(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_agreement_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_assembly_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_assembly_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_assembly_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_assembly(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_assembly_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_batch(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_batch_configuration_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_batch_configuration_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_batch2(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_certificate_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_certificate_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_certificate_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_certificate_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_map_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_map_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_map_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_map(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_map_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_partner_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_partner_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_partner_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_partner(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_partner_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_schema_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_schema_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_schema_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_schema(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_schema_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_session_create(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_session_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_session_show(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_session_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_account_delete(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment_create(test, rg, rg_2, rg_3, checks=[
        test.check("name", "{myIntegrationServiceEnvironment}", case_sensitive=False),
    ])
    step_integration_service_environment_show(test, rg, rg_2, rg_3, checks=[
        test.check("encryptionConfiguration.encryptionKeyReference.keyName", "testKeyName", case_sensitive=False),
        test.check("encryptionConfiguration.encryptionKeyReference.keyVault.id", "/subscriptions/{subscription_id}/reso"
                   "urceGroups/{rg_2}/providers/Microsoft.KeyVault/vaults/testKeyVault", case_sensitive=False),
        test.check("encryptionConfiguration.encryptionKeyReference.keyVersion", "13b261d30b984753869902d7f47f4d55",
                   case_sensitive=False),
        test.check("name", "{myIntegrationServiceEnvironment}", case_sensitive=False),
    ])
    step_integration_service_environment_list(test, rg, rg_2, rg_3, checks=[
        test.check('length(@)', 1),
    ])
    step_integration_service_environment_list2(test, rg, rg_2, rg_3, checks=[
        test.check('length(@)', 1),
    ])
    step_integration_service_environment_update(test, rg, rg_2, rg_3, checks=[
        test.check("encryptionConfiguration.encryptionKeyReference.keyName", "testKeyName", case_sensitive=False),
        test.check("encryptionConfiguration.encryptionKeyReference.keyVault.id", "/subscriptions/{subscription_id}/reso"
                   "urceGroups/{rg_2}/providers/Microsoft.KeyVault/vaults/testKeyVault", case_sensitive=False),
        test.check("encryptionConfiguration.encryptionKeyReference.keyVersion", "13b261d30b984753869902d7f47f4d55",
                   case_sensitive=False),
        test.check("sku.name", "Developer", case_sensitive=False),
        test.check("sku.capacity", 0),
        test.check("name", "{myIntegrationServiceEnvironment}", case_sensitive=False),
    ])
    step_integration_service_environment_restart(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment2(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment3(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment3(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment4(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment5(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment_sku_list(test, rg, rg_2, rg_3, checks=[])
    step_integration_service_environment_delete(test, rg, rg_2, rg_3, checks=[])
    step_workflow_create(test, rg, rg_2, rg_3, checks=[
        test.check("integrationAccount.id", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.L"
                   "ogic/integrationAccounts/{myIntegrationAccount}", case_sensitive=False),
    ])
    step_workflow_show(test, rg, rg_2, rg_3, checks=[
        test.check("location", "brazilsouth", case_sensitive=False),
        test.check("integrationAccount.id", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.L"
                   "ogic/integrationAccounts/{myIntegrationAccount}", case_sensitive=False),
        test.check("name", "{myWorkflow}", case_sensitive=False),
    ])
    step_workflow_list(test, rg, rg_2, rg_3, checks=[
        test.check('length(@)', 1),
    ])
    step_workflow_list2(test, rg, rg_2, rg_3, checks=[
        test.check('length(@)', 3),
    ])
    step_workflow_update(test, rg, rg_2, rg_3, checks=[
        test.check("integrationAccount.id", "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.L"
                   "ogic/integrationAccounts/{myIntegrationAccount}", case_sensitive=False),
    ])
    step_workflow_disable(test, rg, rg_2, rg_3, checks=[])
    step_workflow_enable(test, rg, rg_2, rg_3, checks=[])
    step_workflow_generate_upgraded_definition(test, rg, rg_2, rg_3, checks=[])
    step_workflow_list_callback_url(test, rg, rg_2, rg_3, checks=[])
    step_workflow_list_swagger(test, rg, rg_2, rg_3, checks=[])
    step_workflow_move(test, rg, rg_2, rg_3, checks=[])
    step_workflow_regenerate_access_key(test, rg, rg_2, rg_3, checks=[])
    step_workflow_validate_by_location(test, rg, rg_2, rg_3, checks=[])
    step_workflow_validate_by_location(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_repetition_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_repetition_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action2(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action3(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_request_history_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_request_history_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_list_expression_trace(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_scope_repetition_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_action_scope_repetition_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_operation_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_run_cancel(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_history_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_history_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_history_resubmit(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_show_schema_json(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_list_callback_url(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_reset(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_run(test, rg, rg_2, rg_3, checks=[])
    step_workflow_trigger_set_state(test, rg, rg_2, rg_3, checks=[])
    step_workflow_version_show(test, rg, rg_2, rg_3, checks=[])
    step_workflow_version_list(test, rg, rg_2, rg_3, checks=[])
    step_workflow_version_trigger_list_callback_url(test, rg, rg_2, rg_3, checks=[])
    step_workflow_delete(test, rg, rg_2, rg_3, checks=[])
    cleanup_scenario(test, rg, rg_2, rg_3)


# Test class for Scenario
@try_manual
class LogicScenarioTest(ScenarioTest):

    def __init__(self, *args, **kwargs):
        super(LogicScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })

        self.kwargs.update({
            'myIntegrationAccount': 'test-integration-account',
            'myIntegrationAccount2': 'testIntegrationAccount',
            'myIntegrationAccount3': '<integrationAccountName>',
            'myIntegrationAccount4': 'testia123',
            'myIntegrationServiceEnvironment': 'testIntegrationServiceEnvironment',
            'myWorkflow': 'test-workflow',
            'myWorkflow2': 'testWorkflow',
            'myWorkflow3': 'testWorkflowName',
            'myWorkflow4': 'testFlow',
        })


    @ResourceGroupPreparer(name_prefix='clitestlogic_test-resource-group'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestlogic_testResourceGroup'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestlogic_testrg123'[:7], key='rg_3', parameter_name='rg_3')
    @VirtualNetworkPreparer(name_prefix='clitestlogic_testVNET'[:7], key='vn', resource_group_key='rg_2')
    def test_logic_Scenario(self, rg, rg_2, rg_3):
        call_scenario(self, rg, rg_2, rg_3)
        calc_coverage(__file__)
        raise_if()

