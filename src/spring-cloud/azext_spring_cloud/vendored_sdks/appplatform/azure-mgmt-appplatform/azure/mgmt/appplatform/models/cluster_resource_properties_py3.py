# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ClusterResourceProperties(Model):
    """Service properties payload.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar provisioning_state: Provisioning state of the Service. Possible
     values include: 'Creating', 'Updating', 'Deleting', 'Deleted',
     'Succeeded', 'Failed', 'Moving', 'Moved', 'MoveFailed'
    :vartype provisioning_state: str or
     ~azure.mgmt.appplatform.models.ProvisioningState
    :param config_server_properties: Config server git properties of the
     Service
    :type config_server_properties:
     ~azure.mgmt.appplatform.models.ConfigServerProperties
    :param trace: Trace properties of the Service
    :type trace: ~azure.mgmt.appplatform.models.TraceProperties
    :ivar version: Version of the Service
    :vartype version: int
    :ivar service_id: ServiceInstanceEntity GUID which uniquely identifies a
     created resource
    :vartype service_id: str
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'version': {'readonly': True},
        'service_id': {'readonly': True},
    }

    _attribute_map = {
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'config_server_properties': {'key': 'configServerProperties', 'type': 'ConfigServerProperties'},
        'trace': {'key': 'trace', 'type': 'TraceProperties'},
        'version': {'key': 'version', 'type': 'int'},
        'service_id': {'key': 'serviceId', 'type': 'str'},
    }

    def __init__(self, *, config_server_properties=None, trace=None, **kwargs) -> None:
        super(ClusterResourceProperties, self).__init__(**kwargs)
        self.provisioning_state = None
        self.config_server_properties = config_server_properties
        self.trace = trace
        self.version = None
        self.service_id = None
