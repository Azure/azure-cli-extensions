# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DeploymentSettings(Model):
    """Deployment settings payload.

    :param cpu: Required CPU. Default value: 1 .
    :type cpu: int
    :param memory_in_gb: Required Memory size in GB. Default value: 1 .
    :type memory_in_gb: int
    :param jvm_options: JVM parameter
    :type jvm_options: str
    :param net_core_main_entry_path: The path to the .NET executable relative
     to zip root
    :type net_core_main_entry_path: str
    :param instance_count: Instance count. Default value: 1 .
    :type instance_count: int
    :param environment_variables: Collection of environment variables
    :type environment_variables: dict[str, str]
    :param runtime_version: Runtime version. Possible values include:
     'Java_8', 'Java_11', 'NetCore_31'
    :type runtime_version: str or
     ~azure.mgmt.appplatform.models.RuntimeVersion
    """

    _validation = {
        'cpu': {'maximum': 4, 'minimum': 1},
        'memory_in_gb': {'maximum': 8, 'minimum': 1},
        'instance_count': {'maximum': 20, 'minimum': 1},
    }

    _attribute_map = {
        'cpu': {'key': 'cpu', 'type': 'int'},
        'memory_in_gb': {'key': 'memoryInGB', 'type': 'int'},
        'jvm_options': {'key': 'jvmOptions', 'type': 'str'},
        'net_core_main_entry_path': {'key': 'netCoreMainEntryPath', 'type': 'str'},
        'instance_count': {'key': 'instanceCount', 'type': 'int'},
        'environment_variables': {'key': 'environmentVariables', 'type': '{str}'},
        'runtime_version': {'key': 'runtimeVersion', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(DeploymentSettings, self).__init__(**kwargs)
        self.cpu = kwargs.get('cpu', 1)
        self.memory_in_gb = kwargs.get('memory_in_gb', 1)
        self.jvm_options = kwargs.get('jvm_options', None)
        self.net_core_main_entry_path = kwargs.get('net_core_main_entry_path', None)
        self.instance_count = kwargs.get('instance_count', 1)
        self.environment_variables = kwargs.get('environment_variables', None)
        self.runtime_version = kwargs.get('runtime_version', None)
