# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

from azure.cli.testsdk import *


class DncScenario(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cli_test_dnc')
    def test_dnc_controller_create(self, resource_group):
        self.kwargs.update({
            'controllerName': 'clitestcontroller',
            'rg': resource_group
        })

        self.cmd('dnc controller create --location "centraluseuap" --resource-name {controllerName} --resource-group {rg}', checks=[
            self.check('name', '{controllerName}'),
            self.check('properties.provisioningState', 'Succeeded'),
            self.exists('properties.resourceGuid'),
            self.exists('properties.controllerProperties.dncEndpoint')
        ])

    @ResourceGroupPreparer(name_prefix='cli_test_dnc')
    def test_dnc_controller_create_test_purpose(self, resource_group):
        self.kwargs.update({
            'controllerName': 'clitestcontroller',
            'rg': resource_group
        })

        self.cmd('dnc controller create --location "centraluseuap" --resource-name {controllerName} --resource-group {rg} --purpose "test"', checks=[
            self.check('name', '{controllerName}'),
            self.check('properties.provisioningState', 'Succeeded'),
            self.exists('properties.resourceGuid'),
            self.exists('properties.controllerProperties.dncEndpoint')
        ])

    @ResourceGroupPreparer(name_prefix='cli_test_dnc')
    def test_dnc_controller_delete(self, resource_group):
        self.kwargs.update({
            'controllerName': 'clitestcontroller',
            'rg': resource_group
        })

        self.cmd('dnc controller delete --resource-name {controllerName} --resource-group {rg} --yes')

    @ResourceGroupPreparer(name_prefix='cli_test_dnc')
    def test_dnc_controller_show(self, resource_group):
        self.kwargs.update({
            'controllerName': 'clitestcontroller',
            'rg': resource_group
        })

        # setup
        self.cmd('dnc controller create --location "centraluseuap" --resource-name {controllerName} --resource-group {rg}', checks=[
            self.check('name', '{controllerName}'),
            self.check('properties.provisioningState', 'Succeeded'),
            self.exists('properties.resourceGuid'),
            self.exists('properties.controllerProperties.dncEndpoint')
        ])

        self.cmd('dnc controller show --resource-name {controllerName} --resource-group {rg}', checks=[
            self.check('name', '{controllerName}'),
            self.check('properties.provisioningState', 'Succeeded'),
            self.exists('properties.resourceGuid'),
            self.exists('properties.controllerProperties.dncEndpoint')
        ])

        