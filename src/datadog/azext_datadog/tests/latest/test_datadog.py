# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
#
# Code generated by aaz-dev-tools
# --------------------------------------------------------------------------------------------

import unittest
from azure.cli.testsdk import *

# resource creation is failing due to which tests whave been skipped. Will be fixed in the next release.
class DatadogScenario(ScenarioTest):
    # @ResourceGroupPreparer(name_prefix='cli_test_datadog_monitor', location='westus2')
    # def test_datadog_monitor(self, resource_group):
    #     self.kwargs.update({
    #         'monitor': self.create_random_name('monitor', 15),
    #     })
        # self.cmd('datadog monitor create --name {monitor} --resource-group {rg} --sku {{name:payg_v3_Monthly@TIDgmz7xq9ge3py}} --identity {{type:SystemAssigned}} --user-info {{name:Alice,email-address:alice@microsoft.com}}')
        # self.cmd('datadog monitor wait --created --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor show --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor list --resource-group {rg}')
        # self.cmd('datadog monitor update --name {monitor} --resource-group {rg} --tags Environment="Dev2"')
        # self.cmd('datadog monitor get-default-keys --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor list-api-keys --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor set-default-keys --name {monitor} --resource-group {rg} --api-key "{name:apiKey}" --key "1111111111111111aaaaaaaaaaaaaaaa"')
        # self.cmd('datadog monitor list-host --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor list-linked-resource --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor list-monitored-resource --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor refresh-set-password-link --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor delete --name {monitor} --resource-group {rg}')
        # self.cmd('datadog monitor wait --deleted --name {monitor} --resource-group {rg}')

    # @ResourceGroupPreparer(name_prefix='cli_test_datadog_monitor', location='eastus')
    # def test_datadog_monitor_single_sign_on_configurations(self, resource_group):    
    #     self.kwargs.update({
    #         'monitor': self.create_random_name('monitor', 15),
    #     })
        # self.cmd('datadog monitor create --name {monitor} --resource-group {rg} --sku {{name:payg_v3_Monthly@TIDgmz7xq9ge3py}} --identity {{type:SystemAssigned}} --user-info {{name:Alice,email-address:alice@microsoft.com}}')
        # self.cmd('datadog sso-config create '
        #      '--configuration-name "default" '
        #      '--monitor-name "{myMonitor}" '
        #      '--properties enterprise-app-id="ac754169-3489-42ae-bd06-8be89db12e58" single-sign-on-state="Enable" '
        #      '--resource-group "{rg}"')
        # self.cmd('datadog sso-config show '
        #      '--configuration-name "default" '
        #      '--monitor-name "{myMonitor}" '
        #      '--resource-group "{rg}"')
        # self.cmd('datadog sso-config list '
        #      '--monitor-name "{myMonitor}" '
        #      '--resource-group "{rg}"')
    
    # @ResourceGroupPreparer(name_prefix='cli_test_datadog_monitor', location='eastus')
    # def test_datadog_monitor_tag_rule(self, resource_group):
    #     self.kwargs.update({
    #         'monitor': self.create_random_name('monitor', 15),
    #     })
        # self.cmd('datadog monitor create --name {monitor} --resource-group {rg} --sku {{name:payg_v3_Monthly@TIDgmz7xq9ge3py}} --identity {{type:SystemAssigned}} --user-info {{name:Alice,email-address:alice@microsoft.com}}')
        # self.cmd('datadog tag-rule create '
        #      '--monitor-name "{myMonitor}" '
        #      '--log-rules-filtering-tags name="Environment" action="Include" value="Prod" '
        #      '--log-rules-filtering-tags name="Environment" action="Exclude" value="Dev" '
        #      '--send-aad-logs false '
        #      '--send-resource-logs true '
        #      '--send-subscription-logs true '
        #      '--resource-group "{rg}" '
        #      '--rule-set-name "default"')
        # self.cmd('datadog tag-rule show '
        #      '--monitor-name "{myMonitor}" '
        #      '--resource-group "{rg}" '
        #      '--rule-set-name "default"')
        # self.cmd('datadog tag-rule list '
        #      '--monitor-name "{myMonitor}" '
        #      '--resource-group "{rg}"')

    @ResourceGroupPreparer(name_prefix='cli_test_datadog_monitor', location='eastus')
    def test_datadog_terms(self, resource_group):
        self.kwargs.update({
            'monitor': self.create_random_name('monitor', 15),
        })
        self.cmd('datadog terms list')
