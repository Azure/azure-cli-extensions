version: v1.1.0
alias:
  values:
    ScanAndSchedulePatchTask: cssc-scan-image-schedule-patch
steps:
  - cmd: bash -c 'echo "Scaning Repo {{.Values.SOURCE_REPOSITORY}}"'
  - cmd: az login --identity
  - cmd: mcr.microsoft.com/azure-cli az acr repository show-tags -n $RegistryName --repository {{.Values.SOURCE_REPOSITORY}} > tags.json
  - cmd: mcr.microsoft.com/azure-cli jq -r .[] tags.json > tags.txt
  - cmd: |
        mcr.microsoft.com/azure-cli bash -c 'previous_line="";while read line;do \
        echo "Processing Tag $previous_line"; \
        if [ "$previous_line" == "" ]; then \
        echo "first line skip"; \
        else if [[ "$line" == *"-patched" && "$line" == "$previous_line"* ]]; then \
        echo "$previous_line->$line"; \
        az acr task run --name $ScanAndSchedulePatchTask --registry $RegistryName --set SOURCE_REPOSITORY={{.Values.SOURCE_REPOSITORY}} --set SOURCE_IMAGE_TAG=$line --set SOURCE_IMAGE_ORIGINAL_TAG=$previous_line --no-wait; \
        else if [[ "$previous_line" == *"-patched" ]]; then \
        echo "skip patched images"; \
        else echo "$previous_line-->$previous_line"; \
        az acr task run --name $ScanAndSchedulePatchTask --registry $RegistryName --set SOURCE_REPOSITORY={{.Values.SOURCE_REPOSITORY}} --set SOURCE_IMAGE_TAG=$previous_line --set SOURCE_IMAGE_ORIGINAL_TAG=$previous_line --no-wait; \
        fi; \
        fi; \
        fi; \
        previous_line="$line"; \
        done < tags.txt; \
        if [[ "$previous_line" != *"-patched" ]]; then \
        echo "$previous_line-->$previous_line"; \
        az acr task run --name $ScanAndSchedulePatchTask --registry $RegistryName --set SOURCE_REPOSITORY={{.Values.SOURCE_REPOSITORY}} --set SOURCE_IMAGE_TAG=$previous_line --set SOURCE_IMAGE_ORIGINAL_TAG=$previous_line --no-wait; \
        fi;'