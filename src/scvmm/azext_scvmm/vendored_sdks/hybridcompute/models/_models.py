# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class AgentConfiguration(msrest.serialization.Model):
    """Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar proxy_url: Specifies the URL of the proxy to be used.
    :vartype proxy_url: str
    :ivar incoming_connections_ports: Specifies the list of ports that the agent will be able to
     listen on.
    :vartype incoming_connections_ports: list[str]
    :ivar extensions_allow_list: Array of extensions that are allowed to be installed or updated.
    :vartype extensions_allow_list: list[~azure.mgmt.hybridcompute.models.ConfigurationExtension]
    :ivar extensions_block_list: Array of extensions that are blocked (cannot be installed or
     updated).
    :vartype extensions_block_list: list[~azure.mgmt.hybridcompute.models.ConfigurationExtension]
    :ivar proxy_bypass: List of service names which should not use the specified proxy server.
    :vartype proxy_bypass: list[str]
    :ivar extensions_enabled: Specifies whether the extension service is enabled or disabled.
    :vartype extensions_enabled: str
    :ivar guest_configuration_enabled: Specified whether the guest configuration service is enabled
     or disabled.
    :vartype guest_configuration_enabled: str
    :ivar config_mode: Name of configuration mode to use. Modes are pre-defined configurations of
     security controls, extension allowlists and guest configuration, maintained by Microsoft.
     Possible values include: "full", "monitor".
    :vartype config_mode: str or ~azure.mgmt.hybridcompute.models.AgentConfigurationMode
    """

    _validation = {
        'proxy_url': {'readonly': True},
        'incoming_connections_ports': {'readonly': True},
        'extensions_allow_list': {'readonly': True},
        'extensions_block_list': {'readonly': True},
        'proxy_bypass': {'readonly': True},
        'extensions_enabled': {'readonly': True},
        'guest_configuration_enabled': {'readonly': True},
        'config_mode': {'readonly': True},
    }

    _attribute_map = {
        'proxy_url': {'key': 'proxyUrl', 'type': 'str'},
        'incoming_connections_ports': {'key': 'incomingConnectionsPorts', 'type': '[str]'},
        'extensions_allow_list': {'key': 'extensionsAllowList', 'type': '[ConfigurationExtension]'},
        'extensions_block_list': {'key': 'extensionsBlockList', 'type': '[ConfigurationExtension]'},
        'proxy_bypass': {'key': 'proxyBypass', 'type': '[str]'},
        'extensions_enabled': {'key': 'extensionsEnabled', 'type': 'str'},
        'guest_configuration_enabled': {'key': 'guestConfigurationEnabled', 'type': 'str'},
        'config_mode': {'key': 'configMode', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(AgentConfiguration, self).__init__(**kwargs)
        self.proxy_url = None
        self.incoming_connections_ports = None
        self.extensions_allow_list = None
        self.extensions_block_list = None
        self.proxy_bypass = None
        self.extensions_enabled = None
        self.guest_configuration_enabled = None
        self.config_mode = None


class AgentUpgrade(msrest.serialization.Model):
    """The info w.r.t Agent Upgrade.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar desired_version: Specifies the version info w.r.t AgentUpgrade for the machine.
    :vartype desired_version: str
    :ivar correlation_id: The correlation ID passed in from RSM per upgrade.
    :vartype correlation_id: str
    :ivar enable_automatic_upgrade: Specifies if RSM should try to upgrade this machine.
    :vartype enable_automatic_upgrade: bool
    :ivar last_attempt_desired_version: Specifies the version of the last attempt.
    :vartype last_attempt_desired_version: str
    :ivar last_attempt_timestamp: Timestamp of last upgrade attempt.
    :vartype last_attempt_timestamp: str
    :ivar last_attempt_status: Specifies the status of Agent Upgrade. Possible values include:
     "Success", "Failed".
    :vartype last_attempt_status: str or ~azure.mgmt.hybridcompute.models.LastAttemptStatusEnum
    :ivar last_attempt_message: Failure message of last upgrade attempt if any.
    :vartype last_attempt_message: str
    """

    _validation = {
        'last_attempt_desired_version': {'readonly': True},
        'last_attempt_timestamp': {'readonly': True},
        'last_attempt_status': {'readonly': True},
        'last_attempt_message': {'readonly': True},
    }

    _attribute_map = {
        'desired_version': {'key': 'desiredVersion', 'type': 'str'},
        'correlation_id': {'key': 'correlationId', 'type': 'str'},
        'enable_automatic_upgrade': {'key': 'enableAutomaticUpgrade', 'type': 'bool'},
        'last_attempt_desired_version': {'key': 'lastAttemptDesiredVersion', 'type': 'str'},
        'last_attempt_timestamp': {'key': 'lastAttemptTimestamp', 'type': 'str'},
        'last_attempt_status': {'key': 'lastAttemptStatus', 'type': 'str'},
        'last_attempt_message': {'key': 'lastAttemptMessage', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword desired_version: Specifies the version info w.r.t AgentUpgrade for the machine.
        :paramtype desired_version: str
        :keyword correlation_id: The correlation ID passed in from RSM per upgrade.
        :paramtype correlation_id: str
        :keyword enable_automatic_upgrade: Specifies if RSM should try to upgrade this machine.
        :paramtype enable_automatic_upgrade: bool
        """
        super(AgentUpgrade, self).__init__(**kwargs)
        self.desired_version = kwargs.get('desired_version', None)
        self.correlation_id = kwargs.get('correlation_id', None)
        self.enable_automatic_upgrade = kwargs.get('enable_automatic_upgrade', None)
        self.last_attempt_desired_version = None
        self.last_attempt_timestamp = None
        self.last_attempt_status = None
        self.last_attempt_message = None


class AgentVersion(msrest.serialization.Model):
    """Describes properties of Agent Version.

    :ivar agent_version: Represents the agent version.
    :vartype agent_version: str
    :ivar download_link: Represents the download link of specific agent version.
    :vartype download_link: str
    :ivar os_type: Defines the os type.
    :vartype os_type: str
    """

    _attribute_map = {
        'agent_version': {'key': 'agentVersion', 'type': 'str'},
        'download_link': {'key': 'downloadLink', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword agent_version: Represents the agent version.
        :paramtype agent_version: str
        :keyword download_link: Represents the download link of specific agent version.
        :paramtype download_link: str
        :keyword os_type: Defines the os type.
        :paramtype os_type: str
        """
        super(AgentVersion, self).__init__(**kwargs)
        self.agent_version = kwargs.get('agent_version', None)
        self.download_link = kwargs.get('download_link', None)
        self.os_type = kwargs.get('os_type', None)


class AgentVersionsList(msrest.serialization.Model):
    """Describes AgentVersions List.

    :ivar value: The list of available Agent Versions.
    :vartype value: list[~azure.mgmt.hybridcompute.models.AgentVersion]
    :ivar next_link: The URI to fetch the next 10 available Agent Versions.
    :vartype next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[AgentVersion]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword value: The list of available Agent Versions.
        :paramtype value: list[~azure.mgmt.hybridcompute.models.AgentVersion]
        :keyword next_link: The URI to fetch the next 10 available Agent Versions.
        :paramtype next_link: str
        """
        super(AgentVersionsList, self).__init__(**kwargs)
        self.value = kwargs.get('value', None)
        self.next_link = kwargs.get('next_link', None)


class AvailablePatchCountByClassification(msrest.serialization.Model):
    """Summarization of patches available for installation on the machine by classification.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar security: Number of security patches available for installation.
    :vartype security: int
    :ivar critical: Number of critical patches available for installation.
    :vartype critical: int
    :ivar definition: Number of definition patches available for installation.
    :vartype definition: int
    :ivar update_rollup: Number of update Rollup patches available for installation.
    :vartype update_rollup: int
    :ivar feature_pack: Number of feature pack patches available for installation.
    :vartype feature_pack: int
    :ivar service_pack: Number of service pack patches available for installation.
    :vartype service_pack: int
    :ivar tools: Number of tools patches available for installation.
    :vartype tools: int
    :ivar updates: Number of updates category patches available for installation.
    :vartype updates: int
    :ivar other: Number of other patches available for installation.
    :vartype other: int
    """

    _validation = {
        'security': {'readonly': True},
        'critical': {'readonly': True},
        'definition': {'readonly': True},
        'update_rollup': {'readonly': True},
        'feature_pack': {'readonly': True},
        'service_pack': {'readonly': True},
        'tools': {'readonly': True},
        'updates': {'readonly': True},
        'other': {'readonly': True},
    }

    _attribute_map = {
        'security': {'key': 'security', 'type': 'int'},
        'critical': {'key': 'critical', 'type': 'int'},
        'definition': {'key': 'definition', 'type': 'int'},
        'update_rollup': {'key': 'updateRollup', 'type': 'int'},
        'feature_pack': {'key': 'featurePack', 'type': 'int'},
        'service_pack': {'key': 'servicePack', 'type': 'int'},
        'tools': {'key': 'tools', 'type': 'int'},
        'updates': {'key': 'updates', 'type': 'int'},
        'other': {'key': 'other', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(AvailablePatchCountByClassification, self).__init__(**kwargs)
        self.security = None
        self.critical = None
        self.definition = None
        self.update_rollup = None
        self.feature_pack = None
        self.service_pack = None
        self.tools = None
        self.updates = None
        self.other = None


class CloudMetadata(msrest.serialization.Model):
    """The metadata of the cloud environment (Azure/GCP/AWS/OCI...).

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: Specifies the cloud provider (Azure/AWS/GCP...).
    :vartype provider: str
    """

    _validation = {
        'provider': {'readonly': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(CloudMetadata, self).__init__(**kwargs)
        self.provider = None


class ConfigurationExtension(msrest.serialization.Model):
    """Describes properties that can identify extensions.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar publisher: Publisher of the extension.
    :vartype publisher: str
    :ivar type: Type of the extension.
    :vartype type: str
    """

    _validation = {
        'publisher': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'publisher': {'key': 'publisher', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ConfigurationExtension, self).__init__(**kwargs)
        self.publisher = None
        self.type = None


class ConnectionDetail(msrest.serialization.Model):
    """ConnectionDetail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Azure resource Id.
    :vartype id: str
    :ivar private_ip_address: The private endpoint connection private ip address.
    :vartype private_ip_address: str
    :ivar link_identifier: The private endpoint connection link identifier.
    :vartype link_identifier: str
    :ivar group_id: The private endpoint connection group id.
    :vartype group_id: str
    :ivar member_name: The private endpoint connection member name.
    :vartype member_name: str
    """

    _validation = {
        'id': {'readonly': True},
        'private_ip_address': {'readonly': True},
        'link_identifier': {'readonly': True},
        'group_id': {'readonly': True},
        'member_name': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'private_ip_address': {'key': 'privateIpAddress', 'type': 'str'},
        'link_identifier': {'key': 'linkIdentifier', 'type': 'str'},
        'group_id': {'key': 'groupId', 'type': 'str'},
        'member_name': {'key': 'memberName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ConnectionDetail, self).__init__(**kwargs)
        self.id = None
        self.private_ip_address = None
        self.link_identifier = None
        self.group_id = None
        self.member_name = None


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.hybridcompute.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.hybridcompute.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorDetailAutoGenerated(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.hybridcompute.models.ErrorDetailAutoGenerated]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.hybridcompute.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetailAutoGenerated]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorDetailAutoGenerated, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.hybridcompute.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.hybridcompute.models.ErrorDetail
        """
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = kwargs.get('error', None)


class ErrorResponseAutoGenerated(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.hybridcompute.models.ErrorDetailAutoGenerated
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetailAutoGenerated'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.hybridcompute.models.ErrorDetailAutoGenerated
        """
        super(ErrorResponseAutoGenerated, self).__init__(**kwargs)
        self.error = kwargs.get('error', None)


class ExtensionTargetProperties(msrest.serialization.Model):
    """Describes the Machine Extension Target Version Properties.

    :ivar target_version: Properties for the specified Extension to Upgrade.
    :vartype target_version: str
    """

    _attribute_map = {
        'target_version': {'key': 'targetVersion', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword target_version: Properties for the specified Extension to Upgrade.
        :paramtype target_version: str
        """
        super(ExtensionTargetProperties, self).__init__(**kwargs)
        self.target_version = kwargs.get('target_version', None)


class Resource(msrest.serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Resource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProxyResource, self).__init__(**kwargs)


class ExtensionValue(ProxyResource):
    """Describes a Extension Metadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar version: The version of the Extension being received.
    :vartype version: str
    :ivar extension_type: The type of the Extension being received.
    :vartype extension_type: str
    :ivar publisher: The publisher of the Extension being received.
    :vartype publisher: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'version': {'readonly': True},
        'extension_type': {'readonly': True},
        'publisher': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'version': {'key': 'properties.version', 'type': 'str'},
        'extension_type': {'key': 'properties.extensionType', 'type': 'str'},
        'publisher': {'key': 'properties.publisher', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ExtensionValue, self).__init__(**kwargs)
        self.version = None
        self.extension_type = None
        self.publisher = None


class ExtensionValueListResult(msrest.serialization.Model):
    """The List Extension Metadata response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of extension metadata.
    :vartype value: list[~azure.mgmt.hybridcompute.models.ExtensionValue]
    """

    _validation = {
        'value': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[ExtensionValue]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ExtensionValueListResult, self).__init__(**kwargs)
        self.value = None


class PrivateLinkScopesResource(msrest.serialization.Model):
    """An azure resource object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Azure resource Id.
    :vartype id: str
    :ivar name: Azure resource name.
    :vartype name: str
    :ivar type: Azure resource type.
    :vartype type: str
    :ivar location: Required. Resource location.
    :vartype location: str
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword location: Required. Resource location.
        :paramtype location: str
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        """
        super(PrivateLinkScopesResource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.location = kwargs['location']
        self.tags = kwargs.get('tags', None)


class HybridComputePrivateLinkScope(PrivateLinkScopesResource):
    """An Azure Arc PrivateLinkScope definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Azure resource Id.
    :vartype id: str
    :ivar name: Azure resource name.
    :vartype name: str
    :ivar type: Azure resource type.
    :vartype type: str
    :ivar location: Required. Resource location.
    :vartype location: str
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: Properties that define a Azure Arc PrivateLinkScope resource.
    :vartype properties: ~azure.mgmt.hybridcompute.models.HybridComputePrivateLinkScopeProperties
    :ivar system_data: The system meta data relating to this resource.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': 'HybridComputePrivateLinkScopeProperties'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword location: Required. Resource location.
        :paramtype location: str
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: Properties that define a Azure Arc PrivateLinkScope resource.
        :paramtype properties: ~azure.mgmt.hybridcompute.models.HybridComputePrivateLinkScopeProperties
        """
        super(HybridComputePrivateLinkScope, self).__init__(**kwargs)
        self.properties = kwargs.get('properties', None)
        self.system_data = None


class HybridComputePrivateLinkScopeListResult(msrest.serialization.Model):
    """Describes the list of Azure Arc PrivateLinkScope resources.

    All required parameters must be populated in order to send to Azure.

    :ivar value: Required. List of Azure Arc PrivateLinkScope definitions.
    :vartype value: list[~azure.mgmt.hybridcompute.models.HybridComputePrivateLinkScope]
    :ivar next_link: The URI to get the next set of Azure Arc PrivateLinkScope definitions if too
     many PrivateLinkScopes where returned in the result set.
    :vartype next_link: str
    """

    _validation = {
        'value': {'required': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[HybridComputePrivateLinkScope]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword value: Required. List of Azure Arc PrivateLinkScope definitions.
        :paramtype value: list[~azure.mgmt.hybridcompute.models.HybridComputePrivateLinkScope]
        :keyword next_link: The URI to get the next set of Azure Arc PrivateLinkScope definitions if
         too many PrivateLinkScopes where returned in the result set.
        :paramtype next_link: str
        """
        super(HybridComputePrivateLinkScopeListResult, self).__init__(**kwargs)
        self.value = kwargs['value']
        self.next_link = kwargs.get('next_link', None)


class HybridComputePrivateLinkScopeProperties(msrest.serialization.Model):
    """Properties that define a Azure Arc PrivateLinkScope resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar public_network_access: Indicates whether machines associated with the private link scope
     can also use public Azure Arc service endpoints. Possible values include: "Enabled",
     "Disabled". Default value: "Disabled".
    :vartype public_network_access: str or ~azure.mgmt.hybridcompute.models.PublicNetworkAccessType
    :ivar provisioning_state: Current state of this PrivateLinkScope: whether or not is has been
     provisioned within the resource group it is defined. Users cannot change this value but are
     able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.
    :vartype provisioning_state: str
    :ivar private_link_scope_id: The Guid id of the private link scope.
    :vartype private_link_scope_id: str
    :ivar private_endpoint_connections: The collection of associated Private Endpoint Connections.
    :vartype private_endpoint_connections:
     list[~azure.mgmt.hybridcompute.models.PrivateEndpointConnectionDataModel]
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'private_link_scope_id': {'readonly': True},
        'private_endpoint_connections': {'readonly': True},
    }

    _attribute_map = {
        'public_network_access': {'key': 'publicNetworkAccess', 'type': 'str'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'private_link_scope_id': {'key': 'privateLinkScopeId', 'type': 'str'},
        'private_endpoint_connections': {'key': 'privateEndpointConnections', 'type': '[PrivateEndpointConnectionDataModel]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword public_network_access: Indicates whether machines associated with the private link
         scope can also use public Azure Arc service endpoints. Possible values include: "Enabled",
         "Disabled". Default value: "Disabled".
        :paramtype public_network_access: str or
         ~azure.mgmt.hybridcompute.models.PublicNetworkAccessType
        """
        super(HybridComputePrivateLinkScopeProperties, self).__init__(**kwargs)
        self.public_network_access = kwargs.get('public_network_access', "Disabled")
        self.provisioning_state = None
        self.private_link_scope_id = None
        self.private_endpoint_connections = None


class HybridIdentityMetadata(ProxyResource):
    """Defines the HybridIdentityMetadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar vm_id: The unique identifier for the resource.
    :vartype vm_id: str
    :ivar public_key: The Public Key.
    :vartype public_key: str
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure.mgmt.hybridcompute.models.Identity
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'identity': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'vm_id': {'key': 'properties.vmId', 'type': 'str'},
        'public_key': {'key': 'properties.publicKey', 'type': 'str'},
        'identity': {'key': 'properties.identity', 'type': 'Identity'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword vm_id: The unique identifier for the resource.
        :paramtype vm_id: str
        :keyword public_key: The Public Key.
        :paramtype public_key: str
        """
        super(HybridIdentityMetadata, self).__init__(**kwargs)
        self.vm_id = kwargs.get('vm_id', None)
        self.public_key = kwargs.get('public_key', None)
        self.identity = None


class HybridIdentityMetadataList(msrest.serialization.Model):
    """List of HybridIdentityMetadata.

    All required parameters must be populated in order to send to Azure.

    :ivar next_link: Url to follow for getting next page of HybridIdentityMetadata.
    :vartype next_link: str
    :ivar value: Required. Array of HybridIdentityMetadata.
    :vartype value: list[~azure.mgmt.hybridcompute.models.HybridIdentityMetadata]
    """

    _validation = {
        'value': {'required': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[HybridIdentityMetadata]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword next_link: Url to follow for getting next page of HybridIdentityMetadata.
        :paramtype next_link: str
        :keyword value: Required. Array of HybridIdentityMetadata.
        :paramtype value: list[~azure.mgmt.hybridcompute.models.HybridIdentityMetadata]
        """
        super(HybridIdentityMetadataList, self).__init__(**kwargs)
        self.next_link = kwargs.get('next_link', None)
        self.value = kwargs['value']


class Identity(msrest.serialization.Model):
    """Identity for the resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of resource identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of resource.
    :vartype tenant_id: str
    :ivar type: The identity type. The only acceptable values to pass in are None and
     "SystemAssigned". The default value is None.
    :vartype type: str
    """

    _validation = {
        'principal_id': {'readonly': True},
        'tenant_id': {'readonly': True},
    }

    _attribute_map = {
        'principal_id': {'key': 'principalId', 'type': 'str'},
        'tenant_id': {'key': 'tenantId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword type: The identity type. The only acceptable values to pass in are None and
         "SystemAssigned". The default value is None.
        :paramtype type: str
        """
        super(Identity, self).__init__(**kwargs)
        self.principal_id = None
        self.tenant_id = None
        self.type = kwargs.get('type', None)


class IpAddress(msrest.serialization.Model):
    """Describes properties of the IP address.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar address: Represents the IP Address.
    :vartype address: str
    :ivar ip_address_version: Represents the Ip Address Version.
    :vartype ip_address_version: str
    :ivar subnet: The subnet to which this IP address belongs.
    :vartype subnet: ~azure.mgmt.hybridcompute.models.Subnet
    """

    _validation = {
        'subnet': {'readonly': True},
    }

    _attribute_map = {
        'address': {'key': 'address', 'type': 'str'},
        'ip_address_version': {'key': 'ipAddressVersion', 'type': 'str'},
        'subnet': {'key': 'subnet', 'type': 'Subnet'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword address: Represents the IP Address.
        :paramtype address: str
        :keyword ip_address_version: Represents the Ip Address Version.
        :paramtype ip_address_version: str
        """
        super(IpAddress, self).__init__(**kwargs)
        self.address = kwargs.get('address', None)
        self.ip_address_version = kwargs.get('ip_address_version', None)
        self.subnet = None


class LinuxParameters(msrest.serialization.Model):
    """Input for InstallPatches on a Linux VM, as directly received by the API.

    :ivar classifications_to_include: The update classifications to select when installing patches
     for Linux.
    :vartype classifications_to_include: list[str or
     ~azure.mgmt.hybridcompute.models.VMGuestPatchClassificationLinux]
    :ivar package_name_masks_to_include: packages to include in the patch operation. Format:
     packageName_packageVersion.
    :vartype package_name_masks_to_include: list[str]
    :ivar package_name_masks_to_exclude: packages to exclude in the patch operation. Format:
     packageName_packageVersion.
    :vartype package_name_masks_to_exclude: list[str]
    """

    _attribute_map = {
        'classifications_to_include': {'key': 'classificationsToInclude', 'type': '[str]'},
        'package_name_masks_to_include': {'key': 'packageNameMasksToInclude', 'type': '[str]'},
        'package_name_masks_to_exclude': {'key': 'packageNameMasksToExclude', 'type': '[str]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword classifications_to_include: The update classifications to select when installing
         patches for Linux.
        :paramtype classifications_to_include: list[str or
         ~azure.mgmt.hybridcompute.models.VMGuestPatchClassificationLinux]
        :keyword package_name_masks_to_include: packages to include in the patch operation. Format:
         packageName_packageVersion.
        :paramtype package_name_masks_to_include: list[str]
        :keyword package_name_masks_to_exclude: packages to exclude in the patch operation. Format:
         packageName_packageVersion.
        :paramtype package_name_masks_to_exclude: list[str]
        """
        super(LinuxParameters, self).__init__(**kwargs)
        self.classifications_to_include = kwargs.get('classifications_to_include', None)
        self.package_name_masks_to_include = kwargs.get('package_name_masks_to_include', None)
        self.package_name_masks_to_exclude = kwargs.get('package_name_masks_to_exclude', None)


class LocationData(msrest.serialization.Model):
    """Metadata pertaining to the geographic location of the resource.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Required. A canonical name for the geographic or physical location.
    :vartype name: str
    :ivar city: The city or locality where the resource is located.
    :vartype city: str
    :ivar district: The district, state, or province where the resource is located.
    :vartype district: str
    :ivar country_or_region: The country or region where the resource is located.
    :vartype country_or_region: str
    """

    _validation = {
        'name': {'required': True, 'max_length': 256, 'min_length': 0},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'city': {'key': 'city', 'type': 'str'},
        'district': {'key': 'district', 'type': 'str'},
        'country_or_region': {'key': 'countryOrRegion', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword name: Required. A canonical name for the geographic or physical location.
        :paramtype name: str
        :keyword city: The city or locality where the resource is located.
        :paramtype city: str
        :keyword district: The district, state, or province where the resource is located.
        :paramtype district: str
        :keyword country_or_region: The country or region where the resource is located.
        :paramtype country_or_region: str
        """
        super(LocationData, self).__init__(**kwargs)
        self.name = kwargs['name']
        self.city = kwargs.get('city', None)
        self.district = kwargs.get('district', None)
        self.country_or_region = kwargs.get('country_or_region', None)


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: Required. The geo-location where the resource lives.
    :vartype location: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: Required. The geo-location where the resource lives.
        :paramtype location: str
        """
        super(TrackedResource, self).__init__(**kwargs)
        self.tags = kwargs.get('tags', None)
        self.location = kwargs['location']


class Machine(TrackedResource):
    """Describes a hybrid machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: Required. The geo-location where the resource lives.
    :vartype location: str
    :ivar resources: The list of extensions affiliated to the machine.
    :vartype resources: list[~azure.mgmt.hybridcompute.models.MachineExtension]
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure.mgmt.hybridcompute.models.Identity
    :ivar kind: Indicates which kind of VM fabric the instance is an instance of, such as HCI or
     SCVMM etc. Possible values include: "AVS", "HCI", "SCVMM", "VMware".
    :vartype kind: str or ~azure.mgmt.hybridcompute.models.PrivateCloudKind
    :ivar location_data: Metadata pertaining to the geographic location of the resource.
    :vartype location_data: ~azure.mgmt.hybridcompute.models.LocationData
    :ivar agent_configuration: Configurable properties that the user can set locally via the
     azcmagent config command, or remotely via ARM.
    :vartype agent_configuration: ~azure.mgmt.hybridcompute.models.AgentConfiguration
    :ivar service_statuses: Statuses of dependent services that are reported back to ARM.
    :vartype service_statuses: ~azure.mgmt.hybridcompute.models.ServiceStatuses
    :ivar cloud_metadata: The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
    :vartype cloud_metadata: ~azure.mgmt.hybridcompute.models.CloudMetadata
    :ivar agent_upgrade: The info of the machine w.r.t Agent Upgrade.
    :vartype agent_upgrade: ~azure.mgmt.hybridcompute.models.AgentUpgrade
    :ivar os_profile: Specifies the operating system settings for the hybrid machine.
    :vartype os_profile: ~azure.mgmt.hybridcompute.models.OSProfile
    :ivar provisioning_state: The provisioning state, which only appears in the response.
    :vartype provisioning_state: str
    :ivar status: The status of the hybrid machine agent. Possible values include: "Connected",
     "Disconnected", "Error".
    :vartype status: str or ~azure.mgmt.hybridcompute.models.StatusTypes
    :ivar last_status_change: The time of the last status change.
    :vartype last_status_change: ~datetime.datetime
    :ivar error_details: Details about the error state.
    :vartype error_details: list[~azure.mgmt.hybridcompute.models.ErrorDetail]
    :ivar agent_version: The hybrid machine agent full version.
    :vartype agent_version: str
    :ivar vm_id: Specifies the hybrid machine unique ID.
    :vartype vm_id: str
    :ivar display_name: Specifies the hybrid machine display name.
    :vartype display_name: str
    :ivar machine_fqdn: Specifies the hybrid machine FQDN.
    :vartype machine_fqdn: str
    :ivar client_public_key: Public Key that the client provides to be used during initial resource
     onboarding.
    :vartype client_public_key: str
    :ivar os_name: The Operating System running on the hybrid machine.
    :vartype os_name: str
    :ivar os_version: The version of Operating System running on the hybrid machine.
    :vartype os_version: str
    :ivar os_type: The type of Operating System (windows/linux).
    :vartype os_type: str
    :ivar vm_uuid: Specifies the Arc Machine's unique SMBIOS ID.
    :vartype vm_uuid: str
    :ivar extensions: Machine Extensions information (deprecated field).
    :vartype extensions: list[~azure.mgmt.hybridcompute.models.MachineExtensionInstanceView]
    :ivar os_sku: Specifies the Operating System product SKU.
    :vartype os_sku: str
    :ivar domain_name: Specifies the Windows domain name.
    :vartype domain_name: str
    :ivar ad_fqdn: Specifies the AD fully qualified display name.
    :vartype ad_fqdn: str
    :ivar dns_fqdn: Specifies the DNS fully qualified display name.
    :vartype dns_fqdn: str
    :ivar private_link_scope_resource_id: The resource id of the private link scope this machine is
     assigned to, if any.
    :vartype private_link_scope_resource_id: str
    :ivar parent_cluster_resource_id: The resource id of the parent cluster (Azure HCI) this
     machine is assigned to, if any.
    :vartype parent_cluster_resource_id: str
    :ivar mssql_discovered: Specifies whether any MS SQL instance is discovered on the machine.
    :vartype mssql_discovered: str
    :ivar detected_properties: Detected properties from the machine.
    :vartype detected_properties: dict[str, str]
    :ivar network_profile: Information about the network the machine is on.
    :vartype network_profile: ~azure.mgmt.hybridcompute.models.NetworkProfile
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'location': {'required': True},
        'resources': {'readonly': True},
        'agent_configuration': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'status': {'readonly': True},
        'last_status_change': {'readonly': True},
        'error_details': {'readonly': True},
        'agent_version': {'readonly': True},
        'display_name': {'readonly': True},
        'machine_fqdn': {'readonly': True},
        'os_name': {'readonly': True},
        'os_version': {'readonly': True},
        'vm_uuid': {'readonly': True},
        'os_sku': {'readonly': True},
        'domain_name': {'readonly': True},
        'ad_fqdn': {'readonly': True},
        'dns_fqdn': {'readonly': True},
        'detected_properties': {'readonly': True},
        'network_profile': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
        'resources': {'key': 'resources', 'type': '[MachineExtension]'},
        'identity': {'key': 'identity', 'type': 'Identity'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location_data': {'key': 'properties.locationData', 'type': 'LocationData'},
        'agent_configuration': {'key': 'properties.agentConfiguration', 'type': 'AgentConfiguration'},
        'service_statuses': {'key': 'properties.serviceStatuses', 'type': 'ServiceStatuses'},
        'cloud_metadata': {'key': 'properties.cloudMetadata', 'type': 'CloudMetadata'},
        'agent_upgrade': {'key': 'properties.agentUpgrade', 'type': 'AgentUpgrade'},
        'os_profile': {'key': 'properties.osProfile', 'type': 'OSProfile'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'str'},
        'last_status_change': {'key': 'properties.lastStatusChange', 'type': 'iso-8601'},
        'error_details': {'key': 'properties.errorDetails', 'type': '[ErrorDetail]'},
        'agent_version': {'key': 'properties.agentVersion', 'type': 'str'},
        'vm_id': {'key': 'properties.vmId', 'type': 'str'},
        'display_name': {'key': 'properties.displayName', 'type': 'str'},
        'machine_fqdn': {'key': 'properties.machineFqdn', 'type': 'str'},
        'client_public_key': {'key': 'properties.clientPublicKey', 'type': 'str'},
        'os_name': {'key': 'properties.osName', 'type': 'str'},
        'os_version': {'key': 'properties.osVersion', 'type': 'str'},
        'os_type': {'key': 'properties.osType', 'type': 'str'},
        'vm_uuid': {'key': 'properties.vmUuid', 'type': 'str'},
        'extensions': {'key': 'properties.extensions', 'type': '[MachineExtensionInstanceView]'},
        'os_sku': {'key': 'properties.osSku', 'type': 'str'},
        'domain_name': {'key': 'properties.domainName', 'type': 'str'},
        'ad_fqdn': {'key': 'properties.adFqdn', 'type': 'str'},
        'dns_fqdn': {'key': 'properties.dnsFqdn', 'type': 'str'},
        'private_link_scope_resource_id': {'key': 'properties.privateLinkScopeResourceId', 'type': 'str'},
        'parent_cluster_resource_id': {'key': 'properties.parentClusterResourceId', 'type': 'str'},
        'mssql_discovered': {'key': 'properties.mssqlDiscovered', 'type': 'str'},
        'detected_properties': {'key': 'properties.detectedProperties', 'type': '{str}'},
        'network_profile': {'key': 'properties.networkProfile', 'type': 'NetworkProfile'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: Required. The geo-location where the resource lives.
        :paramtype location: str
        :keyword identity: Identity for the resource.
        :paramtype identity: ~azure.mgmt.hybridcompute.models.Identity
        :keyword kind: Indicates which kind of VM fabric the instance is an instance of, such as HCI or
         SCVMM etc. Possible values include: "AVS", "HCI", "SCVMM", "VMware".
        :paramtype kind: str or ~azure.mgmt.hybridcompute.models.PrivateCloudKind
        :keyword location_data: Metadata pertaining to the geographic location of the resource.
        :paramtype location_data: ~azure.mgmt.hybridcompute.models.LocationData
        :keyword service_statuses: Statuses of dependent services that are reported back to ARM.
        :paramtype service_statuses: ~azure.mgmt.hybridcompute.models.ServiceStatuses
        :keyword cloud_metadata: The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
        :paramtype cloud_metadata: ~azure.mgmt.hybridcompute.models.CloudMetadata
        :keyword agent_upgrade: The info of the machine w.r.t Agent Upgrade.
        :paramtype agent_upgrade: ~azure.mgmt.hybridcompute.models.AgentUpgrade
        :keyword os_profile: Specifies the operating system settings for the hybrid machine.
        :paramtype os_profile: ~azure.mgmt.hybridcompute.models.OSProfile
        :keyword vm_id: Specifies the hybrid machine unique ID.
        :paramtype vm_id: str
        :keyword client_public_key: Public Key that the client provides to be used during initial
         resource onboarding.
        :paramtype client_public_key: str
        :keyword os_type: The type of Operating System (windows/linux).
        :paramtype os_type: str
        :keyword extensions: Machine Extensions information (deprecated field).
        :paramtype extensions: list[~azure.mgmt.hybridcompute.models.MachineExtensionInstanceView]
        :keyword private_link_scope_resource_id: The resource id of the private link scope this machine
         is assigned to, if any.
        :paramtype private_link_scope_resource_id: str
        :keyword parent_cluster_resource_id: The resource id of the parent cluster (Azure HCI) this
         machine is assigned to, if any.
        :paramtype parent_cluster_resource_id: str
        :keyword mssql_discovered: Specifies whether any MS SQL instance is discovered on the machine.
        :paramtype mssql_discovered: str
        """
        super(Machine, self).__init__(**kwargs)
        self.resources = None
        self.identity = kwargs.get('identity', None)
        self.kind = kwargs.get('kind', None)
        self.location_data = kwargs.get('location_data', None)
        self.agent_configuration = None
        self.service_statuses = kwargs.get('service_statuses', None)
        self.cloud_metadata = kwargs.get('cloud_metadata', None)
        self.agent_upgrade = kwargs.get('agent_upgrade', None)
        self.os_profile = kwargs.get('os_profile', None)
        self.provisioning_state = None
        self.status = None
        self.last_status_change = None
        self.error_details = None
        self.agent_version = None
        self.vm_id = kwargs.get('vm_id', None)
        self.display_name = None
        self.machine_fqdn = None
        self.client_public_key = kwargs.get('client_public_key', None)
        self.os_name = None
        self.os_version = None
        self.os_type = kwargs.get('os_type', None)
        self.vm_uuid = None
        self.extensions = kwargs.get('extensions', None)
        self.os_sku = None
        self.domain_name = None
        self.ad_fqdn = None
        self.dns_fqdn = None
        self.private_link_scope_resource_id = kwargs.get('private_link_scope_resource_id', None)
        self.parent_cluster_resource_id = kwargs.get('parent_cluster_resource_id', None)
        self.mssql_discovered = kwargs.get('mssql_discovered', None)
        self.detected_properties = None
        self.network_profile = None


class MachineAssessPatchesResult(msrest.serialization.Model):
    """Describes the properties of an AssessPatches result.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar status: The overall success or failure status of the operation. It remains "InProgress"
     until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded",
     or "CompletedWithWarnings.". Possible values include: "Unknown", "InProgress", "Failed",
     "Succeeded", "CompletedWithWarnings".
    :vartype status: str or ~azure.mgmt.hybridcompute.models.PatchOperationStatus
    :ivar assessment_activity_id: The activity ID of the operation that produced this result.
    :vartype assessment_activity_id: str
    :ivar reboot_pending: The overall reboot status of the VM. It will be true when partially
     installed patches require a reboot to complete installation but the reboot has not yet
     occurred.
    :vartype reboot_pending: bool
    :ivar available_patch_count_by_classification: Summarization of patches available for
     installation on the machine by classification.
    :vartype available_patch_count_by_classification:
     ~azure.mgmt.hybridcompute.models.AvailablePatchCountByClassification
    :ivar start_date_time: The UTC timestamp when the operation began.
    :vartype start_date_time: ~datetime.datetime
    :ivar last_modified_date_time: The UTC timestamp when the operation finished.
    :vartype last_modified_date_time: ~datetime.datetime
    :ivar started_by: Indicates if operation was triggered by user or by platform. Possible values
     include: "User", "Platform".
    :vartype started_by: str or ~azure.mgmt.hybridcompute.models.PatchOperationStartedBy
    :ivar patch_service_used: Specifies the patch service used for the operation. Possible values
     include: "Unknown", "WU", "WU_WSUS", "YUM", "APT", "Zypper".
    :vartype patch_service_used: str or ~azure.mgmt.hybridcompute.models.PatchServiceUsed
    :ivar os_type: The operating system type of the machine. Possible values include: "Windows",
     "Linux".
    :vartype os_type: str or ~azure.mgmt.hybridcompute.models.OsType
    :ivar error_details: The errors that were encountered during execution of the operation. The
     details array contains the list of them.
    :vartype error_details: ~azure.mgmt.hybridcompute.models.ErrorDetail
    """

    _validation = {
        'status': {'readonly': True},
        'assessment_activity_id': {'readonly': True},
        'reboot_pending': {'readonly': True},
        'start_date_time': {'readonly': True},
        'last_modified_date_time': {'readonly': True},
        'started_by': {'readonly': True},
        'patch_service_used': {'readonly': True},
        'os_type': {'readonly': True},
        'error_details': {'readonly': True},
    }

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'assessment_activity_id': {'key': 'assessmentActivityId', 'type': 'str'},
        'reboot_pending': {'key': 'rebootPending', 'type': 'bool'},
        'available_patch_count_by_classification': {'key': 'availablePatchCountByClassification', 'type': 'AvailablePatchCountByClassification'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'started_by': {'key': 'startedBy', 'type': 'str'},
        'patch_service_used': {'key': 'patchServiceUsed', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
        'error_details': {'key': 'errorDetails', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword available_patch_count_by_classification: Summarization of patches available for
         installation on the machine by classification.
        :paramtype available_patch_count_by_classification:
         ~azure.mgmt.hybridcompute.models.AvailablePatchCountByClassification
        """
        super(MachineAssessPatchesResult, self).__init__(**kwargs)
        self.status = None
        self.assessment_activity_id = None
        self.reboot_pending = None
        self.available_patch_count_by_classification = kwargs.get('available_patch_count_by_classification', None)
        self.start_date_time = None
        self.last_modified_date_time = None
        self.started_by = None
        self.patch_service_used = None
        self.os_type = None
        self.error_details = None


class MachineExtension(TrackedResource):
    """Describes a Machine Extension.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: Required. The geo-location where the resource lives.
    :vartype location: str
    :ivar force_update_tag: How the extension handler should be forced to update even if the
     extension configuration has not changed.
    :vartype force_update_tag: str
    :ivar publisher: The name of the extension handler publisher.
    :vartype publisher: str
    :ivar type_properties_type: Specifies the type of the extension; an example is
     "CustomScriptExtension".
    :vartype type_properties_type: str
    :ivar type_handler_version: Specifies the version of the script handler.
    :vartype type_handler_version: str
    :ivar enable_automatic_upgrade: Indicates whether the extension should be automatically
     upgraded by the platform if there is a newer version available.
    :vartype enable_automatic_upgrade: bool
    :ivar auto_upgrade_minor_version: Indicates whether the extension should use a newer minor
     version if one is available at deployment time. Once deployed, however, the extension will not
     upgrade minor versions unless redeployed, even with this property set to true.
    :vartype auto_upgrade_minor_version: bool
    :ivar settings: Json formatted public settings for the extension.
    :vartype settings: dict[str, any]
    :ivar protected_settings: The extension can contain either protectedSettings or
     protectedSettingsFromKeyVault or no protected settings at all.
    :vartype protected_settings: dict[str, any]
    :ivar provisioning_state: The provisioning state, which only appears in the response.
    :vartype provisioning_state: str
    :ivar instance_view: The machine extension instance view.
    :vartype instance_view: ~azure.mgmt.hybridcompute.models.MachineExtensionInstanceView
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'location': {'required': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
        'force_update_tag': {'key': 'properties.forceUpdateTag', 'type': 'str'},
        'publisher': {'key': 'properties.publisher', 'type': 'str'},
        'type_properties_type': {'key': 'properties.type', 'type': 'str'},
        'type_handler_version': {'key': 'properties.typeHandlerVersion', 'type': 'str'},
        'enable_automatic_upgrade': {'key': 'properties.enableAutomaticUpgrade', 'type': 'bool'},
        'auto_upgrade_minor_version': {'key': 'properties.autoUpgradeMinorVersion', 'type': 'bool'},
        'settings': {'key': 'properties.settings', 'type': '{object}'},
        'protected_settings': {'key': 'properties.protectedSettings', 'type': '{object}'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'instance_view': {'key': 'properties.instanceView', 'type': 'MachineExtensionInstanceView'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: Required. The geo-location where the resource lives.
        :paramtype location: str
        :keyword force_update_tag: How the extension handler should be forced to update even if the
         extension configuration has not changed.
        :paramtype force_update_tag: str
        :keyword publisher: The name of the extension handler publisher.
        :paramtype publisher: str
        :keyword type_properties_type: Specifies the type of the extension; an example is
         "CustomScriptExtension".
        :paramtype type_properties_type: str
        :keyword type_handler_version: Specifies the version of the script handler.
        :paramtype type_handler_version: str
        :keyword enable_automatic_upgrade: Indicates whether the extension should be automatically
         upgraded by the platform if there is a newer version available.
        :paramtype enable_automatic_upgrade: bool
        :keyword auto_upgrade_minor_version: Indicates whether the extension should use a newer minor
         version if one is available at deployment time. Once deployed, however, the extension will not
         upgrade minor versions unless redeployed, even with this property set to true.
        :paramtype auto_upgrade_minor_version: bool
        :keyword settings: Json formatted public settings for the extension.
        :paramtype settings: dict[str, any]
        :keyword protected_settings: The extension can contain either protectedSettings or
         protectedSettingsFromKeyVault or no protected settings at all.
        :paramtype protected_settings: dict[str, any]
        :keyword instance_view: The machine extension instance view.
        :paramtype instance_view: ~azure.mgmt.hybridcompute.models.MachineExtensionInstanceView
        """
        super(MachineExtension, self).__init__(**kwargs)
        self.force_update_tag = kwargs.get('force_update_tag', None)
        self.publisher = kwargs.get('publisher', None)
        self.type_properties_type = kwargs.get('type_properties_type', None)
        self.type_handler_version = kwargs.get('type_handler_version', None)
        self.enable_automatic_upgrade = kwargs.get('enable_automatic_upgrade', None)
        self.auto_upgrade_minor_version = kwargs.get('auto_upgrade_minor_version', None)
        self.settings = kwargs.get('settings', None)
        self.protected_settings = kwargs.get('protected_settings', None)
        self.provisioning_state = None
        self.instance_view = kwargs.get('instance_view', None)


class MachineExtensionInstanceView(msrest.serialization.Model):
    """Describes the Machine Extension Instance View.

    :ivar name: The machine extension name.
    :vartype name: str
    :ivar type: Specifies the type of the extension; an example is "CustomScriptExtension".
    :vartype type: str
    :ivar type_handler_version: Specifies the version of the script handler.
    :vartype type_handler_version: str
    :ivar status: Instance view status.
    :vartype status: ~azure.mgmt.hybridcompute.models.MachineExtensionInstanceViewStatus
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'type_handler_version': {'key': 'typeHandlerVersion', 'type': 'str'},
        'status': {'key': 'status', 'type': 'MachineExtensionInstanceViewStatus'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword name: The machine extension name.
        :paramtype name: str
        :keyword type: Specifies the type of the extension; an example is "CustomScriptExtension".
        :paramtype type: str
        :keyword type_handler_version: Specifies the version of the script handler.
        :paramtype type_handler_version: str
        :keyword status: Instance view status.
        :paramtype status: ~azure.mgmt.hybridcompute.models.MachineExtensionInstanceViewStatus
        """
        super(MachineExtensionInstanceView, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.type = kwargs.get('type', None)
        self.type_handler_version = kwargs.get('type_handler_version', None)
        self.status = kwargs.get('status', None)


class MachineExtensionInstanceViewStatus(msrest.serialization.Model):
    """Instance view status.

    :ivar code: The status code.
    :vartype code: str
    :ivar level: The level code. Possible values include: "Info", "Warning", "Error".
    :vartype level: str or ~azure.mgmt.hybridcompute.models.StatusLevelTypes
    :ivar display_status: The short localizable label for the status.
    :vartype display_status: str
    :ivar message: The detailed status message, including for alerts and error messages.
    :vartype message: str
    :ivar time: The time of the status.
    :vartype time: ~datetime.datetime
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'level': {'key': 'level', 'type': 'str'},
        'display_status': {'key': 'displayStatus', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'time': {'key': 'time', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword code: The status code.
        :paramtype code: str
        :keyword level: The level code. Possible values include: "Info", "Warning", "Error".
        :paramtype level: str or ~azure.mgmt.hybridcompute.models.StatusLevelTypes
        :keyword display_status: The short localizable label for the status.
        :paramtype display_status: str
        :keyword message: The detailed status message, including for alerts and error messages.
        :paramtype message: str
        :keyword time: The time of the status.
        :paramtype time: ~datetime.datetime
        """
        super(MachineExtensionInstanceViewStatus, self).__init__(**kwargs)
        self.code = kwargs.get('code', None)
        self.level = kwargs.get('level', None)
        self.display_status = kwargs.get('display_status', None)
        self.message = kwargs.get('message', None)
        self.time = kwargs.get('time', None)


class MachineExtensionsListResult(msrest.serialization.Model):
    """Describes the Machine Extensions List Result.

    :ivar value: The list of extensions.
    :vartype value: list[~azure.mgmt.hybridcompute.models.MachineExtension]
    :ivar next_link: The uri to fetch the next page of machine extensions. Call ListNext() with
     this to fetch the next page of extensions.
    :vartype next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MachineExtension]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword value: The list of extensions.
        :paramtype value: list[~azure.mgmt.hybridcompute.models.MachineExtension]
        :keyword next_link: The uri to fetch the next page of machine extensions. Call ListNext() with
         this to fetch the next page of extensions.
        :paramtype next_link: str
        """
        super(MachineExtensionsListResult, self).__init__(**kwargs)
        self.value = kwargs.get('value', None)
        self.next_link = kwargs.get('next_link', None)


class ResourceUpdate(msrest.serialization.Model):
    """The Update Resource model definition.

    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        """
        super(ResourceUpdate, self).__init__(**kwargs)
        self.tags = kwargs.get('tags', None)


class MachineExtensionUpdate(ResourceUpdate):
    """Describes a Machine Extension Update.

    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar force_update_tag: How the extension handler should be forced to update even if the
     extension configuration has not changed.
    :vartype force_update_tag: str
    :ivar publisher: The name of the extension handler publisher.
    :vartype publisher: str
    :ivar type: Specifies the type of the extension; an example is "CustomScriptExtension".
    :vartype type: str
    :ivar type_handler_version: Specifies the version of the script handler.
    :vartype type_handler_version: str
    :ivar enable_automatic_upgrade: Indicates whether the extension should be automatically
     upgraded by the platform if there is a newer version available.
    :vartype enable_automatic_upgrade: bool
    :ivar auto_upgrade_minor_version: Indicates whether the extension should use a newer minor
     version if one is available at deployment time. Once deployed, however, the extension will not
     upgrade minor versions unless redeployed, even with this property set to true.
    :vartype auto_upgrade_minor_version: bool
    :ivar settings: Json formatted public settings for the extension.
    :vartype settings: dict[str, any]
    :ivar protected_settings: The extension can contain either protectedSettings or
     protectedSettingsFromKeyVault or no protected settings at all.
    :vartype protected_settings: dict[str, any]
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
        'force_update_tag': {'key': 'properties.forceUpdateTag', 'type': 'str'},
        'publisher': {'key': 'properties.publisher', 'type': 'str'},
        'type': {'key': 'properties.type', 'type': 'str'},
        'type_handler_version': {'key': 'properties.typeHandlerVersion', 'type': 'str'},
        'enable_automatic_upgrade': {'key': 'properties.enableAutomaticUpgrade', 'type': 'bool'},
        'auto_upgrade_minor_version': {'key': 'properties.autoUpgradeMinorVersion', 'type': 'bool'},
        'settings': {'key': 'properties.settings', 'type': '{object}'},
        'protected_settings': {'key': 'properties.protectedSettings', 'type': '{object}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword force_update_tag: How the extension handler should be forced to update even if the
         extension configuration has not changed.
        :paramtype force_update_tag: str
        :keyword publisher: The name of the extension handler publisher.
        :paramtype publisher: str
        :keyword type: Specifies the type of the extension; an example is "CustomScriptExtension".
        :paramtype type: str
        :keyword type_handler_version: Specifies the version of the script handler.
        :paramtype type_handler_version: str
        :keyword enable_automatic_upgrade: Indicates whether the extension should be automatically
         upgraded by the platform if there is a newer version available.
        :paramtype enable_automatic_upgrade: bool
        :keyword auto_upgrade_minor_version: Indicates whether the extension should use a newer minor
         version if one is available at deployment time. Once deployed, however, the extension will not
         upgrade minor versions unless redeployed, even with this property set to true.
        :paramtype auto_upgrade_minor_version: bool
        :keyword settings: Json formatted public settings for the extension.
        :paramtype settings: dict[str, any]
        :keyword protected_settings: The extension can contain either protectedSettings or
         protectedSettingsFromKeyVault or no protected settings at all.
        :paramtype protected_settings: dict[str, any]
        """
        super(MachineExtensionUpdate, self).__init__(**kwargs)
        self.force_update_tag = kwargs.get('force_update_tag', None)
        self.publisher = kwargs.get('publisher', None)
        self.type = kwargs.get('type', None)
        self.type_handler_version = kwargs.get('type_handler_version', None)
        self.enable_automatic_upgrade = kwargs.get('enable_automatic_upgrade', None)
        self.auto_upgrade_minor_version = kwargs.get('auto_upgrade_minor_version', None)
        self.settings = kwargs.get('settings', None)
        self.protected_settings = kwargs.get('protected_settings', None)


class MachineExtensionUpgrade(msrest.serialization.Model):
    """Describes the Machine Extension Upgrade Properties.

    :ivar extension_targets: Describes the Extension Target Properties.
    :vartype extension_targets: dict[str,
     ~azure.mgmt.hybridcompute.models.ExtensionTargetProperties]
    """

    _attribute_map = {
        'extension_targets': {'key': 'extensionTargets', 'type': '{ExtensionTargetProperties}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword extension_targets: Describes the Extension Target Properties.
        :paramtype extension_targets: dict[str,
         ~azure.mgmt.hybridcompute.models.ExtensionTargetProperties]
        """
        super(MachineExtensionUpgrade, self).__init__(**kwargs)
        self.extension_targets = kwargs.get('extension_targets', None)


class MachineInstallPatchesParameters(msrest.serialization.Model):
    """Input for InstallPatches as directly received by the API.

    All required parameters must be populated in order to send to Azure.

    :ivar maximum_duration: Required. Specifies the maximum amount of time that the operation will
     run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours).
    :vartype maximum_duration: str
    :ivar reboot_setting: Required. Defines when it is acceptable to reboot a VM during a software
     update operation. Possible values include: "IfRequired", "Never", "Always".
    :vartype reboot_setting: str or ~azure.mgmt.hybridcompute.models.VMGuestPatchRebootSetting
    :ivar windows_parameters: Input for InstallPatches on a Windows VM, as directly received by the
     API.
    :vartype windows_parameters: ~azure.mgmt.hybridcompute.models.WindowsParameters
    :ivar linux_parameters: Input for InstallPatches on a Linux VM, as directly received by the
     API.
    :vartype linux_parameters: ~azure.mgmt.hybridcompute.models.LinuxParameters
    """

    _validation = {
        'maximum_duration': {'required': True},
        'reboot_setting': {'required': True},
    }

    _attribute_map = {
        'maximum_duration': {'key': 'maximumDuration', 'type': 'str'},
        'reboot_setting': {'key': 'rebootSetting', 'type': 'str'},
        'windows_parameters': {'key': 'windowsParameters', 'type': 'WindowsParameters'},
        'linux_parameters': {'key': 'linuxParameters', 'type': 'LinuxParameters'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword maximum_duration: Required. Specifies the maximum amount of time that the operation
         will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours).
        :paramtype maximum_duration: str
        :keyword reboot_setting: Required. Defines when it is acceptable to reboot a VM during a
         software update operation. Possible values include: "IfRequired", "Never", "Always".
        :paramtype reboot_setting: str or ~azure.mgmt.hybridcompute.models.VMGuestPatchRebootSetting
        :keyword windows_parameters: Input for InstallPatches on a Windows VM, as directly received by
         the API.
        :paramtype windows_parameters: ~azure.mgmt.hybridcompute.models.WindowsParameters
        :keyword linux_parameters: Input for InstallPatches on a Linux VM, as directly received by the
         API.
        :paramtype linux_parameters: ~azure.mgmt.hybridcompute.models.LinuxParameters
        """
        super(MachineInstallPatchesParameters, self).__init__(**kwargs)
        self.maximum_duration = kwargs['maximum_duration']
        self.reboot_setting = kwargs['reboot_setting']
        self.windows_parameters = kwargs.get('windows_parameters', None)
        self.linux_parameters = kwargs.get('linux_parameters', None)


class MachineInstallPatchesResult(msrest.serialization.Model):
    """The result summary of an installation operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar status: The overall success or failure status of the operation. It remains "InProgress"
     until the operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or
     "CompletedWithWarnings.". Possible values include: "Unknown", "InProgress", "Failed",
     "Succeeded", "CompletedWithWarnings".
    :vartype status: str or ~azure.mgmt.hybridcompute.models.PatchOperationStatus
    :ivar installation_activity_id: The activity ID of the operation that produced this result.
    :vartype installation_activity_id: str
    :ivar reboot_status: The reboot state of the VM following completion of the operation. Possible
     values include: "Unknown", "NotNeeded", "Required", "Started", "Failed", "Completed".
    :vartype reboot_status: str or ~azure.mgmt.hybridcompute.models.VMGuestPatchRebootStatus
    :ivar maintenance_window_exceeded: Whether the operation ran out of time before it completed
     all its intended actions.
    :vartype maintenance_window_exceeded: bool
    :ivar excluded_patch_count: The number of patches that were not installed due to the user
     blocking their installation.
    :vartype excluded_patch_count: int
    :ivar not_selected_patch_count: The number of patches that were detected as available for
     install, but did not meet the operation's criteria.
    :vartype not_selected_patch_count: int
    :ivar pending_patch_count: The number of patches that were identified as meeting the
     installation criteria, but were not able to be installed. Typically this happens when
     maintenanceWindowExceeded == true.
    :vartype pending_patch_count: int
    :ivar installed_patch_count: The number of patches successfully installed.
    :vartype installed_patch_count: int
    :ivar failed_patch_count: The number of patches that could not be installed due to some issue.
     See errors for details.
    :vartype failed_patch_count: int
    :ivar start_date_time: The UTC timestamp when the operation began.
    :vartype start_date_time: ~datetime.datetime
    :ivar last_modified_date_time: The UTC timestamp when the operation finished.
    :vartype last_modified_date_time: ~datetime.datetime
    :ivar started_by: Indicates if operation was triggered by user or by platform. Possible values
     include: "User", "Platform".
    :vartype started_by: str or ~azure.mgmt.hybridcompute.models.PatchOperationStartedBy
    :ivar patch_service_used: Specifies the patch service used for the operation. Possible values
     include: "Unknown", "WU", "WU_WSUS", "YUM", "APT", "Zypper".
    :vartype patch_service_used: str or ~azure.mgmt.hybridcompute.models.PatchServiceUsed
    :ivar os_type: The operating system type of the machine. Possible values include: "Windows",
     "Linux".
    :vartype os_type: str or ~azure.mgmt.hybridcompute.models.OsType
    :ivar error_details: The errors that were encountered during execution of the operation. The
     details array contains the list of them.
    :vartype error_details: ~azure.mgmt.hybridcompute.models.ErrorDetail
    """

    _validation = {
        'status': {'readonly': True},
        'installation_activity_id': {'readonly': True},
        'reboot_status': {'readonly': True},
        'maintenance_window_exceeded': {'readonly': True},
        'excluded_patch_count': {'readonly': True},
        'not_selected_patch_count': {'readonly': True},
        'pending_patch_count': {'readonly': True},
        'installed_patch_count': {'readonly': True},
        'failed_patch_count': {'readonly': True},
        'start_date_time': {'readonly': True},
        'last_modified_date_time': {'readonly': True},
        'started_by': {'readonly': True},
        'patch_service_used': {'readonly': True},
        'os_type': {'readonly': True},
        'error_details': {'readonly': True},
    }

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'installation_activity_id': {'key': 'installationActivityId', 'type': 'str'},
        'reboot_status': {'key': 'rebootStatus', 'type': 'str'},
        'maintenance_window_exceeded': {'key': 'maintenanceWindowExceeded', 'type': 'bool'},
        'excluded_patch_count': {'key': 'excludedPatchCount', 'type': 'int'},
        'not_selected_patch_count': {'key': 'notSelectedPatchCount', 'type': 'int'},
        'pending_patch_count': {'key': 'pendingPatchCount', 'type': 'int'},
        'installed_patch_count': {'key': 'installedPatchCount', 'type': 'int'},
        'failed_patch_count': {'key': 'failedPatchCount', 'type': 'int'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'started_by': {'key': 'startedBy', 'type': 'str'},
        'patch_service_used': {'key': 'patchServiceUsed', 'type': 'str'},
        'os_type': {'key': 'osType', 'type': 'str'},
        'error_details': {'key': 'errorDetails', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(MachineInstallPatchesResult, self).__init__(**kwargs)
        self.status = None
        self.installation_activity_id = None
        self.reboot_status = None
        self.maintenance_window_exceeded = None
        self.excluded_patch_count = None
        self.not_selected_patch_count = None
        self.pending_patch_count = None
        self.installed_patch_count = None
        self.failed_patch_count = None
        self.start_date_time = None
        self.last_modified_date_time = None
        self.started_by = None
        self.patch_service_used = None
        self.os_type = None
        self.error_details = None


class MachineListResult(msrest.serialization.Model):
    """The List hybrid machine operation response.

    All required parameters must be populated in order to send to Azure.

    :ivar value: Required. The list of hybrid machines.
    :vartype value: list[~azure.mgmt.hybridcompute.models.Machine]
    :ivar next_link: The URI to fetch the next page of Machines. Call ListNext() with this URI to
     fetch the next page of hybrid machines.
    :vartype next_link: str
    """

    _validation = {
        'value': {'required': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Machine]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword value: Required. The list of hybrid machines.
        :paramtype value: list[~azure.mgmt.hybridcompute.models.Machine]
        :keyword next_link: The URI to fetch the next page of Machines. Call ListNext() with this URI
         to fetch the next page of hybrid machines.
        :paramtype next_link: str
        """
        super(MachineListResult, self).__init__(**kwargs)
        self.value = kwargs['value']
        self.next_link = kwargs.get('next_link', None)


class MachineRunCommand(TrackedResource):
    """Describes a Run Command.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: Required. The geo-location where the resource lives.
    :vartype location: str
    :ivar source: The source of the run command script.
    :vartype source: ~azure.mgmt.hybridcompute.models.MachineRunCommandScriptSource
    :ivar parameters: The parameters used by the script.
    :vartype parameters: list[~azure.mgmt.hybridcompute.models.RunCommandInputParameter]
    :ivar protected_parameters: The parameters used by the script.
    :vartype protected_parameters: list[~azure.mgmt.hybridcompute.models.RunCommandInputParameter]
    :ivar async_execution: Optional. If set to true, provisioning will complete as soon as script
     starts and will not wait for script to complete.
    :vartype async_execution: bool
    :ivar run_as_user: Specifies the user account on the machine when executing the run command.
    :vartype run_as_user: str
    :ivar run_as_password: Specifies the user account password on the machine when executing the
     run command.
    :vartype run_as_password: str
    :ivar timeout_in_seconds: The timeout in seconds to execute the run command.
    :vartype timeout_in_seconds: int
    :ivar output_blob_uri: Specifies the Azure storage blob where script output stream will be
     uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to
     provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
    :vartype output_blob_uri: str
    :ivar error_blob_uri: Specifies the Azure storage blob where script error stream will be
     uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to
     provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
    :vartype error_blob_uri: str
    :ivar output_blob_managed_identity: User-assigned managed identity that has access to
     outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure
     managed identity has been given access to blob's container with 'Storage Blob Data Contributor'
     role assignment. In case of user-assigned identity, make sure you add it under VM's identity.
     For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and
     https://aka.ms/RunCommandManaged.
    :vartype output_blob_managed_identity:
     ~azure.mgmt.hybridcompute.models.RunCommandManagedIdentity
    :ivar error_blob_managed_identity: User-assigned managed identity that has access to
     errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure
     managed identity has been given access to blob's container with 'Storage Blob Data Contributor'
     role assignment. In case of user-assigned identity, make sure you add it under VM's identity.
     For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and
     https://aka.ms/RunCommandManaged.
    :vartype error_blob_managed_identity:
     ~azure.mgmt.hybridcompute.models.RunCommandManagedIdentity
    :ivar provisioning_state: The provisioning state, which only appears in the response.
    :vartype provisioning_state: str
    :ivar instance_view: The machine run command instance view.
    :vartype instance_view: ~azure.mgmt.hybridcompute.models.MachineRunCommandInstanceView
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'location': {'required': True},
        'provisioning_state': {'readonly': True},
        'instance_view': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
        'source': {'key': 'properties.source', 'type': 'MachineRunCommandScriptSource'},
        'parameters': {'key': 'properties.parameters', 'type': '[RunCommandInputParameter]'},
        'protected_parameters': {'key': 'properties.protectedParameters', 'type': '[RunCommandInputParameter]'},
        'async_execution': {'key': 'properties.asyncExecution', 'type': 'bool'},
        'run_as_user': {'key': 'properties.runAsUser', 'type': 'str'},
        'run_as_password': {'key': 'properties.runAsPassword', 'type': 'str'},
        'timeout_in_seconds': {'key': 'properties.timeoutInSeconds', 'type': 'int'},
        'output_blob_uri': {'key': 'properties.outputBlobUri', 'type': 'str'},
        'error_blob_uri': {'key': 'properties.errorBlobUri', 'type': 'str'},
        'output_blob_managed_identity': {'key': 'properties.outputBlobManagedIdentity', 'type': 'RunCommandManagedIdentity'},
        'error_blob_managed_identity': {'key': 'properties.errorBlobManagedIdentity', 'type': 'RunCommandManagedIdentity'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'instance_view': {'key': 'properties.instanceView', 'type': 'MachineRunCommandInstanceView'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: Required. The geo-location where the resource lives.
        :paramtype location: str
        :keyword source: The source of the run command script.
        :paramtype source: ~azure.mgmt.hybridcompute.models.MachineRunCommandScriptSource
        :keyword parameters: The parameters used by the script.
        :paramtype parameters: list[~azure.mgmt.hybridcompute.models.RunCommandInputParameter]
        :keyword protected_parameters: The parameters used by the script.
        :paramtype protected_parameters:
         list[~azure.mgmt.hybridcompute.models.RunCommandInputParameter]
        :keyword async_execution: Optional. If set to true, provisioning will complete as soon as
         script starts and will not wait for script to complete.
        :paramtype async_execution: bool
        :keyword run_as_user: Specifies the user account on the machine when executing the run command.
        :paramtype run_as_user: str
        :keyword run_as_password: Specifies the user account password on the machine when executing the
         run command.
        :paramtype run_as_password: str
        :keyword timeout_in_seconds: The timeout in seconds to execute the run command.
        :paramtype timeout_in_seconds: int
        :keyword output_blob_uri: Specifies the Azure storage blob where script output stream will be
         uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to
         provide the VM access to the blob. Refer outputBlobManagedIdentity parameter.
        :paramtype output_blob_uri: str
        :keyword error_blob_uri: Specifies the Azure storage blob where script error stream will be
         uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to
         provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        :paramtype error_blob_uri: str
        :keyword output_blob_managed_identity: User-assigned managed identity that has access to
         outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure
         managed identity has been given access to blob's container with 'Storage Blob Data Contributor'
         role assignment. In case of user-assigned identity, make sure you add it under VM's identity.
         For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and
         https://aka.ms/RunCommandManaged.
        :paramtype output_blob_managed_identity:
         ~azure.mgmt.hybridcompute.models.RunCommandManagedIdentity
        :keyword error_blob_managed_identity: User-assigned managed identity that has access to
         errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure
         managed identity has been given access to blob's container with 'Storage Blob Data Contributor'
         role assignment. In case of user-assigned identity, make sure you add it under VM's identity.
         For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and
         https://aka.ms/RunCommandManaged.
        :paramtype error_blob_managed_identity:
         ~azure.mgmt.hybridcompute.models.RunCommandManagedIdentity
        """
        super(MachineRunCommand, self).__init__(**kwargs)
        self.source = kwargs.get('source', None)
        self.parameters = kwargs.get('parameters', None)
        self.protected_parameters = kwargs.get('protected_parameters', None)
        self.async_execution = kwargs.get('async_execution', False)
        self.run_as_user = kwargs.get('run_as_user', None)
        self.run_as_password = kwargs.get('run_as_password', None)
        self.timeout_in_seconds = kwargs.get('timeout_in_seconds', None)
        self.output_blob_uri = kwargs.get('output_blob_uri', None)
        self.error_blob_uri = kwargs.get('error_blob_uri', None)
        self.output_blob_managed_identity = kwargs.get('output_blob_managed_identity', None)
        self.error_blob_managed_identity = kwargs.get('error_blob_managed_identity', None)
        self.provisioning_state = None
        self.instance_view = None


class MachineRunCommandInstanceView(msrest.serialization.Model):
    """Describes the Machine Extension Instance View.

    :ivar name: The run command name.
    :vartype name: str
    :ivar status: Instance view status.
    :vartype status: ~azure.mgmt.hybridcompute.models.MachineRunCommandInstanceViewStatus
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'status': {'key': 'status', 'type': 'MachineRunCommandInstanceViewStatus'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword name: The run command name.
        :paramtype name: str
        :keyword status: Instance view status.
        :paramtype status: ~azure.mgmt.hybridcompute.models.MachineRunCommandInstanceViewStatus
        """
        super(MachineRunCommandInstanceView, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.status = kwargs.get('status', None)


class MachineRunCommandInstanceViewStatus(msrest.serialization.Model):
    """Instance view status.

    :ivar code: The status code.
    :vartype code: str
    :ivar level: The level code. Possible values include: "Info", "Warning", "Error".
    :vartype level: str or ~azure.mgmt.hybridcompute.models.StatusLevelTypes
    :ivar display_status: The short localizable label for the status.
    :vartype display_status: str
    :ivar message: The detailed status message, including for alerts and error messages.
    :vartype message: str
    :ivar time: The time of the status.
    :vartype time: ~datetime.datetime
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'level': {'key': 'level', 'type': 'str'},
        'display_status': {'key': 'displayStatus', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'time': {'key': 'time', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword code: The status code.
        :paramtype code: str
        :keyword level: The level code. Possible values include: "Info", "Warning", "Error".
        :paramtype level: str or ~azure.mgmt.hybridcompute.models.StatusLevelTypes
        :keyword display_status: The short localizable label for the status.
        :paramtype display_status: str
        :keyword message: The detailed status message, including for alerts and error messages.
        :paramtype message: str
        :keyword time: The time of the status.
        :paramtype time: ~datetime.datetime
        """
        super(MachineRunCommandInstanceViewStatus, self).__init__(**kwargs)
        self.code = kwargs.get('code', None)
        self.level = kwargs.get('level', None)
        self.display_status = kwargs.get('display_status', None)
        self.message = kwargs.get('message', None)
        self.time = kwargs.get('time', None)


class MachineRunCommandScriptSource(msrest.serialization.Model):
    """Describes the script sources for run command. Use only one of script, scriptUri, commandId.

    :ivar script: Specifies the script content to be executed on the machine.
    :vartype script: str
    :ivar script_uri: Specifies the script download location. It can be either SAS URI of an Azure
     storage blob with read access or public URI.
    :vartype script_uri: str
    :ivar command_id: Specifies the commandId of predefined built-in script.
    :vartype command_id: str
    :ivar script_uri_managed_identity: User-assigned managed identity that has access to scriptUri
     in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make
     sure the Azure storage blob exists, and managed identity has been given access to blob's
     container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity,
     make sure you add it under VM's identity. For more info on managed identity and Run Command,
     refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
    :vartype script_uri_managed_identity:
     ~azure.mgmt.hybridcompute.models.RunCommandManagedIdentity
    """

    _attribute_map = {
        'script': {'key': 'script', 'type': 'str'},
        'script_uri': {'key': 'scriptUri', 'type': 'str'},
        'command_id': {'key': 'commandId', 'type': 'str'},
        'script_uri_managed_identity': {'key': 'scriptUriManagedIdentity', 'type': 'RunCommandManagedIdentity'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword script: Specifies the script content to be executed on the machine.
        :paramtype script: str
        :keyword script_uri: Specifies the script download location. It can be either SAS URI of an
         Azure storage blob with read access or public URI.
        :paramtype script_uri: str
        :keyword command_id: Specifies the commandId of predefined built-in script.
        :paramtype command_id: str
        :keyword script_uri_managed_identity: User-assigned managed identity that has access to
         scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned
         identity. Make sure the Azure storage blob exists, and managed identity has been given access
         to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned
         identity, make sure you add it under VM's identity. For more info on managed identity and Run
         Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
        :paramtype script_uri_managed_identity:
         ~azure.mgmt.hybridcompute.models.RunCommandManagedIdentity
        """
        super(MachineRunCommandScriptSource, self).__init__(**kwargs)
        self.script = kwargs.get('script', None)
        self.script_uri = kwargs.get('script_uri', None)
        self.command_id = kwargs.get('command_id', None)
        self.script_uri_managed_identity = kwargs.get('script_uri_managed_identity', None)


class MachineRunCommandsListResult(msrest.serialization.Model):
    """Describes the Run Commands List Result.

    :ivar value: The list of run commands.
    :vartype value: list[~azure.mgmt.hybridcompute.models.MachineRunCommand]
    :ivar next_link: The uri to fetch the next page of run commands. Call ListNext() with this to
     fetch the next page of run commands.
    :vartype next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MachineRunCommand]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword value: The list of run commands.
        :paramtype value: list[~azure.mgmt.hybridcompute.models.MachineRunCommand]
        :keyword next_link: The uri to fetch the next page of run commands. Call ListNext() with this
         to fetch the next page of run commands.
        :paramtype next_link: str
        """
        super(MachineRunCommandsListResult, self).__init__(**kwargs)
        self.value = kwargs.get('value', None)
        self.next_link = kwargs.get('next_link', None)


class MachineRunCommandUpdate(ResourceUpdate):
    """Describes a Machine Extension Update.

    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        """
        super(MachineRunCommandUpdate, self).__init__(**kwargs)


class MachineUpdate(ResourceUpdate):
    """Describes a hybrid machine Update.

    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure.mgmt.hybridcompute.models.Identity
    :ivar kind: Indicates which kind of VM fabric the instance is an instance of, such as HCI or
     SCVMM etc. Possible values include: "AVS", "HCI", "SCVMM", "VMware".
    :vartype kind: str or ~azure.mgmt.hybridcompute.models.PrivateCloudKind
    :ivar location_data: Metadata pertaining to the geographic location of the resource.
    :vartype location_data: ~azure.mgmt.hybridcompute.models.LocationData
    :ivar os_profile: Specifies the operating system settings for the hybrid machine.
    :vartype os_profile: ~azure.mgmt.hybridcompute.models.OSProfile
    :ivar cloud_metadata: The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
    :vartype cloud_metadata: ~azure.mgmt.hybridcompute.models.CloudMetadata
    :ivar agent_upgrade: The info of the machine w.r.t Agent Upgrade.
    :vartype agent_upgrade: ~azure.mgmt.hybridcompute.models.AgentUpgrade
    :ivar parent_cluster_resource_id: The resource id of the parent cluster (Azure HCI) this
     machine is assigned to, if any.
    :vartype parent_cluster_resource_id: str
    :ivar private_link_scope_resource_id: The resource id of the private link scope this machine is
     assigned to, if any.
    :vartype private_link_scope_resource_id: str
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
        'identity': {'key': 'identity', 'type': 'Identity'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location_data': {'key': 'properties.locationData', 'type': 'LocationData'},
        'os_profile': {'key': 'properties.osProfile', 'type': 'OSProfile'},
        'cloud_metadata': {'key': 'properties.cloudMetadata', 'type': 'CloudMetadata'},
        'agent_upgrade': {'key': 'properties.agentUpgrade', 'type': 'AgentUpgrade'},
        'parent_cluster_resource_id': {'key': 'properties.parentClusterResourceId', 'type': 'str'},
        'private_link_scope_resource_id': {'key': 'properties.privateLinkScopeResourceId', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword identity: Identity for the resource.
        :paramtype identity: ~azure.mgmt.hybridcompute.models.Identity
        :keyword kind: Indicates which kind of VM fabric the instance is an instance of, such as HCI or
         SCVMM etc. Possible values include: "AVS", "HCI", "SCVMM", "VMware".
        :paramtype kind: str or ~azure.mgmt.hybridcompute.models.PrivateCloudKind
        :keyword location_data: Metadata pertaining to the geographic location of the resource.
        :paramtype location_data: ~azure.mgmt.hybridcompute.models.LocationData
        :keyword os_profile: Specifies the operating system settings for the hybrid machine.
        :paramtype os_profile: ~azure.mgmt.hybridcompute.models.OSProfile
        :keyword cloud_metadata: The metadata of the cloud environment (Azure/GCP/AWS/OCI...).
        :paramtype cloud_metadata: ~azure.mgmt.hybridcompute.models.CloudMetadata
        :keyword agent_upgrade: The info of the machine w.r.t Agent Upgrade.
        :paramtype agent_upgrade: ~azure.mgmt.hybridcompute.models.AgentUpgrade
        :keyword parent_cluster_resource_id: The resource id of the parent cluster (Azure HCI) this
         machine is assigned to, if any.
        :paramtype parent_cluster_resource_id: str
        :keyword private_link_scope_resource_id: The resource id of the private link scope this machine
         is assigned to, if any.
        :paramtype private_link_scope_resource_id: str
        """
        super(MachineUpdate, self).__init__(**kwargs)
        self.identity = kwargs.get('identity', None)
        self.kind = kwargs.get('kind', None)
        self.location_data = kwargs.get('location_data', None)
        self.os_profile = kwargs.get('os_profile', None)
        self.cloud_metadata = kwargs.get('cloud_metadata', None)
        self.agent_upgrade = kwargs.get('agent_upgrade', None)
        self.parent_cluster_resource_id = kwargs.get('parent_cluster_resource_id', None)
        self.private_link_scope_resource_id = kwargs.get('private_link_scope_resource_id', None)


class NetworkInterface(msrest.serialization.Model):
    """Describes a network interface.

    :ivar ip_addresses: The list of IP addresses in this interface.
    :vartype ip_addresses: list[~azure.mgmt.hybridcompute.models.IpAddress]
    """

    _attribute_map = {
        'ip_addresses': {'key': 'ipAddresses', 'type': '[IpAddress]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword ip_addresses: The list of IP addresses in this interface.
        :paramtype ip_addresses: list[~azure.mgmt.hybridcompute.models.IpAddress]
        """
        super(NetworkInterface, self).__init__(**kwargs)
        self.ip_addresses = kwargs.get('ip_addresses', None)


class NetworkProfile(msrest.serialization.Model):
    """Describes the network information on this machine.

    :ivar network_interfaces: The list of network interfaces.
    :vartype network_interfaces: list[~azure.mgmt.hybridcompute.models.NetworkInterface]
    """

    _attribute_map = {
        'network_interfaces': {'key': 'networkInterfaces', 'type': '[NetworkInterface]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword network_interfaces: The list of network interfaces.
        :paramtype network_interfaces: list[~azure.mgmt.hybridcompute.models.NetworkInterface]
        """
        super(NetworkProfile, self).__init__(**kwargs)
        self.network_interfaces = kwargs.get('network_interfaces', None)


class OperationListResult(msrest.serialization.Model):
    """The List Compute Operation operation response.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: The list of compute operations.
    :vartype value: list[~azure.mgmt.hybridcompute.models.OperationValue]
    """

    _validation = {
        'value': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[OperationValue]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationListResult, self).__init__(**kwargs)
        self.value = None


class OperationValue(msrest.serialization.Model):
    """Describes the properties of a Compute Operation value.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar origin: The origin of the compute operation.
    :vartype origin: str
    :ivar name: The name of the compute operation.
    :vartype name: str
    :ivar display: Display properties.
    :vartype display: ~azure.mgmt.hybridcompute.models.OperationValueDisplay
    :ivar is_data_action: This property indicates if the operation is an action or a data action.
    :vartype is_data_action: bool
    """

    _validation = {
        'origin': {'readonly': True},
        'name': {'readonly': True},
        'is_data_action': {'readonly': True},
    }

    _attribute_map = {
        'origin': {'key': 'origin', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'display': {'key': 'display', 'type': 'OperationValueDisplay'},
        'is_data_action': {'key': 'isDataAction', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword display: Display properties.
        :paramtype display: ~azure.mgmt.hybridcompute.models.OperationValueDisplay
        """
        super(OperationValue, self).__init__(**kwargs)
        self.origin = None
        self.name = None
        self.display = kwargs.get('display', None)
        self.is_data_action = None


class OperationValueDisplay(msrest.serialization.Model):
    """Describes the properties of a Hybrid Compute Operation Value Display.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation: The display name of the compute operation.
    :vartype operation: str
    :ivar resource: The display name of the resource the operation applies to.
    :vartype resource: str
    :ivar description: The description of the operation.
    :vartype description: str
    :ivar provider: The resource provider for the operation.
    :vartype provider: str
    """

    _validation = {
        'operation': {'readonly': True},
        'resource': {'readonly': True},
        'description': {'readonly': True},
        'provider': {'readonly': True},
    }

    _attribute_map = {
        'operation': {'key': 'operation', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'provider': {'key': 'provider', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationValueDisplay, self).__init__(**kwargs)
        self.operation = None
        self.resource = None
        self.description = None
        self.provider = None


class OSProfile(msrest.serialization.Model):
    """Specifies the operating system settings for the hybrid machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar computer_name: Specifies the host OS name of the hybrid machine.
    :vartype computer_name: str
    :ivar windows_configuration: Specifies the windows configuration for update management.
    :vartype windows_configuration: ~azure.mgmt.hybridcompute.models.OSProfileWindowsConfiguration
    :ivar linux_configuration: Specifies the linux configuration for update management.
    :vartype linux_configuration: ~azure.mgmt.hybridcompute.models.OSProfileLinuxConfiguration
    """

    _validation = {
        'computer_name': {'readonly': True},
    }

    _attribute_map = {
        'computer_name': {'key': 'computerName', 'type': 'str'},
        'windows_configuration': {'key': 'windowsConfiguration', 'type': 'OSProfileWindowsConfiguration'},
        'linux_configuration': {'key': 'linuxConfiguration', 'type': 'OSProfileLinuxConfiguration'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword windows_configuration: Specifies the windows configuration for update management.
        :paramtype windows_configuration:
         ~azure.mgmt.hybridcompute.models.OSProfileWindowsConfiguration
        :keyword linux_configuration: Specifies the linux configuration for update management.
        :paramtype linux_configuration: ~azure.mgmt.hybridcompute.models.OSProfileLinuxConfiguration
        """
        super(OSProfile, self).__init__(**kwargs)
        self.computer_name = None
        self.windows_configuration = kwargs.get('windows_configuration', None)
        self.linux_configuration = kwargs.get('linux_configuration', None)


class OSProfileLinuxConfiguration(msrest.serialization.Model):
    """Specifies the linux configuration for update management.

    :ivar assessment_mode: Specifies the assessment mode. Possible values include: "ImageDefault",
     "AutomaticByPlatform".
    :vartype assessment_mode: str or ~azure.mgmt.hybridcompute.models.AssessmentModeTypes
    :ivar patch_mode: Specifies the patch mode. Possible values include: "ImageDefault",
     "AutomaticByPlatform", "AutomaticByOS", "Manual".
    :vartype patch_mode: str or ~azure.mgmt.hybridcompute.models.PatchModeTypes
    """

    _attribute_map = {
        'assessment_mode': {'key': 'patchSettings.assessmentMode', 'type': 'str'},
        'patch_mode': {'key': 'patchSettings.patchMode', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword assessment_mode: Specifies the assessment mode. Possible values include:
         "ImageDefault", "AutomaticByPlatform".
        :paramtype assessment_mode: str or ~azure.mgmt.hybridcompute.models.AssessmentModeTypes
        :keyword patch_mode: Specifies the patch mode. Possible values include: "ImageDefault",
         "AutomaticByPlatform", "AutomaticByOS", "Manual".
        :paramtype patch_mode: str or ~azure.mgmt.hybridcompute.models.PatchModeTypes
        """
        super(OSProfileLinuxConfiguration, self).__init__(**kwargs)
        self.assessment_mode = kwargs.get('assessment_mode', None)
        self.patch_mode = kwargs.get('patch_mode', None)


class OSProfileWindowsConfiguration(msrest.serialization.Model):
    """Specifies the windows configuration for update management.

    :ivar assessment_mode: Specifies the assessment mode. Possible values include: "ImageDefault",
     "AutomaticByPlatform".
    :vartype assessment_mode: str or ~azure.mgmt.hybridcompute.models.AssessmentModeTypes
    :ivar patch_mode: Specifies the patch mode. Possible values include: "ImageDefault",
     "AutomaticByPlatform", "AutomaticByOS", "Manual".
    :vartype patch_mode: str or ~azure.mgmt.hybridcompute.models.PatchModeTypes
    """

    _attribute_map = {
        'assessment_mode': {'key': 'patchSettings.assessmentMode', 'type': 'str'},
        'patch_mode': {'key': 'patchSettings.patchMode', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword assessment_mode: Specifies the assessment mode. Possible values include:
         "ImageDefault", "AutomaticByPlatform".
        :paramtype assessment_mode: str or ~azure.mgmt.hybridcompute.models.AssessmentModeTypes
        :keyword patch_mode: Specifies the patch mode. Possible values include: "ImageDefault",
         "AutomaticByPlatform", "AutomaticByOS", "Manual".
        :paramtype patch_mode: str or ~azure.mgmt.hybridcompute.models.PatchModeTypes
        """
        super(OSProfileWindowsConfiguration, self).__init__(**kwargs)
        self.assessment_mode = kwargs.get('assessment_mode', None)
        self.patch_mode = kwargs.get('patch_mode', None)


class PrivateEndpointConnection(ProxyResource):
    """A private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar properties: Resource properties.
    :vartype properties: ~azure.mgmt.hybridcompute.models.PrivateEndpointConnectionProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'properties': {'key': 'properties', 'type': 'PrivateEndpointConnectionProperties'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword properties: Resource properties.
        :paramtype properties: ~azure.mgmt.hybridcompute.models.PrivateEndpointConnectionProperties
        """
        super(PrivateEndpointConnection, self).__init__(**kwargs)
        self.properties = kwargs.get('properties', None)


class PrivateEndpointConnectionDataModel(msrest.serialization.Model):
    """The Data Model for a Private Endpoint Connection associated with a Private Link Scope.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The ARM Resource Id of the Private Endpoint.
    :vartype id: str
    :ivar name: The Name of the Private Endpoint.
    :vartype name: str
    :ivar type: Azure resource type.
    :vartype type: str
    :ivar properties: The Private Endpoint Connection properties.
    :vartype properties: ~azure.mgmt.hybridcompute.models.PrivateEndpointConnectionProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'PrivateEndpointConnectionProperties'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword properties: The Private Endpoint Connection properties.
        :paramtype properties: ~azure.mgmt.hybridcompute.models.PrivateEndpointConnectionProperties
        """
        super(PrivateEndpointConnectionDataModel, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.properties = kwargs.get('properties', None)


class PrivateEndpointConnectionListResult(msrest.serialization.Model):
    """A list of private endpoint connections.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Array of results.
    :vartype value: list[~azure.mgmt.hybridcompute.models.PrivateEndpointConnection]
    :ivar next_link: Link to retrieve next page of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[PrivateEndpointConnection]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(PrivateEndpointConnectionListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateEndpointConnectionProperties(msrest.serialization.Model):
    """Properties of a private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar private_endpoint: Private endpoint which the connection belongs to.
    :vartype private_endpoint: ~azure.mgmt.hybridcompute.models.PrivateEndpointProperty
    :ivar private_link_service_connection_state: Connection state of the private endpoint
     connection.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.hybridcompute.models.PrivateLinkServiceConnectionStateProperty
    :ivar provisioning_state: State of the private endpoint connection.
    :vartype provisioning_state: str
    :ivar group_ids: List of group IDs.
    :vartype group_ids: list[str]
    """

    _validation = {
        'provisioning_state': {'readonly': True},
        'group_ids': {'readonly': True},
    }

    _attribute_map = {
        'private_endpoint': {'key': 'privateEndpoint', 'type': 'PrivateEndpointProperty'},
        'private_link_service_connection_state': {'key': 'privateLinkServiceConnectionState', 'type': 'PrivateLinkServiceConnectionStateProperty'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword private_endpoint: Private endpoint which the connection belongs to.
        :paramtype private_endpoint: ~azure.mgmt.hybridcompute.models.PrivateEndpointProperty
        :keyword private_link_service_connection_state: Connection state of the private endpoint
         connection.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.hybridcompute.models.PrivateLinkServiceConnectionStateProperty
        """
        super(PrivateEndpointConnectionProperties, self).__init__(**kwargs)
        self.private_endpoint = kwargs.get('private_endpoint', None)
        self.private_link_service_connection_state = kwargs.get('private_link_service_connection_state', None)
        self.provisioning_state = None
        self.group_ids = None


class PrivateEndpointProperty(msrest.serialization.Model):
    """Private endpoint which the connection belongs to.

    :ivar id: Resource id of the private endpoint.
    :vartype id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword id: Resource id of the private endpoint.
        :paramtype id: str
        """
        super(PrivateEndpointProperty, self).__init__(**kwargs)
        self.id = kwargs.get('id', None)


class PrivateLinkResource(ProxyResource):
    """A private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.hybridcompute.models.SystemData
    :ivar properties: Resource properties.
    :vartype properties: ~azure.mgmt.hybridcompute.models.PrivateLinkResourceProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'properties': {'key': 'properties', 'type': 'PrivateLinkResourceProperties'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword properties: Resource properties.
        :paramtype properties: ~azure.mgmt.hybridcompute.models.PrivateLinkResourceProperties
        """
        super(PrivateLinkResource, self).__init__(**kwargs)
        self.properties = kwargs.get('properties', None)


class PrivateLinkResourceListResult(msrest.serialization.Model):
    """A list of private link resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Array of results.
    :vartype value: list[~azure.mgmt.hybridcompute.models.PrivateLinkResource]
    :ivar next_link: Link to retrieve next page of results.
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[PrivateLinkResource]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(PrivateLinkResourceListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class PrivateLinkResourceProperties(msrest.serialization.Model):
    """Properties of a private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar group_id: The private link resource group id.
    :vartype group_id: str
    :ivar required_members: The private link resource required member names.
    :vartype required_members: list[str]
    :ivar required_zone_names: Required DNS zone names of the the private link resource.
    :vartype required_zone_names: list[str]
    """

    _validation = {
        'group_id': {'readonly': True},
        'required_members': {'readonly': True},
        'required_zone_names': {'readonly': True},
    }

    _attribute_map = {
        'group_id': {'key': 'groupId', 'type': 'str'},
        'required_members': {'key': 'requiredMembers', 'type': '[str]'},
        'required_zone_names': {'key': 'requiredZoneNames', 'type': '[str]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(PrivateLinkResourceProperties, self).__init__(**kwargs)
        self.group_id = None
        self.required_members = None
        self.required_zone_names = None


class PrivateLinkScopeValidationDetails(msrest.serialization.Model):
    """PrivateLinkScopeValidationDetails.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Azure resource Id.
    :vartype id: str
    :ivar public_network_access: Indicates whether machines associated with the private link scope
     can also use public Azure Arc service endpoints. Possible values include: "Enabled",
     "Disabled". Default value: "Disabled".
    :vartype public_network_access: str or ~azure.mgmt.hybridcompute.models.PublicNetworkAccessType
    :ivar connection_details: List of Private Endpoint Connection details.
    :vartype connection_details: list[~azure.mgmt.hybridcompute.models.ConnectionDetail]
    """

    _validation = {
        'id': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'public_network_access': {'key': 'publicNetworkAccess', 'type': 'str'},
        'connection_details': {'key': 'connectionDetails', 'type': '[ConnectionDetail]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword public_network_access: Indicates whether machines associated with the private link
         scope can also use public Azure Arc service endpoints. Possible values include: "Enabled",
         "Disabled". Default value: "Disabled".
        :paramtype public_network_access: str or
         ~azure.mgmt.hybridcompute.models.PublicNetworkAccessType
        :keyword connection_details: List of Private Endpoint Connection details.
        :paramtype connection_details: list[~azure.mgmt.hybridcompute.models.ConnectionDetail]
        """
        super(PrivateLinkScopeValidationDetails, self).__init__(**kwargs)
        self.id = None
        self.public_network_access = kwargs.get('public_network_access', "Disabled")
        self.connection_details = kwargs.get('connection_details', None)


class PrivateLinkServiceConnectionStateProperty(msrest.serialization.Model):
    """State of the private endpoint connection.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar status: Required. The private link service connection status.
    :vartype status: str
    :ivar description: Required. The private link service connection description.
    :vartype description: str
    :ivar actions_required: The actions required for private link service connection.
    :vartype actions_required: str
    """

    _validation = {
        'status': {'required': True},
        'description': {'required': True},
        'actions_required': {'readonly': True},
    }

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'actions_required': {'key': 'actionsRequired', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword status: Required. The private link service connection status.
        :paramtype status: str
        :keyword description: Required. The private link service connection description.
        :paramtype description: str
        """
        super(PrivateLinkServiceConnectionStateProperty, self).__init__(**kwargs)
        self.status = kwargs['status']
        self.description = kwargs['description']
        self.actions_required = None


class RunCommandInputParameter(msrest.serialization.Model):
    """Describes the properties of a run command parameter.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Required. The run command parameter name.
    :vartype name: str
    :ivar value: Required. The run command parameter value.
    :vartype value: str
    """

    _validation = {
        'name': {'required': True},
        'value': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword name: Required. The run command parameter name.
        :paramtype name: str
        :keyword value: Required. The run command parameter value.
        :paramtype value: str
        """
        super(RunCommandInputParameter, self).__init__(**kwargs)
        self.name = kwargs['name']
        self.value = kwargs['value']


class RunCommandManagedIdentity(msrest.serialization.Model):
    """Contains clientId or objectId (use only one, not both) of a user-assigned managed identity that has access to storage blob used in Run Command. Use an empty RunCommandManagedIdentity object in case of system-assigned identity. Make sure the Azure storage blob exists in case of scriptUri, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment with scriptUri blob and 'Storage Blob Data Contributor' for Append blobs(outputBlobUri, errorBlobUri). In case of user assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.

    :ivar client_id: Client Id (GUID value) of the user-assigned managed identity. ObjectId should
     not be used if this is provided.
    :vartype client_id: str
    :ivar object_id: Object Id (GUID value) of the user-assigned managed identity. ClientId should
     not be used if this is provided.
    :vartype object_id: str
    """

    _attribute_map = {
        'client_id': {'key': 'clientId', 'type': 'str'},
        'object_id': {'key': 'objectId', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword client_id: Client Id (GUID value) of the user-assigned managed identity. ObjectId
         should not be used if this is provided.
        :paramtype client_id: str
        :keyword object_id: Object Id (GUID value) of the user-assigned managed identity. ClientId
         should not be used if this is provided.
        :paramtype object_id: str
        """
        super(RunCommandManagedIdentity, self).__init__(**kwargs)
        self.client_id = kwargs.get('client_id', None)
        self.object_id = kwargs.get('object_id', None)


class ServiceStatus(msrest.serialization.Model):
    """Describes the status and behavior of a service.

    :ivar status: The current status of the service.
    :vartype status: str
    :ivar startup_type: The behavior of the service when the Arc-enabled machine starts up.
    :vartype startup_type: str
    """

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'startup_type': {'key': 'startupType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword status: The current status of the service.
        :paramtype status: str
        :keyword startup_type: The behavior of the service when the Arc-enabled machine starts up.
        :paramtype startup_type: str
        """
        super(ServiceStatus, self).__init__(**kwargs)
        self.status = kwargs.get('status', None)
        self.startup_type = kwargs.get('startup_type', None)


class ServiceStatuses(msrest.serialization.Model):
    """Reports the state and behavior of dependent services.

    :ivar extension_service: The state of the extension service on the Arc-enabled machine.
    :vartype extension_service: ~azure.mgmt.hybridcompute.models.ServiceStatus
    :ivar guest_configuration_service: The state of the guest configuration service on the
     Arc-enabled machine.
    :vartype guest_configuration_service: ~azure.mgmt.hybridcompute.models.ServiceStatus
    """

    _attribute_map = {
        'extension_service': {'key': 'extensionService', 'type': 'ServiceStatus'},
        'guest_configuration_service': {'key': 'guestConfigurationService', 'type': 'ServiceStatus'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword extension_service: The state of the extension service on the Arc-enabled machine.
        :paramtype extension_service: ~azure.mgmt.hybridcompute.models.ServiceStatus
        :keyword guest_configuration_service: The state of the guest configuration service on the
         Arc-enabled machine.
        :paramtype guest_configuration_service: ~azure.mgmt.hybridcompute.models.ServiceStatus
        """
        super(ServiceStatuses, self).__init__(**kwargs)
        self.extension_service = kwargs.get('extension_service', None)
        self.guest_configuration_service = kwargs.get('guest_configuration_service', None)


class Subnet(msrest.serialization.Model):
    """Describes the subnet.

    :ivar address_prefix: Represents address prefix.
    :vartype address_prefix: str
    """

    _attribute_map = {
        'address_prefix': {'key': 'addressPrefix', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword address_prefix: Represents address prefix.
        :paramtype address_prefix: str
        """
        super(Subnet, self).__init__(**kwargs)
        self.address_prefix = kwargs.get('address_prefix', None)


class SystemData(msrest.serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Possible values include:
     "User", "Application", "ManagedIdentity", "Key".
    :vartype created_by_type: str or ~azure.mgmt.hybridcompute.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Possible
     values include: "User", "Application", "ManagedIdentity", "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.hybridcompute.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_by_type': {'key': 'createdByType', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'str'},
        'last_modified_by_type': {'key': 'lastModifiedByType', 'type': 'str'},
        'last_modified_at': {'key': 'lastModifiedAt', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Possible values
         include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype created_by_type: str or ~azure.mgmt.hybridcompute.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Possible
         values include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.hybridcompute.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super(SystemData, self).__init__(**kwargs)
        self.created_by = kwargs.get('created_by', None)
        self.created_by_type = kwargs.get('created_by_type', None)
        self.created_at = kwargs.get('created_at', None)
        self.last_modified_by = kwargs.get('last_modified_by', None)
        self.last_modified_by_type = kwargs.get('last_modified_by_type', None)
        self.last_modified_at = kwargs.get('last_modified_at', None)


class TagsResource(msrest.serialization.Model):
    """A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkScope instance.

    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        """
        super(TagsResource, self).__init__(**kwargs)
        self.tags = kwargs.get('tags', None)


class WindowsParameters(msrest.serialization.Model):
    """Input for InstallPatches on a Windows VM, as directly received by the API.

    :ivar classifications_to_include: The update classifications to select when installing patches
     for Windows.
    :vartype classifications_to_include: list[str or
     ~azure.mgmt.hybridcompute.models.VMGuestPatchClassificationWindows]
    :ivar kb_numbers_to_include: Kbs to include in the patch operation.
    :vartype kb_numbers_to_include: list[str]
    :ivar kb_numbers_to_exclude: Kbs to exclude in the patch operation.
    :vartype kb_numbers_to_exclude: list[str]
    :ivar exclude_kbs_requiring_reboot: Filters out Kbs that don't have an
     InstallationRebootBehavior of 'NeverReboots' when this is set to true.
    :vartype exclude_kbs_requiring_reboot: bool
    :ivar max_patch_publish_date: This is used to install patches that were published on or before
     this given max published date.
    :vartype max_patch_publish_date: ~datetime.datetime
    """

    _attribute_map = {
        'classifications_to_include': {'key': 'classificationsToInclude', 'type': '[str]'},
        'kb_numbers_to_include': {'key': 'kbNumbersToInclude', 'type': '[str]'},
        'kb_numbers_to_exclude': {'key': 'kbNumbersToExclude', 'type': '[str]'},
        'exclude_kbs_requiring_reboot': {'key': 'excludeKbsRequiringReboot', 'type': 'bool'},
        'max_patch_publish_date': {'key': 'maxPatchPublishDate', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        :keyword classifications_to_include: The update classifications to select when installing
         patches for Windows.
        :paramtype classifications_to_include: list[str or
         ~azure.mgmt.hybridcompute.models.VMGuestPatchClassificationWindows]
        :keyword kb_numbers_to_include: Kbs to include in the patch operation.
        :paramtype kb_numbers_to_include: list[str]
        :keyword kb_numbers_to_exclude: Kbs to exclude in the patch operation.
        :paramtype kb_numbers_to_exclude: list[str]
        :keyword exclude_kbs_requiring_reboot: Filters out Kbs that don't have an
         InstallationRebootBehavior of 'NeverReboots' when this is set to true.
        :paramtype exclude_kbs_requiring_reboot: bool
        :keyword max_patch_publish_date: This is used to install patches that were published on or
         before this given max published date.
        :paramtype max_patch_publish_date: ~datetime.datetime
        """
        super(WindowsParameters, self).__init__(**kwargs)
        self.classifications_to_include = kwargs.get('classifications_to_include', None)
        self.kb_numbers_to_include = kwargs.get('kb_numbers_to_include', None)
        self.kb_numbers_to_exclude = kwargs.get('kb_numbers_to_exclude', None)
        self.exclude_kbs_requiring_reboot = kwargs.get('exclude_kbs_requiring_reboot', None)
        self.max_patch_publish_date = kwargs.get('max_patch_publish_date', None)
