# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /CertificateProfile/put/Create Certificate Profile
@try_manual
def step_certificate_profile_create(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning certificate-profile create '
             '--account-name "MyAccount" '
             '--common-name "Contoso Inc" '
             '--organization "Contoso Inc" '
             '--name "profileA" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CertificateProfile/get/Get Certificate Profile
@try_manual
def step_certificate_profile_show(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning certificate-profile show '
             '--account-name "MyAccount" '
             '--name "profileA" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CertificateProfile/get/List Certificate Profiles
@try_manual
def step_certificate_profile_list(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning certificate-profile list '
             '--account-name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CertificateProfile/delete/Delete Certificate Profile
@try_manual
def step_certificate_profile_delete(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning certificate-profile delete -y '
             '--account-name "MyAccount" '
             '--name "profileA" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CodeSigningAccount/put/Create Code Signing Account
@try_manual
def step_create(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning create '
             '--name "MyAccount" '
             '--location "eastus" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CodeSigningAccount/get/Get Code Signing Account
@try_manual
def step_show(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning show '
             '--name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CodeSigningAccount/get/List Code Signing Accounts by Resource Group
@try_manual
def step_list(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CodeSigningAccount/get/List Code Signing Accounts by Subscription
@try_manual
def step_list2(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning list '
             '-g ""',
             checks=checks)


# EXAMPLE: /CodeSigningAccount/patch/Update Code Signing Account
@try_manual
def step_update(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning update '
             '--name "MyAccount" '
             '--tags key1="value1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /CodeSigningAccount/delete/Delete Code Signing Account
@try_manual
def step_delete(test, rg, checks=None):  # pylint: disable=unused-argument
    if checks is None:
        checks = []
    test.cmd('az codesigning delete -y '
             '--name "MyAccount" '
             '--resource-group "{rg}"',
             checks=checks)
