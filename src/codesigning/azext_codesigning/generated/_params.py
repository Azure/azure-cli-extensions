# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azure.cli.core.commands.parameters import (
    tags_type,
    resource_group_name_type,
    get_location_type
)
from azure.cli.core.commands.validators import get_default_location_from_resource_group


def load_arguments(self, _):

    with self.argument_context('codesigning list') as c:
        c.argument('resource_group_name', resource_group_name_type)

    with self.argument_context('codesigning show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('name', options_list=['--name', '-n'], type=str, help='Code Signing account name', id_part='name')

    with self.argument_context('codesigning create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('name', options_list=['--name', '-n'], type=str, help='Code Signing account name')
        c.argument('tags', tags_type)
        c.argument('location', arg_type=get_location_type(self.cli_ctx), required=False,
                   validator=get_default_location_from_resource_group)

    with self.argument_context('codesigning update') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('name', options_list=['--name', '-n'], type=str, help='Code Signing account name', id_part='name')
        c.argument('tags', tags_type)

    with self.argument_context('codesigning delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('name', options_list=['--name', '-n'], type=str, help='Code Signing account name', id_part='name')

    with self.argument_context('codesigning wait') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('name', options_list=['--name', '-n'], type=str, help='Code Signing account name', id_part='name')

    with self.argument_context('codesigning certificate-profile list') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='Code Signing account name')

    with self.argument_context('codesigning certificate-profile show') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='Code Signing account name', id_part='name')
        c.argument('name', options_list=['--name', '-n'], type=str, help='Certificate profile name',
                   id_part='child_name_1')

    with self.argument_context('codesigning certificate-profile create') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='Code Signing account name')
        c.argument('name', options_list=['--name', '-n'], type=str, help='Certificate profile name')
        c.argument('common_name', type=str, help='Used as CN in the subject name of the certificate')
        c.argument('organization', type=str, help='Used as O in the subject name of the certificate')

    with self.argument_context('codesigning certificate-profile delete') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='Code Signing account name', id_part='name')
        c.argument('name', options_list=['--name', '-n'], type=str, help='Certificate profile name',
                   id_part='child_name_1')

    with self.argument_context('codesigning certificate-profile wait') as c:
        c.argument('resource_group_name', resource_group_name_type)
        c.argument('account_name', type=str, help='Code Signing account name', id_part='name')
        c.argument('name', options_list=['--name', '-n'], type=str, help='Certificate profile name',
                   id_part='child_name_1')
