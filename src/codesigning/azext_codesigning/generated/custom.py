# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def codesigning_list(client,
                     resource_group_name=None):
    if resource_group_name:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list_by_subscription()


def codesigning_show(client,
                     resource_group_name,
                     account_name):
    return client.get(resource_group_name=resource_group_name,
                      account_name=account_name)


def codesigning_create(client,
                       resource_group_name,
                       account_name,
                       tags=None,
                       location=None,
                       code_sign_account_properties_account_name=None,
                       account_url=None,
                       verification_status=None,
                       provisioning_state=None):
    code_sign_account = {}
    code_sign_account['tags'] = tags
    code_sign_account['location'] = location
    code_sign_account['account_name'] = code_sign_account_properties_account_name
    code_sign_account['account_url'] = account_url
    code_sign_account['verification_status'] = verification_status
    code_sign_account['provisioning_state'] = provisioning_state
    return client.create(resource_group_name=resource_group_name,
                         account_name=account_name,
                         code_sign_account=code_sign_account)


def codesigning_update(client,
                       resource_group_name,
                       account_name,
                       tags=None):
    code_sign_account_patch = {}
    code_sign_account_patch['tags'] = tags
    return client.update(resource_group_name=resource_group_name,
                         account_name=account_name,
                         code_sign_account_patch=code_sign_account_patch)


def codesigning_delete(client,
                       resource_group_name,
                       account_name):
    return client.delete(resource_group_name=resource_group_name,
                         account_name=account_name)


def codesigning_certificate_profile_list(client,
                                         resource_group_name,
                                         account_name):
    return client.list_by_code_sign_account(resource_group_name=resource_group_name,
                                            account_name=account_name)


def codesigning_certificate_profile_show(client,
                                         resource_group_name,
                                         account_name,
                                         profile_name):
    return client.get(resource_group_name=resource_group_name,
                      account_name=account_name,
                      profile_name=profile_name)


def codesigning_certificate_profile_create(client,
                                           resource_group_name,
                                           account_name,
                                           profile_name,
                                           certificate_profile_properties_profile_name=None,
                                           profile_type=None,
                                           common_name=None,
                                           subject_alternative_name=None,
                                           provisioning_state=None):
    certificate_profile = {}
    certificate_profile['profile_name'] = certificate_profile_properties_profile_name
    certificate_profile['profile_type'] = profile_type
    certificate_profile['rotation_policy'] = "Monthly"
    certificate_profile['common_name'] = common_name
    certificate_profile['subject_alternative_name'] = subject_alternative_name
    certificate_profile['provisioning_state'] = provisioning_state
    return client.create(resource_group_name=resource_group_name,
                         account_name=account_name,
                         profile_name=profile_name,
                         certificate_profile=certificate_profile)


def codesigning_certificate_profile_update(client,
                                           resource_group_name,
                                           account_name,
                                           profile_name,
                                           certificate_profile_properties_profile_name=None,
                                           profile_type=None,
                                           common_name=None,
                                           subject_alternative_name=None,
                                           provisioning_state=None):
    certificate_profile = {}
    certificate_profile['profile_name'] = certificate_profile_properties_profile_name
    certificate_profile['profile_type'] = profile_type
    certificate_profile['rotation_policy'] = "Monthly"
    certificate_profile['common_name'] = common_name
    certificate_profile['subject_alternative_name'] = subject_alternative_name
    certificate_profile['provisioning_state'] = provisioning_state
    return client.update(resource_group_name=resource_group_name,
                         account_name=account_name,
                         profile_name=profile_name,
                         certificate_profile=certificate_profile)


def codesigning_certificate_profile_delete(client,
                                           resource_group_name,
                                           account_name,
                                           profile_name):
    return client.delete(resource_group_name=resource_group_name,
                         account_name=account_name,
                         profile_name=profile_name)


def codesigning_operation_show(client):
    return client.get()
