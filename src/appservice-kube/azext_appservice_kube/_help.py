# coding=utf-8
# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

from knack.help_files import helps
# pylint: disable=line-too-long, too-many-lines

helps['webapp scale'] = """
type: command
short-summary: Modify the number of instances of a webapp on Arc enabled Kubernetes workloads .
examples:
  - name: Change the number of instances of MyApp to 2.
    text: >
        az webapp scale -g MyResourceGroup -n MyApp --instance-count 2
"""

helps['appservice plan create'] = """
type: command
short-summary: Create an app service plan.
examples:
  - name: Create a basic app service plan.
    text: >
        az appservice plan create -g MyResourceGroup -n MyPlan
  - name: Create a standard app service plan with with four Linux workers.
    text: >
        az appservice plan create -g MyResourceGroup -n MyPlan \\
            --is-linux --number-of-workers 4 --sku S1
  - name: Create an app service plan for app service environment.
    text: >
        az appservice plan create -g MyResourceGroup -n MyPlan \\
            --app-service-environment MyAppServiceEnvironment --sku I1
  - name: Create an app service plan for a kubernetes environment.
    text: >
        az appservice plan create -g MyResourceGroup -n MyPlan \\
            --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name \\
            --per-site-scaling --is-linux --sku K1
  - name: Create a kubernetes environment app service plan in the same resource group as the custom location
    text: >
        az appservice plan create -g MyResourceGroup -n MyPlan \\
            --custom-location custom_location_name \\
            --per-site-scaling --is-linux --sku K1
"""

helps['appservice plan update'] = """
type: command
short-summary: Update an app service plan. See https://docs.microsoft.com/azure/app-service/app-service-plan-manage#move-an-app-to-another-app-service-plan to learn more
examples:
  - name: Update an app service plan. (autogenerated)
    text: az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup --sku F1
    crafted: true
  - name: Update a kubernetes app service plan.
    text: >
        az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup \\
            --sku ANY --number-of-workers 3
"""

helps['appservice kube'] = """
    type: group
    short-summary: Manage Kubernetes Environments
"""

helps['appservice kube create'] = """
    type: command
    short-summary: Create a Kubernetes Environment.
    examples:
    - name: Create Kubernetes Environment with a custom location in the same resource group
      text: |
          az appservice kube create -n MyKubeEnvironment -g MyResourceGroup --static-ip 0.0.0.0 --custom-location custom_location_name
    - name: Create Kubernetes Environment
      text: |
          az appservice kube create -n MyKubeEnvironment -g MyResourceGroup --static-ip 0.0.0.0 --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name
"""

helps['appservice kube update'] = """
    type: command
    short-summary: Update a Kubernetes Environment. Currently not supported
    examples:
    - name: Update Kubernetes Environment
      text: |
          az appservice kube update --name MyKubeEnvironment -g MyResourceGroup --static-ip 0.0.0.0
"""

helps['appservice kube show'] = """
    type: command
    short-summary: Show the details of a kubernetes environment.
    examples:
    - name: Show the details of a Kubernetes Environment.
      text: |
          az appservice kube show -n MyKubeEnvironment -g MyResourceGroup
"""

helps['appservice kube list'] = """
    type: command
    short-summary: List kubernetes environments by subscription or resource group.
    examples:
    - name: List Kubernetes Environments by subscription.
      text: |
          az appservice kube list
    - name: List Kubernetes Environments by resource group.
      text: |
          az appservice kube list -g MyResourceGroup
"""

helps['appservice kube delete'] = """
    type: command
    short-summary: Delete kubernetes environment.
    examples:
    - name: Delete Kubernetes Environment.
      text: az appservice kube delete -g MyResourceGroup -n MyKubeEnvironment
"""

helps['appservice kube wait'] = """
    type: command
    short-summary: Wait for a Kubernetes Environment to reach a desired state.
    examples:
    - name: Wait for a Kubernetes Environment to be provisioned, polling every 60 seconds.
      text: |
          az appservice kube wait -g MyResourceGroup -n MyKubeEnvironment \\
              --created --interval 60
"""

helps['webapp config ssl bind'] = """
type: command
short-summary: Bind an SSL certificate to a web app.
examples:
  - name: Bind an SSL certificate to a web app. (autogenerated)
    text: az webapp config ssl bind --certificate-thumbprint {certificate-thumbprint} --name MyWebapp --resource-group MyResourceGroup --ssl-type SNI
    crafted: true
"""

helps['webapp config ssl unbind'] = """
type: command
short-summary: Unbind an SSL certificate from a web app.
"""

helps['functionapp create'] = """
type: command
short-summary: Create a function app.
long-summary: The function app's name must be able to produce a unique FQDN as AppName.azurewebsites.net.
examples:
  - name: Create a basic function app.
    text: >
        az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount
  - name: Create a function app. (autogenerated)
    text: az functionapp create --consumption-plan-location westus --name MyUniqueAppName --os-type Windows --resource-group MyResourceGroup --runtime dotnet --storage-account MyStorageAccount
    crafted: true
  - name: Create a function app using a private ACR image.
    text: >
        az functionapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime node --storage-account MyStorageAccount --deployment-container-image-name myacr.azurecr.io/myimage:tag --docker-registry-server-password passw0rd --docker-registry-server-user MyUser
  - name: Create a function app in an app service kubernetes environment
    text: >
        az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name
  - name: Create a function app in an app service kubernetes environment and in the same resource group as the custom location
    text: >
        az functionapp create -g MyResourceGroup  -p MyPlan -n MyUniqueAppName -s MyStorageAccount --custom-location custom_location_name
"""

helps['webapp create'] = """
type: command
short-summary: Create a web app.
long-summary: The web app's name must be able to produce a unique FQDN as AppName.azurewebsites.net.
examples:
  - name: Create a web app with the default configuration.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName
  - name: Create a web app with a Java 11 runtime using '|' delimiter.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "java|11|Java SE|11"
  - name: Create a web app with a Java 11 runtime using ':' delimiter.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "java:11:Java SE:11"
  - name: Create a web app with a NodeJS 10.14 runtime and deployed from a local git repository.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "node|10.14" --deployment-local-git
  - name: Create a web app with an image from DockerHub.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i nginx
  - name: Create a web app with an image from a private DockerHub registry.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i MyImageName -s username -w password
  - name: Create a web app with an image from a private Azure Container Registry.
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i myregistry.azurecr.io/docker-image:tag
  - name: create a WebApp using shared App Service Plan that is in a different resource group.
    text: >
        AppServicePlanID=$(az appservice plan show -n SharedAppServicePlan -g MyASPRG --query "id" --out tsv)
        az webapp create -g MyResourceGroup -p "$AppServicePlanID" -n MyUniqueAppName
  - name: create a WebApp in an appservice kubernetes environment
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name
  - name: create a WebApp in an appservice kubernetes environment and in the same resource group as the custom location
    text: >
        az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --custom-location custom_location_name
"""

helps['webapp update'] = """
type: command
short-summary: Update an existing web app.
examples:
  - name: Update the tags of a web app.
    text: >
        az webapp update -g MyResourceGroup -n MyAppName --set tags.tagName=tagValue
  - name: Update a web app. (autogenerated)
    text: az webapp update --https-only true --name MyAppName --resource-group MyResourceGroup
    crafted: true
"""
