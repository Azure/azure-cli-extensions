# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Clusters/put/Create cluster
@try_manual
def step_cluster_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci cluster create '
             '--location "East US" '
             '--aad-client-id "24a6e53d-04e5-44d2-b7cc-1b732a847dfc" '
             '--aad-tenant-id "7e589cc1-a8b6-4dff-91bd-5ec0fa18db94" '
             '--name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Clusters/get/Get cluster
@try_manual
def step_cluster_show(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci cluster show '
             '--name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Clusters/get/List clusters in a given resource group
@try_manual
def step_cluster_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci cluster list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Clusters/get/List clusters in a given subscription
@try_manual
def step_cluster_list2(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci cluster list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Clusters/patch/Update cluster
@try_manual
def step_cluster_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci cluster update '
             '--tags tag1="value1" tag2="value2" '
             '--name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Clusters/delete/Delete cluster
@try_manual
def step_cluster_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci cluster delete -y '
             '--name "{myCluster}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /galleryimages/put/PutGalleryImage
@try_manual
def step_galleryimage_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci galleryimage create '
             '--extended-location name="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Exte'
             'ndedLocation/customLocations/dogfood-location" type="CustomLocation" '
             '--location "West US2" '
             '--container-name "Default_Container" '
             '--image-path "C:\\\\test.vhdx" '
             '--galleryimages-name "test-gallery-image" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /galleryimages/get/GetGalleryImage
@try_manual
def step_galleryimage_retrieve(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci galleryimage retrieve '
             '--galleryimages-name "test-gallery-image" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /galleryimages/get/ListGalleryImageByResourceGroup
@try_manual
def step_galleryimage_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci galleryimage list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /galleryimages/patch/UpdateGalleryImage
@try_manual
def step_galleryimage_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci galleryimage update '
             '--tags additionalProperties="sample" '
             '--galleryimages-name "test-gallery-image" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /galleryimages/delete/DeleteGalleryImage
@try_manual
def step_galleryimage_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci galleryimage delete -y '
             '--galleryimages-name "test-gallery-image" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /networkinterfaces/put/PutNetworkInterface
@try_manual
def step_networkinterface_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci networkinterface create '
             '--extended-location name="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Exte'
             'ndedLocation/customLocations/dogfood-location" type="CustomLocation" '
             '--location "West US2" '
             '--name "test-nic" '
             '--subnet_id "test-vnet" '
             '--gateway "sample_gateway" '
             '--prefix_length "16" '
             '--ip_address "1.2.3.4" '
             '--ip_allocation_method "Static" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /networkinterfaces/get/GetNetworkInterface
@try_manual
def step_networkinterface_retrieve(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci networkinterface retrieve '
             '--networkinterfaces-name "test-nic" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /networkinterfaces/get/ListNetworkInterfaceByResourceGroup
@try_manual
def step_networkinterface_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci networkinterface list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /networkinterfaces/get/ListNetworkInterfaceBySubscription
@try_manual
def step_networkinterface_list2(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci networkinterface list '
             '-g ""',
             checks=checks)


# EXAMPLE: /networkinterfaces/patch/UpdateNetworkInterface
@try_manual
def step_networkinterface_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci networkinterface update '
             '--tags additionalProperties="sample" '
             '--networkinterfaces-name "test-nic" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /networkinterfaces/delete/DeleteNetworkInterface
@try_manual
def step_networkinterface_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci networkinterface delete -y '
             '--networkinterfaces-name "test-nic" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /storagecontainers/put/PutStorageContainer
@try_manual
def step_storagecontainer_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci storagecontainer create '
             '--resource-group "{rg}" '
             '--extended-location name="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Exte'
             'ndedLocation/customLocations/dogfood-location" type="CustomLocation" '
             '--location "West US2" '
             '--path "C:\\\\container_storage" '
             '--storagecontainers-name "Default_Container"',
             checks=checks)


# EXAMPLE: /storagecontainers/get/GetStorageContainer
@try_manual
def step_storagecontainer_retrieve(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci storagecontainer retrieve '
             '--resource-group "{rg}" '
             '--storagecontainers-name "Default_Container"',
             checks=checks)


# EXAMPLE: /storagecontainers/get/ListStorageContainerByResourceGroup
@try_manual
def step_storagecontainer_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci storagecontainer list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /storagecontainers/patch/UpdateStorageContainer
@try_manual
def step_storagecontainer_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci storagecontainer update '
             '--resource-group "{rg}" '
             '--tags additionalProperties="sample" '
             '--storagecontainers-name "Default_Container"',
             checks=checks)


# EXAMPLE: /storagecontainers/delete/DeleteStorageContainer
@try_manual
def step_storagecontainer_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci storagecontainer delete -y '
             '--resource-group "{rg}" '
             '--storagecontainers-name "Default_Container"',
             checks=checks)


# EXAMPLE: /virtualharddisks/put/PutVirtualHardDisk
@try_manual
def step_virtualharddisk_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualharddisk create '
             '--resource-group "{rg}" '
             '--extended-location name="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Exte'
             'ndedLocation/customLocations/dogfood-location" type="CustomLocation" '
             '--location "West US2" '
             '--disk-size-gb 32 '
             '--virtualharddisks-name "test-vhd"',
             checks=checks)


# EXAMPLE: /virtualharddisks/get/GetVirtualHardDisk
@try_manual
def step_virtualharddisk_retrieve(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualharddisk retrieve '
             '--resource-group "{rg}" '
             '--virtualharddisks-name "test-vhd"',
             checks=checks)


# EXAMPLE: /virtualharddisks/get/ListVirtualHardDiskByResourceGroup
@try_manual
def step_virtualharddisk_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualharddisk list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /virtualharddisks/patch/UpdateVirtualHardDisk
@try_manual
def step_virtualharddisk_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualharddisk update '
             '--resource-group "{rg}" '
             '--tags additionalProperties="sample" '
             '--virtualharddisks-name "test-vhd"',
             checks=checks)


# EXAMPLE: /virtualharddisks/delete/DeleteVirtualHardDisk
@try_manual
def step_virtualharddisk_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualharddisk delete -y '
             '--resource-group "{rg}" '
             '--virtualharddisks-name "test-vhd"',
             checks=checks)


# EXAMPLE: /virtualmachines/put/PutVirtualMachine
@try_manual
def step_virtualmachine_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine create '
             '--resource-group "{rg}" '
             '--extended-location name="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Exte'
             'ndedLocation/customLocations/dogfood-location" type="CustomLocation" '
             '--location "West US2" '
             '--hardware-profile vm-size="Default" '
             '--network-profile network-interfaces={{"id":"test-nic"}} '
             '--os-profile "{{\\"adminPassword\\":\\"password\\",\\"adminUsername\\":\\"localadmin\\",\\"computerName\\'
             '":\\"luamaster\\"}}" '
             '--storage-profile "{{\\"imageReference\\":{{\\"id\\":\\"test-gallery-image\\"}}}}" '
             '--virtualmachines-name "test-vm"',
             checks=checks)


# EXAMPLE: /virtualmachines/get/GetVirtualMachine
@try_manual
def step_virtualmachine_retrieve(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine retrieve '
             '--resource-group "{rg}" '
             '--virtualmachines-name "test-vm"',
             checks=checks)


# EXAMPLE: /virtualmachines/get/ListVirtualMachineByResourceGroup
@try_manual
def step_virtualmachine_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /virtualmachines/get/ListVirtualMachineBySubscription
@try_manual
def step_virtualmachine_list2(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine list '
             '-g ""',
             checks=checks)


# EXAMPLE: /virtualmachines/patch/UpdateVirtualMachine
@try_manual
def step_virtualmachine_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine update '
             '--resource-group "{rg}" '
             '--tags additionalProperties="sample" '
             '--virtualmachines-name "test-vm"',
             checks=checks)


# EXAMPLE: /virtualmachines/post/StartVirtualMachine
@try_manual
def step_virtualmachine_start(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine start '
             '--resource-group "{rg}" '
             '--virtualmachines-name "test-vm"',
             checks=checks)


# EXAMPLE: /virtualmachines/post/StopVirtualMachine
@try_manual
def step_virtualmachine_stop(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine stop '
             '--resource-group "{rg}" '
             '--virtualmachines-name "test-vm"',
             checks=checks)


# EXAMPLE: /virtualmachines/delete/DeleteVirtualMachine
@try_manual
def step_virtualmachine_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualmachine delete -y '
             '--resource-group "{rg}" '
             '--virtualmachines-name "test-vm"',
             checks=checks)


# EXAMPLE: /virtualnetworks/put/PutVirtualNetwork
@try_manual
def step_virtualnetwork_create(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualnetwork create '
             '--resource-group "{rg}" '
             '--extended-location name="/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.Exte'
             'ndedLocation/customLocations/dogfood-location" type="CustomLocation" '
             '--location "West US2" '
             '--network-type "Transparent" '
             '--name "test-vnet" ',
             '--address-prefix "10.0.0.0/16" ',
             '--ip-allocation-method "Static" ',
             '--ip-pool-type "vm" ',
             '--ip-pool-start "10.0.0.0" ',
             '--ip-pool-end "10.0.0.16" '
             '--vlan 10',
             '--vm-switch-name "test-vm-switch',
             checks=checks)


# EXAMPLE: /virtualnetworks/get/GetVirtualNetwork
@try_manual
def step_virtualnetwork_retrieve(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualnetwork retrieve '
             '--resource-group "{rg}" '
             '--virtualnetworks-name "test-vnet"',
             checks=checks)


# EXAMPLE: /virtualnetworks/get/ListVirtualNetworkByResourceGroup
@try_manual
def step_virtualnetwork_list(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualnetwork list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /virtualnetworks/get/ListVirtualNetworkBySubscription
@try_manual
def step_virtualnetwork_list2(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualnetwork list '
             '-g ""',
             checks=checks)


# EXAMPLE: /virtualnetworks/patch/UpdateVirtualNetwork
@try_manual
def step_virtualnetwork_update(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualnetwork update '
             '--resource-group "{rg}" '
             '--tags additionalProperties="sample" '
             '--virtualnetworks-name "test-vnet"',
             checks=checks)


# EXAMPLE: /virtualnetworks/delete/DeleteVirtualNetwork
@try_manual
def step_virtualnetwork_delete(test, rg_2, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az azurestackhci virtualnetwork delete -y '
             '--resource-group "{rg}" '
             '--virtualnetworks-name "test-vnet"',
             checks=checks)

