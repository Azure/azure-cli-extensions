# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Devices/put/DataBoxEdgeDevicePut
@try_manual
def step_device_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device create '
             '--location "eastus" '
             '--sku name="Edge" tier="Standard" '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/get/DataBoxEdgeDeviceGetByName
@try_manual
def step_device_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device show '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/get/DataBoxEdgeDeviceGetByResourceGroup
@try_manual
def step_device_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/get/DataBoxEdgeDeviceGetBySubscription
@try_manual
def step_device_list2(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device list '
             '-g ""',
             checks=checks)


# EXAMPLE: /Devices/get/NetworkSettingsGet
@try_manual
def step_device_show_network_setting(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device show-network-setting '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/get/UpdateSummaryGet
@try_manual
def step_device_show_update_summary(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device show-update-summary '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/patch/DataBoxEdgeDevicePatch
@try_manual
def step_device_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device update '
             '--name "{myDevice}" '
             '--tags Key1="value1" Key2="value2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/post/CreateOrUpdateSecuritySettings
@try_manual
def step_device_create_or_update_security_setting(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device create-or-update-security-setting '
             '--name "{myDevice}" '
             '--resource-group "{rg_2}" '
             '--device-admin-password encryption-algorithm="AES256" encryption-cert-thumbprint="7DCBDFC44ED968D232C9A99'
             '8FC105B5C70E84BE0" value="<value>"',
             checks=checks)


# EXAMPLE: /Devices/post/DownloadUpdatesPost
@try_manual
def step_device_download_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device download-update '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/post/ExtendedInfoPost
@try_manual
def step_device_get_extended_information(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device get-extended-information '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/post/InstallUpdatesPost
@try_manual
def step_device_install_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device install-update '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/post/ScanForUpdatesPost
@try_manual
def step_device_scan_for_update(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device scan-for-update '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/post/UploadCertificatePost
@try_manual
def step_device_upload_certificate(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device upload-certificate '
             '--name "{myDevice}" '
             '--certificate "MIIC9DCCAdygAwIBAgIQWJae7GNjiI9Mcv/gJyrOPTANBgkqhkiG9w0BAQUFADASMRAwDgYDVQQDDAdXaW5kb3dzMB'
             '4XDTE4MTEyNzAwMTA0NVoXDTIxMTEyODAwMTA0NVowEjEQMA4GA1UEAwwHV2luZG93czCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQo'
             'CggEBAKxkRExqxf0qH1avnyORptIbRC2yQwqe3EIbJ2FPKr5jtAppGeX/dGKrFSnX+7/0HFr77aJHafdpEAtOiLyJ4zCAVs0obZCCIq4q'
             'JdmjYUTU0UXH/w/YzXfQA0d9Zh9AN+NJBX9xj05NzgsT24fkgsK2v6mWJQXT7YcWAsl5sEYPnx1e+MrupNyVSL/RUJmrS+etJSysHtFeW'
             'RhsUhVAs1DD5ExJvBLU3WH0IsojEvpXcjrutB5/MDQNrd/StGI6WovoSSPH7FyT9tgERx+q+Yg3YUGzfaIPCctlrRGehcdtzdNoKd0rsX'
             '62yCq0U6POoSfwe22NJu41oAUMd7e6R8cCAwEAAaNGMEQwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFDd0VxnS3LnMIfwc7xW'
             '4b4IZWG5GMA4GA1UdDwEB/wQEAwIFIDANBgkqhkiG9w0BAQUFAAOCAQEAPQRby2u9celvtvL/DLEb5Vt3/tPStRQC5MyTD62L5RT/q8E6'
             'EMCXVZNkXF5WlWucLJi/18tY+9PNgP9xWLJh7kpSWlWdi9KPtwMqKDlEH8L2TnQdjimt9XuiCrTnoFy/1X2BGLY/rCaUJNSd15QCkz2xe'
             'W+Z+YSk2GwAc/A/4YfNpqSIMfNuPrT76o02VdD9WmJUA3fS/HY0sU9qgQRS/3F5/0EPS+HYQ0SvXCK9tggcCd4O050ytNBMJC9qMOJ7yE'
             '0iOrFfOJSCfDAuPhn/rHFh79Kn1moF+/CE+nc0/2RPiLC8r54/rt5dYyyxJDfXg0a3VrrX39W69WZGW5OXiw==" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Alerts/get/AlertGet
@try_manual
def step_alert_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge alert show '
             '--name "159a00c7-8543-4343-9435-263ac87df3bb" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Alerts/get/AlertGetAllInDevice
@try_manual
def step_alert_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge alert list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /BandwidthSchedules/put/BandwidthSchedulePut
@try_manual
def step_bandwidth_schedule_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge bandwidth-schedule create '
             '--name "bandwidth-1" '
             '--device-name "{myDevice}" '
             '--days "Sunday" "Monday" '
             '--rate-in-mbps 100 '
             '--start "0:0:0" '
             '--stop "13:59:0" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /BandwidthSchedules/get/BandwidthScheduleGet
@try_manual
def step_bandwidth_schedule_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge bandwidth-schedule show '
             '--name "bandwidth-1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /BandwidthSchedules/get/BandwidthScheduleGetAllInDevice
@try_manual
def step_bandwidth_schedule_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge bandwidth-schedule list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /BandwidthSchedules/delete/BandwidthScheduleDelete
@try_manual
def step_bandwidth_schedule_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge bandwidth-schedule delete -y '
             '--name "bandwidth-1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Containers/put/ContainerPut
@try_manual
def step_container_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge container create '
             '--data-format "BlockBlob" '
             '--name "{myContainer}" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--storage-account-name "{sa_2}"',
             checks=checks)


# EXAMPLE: /Containers/get/ContainerGet
@try_manual
def step_container_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge container show '
             '--name "{myContainer}" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--storage-account-name "{sa_2}"',
             checks=checks)


# EXAMPLE: /Containers/get/ContainerListAllInDevice
@try_manual
def step_container_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge container list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--storage-account-name "{sa_2}"',
             checks=checks)


# EXAMPLE: /Containers/post/ContainerRefresh
@try_manual
def step_container_refresh(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge container refresh '
             '--name "{myContainer}" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--storage-account-name "{sa_2}"',
             checks=checks)


# EXAMPLE: /Containers/delete/ContainerDelete
@try_manual
def step_container_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge container delete -y '
             '--name "{myContainer}" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--storage-account-name "{sa_2}"',
             checks=checks)


# EXAMPLE: /Jobs/get/JobsGet
@try_manual
def step_job_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge job show '
             '--name "159a00c7-8543-4343-9435-263ac87df3bb" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Nodes/get/NodesGetAllInDevice
@try_manual
def step_node_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge node list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /OperationsStatus/get/OperationsStatusGet
@try_manual
def step_operation_status_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge operation-status show '
             '--name "159a00c7-8543-4343-9435-263ac87df3bb" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Orders/put/OrderPut
@try_manual
def step_order_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge order create '
             '--device-name "{myDevice}" '
             '--contact-information company-name="Microsoft" contact-person="John Mcclane" '
             'email-list="john@microsoft.com" phone="(800) 426-9400" '
             '--shipping-address address-line1="Microsoft Corporation" address-line2="One Microsoft Way" '
             'address-line3="Redmond" city="WA" country="USA" postal-code="98052" state="WA" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Orders/get/OrderGet
@try_manual
def step_order_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge order show '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Orders/get/OrderGetAllInDevice
@try_manual
def step_order_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge order list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Orders/delete/OrderDelete
@try_manual
def step_order_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge order delete -y '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Roles/put/RolePut
@try_manual
def step_role_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge role create '
             '--name "IoTRole1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--role "{{\\"kind\\":\\"IOT\\",\\"properties\\":{{\\"hostPlatform\\":\\"Linux\\",\\"ioTDeviceDetails\\":{'
             '{\\"authentication\\":{{\\"symmetricKey\\":{{\\"connectionString\\":{{\\"encryptionAlgorithm\\":\\"AES256'
             '\\",\\"encryptionCertThumbprint\\":\\"348586569999244\\",\\"value\\":\\"Encrypted<<HostName=iothub.azure-'
             'devices.net;DeviceId=iotDevice;SharedAccessKey=2C750FscEas3JmQ8Bnui5yQWZPyml0/UiRt1bQwd8=>>\\"}}}}}},\\"d'
             'eviceId\\":\\"iotdevice\\",\\"ioTHostHub\\":\\"iothub.azure-devices.net\\"}},\\"ioTEdgeDeviceDetails\\":{'
             '{\\"authentication\\":{{\\"symmetricKey\\":{{\\"connectionString\\":{{\\"encryptionAlgorithm\\":\\"AES256'
             '\\",\\"encryptionCertThumbprint\\":\\"1245475856069999244\\",\\"value\\":\\"Encrypted<<HostName=iothub.az'
             'ure-devices.net;DeviceId=iotEdge;SharedAccessKey=2C750FscEas3JmQ8Bnui5yQWZPyml0/UiRt1bQwd8=>>\\"}}}}}},\\'
             '"deviceId\\":\\"iotEdge\\",\\"ioTHostHub\\":\\"iothub.azure-devices.net\\"}},\\"roleStatus\\":\\"Enabled'
             '\\",\\"shareMappings\\":[]}}}}"',
             checks=checks)


# EXAMPLE: /Roles/get/RoleGet
@try_manual
def step_role_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge role show '
             '--name "IoTRole1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Roles/get/RoleGetAllInDevice
@try_manual
def step_role_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge role list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Roles/delete/RoleDelete
@try_manual
def step_role_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge role delete -y '
             '--name "IoTRole1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /StorageAccountCredentials/get/SACGet
@try_manual
def step_storage_account_credentials_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge storage-account-credentials show '
             '--name "{myStorageAccountCredentials}" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /StorageAccountCredentials/get/SACGetAllInDevice
@try_manual
def step_storage_account_credentials_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge storage-account-credentials list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Shares/put/SharePut
@try_manual
def step_share_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge share create '
             '--name "smbshare" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--description "" '
             '--access-protocol "SMB" '
             '--azure-container-info container-name="testContainerSMB" data-format="BlockBlob" '
             'storage-account-credential-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.D'
             'ataBoxEdge/dataBoxEdgeDevices/{{myDevice}}/storageAccountCredentials/{myStorageAccountCredentials}" '
             '--data-policy "Cloud" '
             '--monitoring-status "Enabled" '
             '--share-status "Online" '
             '--user-access-rights access-type="Change" user-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/p'
             'roviders/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{{myDevice}}/users/{myUser}"',
             checks=checks)


# EXAMPLE: /Shares/get/ShareGet
@try_manual
def step_share_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge share show '
             '--name "smbshare" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Shares/get/ShareGetAllInDevice
@try_manual
def step_share_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge share list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Shares/post/ShareRefreshPost
@try_manual
def step_share_refresh(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge share refresh '
             '--name "smbshare" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Shares/delete/ShareDelete
@try_manual
def step_share_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge share delete -y '
             '--name "smbshare" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Devices/delete/DataBoxEdgeDeviceDelete
@try_manual
def step_device_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge device delete -y '
             '--name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Skus/get/ListSkus
@try_manual
def step_sku_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge sku list',
             checks=checks)


# EXAMPLE: /StorageAccountCredentials/delete/SACDelete
@try_manual
def step_storage_account_credentials_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge storage-account-credentials delete -y '
             '--name "{myStorageAccountCredentials}" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /StorageAccounts/get/StorageAccountGet
@try_manual
def step_storage_account_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge storage-account show '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--name "{sa}"',
             checks=checks)


# EXAMPLE: /StorageAccounts/get/StorageAccountGetAllInDevice
@try_manual
def step_storage_account_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge storage-account list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /StorageAccounts/delete/StorageAccountDelete
@try_manual
def step_storage_account_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge storage-account delete -y '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--name "{sa_2}"',
             checks=checks)


# EXAMPLE: /Triggers/put/TriggerPut
@try_manual
def step_trigger_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge trigger create '
             '--name "trigger1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--file-event-trigger custom-context-tag="CustomContextTags-1235346475" role-id="/subscriptions/{subscript'
             'ion_id}/resourceGroups/{rg}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{{myDevice}}/roles/{myRole'
             '}" share-id="/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DataBoxEdge/dataBox'
             'EdgeDevices/{{myDevice}}/shares/{myShare}"',
             checks=checks)


# EXAMPLE: /Triggers/get/TriggerGet
@try_manual
def step_trigger_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge trigger show '
             '--name "trigger1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Triggers/get/TriggerGetAllInDevice
@try_manual
def step_trigger_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge trigger list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Triggers/delete/TriggerDelete
@try_manual
def step_trigger_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge trigger delete -y '
             '--name "trigger1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Users/put/UserPut
@try_manual
def step_user_create(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge user create '
             '--name "user1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}" '
             '--encrypted-password encryption-algorithm="None" encryption-cert-thumbprint="blah" value="<value>" '
             '--user-type "Share"',
             checks=checks)


# EXAMPLE: /Users/get/UserGet
@try_manual
def step_user_show(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge user show '
             '--name "user1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Users/get/UserGetAllInDevice
@try_manual
def step_user_list(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge user list '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Users/delete/UserDelete
@try_manual
def step_user_delete(test, rg, rg_2, checks=None):
    if checks is None:
        checks = []
    test.cmd('az databoxedge user delete -y '
             '--name "user1" '
             '--device-name "{myDevice}" '
             '--resource-group "{rg}"',
             checks=checks)

