# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=line-too-long
# pylint: disable=import-outside-toplevel

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_cloudservice.generated._client_factory import cf_cloud_service_role_instance

    cloud_service_cloud_service_role_instance = CliCommandType(
        operations_tmpl='azure.mgmt.compute.operations._cloud_service_role_instances_operations#CloudServiceRoleInstancesOperations.{}',
        client_factory=cf_cloud_service_role_instance,
    )
    # Generated code has indent error
    with self.command_group(
            'cloud-service role-instance',
            cloud_service_cloud_service_role_instance,
            client_factory=cf_cloud_service_role_instance,
    ) as g:
        g.custom_command('list', 'cloud_service_role_instance_list')
        g.custom_show_command('show', 'cloud_service_role_instance_show')
        g.custom_command('delete', 'cloud_service_role_instance_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('rebuild', 'cloud_service_role_instance_rebuild', supports_no_wait=True)
        g.custom_command('reimage', 'cloud_service_role_instance_reimage', supports_no_wait=True)
        g.custom_command('restart', 'cloud_service_role_instance_restart', supports_no_wait=True)
        g.custom_command('show-instance-view', 'cloud_service_role_instance_show_instance_view')
        g.custom_command('show-remote-desktop-file', 'cloud_service_role_instance_show_remote_desktop_file')
        # g.custom_wait_command('wait', 'cloud_service_role_instance_show')

    from azext_cloudservice.generated._client_factory import cf_cloud_service_role

    cloud_service_cloud_service_role = CliCommandType(
        operations_tmpl='azure.mgmt.compute.operations._cloud_service_roles_operations#CloudServiceRolesOperations.{}',
        client_factory=cf_cloud_service_role,
    )
    with self.command_group(
            'cloud-service role', cloud_service_cloud_service_role, client_factory=cf_cloud_service_role
    ) as g:
        g.custom_command('list', 'cloud_service_role_list')
        g.custom_show_command('show', 'cloud_service_role_show')

    from azext_cloudservice.generated._client_factory import cf_cloud_service

    cloud_service_cloud_service = CliCommandType(
        operations_tmpl='azure.mgmt.compute.operations._cloud_services_operations#CloudServicesOperations.{}',
        client_factory=cf_cloud_service,
    )
    with self.command_group(
            'cloud-service', cloud_service_cloud_service, client_factory=cf_cloud_service, is_experimental=True
    ) as g:
        g.custom_command('list', 'cloud_service_list')
        g.custom_show_command('show', 'cloud_service_show')
        g.custom_command('create', 'cloud_service_create', supports_no_wait=True)
        g.custom_command('update', 'cloud_service_update', supports_no_wait=True)
        g.custom_command('delete', 'cloud_service_delete', supports_no_wait=True, confirmation=True)
        g.custom_command('delete-instance', 'cloud_service_delete_instance', supports_no_wait=True)
        g.custom_command('list-all', 'cloud_service_list_all')
        g.custom_command('power-off', 'cloud_service_power_off', supports_no_wait=True)
        g.custom_command('rebuild', 'cloud_service_rebuild', supports_no_wait=True)
        g.custom_command('reimage', 'cloud_service_reimage', supports_no_wait=True)
        g.custom_command('restart', 'cloud_service_restart', supports_no_wait=True)
        g.custom_command('show-instance-view', 'cloud_service_show_instance_view')
        g.custom_command('start', 'cloud_service_start', supports_no_wait=True)
        g.custom_wait_command('wait', 'cloud_service_show')

    from azext_cloudservice.generated._client_factory import cf_cloud_service_update_domain

    cloud_service_cloud_service_update_domain = CliCommandType(
        operations_tmpl='azure.mgmt.compute.operations._cloud_services_update_domain_operations#CloudServicesUpdateDomainOperations.{}',
        client_factory=cf_cloud_service_update_domain,
    )
    with self.command_group(
            'cloud-service update-domain',
            cloud_service_cloud_service_update_domain,
            client_factory=cf_cloud_service_update_domain,
    ) as g:
        g.custom_command('list-update-domain', 'cloud_service_update_domain_list_update_domain')
        g.custom_command('show-update-domain', 'cloud_service_update_domain_show_update_domain')
        g.custom_command('walk-update-domain', 'cloud_service_update_domain_walk_update_domain')
