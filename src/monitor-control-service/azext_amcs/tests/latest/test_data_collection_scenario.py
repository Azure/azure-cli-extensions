# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_data_collection_rule_show
from .example_steps import step_data_collection_rule_list
from .example_steps import step_data_collection_rule_list
from .example_steps import step_data_collection_rule_association_show
from .example_steps import step_data_collection_rule_association_list
from .example_steps import step_data_collection_rule_association_list
from .example_steps import step_data_collection_rule_association_delete
from .example_steps import step_data_collection_rule_delete
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg):
    setup_scenario(test, rg)
    step_data_collection_rule_show(test, rg, checks=[])
    step_data_collection_rule_list(test, rg, checks=[])
    step_data_collection_rule_list(test, rg, checks=[])
    step_data_collection_rule_association_show(test, rg, checks=[])
    step_data_collection_rule_association_list(test, rg, checks=[])
    step_data_collection_rule_association_list(test, rg, checks=[])
    step_data_collection_rule_association_delete(test, rg, checks=[])
    step_data_collection_rule_delete(test, rg, checks=[])
    cleanup_scenario(test, rg)


# Test class for Scenario
@try_manual
class Data_collectionScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestdata_collection_myResourceGroup'[:7], key='rg', parameter_name='rg')
    def test_data_collection_Scenario(self, rg):

        self.kwargs.update({
            'myDataCollectionRule': 'myCollectionRule',
        })

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()

