# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /DataCollectionRules/get/Get data collection rule
@try_manual
def step_data_collection_rule_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule show '
             '--name "{myDataCollectionRule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DataCollectionRules/get/List data collection rules by resource group
@try_manual
def step_data_collection_rule_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule list '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DataCollectionRules/get/List data collection rules by subscription
@try_manual
def step_data_collection_rule_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule list '
             '-g ""',
             checks=checks)


# EXAMPLE: /DataCollectionRuleAssociations/get/Get association
@try_manual
def step_data_collection_rule_association_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule association show '
             '--name "myAssociation" '
             '--resource "subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/M'
             'icrosoft.Compute/virtualMachines/myVm"',
             checks=checks)


# EXAMPLE: /DataCollectionRuleAssociations/get/List associations for specified data collection rule
@try_manual
def step_data_collection_rule_association_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule association list '
             '--rule-name "{myDataCollectionRule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /DataCollectionRuleAssociations/get/List associations for specified resource
@try_manual
def step_data_collection_rule_association_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule association list '
             '--resource "subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/M'
             'icrosoft.Compute/virtualMachines/myVm" '
             '-g ""',
             checks=checks)


# EXAMPLE: /DataCollectionRuleAssociations/delete/Delete association
@try_manual
def step_data_collection_rule_association_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule association delete -y '
             '--name "myAssociation" '
             '--resource "subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/M'
             'icrosoft.Compute/virtualMachines/myVm"',
             checks=checks)


# EXAMPLE: /DataCollectionRules/delete/Delete data collection rule
@try_manual
def step_data_collection_rule_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az monitor data-collection rule delete -y '
             '--name "{myDataCollectionRule}" '
             '--resource-group "{rg}"',
             checks=checks)

