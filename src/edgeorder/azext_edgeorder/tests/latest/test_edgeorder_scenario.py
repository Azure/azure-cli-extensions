# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .example_steps import step_create_address
from .example_steps import step_create_order_item
from .example_steps import step_show_address
from .example_steps import step_show_order
from .example_steps import step_show_order_item
from .example_steps import step_list_address_at_resource_group_level
from .example_steps import step_list_address_at_subscription_level
from .example_steps import step_list_operation
from .example_steps import step_list_order_at_resource_group_level
from .example_steps import step_list_order_at_subscription_level
from .example_steps import step_list_order_item_at_resource_group_level
from .example_steps import step_list_order_item_at_subscription_level
from .example_steps import step_update_address
from .example_steps import step_update_order_item
from .example_steps import step_cancel_order_item
from .example_steps import step_list_configuration
from .example_steps import step_list_product_family
from .example_steps import step_list_product_family_metadata
from .example_steps import step_return_order_item
from .example_steps import step_delete_address
from .example_steps import step_delete_order_item
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test):
    setup_scenario(test)
    step_create_address(test, checks=[])
    step_create_order_item(test, checks=[])
    step_show_address(test, checks=[])
    step_show_order(test, checks=[])
    step_show_order_item(test, checks=[])
    step_list_address_at_resource_group_level(test, checks=[])
    step_list_address_at_subscription_level(test, checks=[])
    step_list_operation(test, checks=[])
    step_list_order_at_resource_group_level(test, checks=[])
    step_list_order_at_subscription_level(test, checks=[])
    step_list_order_item_at_resource_group_level(test, checks=[])
    step_list_order_item_at_subscription_level(test, checks=[])
    step_update_address(test, checks=[])
    step_update_order_item(test, checks=[])
    step_cancel_order_item(test, checks=[])
    step_list_configuration(test, checks=[])
    step_list_product_family(test, checks=[])
    step_list_product_family_metadata(test, checks=[])
    step_return_order_item(test, checks=[])
    step_delete_address(test, checks=[])
    step_delete_order_item(test, checks=[])
    cleanup_scenario(test)


# Test class for Scenario
@try_manual
class EdgeorderScenarioTest(ScenarioTest):
    def __init__(self, *args, **kwargs):
        super(EdgeorderScenarioTest, self).__init__(*args, **kwargs)
        self.kwargs.update({
            'subscription_id': self.get_subscription_id()
        })


    @ResourceGroupPreparer(name_prefix='clitestedgeorder_TestRG'[:7], key='rg', parameter_name='rg')
    def test_edgeorder_Scenario(self, rg):
        call_scenario(self)
        calc_coverage(__file__)
        raise_if()
