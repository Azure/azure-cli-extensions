# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from .. import try_manual, raise_if, calc_coverage
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg):
    pass


# EXAMPLE: /PipelineTemplateDefinitions/get/Get the list of pipeline template definitions
@try_manual
def step__pipelinetemplatedefinitions_get(test, rg):
    test.cmd('az devops pipeline-template-definition list',
             checks=[])


# EXAMPLE: /Pipelines/put/Create an Azure pipeline to deploy a sample ASP.Net application to Azure web-app
@try_manual
def step__pipelines_put(test, rg):
    test.cmd('az devops pipeline create '
             '--location "South India" '
             '--bootstrap-configuration-repository-properties bootstrapConfiguration={{"template":{{"id":"ms.vss-contin'
             'uous-delivery-pipeline-templates.aspnet-windowswebapp","parameters":{{"appInsightLocation":"South '
             'India","appServicePlan":"S1 Standard","azureAuth":"{{\\"scheme\\":\\"ServicePrincipal\\",\\"parameters\\"'
             ':{{\\"tenantid\\":\\"{{subscriptionTenantId}}\\",\\"objectid\\":\\"{{appObjectId}}\\",\\"serviceprincipal'
             'id\\":\\"{{appId}}\\",\\"serviceprincipalkey\\":\\"{{appSecret}}\\"}}}}","location":"South '
             'India","resourceGroup":"myAspNetWebAppPipeline-rg","subscriptionId":"{{subscriptionId}}","webAppName":"my'
             'AspNetWebApp"}}}}}} organization={{"name":"myAspNetWebAppPipeline-org"}} project={{"name":"myAspNetWebApp'
             'Pipeline-project"}} '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "South India", case_sensitive=False),
                 test.check("name", "{myPipeline}", case_sensitive=False),
             ])


# EXAMPLE: /Pipelines/get/Get an existing Azure pipeline
@try_manual
def step__pipelines_get_get_an_existing_azure_pipeline(test, rg):
    test.cmd('az devops pipeline show '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=[
                 test.check("location", "South India", case_sensitive=False),
                 test.check("name", "{myPipeline}", case_sensitive=False),
             ])


# EXAMPLE: /Pipelines/get/List all Azure Pipelines under the specified resource group
@try_manual
def step__pipelines_get(test, rg):
    test.cmd('az devops pipeline list '
             '--resource-group "{rg}"',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /Pipelines/get/List all Azure pipelines under the specified subscription
@try_manual
def step__pipelines_get2(test, rg):
    test.cmd('az devops pipeline list '
             '-g ""',
             checks=[
                 test.check('length(@)', 1),
             ])


# EXAMPLE: /Pipelines/patch/Get an existing Azure pipeline
@try_manual
def step__pipelines_patch(test, rg):
    test.cmd('az devops pipeline update '
             '--name "{myPipeline}" '
             '--resource-group "{rg}" '
             '--tags tagKey="tagvalue"',
             checks=[
                 test.check("location", "South India", case_sensitive=False),
                 test.check("name", "{myPipeline}", case_sensitive=False),
                 test.check("tags.tagKey", "tagvalue", case_sensitive=False),
             ])


# EXAMPLE: /Pipelines/delete/Get an existing Azure pipeline
@try_manual
def step__pipelines_delete(test, rg):
    test.cmd('az devops pipeline delete -y '
             '--name "{myPipeline}" '
             '--resource-group "{rg}"',
             checks=[])


@try_manual
def cleanup(test, rg):
    pass


@try_manual
def call_scenario(test, rg):
    setup(test, rg)
    step__pipelinetemplatedefinitions_get(test, rg)
    step__pipelines_put(test, rg)
    step__pipelines_get_get_an_existing_azure_pipeline(test, rg)
    step__pipelines_get(test, rg)
    step__pipelines_get2(test, rg)
    step__pipelines_patch(test, rg)
    step__pipelines_delete(test, rg)
    cleanup(test, rg)


@try_manual
class AzureDevOpsScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestdevops_myAspNetWebAppPipeline-rg'[:7], key='rg', parameter_name='rg')
    def test_devops(self, rg):

        self.kwargs.update({
            'myPipeline': 'myAspNetWebAppPipeline',
        })

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()
