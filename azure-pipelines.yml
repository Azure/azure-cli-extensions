resources:
- repo: self

trigger:
  batch: true
  branches:
    include:
    - '*'

jobs:
#- job: CredScan
#  displayName: "Credential Scan"
#
#  pool:
#    vmImage: "windows-2019"
#  steps:
#  - task: CredScan@2
#    inputs:
#      toolMajorVersion: 'V2'
#
#  - task: PostAnalysis@1
#    inputs:
#      AllTools: false
#      APIScan: false
#      BinSkim: false
#      CodesignValidation: false
#      CredScan: true
#      FortifySCA: false
#      FxCop: false
#      ModernCop: false
#      PoliCheck: false
#      RoslynAnalyzers: false
#      SDLNativeRules: false
#      Semmle: false
#      TSLint: false
#      ToolLogsNotFoundAction: 'Standard'

- job: StaticAnalysis
  displayName: "Static Analysis"
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.6'
      inputs:
        versionSpec: 3.6
    - bash: pip install wheel==0.30.0 pylint==1.9.5 flake8==3.5.0 requests
      displayName: 'Install wheel, pylint, flake8, requests'
    - bash: python scripts/ci/source_code_static_analysis.py
      displayName: "Static Analysis"

- job: IndexVerify
  displayName: "Verify Extensions Index"
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.7'
    inputs:
      versionSpec: 3.7
  - bash: |
      #!/usr/bin/env bash
      set -ev
      pip install wheel==0.30.0 requests
      export CI="ADO"
      python ./scripts/ci/test_index.py -v
    displayName: "Verify Extensions Index"

- job: SourceTests
  displayName: "Integration Tests, Build Tests"
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python38:
        python.version: '3.8'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(python.version)'
      inputs:
        versionSpec: '$(python.version)'
    - bash: pip install wheel==0.30.0
      displayName: 'Install wheel==0.30.0'
    - bash: ./scripts/ci/test_source.sh
      displayName: 'Run integration test and build test'
      env:
        ADO_PULL_REQUEST_LATEST_COMMIT: $(System.PullRequest.SourceCommitId)
        ADO_PULL_REQUEST_TARGET_BRANCH: $(System.PullRequest.TargetBranch)

- job: LintModifiedExtensions
  displayName: "CLI Linter on Modified Extensions"
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.6'
      inputs:
        versionSpec: 3.6
    - bash: |
        set -ev

        # prepare and activate virtualenv
        pip install virtualenv
        python -m virtualenv venv/
        source ./venv/bin/activate

        ./scripts/ci/verify_modified_index.sh
      displayName: "CLI Linter on Modified Extension"

- job: IndexRefDocVerify
  displayName: "Verify Ref Docs"
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.7'
    inputs:
      versionSpec: 3.7
  - task: Bash@3
    displayName: "Verify Extension Ref Docs"
    inputs:
      targetType: 'filePath'
      filePath: scripts/ci/test_index_ref_doc.sh

- job: BuildExtensionWheels
  displayName: 'Build Extension Wheels'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.6'
      inputs:
        versionSpec: '3.6'
    - bash: pip install --upgrade pip setuptools wheel
      displayName: 'Install build tools'
    - bash: |
        set -ev

        cd src/ip-group/

        # activate python venv
        # python -m virtualenv venv/
        # . ./venv/bin/activate

        python setup.py bdist_wheel -d "${BUILD_STAGINGDIRECTORY}"
      displayName: 'Build Extensions'
    - task: PublishPipelineArtifact@0
      inputs:
        TargetPath: $(Build.ArtifactStagingDirectory)
        artifactName: extensions
